<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于java-design-patterns白话图解设计模式（个人理解）</title>
    <url>/2021/08/26/2020-02-15-Java-design-patterns-%E7%99%BD%E8%AF%9D%EF%BC%88%E5%8F%AF%E8%83%BD%E9%85%8D%E5%9B%BE%EF%BC%89/</url>
    <content><![CDATA[<p><img src="https://cdn.linz.tech/background.jpg" alt=""></p>
<h1 id="Principle-设计原则"><a href="#Principle-设计原则" class="headerlink" title="Principle  设计原则"></a>Principle  设计原则</h1><h2 id="Generic"><a href="#Generic" class="headerlink" title="Generic"></a>Generic</h2><h3 id="KISS"><a href="#KISS" class="headerlink" title="KISS"></a>KISS</h3><p><a href="https://java-design-patterns.com/principles/#kiss" target="_blank" rel="noopener">KISS (Keep It Simple Stupid)</a> 越简单越好</p>
<p> Do The Simplest Thing That Could Possibly Work</p>
<blockquote>
<p>Ask yourself: “What is the simplest thing that could possibly work?”</p>
</blockquote>
<h3 id="YAGNI"><a href="#YAGNI" class="headerlink" title="YAGNI"></a>YAGNI</h3><p> You Ain’t Gonna Need It (翻译：你可能不需要他，即不要过度设计，为了迎合某些产生概率极低的需求而设计的成本是非常高的软件)</p>
<blockquote>
<p>YAGNI stands for “you aren’t gonna need it”: don’t implement something until it is necessary.</p>
</blockquote>
<h3 id="DRY-Don’t-Repeat-Yourself"><a href="#DRY-Don’t-Repeat-Yourself" class="headerlink" title="DRY - Don’t Repeat Yourself"></a>DRY - Don’t Repeat Yourself</h3><p>使其每一个部件都是职责明确的并且可重用的</p>
<h3 id="SoC"><a href="#SoC" class="headerlink" title="SoC"></a>SoC</h3><p>Separation of concerns</p>
<p>Break program functionality into separate modules that overlap as little as possible.</p>
<p><a href="https://en.wikipedia.org/wiki/Separation_of_concerns" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Separation_of_concerns</a></p>
<blockquote>
<p><strong>separation of concerns</strong> (<strong>SoC</strong>) is a design principle for separating a <a href="https://en.wikipedia.org/wiki/Computer_program" target="_blank" rel="noopener">computer program</a> into distinct sections such that each section addresses a separate <a href="https://en.wikipedia.org/wiki/Concern_(computer_science)" target="_blank" rel="noopener">concern</a>. A concern is a set of information that affects the code of a computer program. </p>
</blockquote>
<h2 id="SOLID-面向对象设计原则"><a href="#SOLID-面向对象设计原则" class="headerlink" title="SOLID (面向对象设计原则)"></a>SOLID (面向对象设计原则)</h2><h3 id="一-、单一职责原则-Single-Responsibility-Principle"><a href="#一-、单一职责原则-Single-Responsibility-Principle" class="headerlink" title="一 、单一职责原则 Single Responsibility Principle"></a>一 、单一职责原则 Single Responsibility Principle</h3><ol>
<li>单一原则使类功能更明确，清晰，进而提高代码逻辑，降低代码修改的几率</li>
</ol>
<h3 id="二、开闭原则-Open-Closed-Principle"><a href="#二、开闭原则-Open-Closed-Principle" class="headerlink" title="二、开闭原则 Open Closed Principle"></a>二、<strong>开闭原则</strong> Open Closed Principle</h3><blockquote>
<p>即软件实体如类、模块函数应该对扩展开发，对修改关闭</p>
</blockquote>
<ul>
<li>梅耶开闭原则<br>一个类的实现只应该因错误而修改，新的或者改变的特性应该通过新建不同的类实现。新建的类可以通过继承的方式来重用原类的代码。衍生的子类可以或不可以拥有和原类相同的接口。</li>
</ul>
<p>理解：一个设计好的类错误才去修改【闭】，新功能新建类，扩展功能继承类实现【开】</p>
<ul>
<li>多态开闭原则<br>多态开闭原则的定义倡导由于抽象化接口的使用，在这中间实现可以被改变，多种实现可以被创建，并且多态化的替换不同的实现。</li>
</ul>
<p>理解：把类可能被修改的方法，抽象化接口化，即把确定性高的属性方法自己实现【闭】，其他的留给接口实现【开】</p>
<h3 id="三、里氏替换原则-Liskov-Substitution-Principle"><a href="#三、里氏替换原则-Liskov-Substitution-Principle" class="headerlink" title="三、里氏替换原则 Liskov Substitution Principle"></a>三、里氏替换原则 Liskov Substitution Principle</h3><blockquote>
<p>派生类（子类）对象可以在程式中代替其基类（超类）对象</p>
</blockquote>
<p><img src="https://cdn.linz.tech/parent_son.png" alt=""></p>
<p>理解：</p>
<ul>
<li>在程序中子类替换父整体的功能不收影响，注意：子类可以重写父类方法但是所实现的内容结果必须大体一致</li>
<li>子类设计时应更关注扩展功能，而不是重写超类方法</li>
<li>父类重写过多应考虑把重写的方法抽象化接口化</li>
</ul>
<h3 id="四、依赖倒置原则-Dependence-Inversion-Principle"><a href="#四、依赖倒置原则-Dependence-Inversion-Principle" class="headerlink" title="四、依赖倒置原则 Dependence Inversion Principle"></a>四、依赖倒置原则 Dependence Inversion Principle</h3><blockquote>
<p>程序要依赖于抽象接口，不要依赖于具体实现。即面向接口编程</p>
</blockquote>
<p>理解：Java语言设计接口和对象的定位决定，开发中尽量使用<code>面向接口编程</code>，或者抽象项目实现面向接口编程</p>
<h3 id="五、迪米特法则-Law-of-Demeter"><a href="#五、迪米特法则-Law-of-Demeter" class="headerlink" title="五、迪米特法则 Law of Demeter"></a>五、迪米特法则 Law of Demeter</h3><blockquote>
<p>最少知识原则（The Least Knowledge Principle），一个类对于其他类知道的越少越好，就是说一个对象应当对其他对象有尽可能少的了解,只和朋友通信，不和陌生人说话。英文简写为: LOD。</p>
</blockquote>
<p>理解：</p>
<ol>
<li>用于降低类之间的耦合，使得系统的功能模块功能独立</li>
<li>【缺点】两个类需要建议依赖关系时，必须通过第三方<a href="https://baike.baidu.com/item/友元类/518734" target="_blank" rel="noopener">友元类</a>来传达。</li>
<li>【类比】我们生活在这个社会，每个人都是相互独立的个体，当需要产生关联时一般的通过第三方，找房子，买房子，找对象，找工作都需要通过第三方，因为每个人时间知识资源有限，一般情况产生连接需要巨大的成本，孤独才是生活的本质。</li>
<li>应用的例子 <a href="https://baike.baidu.com/item/门面模式/764642" target="_blank" rel="noopener">门面模式</a>（<a href="https://baike.baidu.com/item/Facade/2954918" target="_blank" rel="noopener">Facade</a>）和中介模式（Mediator）</li>
</ol>
<h3 id="六、接口隔离原则"><a href="#六、接口隔离原则" class="headerlink" title="六、接口隔离原则"></a>六、接口隔离原则</h3><blockquote>
<p>使用多个专门的接口比使用单一的总接口要好<br>百度案例解决：</p>
<p>​    “不应该强迫客户依赖于它们不用的方法。接口属于客户，不属于它所在的<a href="https://baike.baidu.com/item/类层次结构/4685758" target="_blank" rel="noopener">类层次结构</a>。”这个说得很明白了，再通俗点说，不要强迫客户使用它们不用的方法，如果强迫用户使用它们不使用的方法，那么这些客户就会面临由于这些<code>不使用的方法的改变所带来的改变。</code></p>
</blockquote>
<p>理解：</p>
<p>合理更加实情把一个接口分为多个接口，让实现类分别实现</p>
<h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul>
<li><a href="https://java-design-patterns.com/principles/" target="_blank" rel="noopener">https://java-design-patterns.com/principles/</a></li>
<li><a href="https://www.cnblogs.com/cainiao-chuanqi/p/10959800.html" target="_blank" rel="noopener">https://www.cnblogs.com/cainiao-chuanqi/p/10959800.html</a></li>
</ul>
<h1 id="Patterns-设计模式"><a href="#Patterns-设计模式" class="headerlink" title="Patterns 设计模式"></a>Patterns 设计模式</h1><h2 id="Abstract-Document-（抽象文档模式）"><a href="#Abstract-Document-（抽象文档模式）" class="headerlink" title="Abstract Document （抽象文档模式）"></a>Abstract Document （抽象文档模式）</h2><h3 id="白话：用同一个接口定义整体和局部，局部细节就可以无限拆分"><a href="#白话：用同一个接口定义整体和局部，局部细节就可以无限拆分" class="headerlink" title="白话：用同一个接口定义整体和局部，局部细节就可以无限拆分"></a>白话：用同一个接口定义整体和局部，局部细节就可以无限拆分</h3><h3 id="故事：买车"><a href="#故事：买车" class="headerlink" title="故事：买车"></a>故事：买车</h3><p><img src="http://cdn.linz.tech/abstract_doc_car_show.jpeg" alt=""></p>
<p>我想买一辆车，首先要知道它的品牌型号如：300SL，价格 16W<font color="red">起</font></p>
<p>但是我最近狗屎运特别好，厕所捡到了10W块，当然买高配版，轮胎型号15C，价格100¥，车门型号 Lambo 价格300¥，最终用<font color="red">抽象文档模式</font>代码表示，我买到的车：</p>
<p><a href="https://github.com/iluwatar/java-design-patterns/blob/master/abstract-document/src/main/java/com/iluwatar/abstractdocument/App.java" target="_blank" rel="noopener">App.java</a></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Constructing parts and car"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    var wheelProperties <span class="token operator">=</span> Map<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
        Property<span class="token punctuation">.</span>TYPE<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"wheel"</span><span class="token punctuation">,</span>
        Property<span class="token punctuation">.</span>MODEL<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"15C"</span><span class="token punctuation">,</span>
        Property<span class="token punctuation">.</span>PRICE<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 100L<span class="token punctuation">)</span><span class="token punctuation">;</span>

    var doorProperties <span class="token operator">=</span> Map<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
        Property<span class="token punctuation">.</span>TYPE<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"door"</span><span class="token punctuation">,</span>
        Property<span class="token punctuation">.</span>MODEL<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Lambo"</span><span class="token punctuation">,</span>
        Property<span class="token punctuation">.</span>PRICE<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 300L<span class="token punctuation">)</span><span class="token punctuation">;</span>

    var carProperties <span class="token operator">=</span> Map<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
        Property<span class="token punctuation">.</span>MODEL<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"300SL"</span><span class="token punctuation">,</span>
        Property<span class="token punctuation">.</span>PRICE<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 160400L<span class="token punctuation">,</span>
        Property<span class="token punctuation">.</span>PARTS<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> List<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>wheelProperties<span class="token punctuation">,</span> doorProperties<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    var car <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Car</span><span class="token punctuation">(</span>carProperties<span class="token punctuation">)</span><span class="token punctuation">;</span>

    LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Here is our car:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"-> model: {}"</span><span class="token punctuation">,</span> car<span class="token punctuation">.</span><span class="token function">getModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"-> price: {}"</span><span class="token punctuation">,</span> car<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"-> parts: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    car<span class="token punctuation">.</span><span class="token function">getParts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>p <span class="token operator">-</span><span class="token operator">></span> LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"\t{}/{}/{}"</span><span class="token punctuation">,</span>
        p<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">,</span>
        p<span class="token punctuation">.</span><span class="token function">getModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">,</span>
        p<span class="token punctuation">.</span><span class="token function">getPrice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>配一个网上找的类图</p>
<p><img src="http://cdn.linz.tech/abstract_doc_class_diagram.png" alt=""></p>
<h3 id="点评"><a href="#点评" class="headerlink" title="点评"></a>点评</h3><p>主要的优点是找到总体和局部共有的属性，通过简单的几个属性能详细描绘复杂的总体和部分。</p>
<h3 id="适用性"><a href="#适用性" class="headerlink" title="适用性"></a>适用性</h3><ul>
<li>需要动态添加新属性</li>
<li>你想要一种灵活的方式来组织树状结构中的域 <font color="red">后台常用的配置文件</font></li>
<li>你想要更松散耦合的系统</li>
</ul>
<h2 id="Factory-Method-（工厂方法模式）"><a href="#Factory-Method-（工厂方法模式）" class="headerlink" title="Factory Method （工厂方法模式）"></a>Factory Method （工厂方法模式）</h2><p><img src="https://cdn.linz.tech/method_factory.png" alt=""></p>
<h3 id="白话：-铁匠制作武器，抽象出铁匠技能和武器，不同的铁匠制作出品质不同的武器"><a href="#白话：-铁匠制作武器，抽象出铁匠技能和武器，不同的铁匠制作出品质不同的武器" class="headerlink" title="白话： 铁匠制作武器，抽象出铁匠技能和武器，不同的铁匠制作出品质不同的武器"></a>白话： 铁匠制作武器，抽象出铁匠技能和武器，不同的铁匠制作出品质不同的武器</h3><blockquote>
<p>我给钱让铁匠做一把剑</p>
<p>铁匠和剑是抽象需要实现</p>
<p>我沟通让铁匠制作不通的武器（Factory）</p>
</blockquote>
<h3 id="使用步骤："><a href="#使用步骤：" class="headerlink" title="使用步骤："></a>使用步骤：</h3><p>步骤1： 创建抽象工厂类，定义具体工厂的公共接口；<br>步骤2： 创建抽象产品类 ，定义具体产品的公共接口；<br>步骤3： 创建具体产品类（继承抽象产品类） &amp; 定义生产的具体产品；<br>步骤4：创建具体工厂类（继承抽象工厂类），定义创建对应具体产品实例的方法；<br>步骤5：外界通过调用具体工厂类的方法，从而创建不同具体产品类的实例</p>
<blockquote>
<p>【工厂】&amp;&amp; 【产品】都抽象出来</p>
</blockquote>
<h2 id="Abstract-Factory-（抽象工厂模式）"><a href="#Abstract-Factory-（抽象工厂模式）" class="headerlink" title="Abstract Factory （抽象工厂模式）"></a>Abstract Factory （抽象工厂模式）</h2><h3 id="白话：-抽象工厂创建，抽象产品，用抽象的工厂创建定义好的接口产品，为后续扩展提供条件"><a href="#白话：-抽象工厂创建，抽象产品，用抽象的工厂创建定义好的接口产品，为后续扩展提供条件" class="headerlink" title="白话： 抽象工厂创建，抽象产品，用抽象的工厂创建定义好的接口产品，为后续扩展提供条件"></a>白话： 抽象工厂创建，抽象产品，用抽象的工厂创建定义好的接口产品，为后续扩展提供条件</h3><h3 id="故事：“从0到100万”——中国鞋都莆田口罩生产攻坚记"><a href="#故事：“从0到100万”——中国鞋都莆田口罩生产攻坚记" class="headerlink" title="故事：“从0到100万”——中国鞋都莆田口罩生产攻坚记"></a>故事：“从0到100万”——中国鞋都<em>莆田口罩</em>生产攻坚记</h3><p><img src="http://cdn.linz.tech/%E4%B8%80%E6%AC%A1%E6%80%A7%E5%8F%A3%E7%BD%A9.jpg" alt=""></p>
<p>说实话我听到这个故事还是震惊的，<span class="github-emoji" style="display:inline;vertical-align:middle"><span>😵</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f635.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 我印象中的“莆田”不是这个样子的呀？应该是莆田系博爱男科，或者是莆田系博士男科啥的。想不到竟然是鞋都，虽然是“Costplay”正版。</p>
<p>好进入正题，莆田通过<font color="red">抽象工厂模式</font> <font color="blue">从鞋子-&gt;(转换)口罩工厂</font> 就是典型的抽象工厂模式，代码上就是</p>
<pre class="line-numbers language-java"><code class="language-java">莆田 <span class="token keyword">class</span><span class="token punctuation">{</span>

  <span class="token keyword">public</span> FactoryImp <span class="token function">factory</span><span class="token punctuation">(</span>String type<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">switch</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">case</span> 鞋子<span class="token operator">:</span>
            <span class="token keyword">return</span> 鞋子_factory<span class="token punctuation">;</span>
      <span class="token keyword">case</span> 口罩<span class="token operator">:</span>
            <span class="token keyword">return</span> 口罩_factory<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其实本质是由于生产鞋子和生产口罩的原料和工艺大体是类似的，通过相对简单的整合原料，机器和生产工艺就能得到生产不同产品的工厂。这种做法好处在于充分利用现有资源的情况下，最高效快速的生产出口罩，解决由于疫情爆发导致的口罩稀缺的情况；java-design-patterns 给的例子是一个城堡的例子不太喜欢，感兴趣的可以去看一下，地址如下：<br><a href="https://github.com/iluwatar/java-design-patterns/blob/1e76d91929dcd874d63bb327f2339d5c07170565/abstract-factory/src/main/java/com/iluwatar/abstractfactory/App.java" target="_blank" rel="noopener">abstract factory github App.java</a></p>
<h3 id="点评-1"><a href="#点评-1" class="headerlink" title="点评"></a>点评</h3><p>抽象工厂模式，通过的输入简单鞋子、口罩命令，并抽象规定这个工厂的产出，而具体复杂的资源整合及类的初始化调用的复杂逻辑流程等等都不需要使用者关心。</p>
<h3 id="应用案例"><a href="#应用案例" class="headerlink" title="应用案例"></a>应用案例</h3><ul>
<li><a href="https://raw.githubusercontent.com/Blankj/AndroidUtilCode/b01e17e36f022c21d8bd032ecb25384dd32e578b/lib/utilcode/src/main/java/com/blankj/utilcode/util/ToastUtils.java" target="_blank" rel="noopener">ToastUtils.java</a></li>
</ul>
<p>使用步骤</p>
<h2 id="Acyclic-Visitor-（非循环访问者模式）"><a href="#Acyclic-Visitor-（非循环访问者模式）" class="headerlink" title="Acyclic Visitor （非循环访问者模式）"></a>Acyclic Visitor （非循环访问者模式）</h2><p><a href="https://www.jdon.com/52459" target="_blank" rel="noopener">详情使用介绍</a></p>
<h3 id="白话：-调用抽象，不同能力抽象处理，一个类暴露一个接口，就能实现很多种能力"><a href="#白话：-调用抽象，不同能力抽象处理，一个类暴露一个接口，就能实现很多种能力" class="headerlink" title="白话： 调用抽象，不同能力抽象处理，一个类暴露一个接口，就能实现很多种能力"></a>白话： 调用抽象，不同能力抽象处理，一个类暴露一个接口，就能实现很多种能力</h3><p><img src="http://cdn.linz.tech/key_door.jpeg" alt=""></p>
<h3 id="故事：从小我就有一个开游乐园的爸爸，当有同学来游乐园玩的时候，他会根据同学们的要求，兴趣和胆量分配给他们游乐项目的钥匙，当然有的同学拿到多有的拿到少，还有几个拿到了比较危险的项目；"><a href="#故事：从小我就有一个开游乐园的爸爸，当有同学来游乐园玩的时候，他会根据同学们的要求，兴趣和胆量分配给他们游乐项目的钥匙，当然有的同学拿到多有的拿到少，还有几个拿到了比较危险的项目；" class="headerlink" title="故事：从小我就有一个开游乐园的爸爸，当有同学来游乐园玩的时候，他会根据同学们的要求，兴趣和胆量分配给他们游乐项目的钥匙，当然有的同学拿到多有的拿到少，还有几个拿到了比较危险的项目；"></a>故事：从小我就有一个开游乐园的爸爸，当有同学来游乐园玩的时候，他会根据同学们的要求，兴趣和胆量分配给他们游乐项目的钥匙，当然有的同学拿到多有的拿到少，还有几个拿到了比较危险的项目；</h3><p><a href="https://github.com/iluwatar/java-design-patterns/blob/1e76d91929/acyclic-visitor/src/main/java/com/iluwatar/acyclicvisitor/App.java" target="_blank" rel="noopener">App.java</a></p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">/*分配到的玩项目的权限或钥匙集合*/</span>
    var conUnix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConfigureForUnixVisitor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    var conDos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConfigureForDosVisitor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">//各种各样的游乐设施</span>
    var zoom <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Zoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    var hayes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hayes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 开玩</span>
    hayes<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>conDos<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Hayes modem with Dos configurator</span>
    zoom<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>conDos<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Zoom modem with Dos configurator</span>
    hayes<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>conUnix<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Hayes modem with Unix configurator</span>
    zoom<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>conUnix<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Zoom modem with Unix configurator   </span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>上一波项目类图</p>
<p><img src="http://cdn.linz.tech/acyclic-visitor.png" alt=""></p>
<h3 id="点评-2"><a href="#点评-2" class="headerlink" title="点评"></a>点评</h3><p>非循环访问者模式，很近似于我们用不同的钥匙打开不同的门，而打开不同的门，里面会有不同的资源提供给我们使用。</p>
<ol>
<li>钥匙和门的关系比较单一，具有固定属性。</li>
<li>子门子钥匙可以继承父钥匙和门，实现层级结构的划分。</li>
</ol>
<p>使用场景</p>
<ol>
<li>当你想动态的向现有层次结构添加功能（资源）时，不想做修改或影响整体的层次结构，即增加一个门和钥匙无需对整体修改；</li>
<li>当存在不同层级结构的资源（类比：门）访问操作时，不用修改层级结构，通过ConfigureXXX类进行管理控制；</li>
</ol>
<p>参考：<a href="https://java-design-patterns.com/patterns/acyclic-visitor/" target="_blank" rel="noopener">非循环访问者模式（ Acyclic Visitor）</a></p>
<h2 id="Adapter-（适配器模式）"><a href="#Adapter-（适配器模式）" class="headerlink" title="Adapter （适配器模式）"></a>Adapter （适配器模式）</h2><p><img src="http://cdn.linz.tech/java_pattern_adapter_1.png" alt=""></p>
<p><img src="http://cdn.linz.tech/java_pattern_adapter_2.jpeg" alt=""></p>
<h3 id="白话-USB转视频接口-USB转高清视频接口"><a href="#白话-USB转视频接口-USB转高清视频接口" class="headerlink" title="白话 USB转视频接口/USB转高清视频接口"></a>白话 USB转视频接口/USB转高清视频接口</h3><h3 id="点评-3"><a href="#点评-3" class="headerlink" title="点评"></a>点评</h3><ul>
<li>安卓原生最常用类，常用于数据处理类，处理完数据定义好格式，返回给调用类使用，往往数据（事件）处理类格式一定，而返回的数据需要处理展示千变万化，定义一个adapter抽象类，给数据处理类调用，满足数据处理类最小功能和最少改动的设计原则。</li>
</ul>
<h2 id="Ambassador（大使模式）"><a href="#Ambassador（大使模式）" class="headerlink" title="Ambassador（大使模式）"></a>Ambassador（大使模式）</h2><p><img src="http://cdn.linz.tech/java_pattern_ambassador.jpeg" alt=""></p>
<h3 id="设计意图"><a href="#设计意图" class="headerlink" title="设计意图"></a>设计意图</h3><blockquote>
<p>Provide a helper service instance on a client and offload common functionality away from a shared resource.</p>
</blockquote>
<p>为什么叫大使模式</p>
<ul>
<li>大使是自己人</li>
<li>大使负责处理非本国（远端）事务</li>
<li>【注意】大使负责处理一下链接稳定和链接时长和成功率的统计和反馈</li>
</ul>
<h4 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h4><p>服务大使添加其他功能，如日志记录，延迟检查</p>
<p>本地服务大使，用于与远程服务进行交互：</p>
<h4 id="典型案例"><a href="#典型案例" class="headerlink" title="典型案例"></a><strong>典型</strong>案例</h4><ul>
<li>控制对其他对象的访问</li>
<li>实现日志记录</li>
<li>实现断路</li>
<li>卸载远程服务任务</li>
<li>促进网络连接</li>
</ul>
<h3 id="白话"><a href="#白话" class="headerlink" title="白话"></a>白话</h3><p>大使为我们（Client）处理外国（Service）的关系，记录交往信息，分析外国局势，使我们更好的应对外围环境的变化。</p>
<p><img src="http://cdn.linz.tech/ambassador.urm.png" alt=""></p>
<blockquote>
<p>本地和远端共同实现一个接口，client调用本地大使，大使调用远端服务</p>
</blockquote>
<h3 id="点评-4"><a href="#点评-4" class="headerlink" title="点评"></a>点评</h3><p>把维护service链接的功能放到大使类中处理，如</p>
<ol>
<li>访问控制，维护…</li>
<li>访问日志记录</li>
<li>链接维护，短路重连，掉包测试…</li>
<li>卸载服务</li>
<li>安全管理</li>
</ol>
<h2 id="API-Gateway-API-网关"><a href="#API-Gateway-API-网关" class="headerlink" title="API-Gateway API 网关"></a>API-Gateway API 网关</h2><p>  <img src="http://cdn.linz.tech/java-pattern-gateway.png" alt=""></p>
<h3 id="白话-本地API统一交给API网关管理，对API进行整合及代理管理"><a href="#白话-本地API统一交给API网关管理，对API进行整合及代理管理" class="headerlink" title="白话 本地API统一交给API网关管理，对API进行整合及代理管理"></a>白话 本地API统一交给API网关管理，对API进行整合及代理管理</h3><h2 id="Arrange-Act-Assert-AAA"><a href="#Arrange-Act-Assert-AAA" class="headerlink" title="Arrange/Act/Assert (AAA)"></a>Arrange/Act/Assert (AAA)</h2><blockquote>
<p>单元测试的3部模式</p>
<ol>
<li>Arrange: Perform the setup and initialization required for the test.</li>
<li>Act: Take action(s) required for the test.</li>
<li>Assert: Verify the outcome(s) of the test.</li>
</ol>
</blockquote>
<p>Demo.java</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token annotation punctuation">@Test</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testPlus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//Arrange</span>
    var cash <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cash</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//Act</span>
    cash<span class="token punctuation">.</span><span class="token function">plus</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//Assert</span>
    <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> cash<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Balking"><a href="#Balking" class="headerlink" title="Balking"></a>Balking</h2><blockquote>
<p>巨简单清晰的多线程竞争一个资源的设计模式，多个线程访问，只有当前资源可以开放访问时可以调用</p>
</blockquote>
<h2 id="Bytecode"><a href="#Bytecode" class="headerlink" title="Bytecode"></a><strong>Bytecode</strong></h2><blockquote>
<p>接收和处理定义过的命令，模拟虚拟机的指令机</p>
</blockquote>
<h2 id="Business-delegate-（业务代表）"><a href="#Business-delegate-（业务代表）" class="headerlink" title="Business-delegate （业务代表）"></a><a href="https://github.com/iluwatar/java-design-patterns/tree/master/business-delegate" target="_blank" rel="noopener">Business-delegate</a> （业务代表）</h2><blockquote>
<p>代表负责跟客户沟通，我们是提供实际业务给销售代表审核的人</p>
</blockquote>
<p> BusinessDelegate.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BusinessDelegate</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//实际业务提供公司</span>
  <span class="token keyword">private</span> BusinessLookup lookupService<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">//抽象的业务类型</span>
  <span class="token keyword">private</span> BusinessService businessService<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">//指定业务类型</span>
  <span class="token keyword">private</span> ServiceType serviceType<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLookupService</span><span class="token punctuation">(</span>BusinessLookup businessLookup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>lookupService <span class="token operator">=</span> businessLookup<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setServiceType</span><span class="token punctuation">(</span>ServiceType serviceType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>serviceType <span class="token operator">=</span> serviceType<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    businessService <span class="token operator">=</span> lookupService<span class="token punctuation">.</span><span class="token function">getBusinessService</span><span class="token punctuation">(</span>serviceType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    businessService<span class="token punctuation">.</span><span class="token function">doProcessing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Bridge（桥接模式）"><a href="#Bridge（桥接模式）" class="headerlink" title="Bridge（桥接模式）"></a>Bridge（桥接模式）</h2><p>Real World  Example</p>
<blockquote>
<p>Consider you have a weapon with different enchantments, and you are supposed to allow mixing different weapons with different enchantments. What would you do? Create multiple copies of each of the weapons for each of the enchantments or would you just create separate enchantment and set it for the weapon as needed? Bridge pattern allows you to do the second.</p>
</blockquote>
<p><strong>Programmatic Example</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Weapon</span> <span class="token punctuation">{</span>
  <span class="token keyword">void</span> <span class="token function">wield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">void</span> <span class="token function">swing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">void</span> <span class="token function">unwield</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Enchantment <span class="token function">getEnchantment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Sword</span> <span class="token keyword">implements</span> <span class="token class-name">Weapon</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">final</span> Enchantment enchantment<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token function">Sword</span><span class="token punctuation">(</span>Enchantment enchantment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>enchantment <span class="token operator">=</span> enchantment<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">wield</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"The sword is wielded."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    enchantment<span class="token punctuation">.</span><span class="token function">onActivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">swing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"The sword is swinged."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    enchantment<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">unwield</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"The sword is unwielded."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    enchantment<span class="token punctuation">.</span><span class="token function">onDeactivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> Enchantment <span class="token function">getEnchantment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> enchantment<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Enchantment</span> <span class="token punctuation">{</span>
  <span class="token keyword">void</span> <span class="token function">onActivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">void</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">void</span> <span class="token function">onDeactivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h3><ul>
<li><code>decouple an abstraction from its implementation so that the two can vary independently</code> ,从一个接口解耦一个抽象的概念，使他们相互独立</li>
<li>“nested generalizations” 把部分次要或者辅助的功能抽象，由其他类进行扩展，辅助功能改变不影响主类</li>
<li>Bridge pattern is about preferring composition over inheritance 桥接更倾向于聚合而不是继承</li>
</ul>
<h2 id="Collection-pipeline"><a href="#Collection-pipeline" class="headerlink" title="Collection-pipeline"></a>Collection-pipeline</h2><ol>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/package-summary.html" target="_blank" rel="noopener">Java8 Streams</a> Android 24 （N）最小支持</li>
<li>可以用Rxjava3来实现函数编程；</li>
</ol>
<h2 id="Chain（责任链模式）"><a href="#Chain（责任链模式）" class="headerlink" title="Chain（责任链模式）"></a>Chain（责任链模式）</h2><h3 id="白话-1"><a href="#白话-1" class="headerlink" title="白话"></a>白话</h3><p>传递命令，师长-&gt; 团长-&gt; 营长-&gt; 连长-&gt; 排长</p>
<h3 id="点评-5"><a href="#点评-5" class="headerlink" title="点评"></a>点评</h3><p>每个节点都有接受和专递命令的作用，但是每个节点又有其处理权限处理他这个级别的命令</p>
<h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><ol>
<li>官方Demo</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">RequestHandler</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Logger LOGGER <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>RequestHandler<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> RequestHandler next<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token function">RequestHandler</span><span class="token punctuation">(</span>RequestHandler next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleRequest</span><span class="token punctuation">(</span>Request req<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>next <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      next<span class="token punctuation">.</span><span class="token function">handleRequest</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">printHandling</span><span class="token punctuation">(</span>Request req<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{} handling request \"{}\""</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> req<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">abstract</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrcCommander</span> <span class="token keyword">extends</span> <span class="token class-name">RequestHandler</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token function">OrcCommander</span><span class="token punctuation">(</span>RequestHandler handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handleRequest</span><span class="token punctuation">(</span>Request req<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">getRequestType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>RequestType<span class="token punctuation">.</span>DEFEND_CASTLE<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">printHandling</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
      req<span class="token punctuation">.</span><span class="token function">markHandled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">handleRequest</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">"Orc commander"</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>OKHttp 通过Intercepter这种连式设计，大大简化了请求访问的功能，并且提供了非常多的可扩展性</li>
</ol>
<p><img src="http://cdn.linz.tech/Okhttp_client_pattern.webp" alt=""></p>
<ol start="3">
<li>Window input事件的转发<br><img src="https://cdn.linz.tech/chain_input.jpg" alt=""><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">/</span> 事件分发不同阶段的基类
<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">InputStage</span> <span class="token punctuation">{</span>
<span class="token keyword">private</span> <span class="token keyword">final</span> InputStage mNext<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 指向事件分发的下一阶段</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<p>// InputStage的子类，象征事件分发的各个阶段</p>
<p>final class ViewPreImeInputStage extends InputStage {}</p>
<p>final class EarlyPostImeInputStage extends InputStage {}<br>//视图输入处理阶段 ，主要处理按键、轨迹球、手指触摸及一般性的运动事件<br>final class ViewPostImeInputStage extends InputStage {}<br>//综合性处理阶段 ，主要针对轨迹球、操作杆、导航面板及未捕获的事件使用键盘进行处理:<br>final class SyntheticInputStage extends InputStage {}</p>
<p>abstract class AsyncInputStage extends InputStage {}</p>
<p>final class NativePreImeInputStage extends AsyncInputStage {}<br>//输入法事件处理阶段 ，会从事件中过滤出用户输入的字符，如果输入的内容无法被识别，则将输入事件向下一个阶段继续分发<br>final class ImeInputStage extends AsyncInputStage {}</p>
<p>final class NativePostImeInputStage extends AsyncInputStage {}</p>
<p>//使用<br>mSyntheticInputStage = new SyntheticInputStage();<br>InputStage viewPostImeStage = new ViewPostImeInputStage(mSyntheticInputStage);<br>InputStage nativePostImeStage = new NativePostImeInputStage(viewPostImeStage,<br>                                                            “aq:native-post-ime:” + counterSuffix);<br>InputStage earlyPostImeStage = new EarlyPostImeInputStage(nativePostImeStage);<br>InputStage imeStage = new ImeInputStage(earlyPostImeStage,<br>                                        “aq:ime:” + counterSuffix);<br>InputStage viewPreImeStage = new ViewPreImeInputStage(imeStage);<br>InputStage nativePreImeStage = new NativePreImeInputStage(viewPreImeStage,<br>                                                          “aq:native-pre-ime:” + counterSuffix);<br>mFirstInputStage = nativePreImeStage;</p>
<pre><code>出处：[反思|Android 事件分发机制的设计与实现](https://juejin.cn/post/6844903926446161927)

- [OKHttp源码解析](https://www.jianshu.com/p/27c1554b7fee)



## Caching（缓存策略）

&gt; 为了尽量减少数据获取/刷新的成本，根据数据获取的消耗（网络、内存、文件），根据数据属性选择最符合应用场景的缓存策略

1. 主要类职责
   1. ChacheStore 负责数据增删改查的功能，定义成接口由不同的数据源实现；
   2. CachingPolicy 定义常用应用场景使用的缓存策略，排列获取数据的优先级，更新本地缓存的策略
   3. CacheControl  okhttp3.CacheControl.java 根据[Hypertext Transfer Protocol (HTTP/1.1): Caching](https://tools.ietf.org/html/rfc7234#section-5.2) 根据HTTP Caching协议及根据服务器返回的Caching指令设置缓存模式
   4. CacheManager 负责初始化store，policy，Cachecontrol，协调好内部类向外部提供简单的操作接口



### 阅读记录

- [一日一学_okhttp(本地缓存)](https://www.jianshu.com/p/80766c227bf8)



## Decorator （装饰模式）

&gt; 按照接口的思维理解，非常清楚，即把类的部分固有方法（作用）抽象成接口，交给实现了该抽象接口的类来实现，具体怎么实现看实现类

### 关键点

1. 部分方法抽象
2. 装饰类实现抽象方法的具体内容

## [Dao](https://github.com/iluwatar/java-design-patterns/tree/master/dao) （Data Access Object,数据访问对象）

### DAO组成

DatabaseConnection：专门负责数据库打开与关闭操作的类

VO：主要由属性，setter, getter方法组成，VO类中的属性与表中的字段相对应，每一个VO类的对象都表示表中的每一条记录；

DAO：主要定义操作的接口，定义一系列数据库的原子性操作，例如增删改查等；

Impl: DAO接口的真实实现类，主要完成具体数据库操作，但不负责数据库的打开和关闭；

Proxy：代理实现类，主要完成数据库的打开和关闭并且调用真实实现类对象的操作；

Factory: 工厂类，通过工厂类取得一个DAO的实例化对象。



### 对于包的命名：

- 数据库连接： xxx.dbc.DatabaseConnection
- DAO接口： xxx.dao.IXxxDAO
- DAO接口真实实现类：xxx.dao.impl.XxxDAOImpl
- DAO接口代理实现类：xxx.dao.proxy.XxxDAOProxy
- VO类： xxx.vo.Xxx, VO命名要与表的命名一致
- 工厂类：xxx.factory.DAOFactory.

参考：[DAO设计模式简介](https://blog.csdn.net/thystar/article/details/41786763)

##  Facade （外观或门面模式）

&gt; Facade pattern provides a simplified interface to a complex subsystem.

直接上java-design-patterns 案例

`金矿挖矿工作`

1. 把不同矿工进行抽象

   ```java
   public abstract class DwarvenMineWorker {

     private static final Logger LOGGER = LoggerFactory.getLogger(DwarvenMineWorker.class);

     public void goToSleep() {
       LOGGER.info("{} goes to sleep.", name());
     }

     public void wakeUp() {
       LOGGER.info("{} wakes up.", name());
     }

     public void goHome() {
       LOGGER.info("{} goes home.", name());
     }

     public void goToMine() {
       LOGGER.info("{} goes to the mine.", name());
     }

     private void action(Action action) {
       switch (action) {
         case GO_TO_SLEEP:
           goToSleep();
           break;
         case WAKE_UP:
           wakeUp();
           break;
         case GO_HOME:
           goHome();
           break;
         case GO_TO_MINE:
           goToMine();
           break;
         case WORK:
           work();
           break;
         default:
           LOGGER.info("Undefined action");
           break;
       }
     }

     public void action(Action... actions) {
       Arrays.stream(actions).forEach(this::action);
     }

     public abstract void work();

     public abstract String name();

     enum Action {
       GO_TO_SLEEP, WAKE_UP, GO_HOME, GO_TO_MINE, WORK
     }
   }</code></pre><ol start="2">
<li><p>具体实现工工种</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DwarvenTunnelDigger</span> <span class="token keyword">extends</span> <span class="token class-name">DwarvenMineWorker</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Logger LOGGER <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>DwarvenTunnelDigger<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{} creates another promising tunnel."</span><span class="token punctuation">,</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> String <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">"Dwarven tunnel digger"</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DwarvenGoldDigger</span> <span class="token keyword">extends</span> <span class="token class-name">DwarvenMineWorker</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Logger LOGGER <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>DwarvenGoldDigger<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{} digs for gold."</span><span class="token punctuation">,</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> String <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">"Dwarf gold digger"</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DwarvenCartOperator</span> <span class="token keyword">extends</span> <span class="token class-name">DwarvenMineWorker</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Logger LOGGER <span class="token operator">=</span> LoggerFactory<span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span>DwarvenCartOperator<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"{} moves gold chunks out of the mine."</span><span class="token punctuation">,</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> String <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">"Dwarf cart operator"</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>暴露出整个系统需要暴露的内容</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DwarvenGoldmineFacade</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">final</span> List<span class="token operator">&lt;</span>DwarvenMineWorker<span class="token operator">></span> workers<span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token function">DwarvenGoldmineFacade</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      workers <span class="token operator">=</span> List<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
            <span class="token keyword">new</span> <span class="token class-name">DwarvenGoldDigger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">DwarvenCartOperator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">DwarvenTunnelDigger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startNewDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">makeActions</span><span class="token punctuation">(</span>workers<span class="token punctuation">,</span> DwarvenMineWorker<span class="token punctuation">.</span>Action<span class="token punctuation">.</span>WAKE_UP<span class="token punctuation">,</span> DwarvenMineWorker<span class="token punctuation">.</span>Action<span class="token punctuation">.</span>GO_TO_MINE<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">digOutGold</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">makeActions</span><span class="token punctuation">(</span>workers<span class="token punctuation">,</span> DwarvenMineWorker<span class="token punctuation">.</span>Action<span class="token punctuation">.</span>WORK<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">endDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">makeActions</span><span class="token punctuation">(</span>workers<span class="token punctuation">,</span> DwarvenMineWorker<span class="token punctuation">.</span>Action<span class="token punctuation">.</span>GO_HOME<span class="token punctuation">,</span> DwarvenMineWorker<span class="token punctuation">.</span>Action<span class="token punctuation">.</span>GO_TO_SLEEP<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">makeActions</span><span class="token punctuation">(</span>Collection<span class="token operator">&lt;</span>DwarvenMineWorker<span class="token operator">></span> workers<span class="token punctuation">,</span>
      DwarvenMineWorker<span class="token punctuation">.</span>Action<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> actions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    workers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>worker <span class="token operator">-</span><span class="token operator">></span> worker<span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span>actions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>调用</p>
<pre class="line-numbers language-java"><code class="language-java">var facade <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DwarvenGoldmineFacade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
facade<span class="token punctuation">.</span><span class="token function">startNewDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
facade<span class="token punctuation">.</span><span class="token function">digOutGold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
facade<span class="token punctuation">.</span><span class="token function">endDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="理解-1"><a href="#理解-1" class="headerlink" title="理解"></a>理解</h3><ul>
<li>复杂的子系统提供最简单的接口（provides a simplified interface to a complex subsystem）</li>
</ul>
<h2 id="Mediator-中介者模式"><a href="#Mediator-中介者模式" class="headerlink" title="Mediator  (中介者模式)"></a><strong>Mediator</strong>  (中介者模式)</h2><blockquote>
<p>Define an object that encapsulates how a set of objects interact.</p>
</blockquote>
<p>java-pattern案例类图    </p>
<p><img src="https://cdn.linz.tech/mediator_1.png" alt=""></p>
<h3 id="我的理解"><a href="#我的理解" class="headerlink" title="我的理解"></a>我的理解</h3><p><img src="https://cdn.linz.tech/meditor_my.png" alt=""></p>
<h2 id="Template-Method-（模板方法模式）"><a href="#Template-Method-（模板方法模式）" class="headerlink" title="Template Method （模板方法模式）"></a>Template Method （模板方法模式）</h2><p>这个很常用也很好理解，及父类定义好几个抽象方法给子类实现</p>
<p>优点</p>
<ol>
<li>父类实现了该类几乎所有方法，留下几个变动的抽象方法给子类实现，减少代码量提高效率【重点】</li>
<li>规矩规矩，有规矩之后代码就有清晰的逻辑，易于后期维护【重点】</li>
</ol>
<h2 id="Active-object"><a href="#Active-object" class="headerlink" title="Active-object"></a><strong>Active-object</strong></h2><ul>
<li>把异步的执行的方法放到父类实现，所有子类都能轻松用触发异步方法</li>
<li>LinkedBlockingQueue <ul>
<li>链表结构</li>
<li>Blocking 使用ReentrantLock takeLock，putLock 不满足条件堵塞当条件满足时放开</li>
</ul>
</li>
</ul>
<h2 id="Async-method-invocation"><a href="#Async-method-invocation" class="headerlink" title="Async-method-invocation"></a>Async-method-invocation</h2><ul>
<li><a href="https://www.jianshu.com/p/25e243850bd2?appinstall=0" target="_blank" rel="noopener">wait、notify和notifyAll</a></li>
<li>不用即使获取返回值future某一时间获取就行</li>
<li>泛型的应用</li>
</ul>
<h2 id="Circuit-breaker-（中断回路）"><a href="#Circuit-breaker-（中断回路）" class="headerlink" title="Circuit-breaker （中断回路）"></a>Circuit-breaker （中断回路）</h2><p>用于接口调用状态记录中断回路处理</p>
<p>中断处理属性有</p>
<ol>
<li>Timeout 超时时间</li>
<li>retryTimePeriod 重试间隔</li>
<li>failureCount 失败次数</li>
<li>failureThreshold 最大失败次数</li>
<li>lastFailureTime 上次失败时间</li>
</ol>
<h3 id="点评-6"><a href="#点评-6" class="headerlink" title="点评"></a>点评</h3><ul>
<li>整个把中断请求/调用处理放到一个类里维护对于链接有强稳定性的程序是很好的，因为链接(访问)稳定性要求高的基本是优化中断回路这个逻辑</li>
<li>对于一般调用使用上有过度设计的问题</li>
<li>这个模式设计得不够精巧，达不到实用级别</li>
<li>整个中断回路使用RxJava这种函数编程有天然语法优势，对中断回路更简明</li>
</ul>
<h1 id="源码阅读"><a href="#源码阅读" class="headerlink" title="源码阅读"></a>源码阅读</h1><h2 id="1-Retrofit-2-0"><a href="#1-Retrofit-2-0" class="headerlink" title="1. Retrofit 2.0"></a>1. Retrofit 2.0</h2><p>参考：</p>
<ul>
<li><a href="https://www.jianshu.com/p/0c055ad46b6c" target="_blank" rel="noopener">Android：手把手带你 深入读懂 Retrofit 2.0 源码</a></li>
</ul>
<p>感悟：</p>
<ol>
<li><p>看源码</p>
<ol>
<li><p>首先要清楚源码的大体框架走向在看，如retrofit就是请求和返回处理；</p>
</li>
<li><p>根据代码使用方法，一层层的分析源码，逻辑清晰</p>
</li>
<li><p>看源码能发现源码一些自己不知道使用方法，通过设置缓存强制使用responses </p>
<pre class="line-numbers language-java"><code class="language-java">Request request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Request<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">cacheControl</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CacheControl<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">maxStale</span><span class="token punctuation">(</span><span class="token number">365</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>DAYS<span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string">"http://publicobject.com/helloworld.txt"</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
</li>
</ol>
<ol start="2">
<li><p>代码设计由大自小理清功能和属性把它们定义到类中，即程序设计来源于生活，</p>
<ol>
<li>先定义好类，如家，家的属性，家的作用，家里面又有家具，家电它们也有相应的属性和作用。</li>
<li>然后通过设计模式来设计可扩展，方便维护的关系结构。</li>
</ol>
</li>
<li><p>设计方法</p>
<ol>
<li><p>builder，提供一个builder类初始化类，在不配置的情况下提供一些默认操作，极大简化类的初始化过程；</p>
</li>
<li><p>chain， <code>okhttp3.Call.Factory</code>, <code>Converter.Factory</code>  通过<code>nextCallAdapter</code>遍历，抽象接口List逐步调用，极大的提高程序扩展性</p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">public</span> CallAdapter<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token operator">></span> <span class="token function">nextCallAdapter</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> CallAdapter<span class="token punctuation">.</span>Factory skipPast<span class="token punctuation">,</span> Type returnType<span class="token punctuation">,</span>
      Annotation<span class="token punctuation">[</span><span class="token punctuation">]</span> annotations<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">int</span> start <span class="token operator">=</span> callAdapterFactories<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>skipPast<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">,</span> count <span class="token operator">=</span> callAdapterFactories<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      CallAdapter<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span> <span class="token operator">?</span><span class="token operator">></span> adapter <span class="token operator">=</span> callAdapterFactories<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>returnType<span class="token punctuation">,</span> annotations<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>adapter <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> adapter<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
</li>
</ol>
<h2 id="2-OKHttpClient"><a href="#2-OKHttpClient" class="headerlink" title="2. OKHttpClient"></a>2. OKHttpClient</h2><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p><a href="https://github.com/iluwatar/java-design-patterns" target="_blank" rel="noopener">java-design-patterns</a></p>
<p><a href="https://www.cnblogs.com/WindSun/p/10223126.html" target="_blank" rel="noopener">设计模式的分类</a></p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>实践</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>frp翻墙文档</title>
    <url>/2021/08/25/2021-01-28-Android-apk-%E5%8E%8B%E7%BC%A9/</url>
    <content><![CDATA[<h1 id="frp"><a href="#frp" class="headerlink" title="frp"></a>frp</h1><p><a href="https://circleci.com/gh/fatedier/frp" target="_blank" rel="noopener"><img src="https://circleci.com/gh/fatedier/frp.svg?style=shield" alt="Build Status"></a><br><a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener"><img src="https://img.shields.io/github/tag/fatedier/frp.svg?label=release" alt="GitHub release"></a></p>
<p><a href="README.md">README</a> | <a href="README_zh.md">中文文档</a></p>
<h2 id="What-is-frp"><a href="#What-is-frp" class="headerlink" title="What is frp?"></a>What is frp?</h2><p>frp is a fast reverse proxy to help you expose a local server behind a NAT or firewall to the Internet. As of now, it supports <strong>TCP</strong> and <strong>UDP</strong>, as well as <strong>HTTP</strong> and <strong>HTTPS</strong> protocols, where requests can be forwarded to internal services by domain name.</p>
<p>frp also has a P2P connect mode.</p>
<h2 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h2><!-- vim-markdown-toc GFM -->

<ul>
<li><a href="#development-status">Development Status</a></li>
<li><a href="#architecture">Architecture</a></li>
<li><a href="#example-usage">Example Usage</a><ul>
<li><a href="#access-your-computer-in-lan-by-ssh">Access your computer in LAN by SSH</a></li>
<li><a href="#visit-your-web-service-in-lan-by-custom-domains">Visit your web service in LAN by custom domains</a></li>
<li><a href="#forward-dns-query-request">Forward DNS query request</a></li>
<li><a href="#forward-unix-domain-socket">Forward Unix domain socket</a></li>
<li><a href="#expose-a-simple-http-file-server">Expose a simple HTTP file server</a></li>
<li><a href="#enable-https-for-local-https-service">Enable HTTPS for local HTTP(S) service</a></li>
<li><a href="#expose-your-service-privately">Expose your service privately</a></li>
<li><a href="#p2p-mode">P2P Mode</a></li>
</ul>
</li>
<li><a href="#features">Features</a><ul>
<li><a href="#configuration-files">Configuration Files</a></li>
<li><a href="#using-environment-variables">Using Environment Variables</a></li>
<li><a href="#split-configures-into-different-files">Split Configures Into Different Files</a></li>
<li><a href="#dashboard">Dashboard</a></li>
<li><a href="#admin-ui">Admin UI</a></li>
<li><a href="#monitor">Monitor</a><ul>
<li><a href="#prometheus">Prometheus</a></li>
</ul>
</li>
<li><a href="#authenticating-the-client">Authenticating the Client</a><ul>
<li><a href="#token-authentication">Token Authentication</a></li>
<li><a href="#oidc-authentication">OIDC Authentication</a></li>
</ul>
</li>
<li><a href="#encryption-and-compression">Encryption and Compression</a><ul>
<li><a href="#tls">TLS</a></li>
</ul>
</li>
<li><a href="#hot-reloading-frpc-configuration">Hot-Reloading frpc configuration</a></li>
<li><a href="#get-proxy-status-from-client">Get proxy status from client</a></li>
<li><a href="#only-allowing-certain-ports-on-the-server">Only allowing certain ports on the server</a></li>
<li><a href="#port-reuse">Port Reuse</a></li>
<li><a href="#bandwidth-limit">Bandwidth Limit</a><ul>
<li><a href="#for-each-proxy">For Each Proxy</a></li>
</ul>
</li>
<li><a href="#tcp-stream-multiplexing">TCP Stream Multiplexing</a></li>
<li><a href="#support-kcp-protocol">Support KCP Protocol</a></li>
<li><a href="#connection-pooling">Connection Pooling</a></li>
<li><a href="#load-balancing">Load balancing</a></li>
<li><a href="#service-health-check">Service Health Check</a></li>
<li><a href="#rewriting-the-http-host-header">Rewriting the HTTP Host Header</a></li>
<li><a href="#setting-other-http-headers">Setting other HTTP Headers</a></li>
<li><a href="#get-real-ip">Get Real IP</a><ul>
<li><a href="#http-x-forwarded-for">HTTP X-Forwarded-For</a></li>
<li><a href="#proxy-protocol">Proxy Protocol</a></li>
</ul>
</li>
<li><a href="#require-http-basic-auth-password-for-web-services">Require HTTP Basic Auth (Password) for Web Services</a></li>
<li><a href="#custom-subdomain-names">Custom Subdomain Names</a></li>
<li><a href="#url-routing">URL Routing</a></li>
<li><a href="#tcp-port-multiplexing">TCP Port Multiplexing</a></li>
<li><a href="#connecting-to-frps-via-http-proxy">Connecting to frps via HTTP PROXY</a></li>
<li><a href="#range-ports-mapping">Range ports mapping</a></li>
<li><a href="#client-plugins">Client Plugins</a></li>
<li><a href="#server-manage-plugins">Server Manage Plugins</a></li>
</ul>
</li>
<li><a href="#development-plan">Development Plan</a></li>
<li><a href="#contributing">Contributing</a></li>
<li><a href="#donation">Donation</a><ul>
<li><a href="#alipay">AliPay</a></li>
<li><a href="#wechat-pay">Wechat Pay</a></li>
<li><a href="#paypal">PayPal</a></li>
</ul>
</li>
</ul>
<!-- vim-markdown-toc -->

<h2 id="Development-Status"><a href="#Development-Status" class="headerlink" title="Development Status"></a>Development Status</h2><p>frp is under development. Try the latest release version in the <code>master</code> branch, or use the <code>dev</code> branch for the version in development.</p>
<p><strong>The protocol might change at a release and we don’t promise backwards compatibility. Please check the release log when upgrading the client and the server.</strong></p>
<h2 id="Architecture"><a href="#Architecture" class="headerlink" title="Architecture"></a>Architecture</h2><p><img src="/doc/pic/architecture.png" alt="architecture"></p>
<h2 id="Example-Usage"><a href="#Example-Usage" class="headerlink" title="Example Usage"></a>Example Usage</h2><p>Firstly, download the latest programs from <a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener">Release</a> page according to your operating system and architecture.</p>
<p>Put <code>frps</code> and <code>frps.ini</code> onto your server A with public IP.</p>
<p>Put <code>frpc</code> and <code>frpc.ini</code> onto your server B in LAN (that can’t be connected from public Internet).</p>
<h3 id="Access-your-computer-in-LAN-by-SSH"><a href="#Access-your-computer-in-LAN-by-SSH" class="headerlink" title="Access your computer in LAN by SSH"></a>Access your computer in LAN by SSH</h3><ol>
<li><p>Modify <code>frps.ini</code> on server A and set the <code>bind_port</code> to be connected to frp clients:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frps.ini
<span class="token selector">[common]</span>
<span class="token constant">bind_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Start <code>frps</code> on server A:</p>
<p><code>./frps -c ./frps.ini</code></p>
</li>
<li><p>On server B, modify <code>frpc.ini</code> to put in your <code>frps</code> server public IP as <code>server_addr</code> field:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span>
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>

<span class="token selector">[ssh]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span>
<span class="token constant">local_ip</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 22</span>
<span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<p>Note that <code>local_port</code> (listened on client) and <code>remote_port</code> (exposed on server) are for traffic goes in/out the frp system, whereas <code>server_port</code> is used between frps.</p>
<ol start="4">
<li><p>Start <code>frpc</code> on server B:</p>
<p><code>./frpc -c ./frpc.ini</code></p>
</li>
<li><p>From another machine, SSH to server B like this (assuming that username is <code>test</code>):</p>
<p><code>ssh -oPort=6000 test@x.x.x.x</code></p>
</li>
</ol>
<h3 id="Visit-your-web-service-in-LAN-by-custom-domains"><a href="#Visit-your-web-service-in-LAN-by-custom-domains" class="headerlink" title="Visit your web service in LAN by custom domains"></a>Visit your web service in LAN by custom domains</h3><p>Sometimes we want to expose a local web service behind a NAT network to others for testing with your own domain name and unfortunately we can’t resolve a domain name to a local IP.</p>
<p>However, we can expose an HTTP(S) service using frp.</p>
<ol>
<li><p>Modify <code>frps.ini</code>, set the vhost HTTP port to 8080:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frps.ini
<span class="token selector">[common]</span>
<span class="token constant">bind_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>
<span class="token constant">vhost_http_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 8080</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Start <code>frps</code>:</p>
<p><code>./frps -c ./frps.ini</code></p>
</li>
<li><p>Modify <code>frpc.ini</code> and set <code>server_addr</code> to the IP address of the remote frps server. The <code>local_port</code> is the port of your web service:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span>
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>

<span class="token selector">[web]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> http</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 80</span>
<span class="token constant">custom_domains</span> <span class="token attr-value"><span class="token punctuation">=</span> www.example.com</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Start <code>frpc</code>:</p>
<p><code>./frpc -c ./frpc.ini</code></p>
</li>
<li><p>Resolve A record of <code>www.example.com</code> to the public IP of the remote frps server or CNAME record to your origin domain.</p>
</li>
<li><p>Now visit your local web service using url <code>http://www.example.com:8080</code>.</p>
</li>
</ol>
<h3 id="Forward-DNS-query-request"><a href="#Forward-DNS-query-request" class="headerlink" title="Forward DNS query request"></a>Forward DNS query request</h3><ol>
<li><p>Modify <code>frps.ini</code>:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frps.ini
<span class="token selector">[common]</span>
<span class="token constant">bind_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Start <code>frps</code>:</p>
<p><code>./frps -c ./frps.ini</code></p>
</li>
<li><p>Modify <code>frpc.ini</code> and set <code>server_addr</code> to the IP address of the remote frps server, forward DNS query request to Google Public DNS server <code>8.8.8.8:53</code>:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span>
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>

<span class="token selector">[dns]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> udp</span>
<span class="token constant">local_ip</span> <span class="token attr-value"><span class="token punctuation">=</span> 8.8.8.8</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 53</span>
<span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Start frpc:</p>
<p><code>./frpc -c ./frpc.ini</code></p>
</li>
<li><p>Test DNS resolution using <code>dig</code> command:</p>
<p><code>dig @x.x.x.x -p 6000 www.google.com</code></p>
</li>
</ol>
<h3 id="Forward-Unix-domain-socket"><a href="#Forward-Unix-domain-socket" class="headerlink" title="Forward Unix domain socket"></a>Forward Unix domain socket</h3><p>Expose a Unix domain socket (e.g. the Docker daemon socket) as TCP.</p>
<p>Configure <code>frps</code> same as above.</p>
<ol>
<li><p>Start <code>frpc</code> with configuration:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span>
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>

<span class="token selector">[unix_domain_socket]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span>
<span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000</span>
<span class="token constant">plugin</span> <span class="token attr-value"><span class="token punctuation">=</span> unix_domain_socket</span>
<span class="token constant">plugin_unix_path</span> <span class="token attr-value"><span class="token punctuation">=</span> /var/run/docker.sock</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Test: Get Docker version using <code>curl</code>:</p>
<p><code>curl http://x.x.x.x:6000/version</code></p>
</li>
</ol>
<h3 id="Expose-a-simple-HTTP-file-server"><a href="#Expose-a-simple-HTTP-file-server" class="headerlink" title="Expose a simple HTTP file server"></a>Expose a simple HTTP file server</h3><p>Browser your files stored in the LAN, from public Internet.</p>
<p>Configure <code>frps</code> same as above.</p>
<ol>
<li><p>Start <code>frpc</code> with configuration:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span>
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>

<span class="token selector">[test_static_file]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span>
<span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000</span>
<span class="token constant">plugin</span> <span class="token attr-value"><span class="token punctuation">=</span> static_file</span>
<span class="token constant">plugin_local_path</span> <span class="token attr-value"><span class="token punctuation">=</span> /tmp/files</span>
<span class="token constant">plugin_strip_prefix</span> <span class="token attr-value"><span class="token punctuation">=</span> static</span>
<span class="token constant">plugin_http_user</span> <span class="token attr-value"><span class="token punctuation">=</span> abc</span>
<span class="token constant">plugin_http_passwd</span> <span class="token attr-value"><span class="token punctuation">=</span> abc</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Visit <code>http://x.x.x.x:6000/static/</code> from your browser and specify correct user and password to view files in <code>/tmp/files</code> on the <code>frpc</code> machine.</p>
</li>
</ol>
<h3 id="Enable-HTTPS-for-local-HTTP-S-service"><a href="#Enable-HTTPS-for-local-HTTP-S-service" class="headerlink" title="Enable HTTPS for local HTTP(S) service"></a>Enable HTTPS for local HTTP(S) service</h3><p>You may substitute <code>https2https</code> for the plugin, and point the <code>plugin_local_addr</code> to a HTTPS endpoint.</p>
<ol>
<li><p>Start <code>frpc</code> with configuration:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span>
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>

<span class="token selector">[test_https2http]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> https</span>
<span class="token constant">custom_domains</span> <span class="token attr-value"><span class="token punctuation">=</span> test.example.com</span>

<span class="token constant">plugin</span> <span class="token attr-value"><span class="token punctuation">=</span> https2http</span>
<span class="token constant">plugin_local_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1:80</span>
<span class="token constant">plugin_crt_path</span> <span class="token attr-value"><span class="token punctuation">=</span> ./server.crt</span>
<span class="token constant">plugin_key_path</span> <span class="token attr-value"><span class="token punctuation">=</span> ./server.key</span>
<span class="token constant">plugin_host_header_rewrite</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span>
<span class="token constant">plugin_header_X-From-Where</span> <span class="token attr-value"><span class="token punctuation">=</span> frp</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Visit <code>https://test.example.com</code>.</p>
</li>
</ol>
<h3 id="Expose-your-service-privately"><a href="#Expose-your-service-privately" class="headerlink" title="Expose your service privately"></a>Expose your service privately</h3><p>Some services will be at risk if exposed directly to the public network. With <strong>STCP</strong> (secret TCP) mode, a preshared key is needed to access the service from another client.</p>
<p>Configure <code>frps</code> same as above.</p>
<ol>
<li><p>Start <code>frpc</code> on machine B with the following config. This example is for exposing the SSH service (port 22), and note the <code>sk</code> field for the preshared key, and that the <code>remote_port</code> field is removed here:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span>
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>

<span class="token selector">[secret_ssh]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> stcp</span>
<span class="token constant">sk</span> <span class="token attr-value"><span class="token punctuation">=</span> abcdefg</span>
<span class="token constant">local_ip</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 22</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Start another <code>frpc</code> (typically on another machine C) with the following config to access the SSH service with a security key (<code>sk</code> field):</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span>
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>

<span class="token selector">[secret_ssh_visitor]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> stcp</span>
<span class="token constant">role</span> <span class="token attr-value"><span class="token punctuation">=</span> visitor</span>
<span class="token constant">server_name</span> <span class="token attr-value"><span class="token punctuation">=</span> secret_ssh</span>
<span class="token constant">sk</span> <span class="token attr-value"><span class="token punctuation">=</span> abcdefg</span>
<span class="token constant">bind_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span>
<span class="token constant">bind_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>On machine C, connect to SSH on machine B, using this command:</p>
<p><code>ssh -oPort=6000 127.0.0.1</code></p>
</li>
</ol>
<h3 id="P2P-Mode"><a href="#P2P-Mode" class="headerlink" title="P2P Mode"></a>P2P Mode</h3><p><strong>xtcp</strong> is designed for transmitting large amounts of data directly between clients. A frps server is still needed, as P2P here only refers the actual data transmission.</p>
<p>Note it can’t penetrate all types of NAT devices. You might want to fallback to <strong>stcp</strong> if <strong>xtcp</strong> doesn’t work.</p>
<ol>
<li><p>In <code>frps.ini</code> configure a UDP port for xtcp:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frps.ini
<span class="token constant">bind_udp_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7001</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>Start <code>frpc</code> on machine B, expose the SSH port. Note that <code>remote_port</code> field is removed:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span>
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>

<span class="token selector">[p2p_ssh]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> xtcp</span>
<span class="token constant">sk</span> <span class="token attr-value"><span class="token punctuation">=</span> abcdefg</span>
<span class="token constant">local_ip</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 22</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Start another <code>frpc</code> (typically on another machine C) with the config to connect to SSH using P2P mode:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span>
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>

<span class="token selector">[p2p_ssh_visitor]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> xtcp</span>
<span class="token constant">role</span> <span class="token attr-value"><span class="token punctuation">=</span> visitor</span>
<span class="token constant">server_name</span> <span class="token attr-value"><span class="token punctuation">=</span> p2p_ssh</span>
<span class="token constant">sk</span> <span class="token attr-value"><span class="token punctuation">=</span> abcdefg</span>
<span class="token constant">bind_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span>
<span class="token constant">bind_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>On machine C, connect to SSH on machine B, using this command:</p>
<p><code>ssh -oPort=6000 127.0.0.1</code></p>
</li>
</ol>
<h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><h3 id="Configuration-Files"><a href="#Configuration-Files" class="headerlink" title="Configuration Files"></a>Configuration Files</h3><p>Read the full example configuration files to find out even more features not described here.</p>
<p><a href="./conf/frps_full.ini">Full configuration file for frps (Server)</a></p>
<p><a href="./conf/frpc_full.ini">Full configuration file for frpc (Client)</a></p>
<h3 id="Using-Environment-Variables"><a href="#Using-Environment-Variables" class="headerlink" title="Using Environment Variables"></a>Using Environment Variables</h3><p>Environment variables can be referenced in the configuration file, using Go’s standard format:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> {{ .Envs.FRP_SERVER_ADDR }}</span>
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>

<span class="token selector">[ssh]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span>
<span class="token constant">local_ip</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 22</span>
<span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> {{ .Envs.FRP_SSH_REMOTE_PORT }}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>With the config above, variables can be passed into <code>frpc</code> program like this:</p>
<pre><code>export FRP_SERVER_ADDR="x.x.x.x"
export FRP_SSH_REMOTE_PORT="6000"
./frpc -c ./frpc.ini</code></pre><p><code>frpc</code> will render configuration file template using OS environment variables. Remember to prefix your reference with <code>.Envs</code>.</p>
<h3 id="Split-Configures-Into-Different-Files"><a href="#Split-Configures-Into-Different-Files" class="headerlink" title="Split Configures Into Different Files"></a>Split Configures Into Different Files</h3><p>You can split multiple proxy configs into different files and include them in the main file.</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span>
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>
<span class="token constant">includes</span><span class="token attr-value"><span class="token punctuation">=</span>./confd/*.ini</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-ini"><code class="language-ini"># ./confd/test.ini
<span class="token selector">[ssh]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span>
<span class="token constant">local_ip</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 22</span>
<span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Dashboard"><a href="#Dashboard" class="headerlink" title="Dashboard"></a>Dashboard</h3><p>Check frp’s status and proxies’ statistics information by Dashboard.</p>
<p>Configure a port for dashboard to enable this feature:</p>
<pre class="line-numbers language-ini"><code class="language-ini"><span class="token selector">[common]</span>
<span class="token constant">dashboard_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7500</span>
# dashboard's username and password are both optional
<span class="token constant">dashboard_user</span> <span class="token attr-value"><span class="token punctuation">=</span> admin</span>
<span class="token constant">dashboard_pwd</span> <span class="token attr-value"><span class="token punctuation">=</span> admin</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Then visit <code>http://[server_addr]:7500</code> to see the dashboard, with username and password both being <code>admin</code>.</p>
<p><img src="/doc/pic/dashboard.png" alt="dashboard"></p>
<h3 id="Admin-UI"><a href="#Admin-UI" class="headerlink" title="Admin UI"></a>Admin UI</h3><p>The Admin UI helps you check and manage frpc’s configuration.</p>
<p>Configure an address for admin UI to enable this feature:</p>
<pre class="line-numbers language-ini"><code class="language-ini"><span class="token selector">[common]</span>
<span class="token constant">admin_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span>
<span class="token constant">admin_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7400</span>
<span class="token constant">admin_user</span> <span class="token attr-value"><span class="token punctuation">=</span> admin</span>
<span class="token constant">admin_pwd</span> <span class="token attr-value"><span class="token punctuation">=</span> admin</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Then visit <code>http://127.0.0.1:7400</code> to see admin UI, with username and password both being <code>admin</code>.</p>
<h3 id="Monitor"><a href="#Monitor" class="headerlink" title="Monitor"></a>Monitor</h3><p>When dashboard is enabled, frps will save monitor data in cache. It will be cleared after process restart.</p>
<p>Prometheus is also supported.</p>
<h4 id="Prometheus"><a href="#Prometheus" class="headerlink" title="Prometheus"></a>Prometheus</h4><p>Enable dashboard first, then configure <code>enable_prometheus = true</code> in <code>frps.ini</code>.</p>
<p><code>http://{dashboard_addr}/metrics</code> will provide prometheus monitor data.</p>
<h3 id="Authenticating-the-Client"><a href="#Authenticating-the-Client" class="headerlink" title="Authenticating the Client"></a>Authenticating the Client</h3><p>There are 2 authentication methods to authenticate frpc with frps. </p>
<p>You can decide which one to use by configuring <code>authentication_method</code> under <code>[common]</code> in <code>frpc.ini</code> and <code>frps.ini</code>.</p>
<p>Configuring <code>authenticate_heartbeats = true</code> under <code>[common]</code> will use the configured authentication method to add and validate authentication on every heartbeat between frpc and frps.</p>
<p>Configuring <code>authenticate_new_work_conns = true</code> under <code>[common]</code> will do the same for every new work connection between frpc and frps.</p>
<h4 id="Token-Authentication"><a href="#Token-Authentication" class="headerlink" title="Token Authentication"></a>Token Authentication</h4><p>When specifying <code>authentication_method = token</code> under <code>[common]</code> in <code>frpc.ini</code> and <code>frps.ini</code> - token based authentication will be used.</p>
<p>Make sure to specify the same <code>token</code> in the <code>[common]</code> section in <code>frps.ini</code> and <code>frpc.ini</code> for frpc to pass frps validation</p>
<h4 id="OIDC-Authentication"><a href="#OIDC-Authentication" class="headerlink" title="OIDC Authentication"></a>OIDC Authentication</h4><p>When specifying <code>authentication_method = oidc</code> under <code>[common]</code> in <code>frpc.ini</code> and <code>frps.ini</code> - OIDC based authentication will be used.</p>
<p>OIDC stands for OpenID Connect, and the flow used is called <a href="https://tools.ietf.org/html/rfc6749#section-4.4" target="_blank" rel="noopener">Client Credentials Grant</a>.</p>
<p>To use this authentication type - configure <code>frpc.ini</code> and <code>frps.ini</code> as follows:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frps.ini
<span class="token selector">[common]</span>
<span class="token constant">authentication_method</span> <span class="token attr-value"><span class="token punctuation">=</span> oidc</span>
<span class="token constant">oidc_issuer</span> <span class="token attr-value"><span class="token punctuation">=</span> https://example-oidc-issuer.com/</span>
<span class="token constant">oidc_audience</span> <span class="token attr-value"><span class="token punctuation">=</span> https://oidc-audience.com/.default</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">authentication_method</span> <span class="token attr-value"><span class="token punctuation">=</span> oidc</span>
<span class="token constant">oidc_client_id</span> <span class="token attr-value"><span class="token punctuation">=</span> 98692467-37de-409a-9fac-bb2585826f18 # Replace with OIDC client ID</span>
<span class="token constant">oidc_client_secret</span> <span class="token attr-value"><span class="token punctuation">=</span> oidc_secret</span>
<span class="token constant">oidc_audience</span> <span class="token attr-value"><span class="token punctuation">=</span> https://oidc-audience.com/.default</span>
<span class="token constant">oidc_token_endpoint_url</span> <span class="token attr-value"><span class="token punctuation">=</span> https://example-oidc-endpoint.com/oauth2/v2.0/token</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Encryption-and-Compression"><a href="#Encryption-and-Compression" class="headerlink" title="Encryption and Compression"></a>Encryption and Compression</h3><p>The features are off by default. You can turn on encryption and/or compression:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[ssh]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 22</span>
<span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000</span>
<span class="token constant">use_encryption</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span>
<span class="token constant">use_compression</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="TLS"><a href="#TLS" class="headerlink" title="TLS"></a>TLS</h4><p>frp supports the TLS protocol between <code>frpc</code> and <code>frps</code> since v0.25.0.</p>
<p>For port multiplexing, frp sends a first byte <code>0x17</code> to dial a TLS connection.</p>
<p>Configure <code>tls_enable = true</code> in the <code>[common]</code> section to <code>frpc.ini</code> to enable this feature.</p>
<p>To <strong>enforce</strong> <code>frps</code> to only accept TLS connections - configure <code>tls_only = true</code> in the <code>[common]</code> section in <code>frps.ini</code>. <strong>This is optional.</strong></p>
<p><strong><code>frpc</code> TLS settings (under the <code>[common]</code> section):</strong></p>
<pre class="line-numbers language-ini"><code class="language-ini"><span class="token constant">tls_enable</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span>
<span class="token constant">tls_cert_file</span> <span class="token attr-value"><span class="token punctuation">=</span> certificate.crt</span>
<span class="token constant">tls_key_file</span> <span class="token attr-value"><span class="token punctuation">=</span> certificate.key</span>
<span class="token constant">tls_trusted_ca_file</span> <span class="token attr-value"><span class="token punctuation">=</span> ca.crt</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong><code>frps</code> TLS settings (under the <code>[common]</code> section):</strong></p>
<pre class="line-numbers language-ini"><code class="language-ini"><span class="token constant">tls_only</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span>
<span class="token constant">tls_enable</span> <span class="token attr-value"><span class="token punctuation">=</span> true</span>
<span class="token constant">tls_cert_file</span> <span class="token attr-value"><span class="token punctuation">=</span> certificate.crt</span>
<span class="token constant">tls_key_file</span> <span class="token attr-value"><span class="token punctuation">=</span> certificate.key</span>
<span class="token constant">tls_trusted_ca_file</span> <span class="token attr-value"><span class="token punctuation">=</span> ca.crt</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>You will need <strong>a root CA cert</strong> and <strong>at least one SSL/TLS certificate</strong>. It <strong>can</strong> be self-signed or regular (such as Let’s Encrypt or another SSL/TLS certificate provider).</p>
<p>If you using <code>frp</code> via IP address and not hostname, make sure to set the appropriate IP address in the Subject Alternative Name (SAN) area when generating SSL/TLS Certificates.</p>
<p>Given an example:</p>
<ul>
<li><p>Prepare openssl config file. It exists at <code>/etc/pki/tls/openssl.cnf</code> in Linux System and <code>/System/Library/OpenSSL/openssl.cnf</code> in MacOS, and you can copy it to current path, like <code>cp /etc/pki/tls/openssl.cnf ./my-openssl.cnf</code>. If not, you can build it by yourself, like:</p>
<pre><code>cat &gt; my-openssl.cnf &lt;&lt; EOF
[ ca ]
default_ca = CA_default
[ CA_default ]
x509_extensions = usr_cert
[ req ]
default_bits        = 2048
default_md          = sha256
default_keyfile     = privkey.pem
distinguished_name  = req_distinguished_name
attributes          = req_attributes
x509_extensions     = v3_ca
string_mask         = utf8only
[ req_distinguished_name ]
[ req_attributes ]
[ usr_cert ]
basicConstraints       = CA:FALSE
nsComment              = "OpenSSL Generated Certificate"
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
[ v3_ca ]
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = CA:true
EOF</code></pre></li>
<li><p>build ca certificates:</p>
<pre><code>openssl genrsa -out ca.key 2048
openssl req -x509 -new -nodes -key ca.key -subj "/CN=example.ca.com" -days 5000 -out ca.crt</code></pre></li>
<li><p>build frps certificates:</p>
<pre><code>openssl genrsa -out server.key 2048
</code></pre></li>
</ul>
<p>openssl req -new -sha256 -key server.key <br>    -subj “/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=server.com” <br>    -reqexts SAN <br>    -config &lt;(cat my-openssl.cnf &lt;(printf “\n[SAN]\nsubjectAltName=DNS:localhost,IP:127.0.0.1,DNS:example.server.com”)) <br>    -out server.csr</p>
<p>openssl x509 -req -days 365 <br>    -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial <br>    -extfile &lt;(printf “subjectAltName=DNS:localhost,IP:127.0.0.1,DNS:example.server.com”) <br>    -out server.crt</p>
<pre><code>
* build frpc certificates：</code></pre><p>openssl genrsa -out client.key 2048<br>openssl req -new -sha256 -key client.key <br>    -subj “/C=XX/ST=DEFAULT/L=DEFAULT/O=DEFAULT/CN=client.com” <br>    -reqexts SAN <br>    -config &lt;(cat my-openssl.cnf &lt;(printf “\n[SAN]\nsubjectAltName=DNS:client.com,DNS:example.client.com”)) <br>    -out client.csr</p>
<p>openssl x509 -req -days 365 <br>    -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial <br>    -extfile &lt;(printf “subjectAltName=DNS:client.com,DNS:example.client.com”) <br>    -out client.crt</p>
<pre><code>
### Hot-Reloading frpc configuration

The `admin_addr` and `admin_port` fields are required for enabling HTTP API:

```ini
# frpc.ini
[common]
admin_addr = 127.0.0.1
admin_port = 7400</code></pre><p>Then run command <code>frpc reload -c ./frpc.ini</code> and wait for about 10 seconds to let <code>frpc</code> create or update or remove proxies.</p>
<p><strong>Note that parameters in [common] section won’t be modified except ‘start’.</strong></p>
<p>You can run command <code>frpc verify -c ./frpc.ini</code> before reloading to check if there are config errors.</p>
<h3 id="Get-proxy-status-from-client"><a href="#Get-proxy-status-from-client" class="headerlink" title="Get proxy status from client"></a>Get proxy status from client</h3><p>Use <code>frpc status -c ./frpc.ini</code> to get status of all proxies. The <code>admin_addr</code> and <code>admin_port</code> fields are required for enabling HTTP API.</p>
<h3 id="Only-allowing-certain-ports-on-the-server"><a href="#Only-allowing-certain-ports-on-the-server" class="headerlink" title="Only allowing certain ports on the server"></a>Only allowing certain ports on the server</h3><p><code>allow_ports</code> in <code>frps.ini</code> is used to avoid abuse of ports:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frps.ini
<span class="token selector">[common]</span>
<span class="token constant">allow_ports</span> <span class="token attr-value"><span class="token punctuation">=</span> 2000-3000,3001,3003,4000-50000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><code>allow_ports</code> consists of specific ports or port ranges (lowest port number, dash <code>-</code>, highest port number), separated by comma <code>,</code>.</p>
<h3 id="Port-Reuse"><a href="#Port-Reuse" class="headerlink" title="Port Reuse"></a>Port Reuse</h3><p><code>vhost_http_port</code> and <code>vhost_https_port</code> in frps can use same port with <code>bind_port</code>. frps will detect the connection’s protocol and handle it correspondingly.</p>
<p>We would like to try to allow multiple proxies bind a same remote port with different protocols in the future.</p>
<h3 id="Bandwidth-Limit"><a href="#Bandwidth-Limit" class="headerlink" title="Bandwidth Limit"></a>Bandwidth Limit</h3><h4 id="For-Each-Proxy"><a href="#For-Each-Proxy" class="headerlink" title="For Each Proxy"></a>For Each Proxy</h4><pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[ssh]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 22</span>
<span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000</span>
<span class="token constant">bandwidth_limit</span> <span class="token attr-value"><span class="token punctuation">=</span> 1MB</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Set <code>bandwidth_limit</code> in each proxy’s configure to enable this feature. Supported units are <code>MB</code> and <code>KB</code>.</p>
<h3 id="TCP-Stream-Multiplexing"><a href="#TCP-Stream-Multiplexing" class="headerlink" title="TCP Stream Multiplexing"></a>TCP Stream Multiplexing</h3><p>frp supports tcp stream multiplexing since v0.10.0 like HTTP2 Multiplexing, in which case all logic connections to the same frpc are multiplexed into the same TCP connection.</p>
<p>You can disable this feature by modify <code>frps.ini</code> and <code>frpc.ini</code>:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frps.ini and frpc.ini, must be same
<span class="token selector">[common]</span>
<span class="token constant">tcp_mux</span> <span class="token attr-value"><span class="token punctuation">=</span> false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="Support-KCP-Protocol"><a href="#Support-KCP-Protocol" class="headerlink" title="Support KCP Protocol"></a>Support KCP Protocol</h3><p>KCP is a fast and reliable protocol that can achieve the transmission effect of a reduction of the average latency by 30% to 40% and reduction of the maximum delay by a factor of three, at the cost of 10% to 20% more bandwidth wasted than TCP.</p>
<p>KCP mode uses UDP as the underlying transport. Using KCP in frp:</p>
<ol>
<li><p>Enable KCP in frps:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frps.ini
<span class="token selector">[common]</span>
<span class="token constant">bind_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>
# Specify a UDP port for KCP.
<span class="token constant">kcp_bind_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>The <code>kcp_bind_port</code> number can be the same number as <code>bind_port</code>, since <code>bind_port</code> field specifies a TCP port.</p>
</li>
<li><p>Configure <code>frpc.ini</code> to use KCP to connect to frps:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span>
# Same as the 'kcp_bind_port' in frps.ini
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>
<span class="token constant">protocol</span> <span class="token attr-value"><span class="token punctuation">=</span> kcp</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="Connection-Pooling"><a href="#Connection-Pooling" class="headerlink" title="Connection Pooling"></a>Connection Pooling</h3><p>By default, frps creates a new frpc connection to the backend service upon a user request. With connection pooling, frps keeps a certain number of pre-established connections, reducing the time needed to establish a connection.</p>
<p>This feature is suitable for a large number of short connections.</p>
<ol>
<li><p>Configure the limit of pool count each proxy can use in <code>frps.ini</code>:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frps.ini
<span class="token selector">[common]</span>
<span class="token constant">max_pool_count</span> <span class="token attr-value"><span class="token punctuation">=</span> 5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Enable and specify the number of connection pool:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">pool_count</span> <span class="token attr-value"><span class="token punctuation">=</span> 1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="Load-balancing"><a href="#Load-balancing" class="headerlink" title="Load balancing"></a>Load balancing</h3><p>Load balancing is supported by <code>group</code>.</p>
<p>This feature is only available for types <code>tcp</code>, <code>http</code>, <code>tcpmux</code> now.</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[test1]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 8080</span>
<span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 80</span>
<span class="token constant">group</span> <span class="token attr-value"><span class="token punctuation">=</span> web</span>
<span class="token constant">group_key</span> <span class="token attr-value"><span class="token punctuation">=</span> 123</span>

<span class="token selector">[test2]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 8081</span>
<span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 80</span>
<span class="token constant">group</span> <span class="token attr-value"><span class="token punctuation">=</span> web</span>
<span class="token constant">group_key</span> <span class="token attr-value"><span class="token punctuation">=</span> 123</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>group_key</code> is used for authentication.</p>
<p>Connections to port 80 will be dispatched to proxies in the same group randomly.</p>
<p>For type <code>tcp</code>, <code>remote_port</code> in the same group should be the same.</p>
<p>For type <code>http</code>, <code>custom_domains</code>, <code>subdomain</code>, <code>locations</code> should be the same.</p>
<h3 id="Service-Health-Check"><a href="#Service-Health-Check" class="headerlink" title="Service Health Check"></a>Service Health Check</h3><p>Health check feature can help you achieve high availability with load balancing.</p>
<p>Add <code>health_check_type = tcp</code> or <code>health_check_type = http</code> to enable health check.</p>
<p>With health check type <strong>tcp</strong>, the service port will be pinged (TCPing):</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[test1]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 22</span>
<span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000</span>
# Enable TCP health check
<span class="token constant">health_check_type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span>
# TCPing timeout seconds
<span class="token constant">health_check_timeout_s</span> <span class="token attr-value"><span class="token punctuation">=</span> 3</span>
# If health check failed 3 times in a row, the proxy will be removed from frps
<span class="token constant">health_check_max_failed</span> <span class="token attr-value"><span class="token punctuation">=</span> 3</span>
# A health check every 10 seconds
<span class="token constant">health_check_interval_s</span> <span class="token attr-value"><span class="token punctuation">=</span> 10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>With health check type <strong>http</strong>, an HTTP request will be sent to the service and an HTTP 2xx OK response is expected:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[web]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> http</span>
<span class="token constant">local_ip</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 80</span>
<span class="token constant">custom_domains</span> <span class="token attr-value"><span class="token punctuation">=</span> test.example.com</span>
# Enable HTTP health check
<span class="token constant">health_check_type</span> <span class="token attr-value"><span class="token punctuation">=</span> http</span>
# frpc will send a GET request to '/status'
# and expect an HTTP 2xx OK response
<span class="token constant">health_check_url</span> <span class="token attr-value"><span class="token punctuation">=</span> /status</span>
<span class="token constant">health_check_timeout_s</span> <span class="token attr-value"><span class="token punctuation">=</span> 3</span>
<span class="token constant">health_check_max_failed</span> <span class="token attr-value"><span class="token punctuation">=</span> 3</span>
<span class="token constant">health_check_interval_s</span> <span class="token attr-value"><span class="token punctuation">=</span> 10</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Rewriting-the-HTTP-Host-Header"><a href="#Rewriting-the-HTTP-Host-Header" class="headerlink" title="Rewriting the HTTP Host Header"></a>Rewriting the HTTP Host Header</h3><p>By default frp does not modify the tunneled HTTP requests at all as it’s a byte-for-byte copy.</p>
<p>However, speaking of web servers and HTTP requests, your web server might rely on the <code>Host</code> HTTP header to determine the website to be accessed. frp can rewrite the <code>Host</code> header when forwarding the HTTP requests, with the <code>host_header_rewrite</code> field:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[web]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> http</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 80</span>
<span class="token constant">custom_domains</span> <span class="token attr-value"><span class="token punctuation">=</span> test.example.com</span>
<span class="token constant">host_header_rewrite</span> <span class="token attr-value"><span class="token punctuation">=</span> dev.example.com</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>The HTTP request will have the the <code>Host</code> header rewritten to <code>Host: dev.example.com</code> when it reaches the actual web server, although the request from the browser probably has <code>Host: test.example.com</code>.</p>
<h3 id="Setting-other-HTTP-Headers"><a href="#Setting-other-HTTP-Headers" class="headerlink" title="Setting other HTTP Headers"></a>Setting other HTTP Headers</h3><p>Similar to <code>Host</code>, You can override other HTTP request headers with proxy type <code>http</code>.</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[web]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> http</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 80</span>
<span class="token constant">custom_domains</span> <span class="token attr-value"><span class="token punctuation">=</span> test.example.com</span>
<span class="token constant">host_header_rewrite</span> <span class="token attr-value"><span class="token punctuation">=</span> dev.example.com</span>
<span class="token constant">header_X-From-Where</span> <span class="token attr-value"><span class="token punctuation">=</span> frp</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Note that parameter(s) prefixed with <code>header_</code> will be added to HTTP request headers.</p>
<p>In this example, it will set header <code>X-From-Where: frp</code> in the HTTP request.</p>
<h3 id="Get-Real-IP"><a href="#Get-Real-IP" class="headerlink" title="Get Real IP"></a>Get Real IP</h3><h4 id="HTTP-X-Forwarded-For"><a href="#HTTP-X-Forwarded-For" class="headerlink" title="HTTP X-Forwarded-For"></a>HTTP X-Forwarded-For</h4><p>This feature is for http proxy only.</p>
<p>You can get user’s real IP from HTTP request headers <code>X-Forwarded-For</code> and <code>X-Real-IP</code>.</p>
<h4 id="Proxy-Protocol"><a href="#Proxy-Protocol" class="headerlink" title="Proxy Protocol"></a>Proxy Protocol</h4><p>frp supports Proxy Protocol to send user’s real IP to local services. It support all types except UDP.</p>
<p>Here is an example for https service:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[web]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> https</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 443</span>
<span class="token constant">custom_domains</span> <span class="token attr-value"><span class="token punctuation">=</span> test.example.com</span>

# now v1 and v2 are supported
<span class="token constant">proxy_protocol_version</span> <span class="token attr-value"><span class="token punctuation">=</span> v2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>You can enable Proxy Protocol support in nginx to expose user’s real IP in HTTP header <code>X-Real-IP</code>, and then read <code>X-Real-IP</code> header in your web service for the real IP.</p>
<h3 id="Require-HTTP-Basic-Auth-Password-for-Web-Services"><a href="#Require-HTTP-Basic-Auth-Password-for-Web-Services" class="headerlink" title="Require HTTP Basic Auth (Password) for Web Services"></a>Require HTTP Basic Auth (Password) for Web Services</h3><p>Anyone who can guess your tunnel URL can access your local web server unless you protect it with a password.</p>
<p>This enforces HTTP Basic Auth on all requests with the username and password specified in frpc’s configure file.</p>
<p>It can only be enabled when proxy type is http.</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[web]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> http</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 80</span>
<span class="token constant">custom_domains</span> <span class="token attr-value"><span class="token punctuation">=</span> test.example.com</span>
<span class="token constant">http_user</span> <span class="token attr-value"><span class="token punctuation">=</span> abc</span>
<span class="token constant">http_pwd</span> <span class="token attr-value"><span class="token punctuation">=</span> abc</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Visit <code>http://test.example.com</code> in the browser and now you are prompted to enter the username and password.</p>
<h3 id="Custom-Subdomain-Names"><a href="#Custom-Subdomain-Names" class="headerlink" title="Custom Subdomain Names"></a>Custom Subdomain Names</h3><p>It is convenient to use <code>subdomain</code> configure for http and https types when many people share one frps server.</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frps.ini
<span class="token constant">subdomain_host</span> <span class="token attr-value"><span class="token punctuation">=</span> frps.com</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>Resolve <code>*.frps.com</code> to the frps server’s IP. This is usually called a Wildcard DNS record.</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[web]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> http</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 80</span>
<span class="token constant">subdomain</span> <span class="token attr-value"><span class="token punctuation">=</span> test</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Now you can visit your web service on <code>test.frps.com</code>.</p>
<p>Note that if <code>subdomain_host</code> is not empty, <code>custom_domains</code> should not be the subdomain of <code>subdomain_host</code>.</p>
<h3 id="URL-Routing"><a href="#URL-Routing" class="headerlink" title="URL Routing"></a>URL Routing</h3><p>frp supports forwarding HTTP requests to different backend web services by url routing.</p>
<p><code>locations</code> specifies the prefix of URL used for routing. frps first searches for the most specific prefix location given by literal strings regardless of the listed order.</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[web01]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> http</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 80</span>
<span class="token constant">custom_domains</span> <span class="token attr-value"><span class="token punctuation">=</span> web.example.com</span>
<span class="token constant">locations</span> <span class="token attr-value"><span class="token punctuation">=</span> /</span>

<span class="token selector">[web02]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> http</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 81</span>
<span class="token constant">custom_domains</span> <span class="token attr-value"><span class="token punctuation">=</span> web.example.com</span>
<span class="token constant">locations</span> <span class="token attr-value"><span class="token punctuation">=</span> /news,/about</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>HTTP requests with URL prefix <code>/news</code> or <code>/about</code> will be forwarded to <strong>web02</strong> and other requests to <strong>web01</strong>.</p>
<h3 id="TCP-Port-Multiplexing"><a href="#TCP-Port-Multiplexing" class="headerlink" title="TCP Port Multiplexing"></a>TCP Port Multiplexing</h3><p>frp supports receiving TCP sockets directed to different proxies on a single port on frps, similar to <code>vhost_http_port</code> and <code>vhost_https_port</code>.</p>
<p>The only supported TCP port multiplexing method available at the moment is <code>httpconnect</code> - HTTP CONNECT tunnel.</p>
<p>When setting <code>tcpmux_httpconnect_port</code> to anything other than 0 in frps under <code>[common]</code>, frps will listen on this port for HTTP CONNECT requests.</p>
<p>The host of the HTTP CONNECT request will be used to match the proxy in frps. Proxy hosts can be configured in frpc by configuring <code>custom_domain</code> and / or <code>subdomain</code> under <code>type = tcpmux</code> proxies, when <code>multiplexer = httpconnect</code>.</p>
<p>For example:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frps.ini
<span class="token selector">[common]</span>
<span class="token constant">bind_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>
<span class="token constant">tcpmux_httpconnect_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 1337</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span>
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>

<span class="token selector">[proxy1]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcpmux</span>
<span class="token constant">multiplexer</span> <span class="token attr-value"><span class="token punctuation">=</span> httpconnect</span>
<span class="token constant">custom_domains</span> <span class="token attr-value"><span class="token punctuation">=</span> test1</span>

<span class="token selector">[proxy2]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcpmux</span>
<span class="token constant">multiplexer</span> <span class="token attr-value"><span class="token punctuation">=</span> httpconnect</span>
<span class="token constant">custom_domains</span> <span class="token attr-value"><span class="token punctuation">=</span> test2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>In the above configuration - frps can be contacted on port 1337 with a HTTP CONNECT header such as:</p>
<pre><code>CONNECT test1 HTTP/1.1\r\n\r\n</code></pre><p>and the connection will be routed to <code>proxy1</code>.</p>
<h3 id="Connecting-to-frps-via-HTTP-PROXY"><a href="#Connecting-to-frps-via-HTTP-PROXY" class="headerlink" title="Connecting to frps via HTTP PROXY"></a>Connecting to frps via HTTP PROXY</h3><p>frpc can connect to frps using HTTP proxy if you set OS environment variable <code>HTTP_PROXY</code>, or if <code>http_proxy</code> is set in frpc.ini file.</p>
<p>It only works when protocol is tcp.</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[common]</span>
<span class="token constant">server_addr</span> <span class="token attr-value"><span class="token punctuation">=</span> x.x.x.x</span>
<span class="token constant">server_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 7000</span>
<span class="token constant">http_proxy</span> <span class="token attr-value"><span class="token punctuation">=</span> http://user:pwd@192.168.1.128:8080</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Range-ports-mapping"><a href="#Range-ports-mapping" class="headerlink" title="Range ports mapping"></a>Range ports mapping</h3><p>Proxy with names that start with <code>range:</code> will support mapping range ports.</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[range:test_tcp]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span>
<span class="token constant">local_ip</span> <span class="token attr-value"><span class="token punctuation">=</span> 127.0.0.1</span>
<span class="token constant">local_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000-6006,6007</span>
<span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000-6006,6007</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>frpc will generate 8 proxies like <code>test_tcp_0</code>, <code>test_tcp_1</code>, …, <code>test_tcp_7</code>.</p>
<h3 id="Client-Plugins"><a href="#Client-Plugins" class="headerlink" title="Client Plugins"></a>Client Plugins</h3><p>frpc only forwards requests to local TCP or UDP ports by default.</p>
<p>Plugins are used for providing rich features. There are built-in plugins such as <code>unix_domain_socket</code>, <code>http_proxy</code>, <code>socks5</code>, <code>static_file</code>, <code>http2https</code>, <code>https2http</code>, <code>https2https</code> and you can see <a href="#example-usage">example usage</a>.</p>
<p>Specify which plugin to use with the <code>plugin</code> parameter. Configuration parameters of plugin should be started with <code>plugin_</code>. <code>local_ip</code> and <code>local_port</code> are not used for plugin.</p>
<p>Using plugin <strong>http_proxy</strong>:</p>
<pre class="line-numbers language-ini"><code class="language-ini"># frpc.ini
<span class="token selector">[http_proxy]</span>
<span class="token constant">type</span> <span class="token attr-value"><span class="token punctuation">=</span> tcp</span>
<span class="token constant">remote_port</span> <span class="token attr-value"><span class="token punctuation">=</span> 6000</span>
<span class="token constant">plugin</span> <span class="token attr-value"><span class="token punctuation">=</span> http_proxy</span>
<span class="token constant">plugin_http_user</span> <span class="token attr-value"><span class="token punctuation">=</span> abc</span>
<span class="token constant">plugin_http_passwd</span> <span class="token attr-value"><span class="token punctuation">=</span> abc</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>plugin_http_user</code> and <code>plugin_http_passwd</code> are configuration parameters used in <code>http_proxy</code> plugin.</p>
<h3 id="Server-Manage-Plugins"><a href="#Server-Manage-Plugins" class="headerlink" title="Server Manage Plugins"></a>Server Manage Plugins</h3><p>Read the <a href="/doc/server_plugin.md">document</a>.</p>
<p>Find more plugins in <a href="https://github.com/gofrp/plugin" target="_blank" rel="noopener">gofrp/plugin</a>.</p>
<h2 id="Development-Plan"><a href="#Development-Plan" class="headerlink" title="Development Plan"></a>Development Plan</h2><ul>
<li>Log HTTP request information in frps.</li>
</ul>
<h2 id="Contributing"><a href="#Contributing" class="headerlink" title="Contributing"></a>Contributing</h2><p>Interested in getting involved? We would like to help you!</p>
<ul>
<li>Take a look at our <a href="https://github.com/fatedier/frp/issues" target="_blank" rel="noopener">issues list</a> and consider sending a Pull Request to <strong>dev branch</strong>.</li>
<li>If you want to add a new feature, please create an issue first to describe the new feature, as well as the implementation approach. Once a proposal is accepted, create an implementation of the new features and submit it as a pull request.</li>
<li>Sorry for my poor English. Improvements for this document are welcome, even some typo fixes.</li>
<li>If you have great ideas, send an email to <a href="mailto:fatedier@gmail.com" target="_blank" rel="noopener">fatedier@gmail.com</a>.</li>
</ul>
<p><strong>Note: We prefer you to give your advise in <a href="https://github.com/fatedier/frp/issues" target="_blank" rel="noopener">issues</a>, so others with a same question can search it quickly and we don’t need to answer them repeatedly.</strong></p>
<h2 id="Donation"><a href="#Donation" class="headerlink" title="Donation"></a>Donation</h2><p>If frp helps you a lot, you can support us by:</p>
<p>frp QQ group: 606194980</p>
<h3 id="AliPay"><a href="#AliPay" class="headerlink" title="AliPay"></a>AliPay</h3><p><img src="/doc/pic/donate-alipay.png" alt="donation-alipay"></p>
<h3 id="Wechat-Pay"><a href="#Wechat-Pay" class="headerlink" title="Wechat Pay"></a>Wechat Pay</h3><p><img src="/doc/pic/donate-wechatpay.png" alt="donation-wechatpay"></p>
<h3 id="PayPal"><a href="#PayPal" class="headerlink" title="PayPal"></a>PayPal</h3><p>Donate money by <a href="https://www.paypal.me/fatedier" target="_blank" rel="noopener">PayPal</a> to my account <strong><a href="mailto:fatedier@gmail.com" target="_blank" rel="noopener">fatedier@gmail.com</a></strong>.</p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>frp</tag>
        <tag>文档</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Data Binding 详解及使用案例</title>
    <url>/2021/01/08/2017-04-02-Data-Binding/</url>
    <content><![CDATA[<h2 id="构建环境"><a href="#构建环境" class="headerlink" title="构建环境"></a>构建环境</h2><h3 id="使用条件"><a href="#使用条件" class="headerlink" title="使用条件"></a>使用条件</h3><ul>
<li>支持 Android 2.1 (API level 7+).</li>
<li>Android Plugin for Gradle 1.5.0-alpha1 或更高<pre class="line-numbers language-gradle"><code class="language-gradle">buildscript {
...
dependencies {
  classpath 'com.android.tools.build:gradle:1.5.0-alpha1'
}
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="开启"><a href="#开启" class="headerlink" title="开启"></a>开启</h3><pre class="line-numbers language-gradle"><code class="language-gradle">android {
  ....
  dataBinding {
      enabled = true
  }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="基本用法-（Data-Binding-Layout-Files）"><a href="#基本用法-（Data-Binding-Layout-Files）" class="headerlink" title="基本用法 （Data Binding Layout Files）"></a>基本用法 （Data Binding Layout Files）</h2><h3 id="绑定实体数据到指定布局（Layout）"><a href="#绑定实体数据到指定布局（Layout）" class="headerlink" title="绑定实体数据到指定布局（Layout）"></a>绑定实体数据到指定布局（Layout）</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
 <span class="token keyword">private</span> <span class="token keyword">final</span> String firstName<span class="token punctuation">;</span>
 <span class="token keyword">private</span> <span class="token keyword">final</span> String lastName<span class="token punctuation">;</span>
 <span class="token keyword">public</span> <span class="token function">User</span><span class="token punctuation">(</span>String firstName<span class="token punctuation">,</span> String lastName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">=</span> firstName<span class="token punctuation">;</span>
     <span class="token keyword">this</span><span class="token punctuation">.</span>lastName <span class="token operator">=</span> lastName<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">public</span> String <span class="token function">getFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token keyword">public</span> String <span class="token function">getLastName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<p>如果我需要用Layout展示用户信息 User，通常我们的做法就是</p>
<ol>
<li>新建<code>Layout.xml</code>；</li>
<li>找到对应控件，findIdByView或 <a href="http://jakewharton.github.io/butterknife/" target="_blank" rel="noopener">Butterknife</a> ；</li>
<li>设置数据；  </li>
</ol>
<p>感觉用Butterknife已经很高大上，很高效了，看一下Data Binding的效率：<br>main_activity.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data</span><span class="token punctuation">></span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>variable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.User<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>data</span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>
       <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span> <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/mFirstName<span class="token punctuation">"</span></span>
           <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
           <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{user.firstName}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span> <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
           <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
           <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{user.lastName}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>MainActivity.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
   MainActivityBinding binding <span class="token operator">=</span> DataBindingUtil<span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>main_activity<span class="token punctuation">)</span><span class="token punctuation">;</span>
   User user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">"Test"</span><span class="token punctuation">,</span> <span class="token string">"User"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   binding<span class="token punctuation">.</span><span class="token function">setUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>高效没看出来呀！为了让接手的下一个兄弟不骂娘，我还是选择普通写法o(╯□╰)o，那如果是这种布局呢</p>
<p><img src="http://ohlb58e07.bkt.clouddn.com/data_binding_blog.png" alt=""><br>你用几百行的代码，DataBinding一行搞定，Boss此刻应该蹲在厕所喜极而泣，我XX我早该找一个这样的程序员。<br><img src="http://upload-images.jianshu.io/upload_images/1321512-9683c578ded1684f.gif?imageMogr2/auto-orient/strip" alt="data_binding_funny.gif"></p>
<h3 id="小知识点"><a href="#小知识点" class="headerlink" title="小知识点"></a>小知识点</h3><ul>
<li>Fragment ,ListView,RecyclerView 中的使用<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// ListView RecyclerView</span>
ListItemBinding binding <span class="token operator">=</span> DataBindingUtil<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>layoutInflater<span class="token punctuation">,</span> R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>list_item<span class="token punctuation">,</span> viewGroup<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//Fragment</span>
MainFragmentBinding binding <span class="token operator">=</span>
          DataBindingUtil<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>inflater<span class="token punctuation">,</span> R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>main_fragment<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>如果想操作对应的控件需要设置id号，如main_activity.xml, 设置<code>android:id="@+id/mFirstName"</code> ，可以直接用<code>binding.mFirstName</code> 找到控件 ；</li>
</ul>
<p>【待处理】<br>测试中得到binding</p>
<pre class="line-numbers language-java"><code class="language-java">MainActivityBinding binding <span class="token operator">=</span> MainActivityBinding<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token function">getLayoutInflater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ListItemBinding binding <span class="token operator">=</span> ListItemBinding<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>layoutInflater<span class="token punctuation">,</span> viewGroup<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="事件绑定（Event-Handling）"><a href="#事件绑定（Event-Handling）" class="headerlink" title="事件绑定（Event Handling）"></a>事件绑定（Event Handling）</h3><h4 id="最简单的应用"><a href="#最简单的应用" class="headerlink" title="最简单的应用"></a>最简单的应用</h4><p>main_activity.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data</span><span class="token punctuation">></span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>variable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handlers<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.MyHandlers<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>variable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.User<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>data</span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>
       <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span> <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
           <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
           <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{user.firstName}<span class="token punctuation">"</span></span>
           <span class="token attr-name"><span class="token namespace">android:</span>onClick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{handlers::onClickFriend}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>事件处理类</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span><span class="token comment" spellcheck="true">/*也可以是接口*/</span> MyHandlers  <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClickFriend</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>控制代码同上，设置变量就可以<code>binding.setHandlers(...)</code></p>
<h4 id="带参数的事件绑定（Android-Plugin-for-Gradle-2-0-或更高）"><a href="#带参数的事件绑定（Android-Plugin-for-Gradle-2-0-或更高）" class="headerlink" title="带参数的事件绑定（Android Plugin for Gradle 2.0 或更高）"></a>带参数的事件绑定（Android Plugin for Gradle 2.0 或更高）</h4><p>main_activity.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data</span><span class="token punctuation">></span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>variable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handlers<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.MyHandlers<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>variable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.User<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>data</span><span class="token punctuation">></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>
       <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span> <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
           <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
           <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{user.firstName}<span class="token punctuation">"</span></span>
           <span class="token attr-name"><span class="token namespace">android:</span>onClick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{() -<span class="token punctuation">></span> handlers.onSaveClick(user)}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>事件处理类</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyHandlers</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSaveClick</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>传入View方式</p>
<pre><code> android:onClick="@{(theView) -&gt; handlers.onSaveClick(theView, user)}"</code></pre><p>或</p>
<pre class="line-numbers language-xml"><code class="language-xml">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CheckBox</span> <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>onCheckedChanged</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{(cb, isChecked) -<span class="token punctuation">></span> handlers.completeChanged(user, isChecked)}<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>注意：避免一些比较复杂的listeners，这样会使得Layout更易读更容易维护</p>
</blockquote>
<h2 id="Data-Layout-小细节及简单语法"><a href="#Data-Layout-小细节及简单语法" class="headerlink" title="Data Layout 小细节及简单语法"></a>Data Layout 小细节及简单语法</h2><h3 id="Imports"><a href="#Imports" class="headerlink" title="Imports"></a>Imports</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.text.TextUtils<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!--静态类的使用--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android.view.View<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!--导入--></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>variable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>note<span class="token punctuation">"</span></span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>String<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token comment" spellcheck="true">&lt;!--自动导入java.lang.*--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.real.estate.View<span class="token punctuation">"</span></span>
        <span class="token attr-name">alias</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Vista<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!--别名解决同名类--></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>data</span><span class="token punctuation">></span></span>
&lt;TextView 
   android:text="@{TextUtils.isEmpty(user.lastName)? "default":user.lastName }"
   android:layout_width="wrap_content"
   android:layout_height="wrap_content"
   android:visibility="@{user.isAdult ? View.VISIBLE : View.GONE}"/> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>!-【使用】--</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p><strong>Note</strong>: 默认自动导入java.lang.*，<a href="http://www.cnblogs.com/leungjj/p/6475945.html" target="_blank" rel="noopener">常用的有Integer，String，StringBuffer，Math类</a></p>
</blockquote>
<h3 id="Binding-Class-Names-如上：MainActivityBinding-类"><a href="#Binding-Class-Names-如上：MainActivityBinding-类" class="headerlink" title="Binding Class Names 如上：MainActivityBinding 类"></a>Binding Class Names 如上：MainActivityBinding 类</h3><ul>
<li>默认命名规则 <code>包名+布局名去‘_’首字母大写+Binding</code> 如： main_activity.xml ==&gt; MainActivityBinding.class</li>
<li>自定义的三种解释<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ContactItem<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>data</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!--自定义名称--></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.ContactItem<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>data</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!--使用module包名--></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.ContactItem<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>data</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!--指定包名--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="Includes"><a href="#Includes" class="headerlink" title="Includes"></a>Includes</h3>Data layout 复用<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">xmlns:</span>bind</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>variable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.example.User<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>data</span><span class="token punctuation">></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>
     <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>
     <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
     <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@layout/name<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">bind:</span>user</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{user}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@layout/contact<span class="token punctuation">"</span></span>
         <span class="token attr-name"><span class="token namespace">bind:</span>user</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{user}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="简单语法"><a href="#简单语法" class="headerlink" title="简单语法"></a>简单语法</h3><h4 id="Java共同特征"><a href="#Java共同特征" class="headerlink" title="Java共同特征"></a>Java共同特征</h4></li>
<li>Mathematical + - / * %</li>
<li>String concatenation +</li>
<li>Logical &amp;&amp; ||</li>
<li>Binary &amp; | ^</li>
<li>Unary + - ! ~</li>
<li>Shift &gt;&gt; &gt;&gt;&gt; &lt;&lt;</li>
<li>Comparison == &gt; &lt; &gt;= &lt;=</li>
<li>instanceof</li>
<li>Grouping ()</li>
<li>Literals - character, String, numeric, null</li>
<li>Cast</li>
<li>Method calls</li>
<li>Field access</li>
<li>Array access []</li>
<li>Ternary operator ?:</li>
</ul>
<p>Examples:</p>
<pre><code>android:text="@{String.valueOf(index + 1)}"
android:visibility="@{age &lt; 13 ? View.GONE : View.VISIBLE}"
android:transitionName='@{"image_" + id}' 

android:text="@{user.displayName ?? user.lastName}" 【重点】&lt;==&gt; 等价于
android:text="@{user.displayName != null ? user.displayName : user.lastName}"
</code></pre><p>Example02 <font color="red">注意单引号</font></p>
<pre class="line-numbers language-xml"><code class="language-xml">android:text='@{good.commodityCode + "/" + good.name}'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="Resources引用"><a href="#Resources引用" class="headerlink" title="Resources引用"></a>Resources引用</h4><table>
<thead>
<tr>
<th>Type</th>
<th>Normal Reference</th>
<th>Expression Reference</th>
</tr>
</thead>
<tbody><tr>
<td>String[]</td>
<td>@array</td>
<td>@stringArray</td>
</tr>
<tr>
<td>int[]</td>
<td>@array</td>
<td>@intArray</td>
</tr>
<tr>
<td>TypedArray</td>
<td>@array</td>
<td>@typedArray</td>
</tr>
<tr>
<td>Animator</td>
<td>@animator</td>
<td>@animator</td>
</tr>
<tr>
<td>StateListAnimator</td>
<td>@animator</td>
<td>@stateListAnimator</td>
</tr>
<tr>
<td>color int</td>
<td>@color</td>
<td>@color</td>
</tr>
<tr>
<td>ColorStateList</td>
<td>@color</td>
<td>@colorStateList</td>
</tr>
</tbody></table>
<p>Sample</p>
<pre class="line-numbers language-java"><code class="language-java">android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"@{@string/nameFormat(firstName, lastName)}"</span>
android<span class="token operator">:</span>text<span class="token operator">=</span><span class="token string">"@{@plurals/banana(bananaCount)}"</span>
android<span class="token operator">:</span>padding<span class="token operator">=</span><span class="token string">"@{large? @dimen/largePadding : @dimen/smallPadding}"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>String formatting</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>greeting<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello, %s<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{@string/greeting(user.firstName)}<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Math in expressions</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span>
    <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@dimen/padding<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{@dimen/padding}<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{@dimen/padding * 2}<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{@dimen/padding + @dimen/padding}<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>padding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{largeScreen ? @dimen/padding * 2 : @dimen/padding}<span class="token punctuation">"</span></span>
<span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="更改数据自动更新UI界面-（Data-Objects）"><a href="#更改数据自动更新UI界面-（Data-Objects）" class="headerlink" title="更改数据自动更新UI界面 （Data Objects）"></a>更改数据自动更新UI界面 （Data Objects）</h2><p>经过上的学习，有木有发现， 布局Layout中的数据variables是固定的，只有初始化的时候赋值 数据变动时（设置数据，得到数据），还需要找控件，设置参数，更改UI状态, 基本还是老套路，官方的解决方案是Observable，使用观察者模式，当数据变化时通知layout自动变化，<br>官方提供的类：</p>
<ul>
<li>Observable Objects ；</li>
<li>ObservableFields ； </li>
<li>Observable Collections；</li>
</ul>
<h3 id="Observable-Objects"><a href="#Observable-Objects" class="headerlink" title="Observable Objects"></a>Observable Objects</h3><pre><code>public  static class User extends BaseObservable {
   private String firstName;
   private String lastName;
   @Bindable
   public String getFirstName() {
       return this.firstName;
   }
   @Bindable
   public String getLastName() {
       return this.lastName;
   }
   public void setFirstName(String firstName) {
       this.firstName = firstName;
       notifyPropertyChanged(BR.firstName);
   }
   public void setLastName(String lastName) {
       this.lastName = lastName;
       notifyPropertyChanged(BR.lastName);
   }
}</code></pre><p>经过改造后的User,同上的初始化</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> User user <span class="token punctuation">;</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
   MainActivityBinding binding <span class="token operator">=</span> DataBindingUtil<span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>main_activity<span class="token punctuation">)</span><span class="token punctuation">;</span>
   user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">"Test"</span><span class="token punctuation">,</span> <span class="token string">"User"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   binding<span class="token punctuation">.</span><span class="token function">setUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>



   <span class="token comment" spellcheck="true">//点击LastName触发</span>
   binding<span class="token punctuation">.</span><span class="token function">setHandlers</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyHandlers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
     <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClickFriend</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      user<span class="token punctuation">.</span><span class="token function">setFirstName</span><span class="token punctuation">(</span><span class="token string">"FirstName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//布局自动更新为`FirstName`</span>
      <span class="token comment" spellcheck="true">//此后常用的操作</span>
      <span class="token comment" spellcheck="true">//布局中Progress android:visibility="@{TextUtil.isEmpty(user.firstName) ? View.GONE : View.VISIBLE}"</span>
      <span class="token comment" spellcheck="true">// 自动控制对应的Progress是否显示，或进行一些简单的逻辑处理</span>
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="ObservableFields"><a href="#ObservableFields" class="headerlink" title="ObservableFields"></a>ObservableFields</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
   <span class="token keyword">public</span> <span class="token keyword">final</span> ObservableField<span class="token operator">&lt;</span>String<span class="token operator">></span> firstName <span class="token operator">=</span>
       <span class="token keyword">new</span> <span class="token class-name">ObservableField</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">public</span> <span class="token keyword">final</span> ObservableField<span class="token operator">&lt;</span>String<span class="token operator">></span> lastName <span class="token operator">=</span>
       <span class="token keyword">new</span> <span class="token class-name">ObservableField</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">public</span> <span class="token keyword">final</span> ObservableInt age <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObservableInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">// 对应的set/get</span>
user<span class="token punctuation">.</span>firstName<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"Google"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> age <span class="token operator">=</span> user<span class="token punctuation">.</span>age<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Observable-Collections"><a href="#Observable-Collections" class="headerlink" title="Observable Collections"></a>Observable Collections</h3><pre class="line-numbers language-java"><code class="language-java">ObservableArrayMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObservableArrayMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"firstName"</span><span class="token punctuation">,</span> <span class="token string">"Google"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"lastName"</span><span class="token punctuation">,</span> <span class="token string">"Inc."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
user<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="高阶用法"><a href="#高阶用法" class="headerlink" title="高阶用法"></a>高阶用法</h2><h3 id="在RecyclerView中的使用-（Dynamic-Variables）"><a href="#在RecyclerView中的使用-（Dynamic-Variables）" class="headerlink" title="在RecyclerView中的使用 （Dynamic Variables）"></a>在RecyclerView中的使用 （Dynamic Variables）</h3><p>BindingHolder.java </p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">BindingHolder</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>ViewHolder</span><span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//加入 ViewDataBinding setter/getter 方法</span>
    <span class="token keyword">private</span> ViewDataBinding binding <span class="token punctuation">;</span> 

    <span class="token keyword">public</span> ViewDataBinding <span class="token function">getBinding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> binding<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setBinding</span><span class="token punctuation">(</span>ViewDataBinding binding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>binding <span class="token operator">=</span> binding<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">BindingHolder</span><span class="token punctuation">(</span>View itemView<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">super</span><span class="token punctuation">(</span>itemView<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>MyAdapter.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">MyAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>Adapter</span><span class="token operator">&lt;</span>BindingHolder<span class="token operator">></span><span class="token punctuation">{</span>
    <span class="token keyword">private</span>  List<span class="token operator">&lt;</span>User<span class="token operator">></span> users<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">MyAdapter</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>User<span class="token operator">></span> users<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>users <span class="token operator">=</span> users<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> BindingHolder <span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span>ViewGroup viewGroup<span class="token punctuation">,</span> <span class="token keyword">int</span> viewType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment" spellcheck="true">//核心代码</span>
      ViewDataBinding binding <span class="token operator">=</span> DataBindingUtil<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>
          LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>viewGroup<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>list_item<span class="token punctuation">,</span>
          viewGroup<span class="token punctuation">,</span>
          <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      BindingHolder holder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BindingHolder</span><span class="token punctuation">(</span>binding<span class="token punctuation">.</span><span class="token function">getRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      holder<span class="token punctuation">.</span><span class="token function">setBinding</span><span class="token punctuation">(</span>binding<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> holder<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBindViewHolder</span><span class="token punctuation">(</span>BindingHolder holder<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      User user <span class="token operator">=</span> users<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
      holder<span class="token punctuation">.</span><span class="token function">getBinding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span>BR<span class="token punctuation">.</span>user<span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment" spellcheck="true">//不等待下一帧（Frame），直接更新，这个方法必须运行在UI线程</span>
      holder<span class="token punctuation">.</span><span class="token function">getBinding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">executePendingBindings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> users<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>更简洁的用法</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>Adapter</span><span class="token operator">&lt;</span>UserAdapter<span class="token punctuation">.</span>UserHolder<span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> USER_COUNT <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@NonNull</span>
    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> mUsers<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">UserAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mUsers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> USER_COUNT<span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            User user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span>RandomNames<span class="token punctuation">.</span><span class="token function">nextFirstName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> RandomNames<span class="token punctuation">.</span><span class="token function">nextLastName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mUsers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">UserHolder</span> <span class="token keyword">extends</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>ViewHolder</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> UserItemBinding mBinding<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">UserHolder</span><span class="token punctuation">(</span>View itemView<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">(</span>itemView<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mBinding <span class="token operator">=</span> DataBindingUtil<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>itemView<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mBinding<span class="token punctuation">.</span><span class="token function">setUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> UserHolder <span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span>ViewGroup viewGroup<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        View itemView <span class="token operator">=</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>viewGroup<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>user_item<span class="token punctuation">,</span> viewGroup<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserHolder</span><span class="token punctuation">(</span>itemView<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBindViewHolder</span><span class="token punctuation">(</span>UserHolder holder<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        holder<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>mUsers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mUsers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="ViewStubs使用"><a href="#ViewStubs使用" class="headerlink" title="ViewStubs使用"></a>ViewStubs使用</h3><p><a href="https://developer.android.com/reference/android/view/ViewStub.html" target="_blank" rel="noopener">ViewStub</a> 是不可见的,0大小常用于惰性加载，说白了就是占给位置，在父容器的inflate时候不用处理，当在ViewStub setVisibility(int) or inflate()才会加载到布局中，应用场景：错误提示，帮助提示，用户引导等；<br>用法：</p>
<pre class="line-numbers language-xml"><code class="language-xml">     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ViewStub</span> <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/stub<span class="token punctuation">"</span></span>
               <span class="token attr-name"><span class="token namespace">android:</span>inflatedId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/subTree<span class="token punctuation">"</span></span>
               <span class="token attr-name"><span class="token namespace">android:</span>layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@layout/mySubTree<span class="token punctuation">"</span></span>
               <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120dip<span class="token punctuation">"</span></span>
               <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40dip<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java">  ViewStub stub <span class="token operator">=</span> <span class="token punctuation">(</span>ViewStub<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>stub<span class="token punctuation">)</span><span class="token punctuation">;</span>
     View inflated <span class="token operator">=</span> stub<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>Data layout </p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>
        <span class="token attr-name">...</span><span class="token punctuation">></span></span> 
        <span class="token comment" spellcheck="true">&lt;!--需要增加ID--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ViewStub</span>
            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/view_stub<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>layout</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@layout/view_stub<span class="token punctuation">"</span></span>
            <span class="token attr-name">...</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>监听ViewStub inflate 事件</p>
<pre class="line-numbers language-java"><code class="language-java">binding<span class="token punctuation">.</span>viewStub<span class="token punctuation">.</span><span class="token function">setOnInflateListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ViewStub<span class="token punctuation">.</span>OnInflateListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onInflate</span><span class="token punctuation">(</span>ViewStub stub<span class="token punctuation">,</span> View inflated<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ViewStubBinding binding <span class="token operator">=</span> DataBindingUtil<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>inflated<span class="token punctuation">)</span><span class="token punctuation">;</span>
        User user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">"fee"</span><span class="token punctuation">,</span> <span class="token string">"lang"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        binding<span class="token punctuation">.</span><span class="token function">setUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="自定义Setter"><a href="#自定义Setter" class="headerlink" title="自定义Setter"></a>自定义Setter</h3><h4 id="实用小例子："><a href="#实用小例子：" class="headerlink" title="实用小例子："></a>实用小例子：</h4><p>设置url，控件直接加载url地址的图片<br>attrs.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url<span class="token punctuation">"</span></span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>string<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>在任意代码中加入如下：</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@BindingAdapter</span><span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loadImage</span><span class="token punctuation">(</span><span class="token keyword">final</span> ImageView imageView<span class="token punctuation">,</span> <span class="token keyword">final</span> String url<span class="token punctuation">)</span><span class="token punctuation">{</span>
    Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>imageView<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
                     <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>能得到变化的url及对应的ImageView控件</p>
<blockquote>
<p>特殊说明: MasteringAndroidDataBinding中是用<code>declare-styleable</code>加自定义控件的方法来处理数据变化，上面的例子最能达到实践效果，在<strong>原生控件中加入自定义是属性</strong>,简洁易用；</p>
</blockquote>
<h3 id="BindingAdapter进价用法"><a href="#BindingAdapter进价用法" class="headerlink" title="BindingAdapter进价用法"></a>BindingAdapter进价用法</h3><h4 id="观察多个属性-如：-BindingAdapter-value-quot-url-quot-quot-drawable-quot-requireAll-false-requireAll指-布局控件中是否需要-quot-url-quot-quot-drawable-quot-属性都存在，默认为true；"><a href="#观察多个属性-如：-BindingAdapter-value-quot-url-quot-quot-drawable-quot-requireAll-false-requireAll指-布局控件中是否需要-quot-url-quot-quot-drawable-quot-属性都存在，默认为true；" class="headerlink" title="观察多个属性 如： @BindingAdapter(value = {&quot;url&quot;,&quot;drawable&quot;},requireAll = false) requireAll指 布局控件中是否需要&quot;url&quot;``&quot;drawable&quot; 属性都存在，默认为true；"></a>观察多个属性 如： <code>@BindingAdapter(value = {"url","drawable"},requireAll = false)</code> requireAll指 布局控件中是否需要<code>"url"``"drawable"</code> 属性都存在，默认为true；</h4><h4 id="监听原生控件的属性变化，做响应的处理（重写），如："><a href="#监听原生控件的属性变化，做响应的处理（重写），如：" class="headerlink" title="监听原生控件的属性变化，做响应的处理（重写），如："></a>监听原生控件的属性变化，做响应的处理（重写），如：</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@BindingAdapter</span><span class="token punctuation">(</span><span class="token string">"android:paddingLeft"</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setPaddingLeft</span><span class="token punctuation">(</span>View view<span class="token punctuation">,</span> <span class="token keyword">int</span> padding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   view<span class="token punctuation">.</span><span class="token function">setPadding</span><span class="token punctuation">(</span>padding<span class="token punctuation">,</span>
                   view<span class="token punctuation">.</span><span class="token function">getPaddingTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                   view<span class="token punctuation">.</span><span class="token function">getPaddingRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                   view<span class="token punctuation">.</span><span class="token function">getPaddingBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="获取变化的旧数据和新数据，自义定属性也能使用"><a href="#获取变化的旧数据和新数据，自义定属性也能使用" class="headerlink" title="获取变化的旧数据和新数据，自义定属性也能使用"></a>获取变化的旧数据和新数据，<strong>自义定属性也能使用</strong></h4><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@BindingAdapter</span><span class="token punctuation">(</span><span class="token string">"android:paddingLeft"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//注意：android:paddingLeft 可以改为自定义的Setter属性，如上‘url’</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setPaddingLeft</span><span class="token punctuation">(</span>View view<span class="token punctuation">,</span> <span class="token keyword">int</span> oldPadding<span class="token punctuation">,</span> <span class="token keyword">int</span> newPadding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>oldPadding <span class="token operator">!=</span> newPadding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       view<span class="token punctuation">.</span><span class="token function">setPadding</span><span class="token punctuation">(</span>newPadding<span class="token punctuation">,</span>
                       view<span class="token punctuation">.</span><span class="token function">getPaddingTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                       view<span class="token punctuation">.</span><span class="token function">getPaddingRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                       view<span class="token punctuation">.</span><span class="token function">getPaddingBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p><strong>总结:</strong> Data Binding 核心思想是把控件的属性用静态变量代表，并监听属性的变化，通过BindingAdapter来处理数据变化；如果不是很有感觉, 有兴趣进一步研究，建议看一下<a href="https://github.com/Kelin-Hong/MVVMLight" target="_blank" rel="noopener">MVVMLight</a>源码, 一个Data Binding 和RxJava 结合使用的库</p>
</blockquote>
<p>BindingAdapter 多参数</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@BindingAdapter</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"bind:brand"</span><span class="token punctuation">,</span> <span class="token string">"bind:model"</span><span class="token punctuation">,</span> <span class="token string">"bind:age"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> requireAll <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@JvmStatic</span>
fun <span class="token function">bindProductDetails</span><span class="token punctuation">(</span>linearLayout<span class="token operator">:</span> LinearLayout<span class="token punctuation">,</span> brand<span class="token operator">:</span> String<span class="token operator">?</span><span class="token punctuation">,</span> model<span class="token operator">:</span> String<span class="token operator">?</span><span class="token punctuation">,</span> age<span class="token operator">:</span> String<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>brand <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>brand<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//code</span>
        <span class="token comment" spellcheck="true">//code</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="单元测试【待实践】"><a href="#单元测试【待实践】" class="headerlink" title="单元测试【待实践】"></a>单元测试【待实践】</h2><p><a href="http://blog.csdn.net/zhaizu/article/details/51491455" target="_blank" rel="noopener">安卓 Data Binding 使用方法总结（姐姐篇）</a></p>
<h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><h3 id="实在的博客"><a href="#实在的博客" class="headerlink" title="实在的博客"></a>实在的博客</h3><p><strong>工作原理</strong></p>
<ul>
<li><a href="http://www.jianshu.com/p/eb29c691d370#" target="_blank" rel="noopener">Android Data Binding从抵触到爱不释手</a> 比较详细，特别是有源码分析</li>
</ul>
<h3 id="开源库学习资料"><a href="#开源库学习资料" class="headerlink" title="开源库学习资料"></a>开源库学习资料</h3><ul>
<li><a href="https://github.com/Kelin-Hong/MVVMLight" target="_blank" rel="noopener">MVVMLight</a>源码, 一个Data Binding 和RxJava 结合使用的库</li>
<li><a href="https://github.com/googlesamples/android-architecture/tree/todo-databinding/" target="_blank" rel="noopener">TODO-DataBinding</a> 和MVP结合使用，Google 官方例子  </li>
</ul>
<h2 id="补充-View-Binding"><a href="#补充-View-Binding" class="headerlink" title="补充 View Binding"></a>补充 View Binding</h2><h4 id="使用条件-Android-Studio-3-6"><a href="#使用条件-Android-Studio-3-6" class="headerlink" title="使用条件 Android Studio 3.6 +"></a>使用条件 Android Studio 3.6 +</h4><pre class="line-numbers language-groovy"><code class="language-groovy">buildscript <span class="token punctuation">{</span>
    ……
    dependencies <span class="token punctuation">{</span>
        classpath <span class="token string">"com.android.tools.build:gradle:3.6.0-beta01"</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="激活配置"><a href="#激活配置" class="headerlink" title="激活配置"></a>激活配置</h4><pre class="line-numbers language-groovy"><code class="language-groovy">android <span class="token punctuation">{</span>
  buildFeatures <span class="token punctuation">{</span>
    viewBinding <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="Activity-使用"><a href="#Activity-使用" class="headerlink" title="Activity 使用"></a>Activity 使用</h4><p><strong>布局</strong> ： <font color="red"><b>activity_main.xml</b></font></p>
<p><strong>使用</strong> :  命名根据布局名称 + Binding</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token keyword">final</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ActivityMainBinding inflate <span class="token operator">=</span> ActivityMainBinding<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span><span class="token function">getLayoutInflater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>inflate<span class="token punctuation">.</span><span class="token function">getRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="Fragment-使用"><a href="#Fragment-使用" class="headerlink" title="Fragment 使用"></a>Fragment 使用</h4><p><strong>布局</strong> ： <font color="red"><b>fragement_main</b></font></p>
<p><strong>使用</strong>： 命名同上</p>
<pre class="line-numbers language-java"><code class="language-java">    <span class="token annotation punctuation">@Nullable</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> View <span class="token function">onCreateView</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> LayoutInflater inflater<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> ViewGroup container<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        FragementMainBinding inflate <span class="token operator">=</span> FragementMainBinding<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>inflater<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        inflate<span class="token punctuation">.</span>tv<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"Holy G00gie"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> inflate<span class="token punctuation">.</span><span class="token function">getRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="Resource-引用对照表"><a href="#Resource-引用对照表" class="headerlink" title="Resource 引用对照表"></a>Resource 引用对照表</h3><table>
<thead>
<tr>
<th>Type</th>
<th>Normal Reference</th>
<th>Expression Reference</th>
</tr>
</thead>
<tbody><tr>
<td>String[]</td>
<td>@array</td>
<td>@stringArray</td>
</tr>
<tr>
<td>int[]</td>
<td>@array</td>
<td>@intArray</td>
</tr>
<tr>
<td>TypedArray</td>
<td>@array</td>
<td>@typedArray</td>
</tr>
<tr>
<td>Animator</td>
<td>@animator</td>
<td>@animator</td>
</tr>
<tr>
<td>StateListAnimator</td>
<td>@animator</td>
<td>@stateListAnimator</td>
</tr>
<tr>
<td>color int</td>
<td>@color</td>
<td>@color</td>
</tr>
<tr>
<td>ColorStateList</td>
<td>@color</td>
<td>@colorStateList</td>
</tr>
<tr>
<td>### 常用转义表</td>
<td></td>
<td></td>
</tr>
<tr>
<td>```shell</td>
<td></td>
<td></td>
</tr>
<tr>
<td>显示结果    描述          转义字符          十进制</td>
<td></td>
<td></td>
</tr>
<tr>
<td>空格          &nbsp;           &nbsp;</td>
<td></td>
<td></td>
</tr>
<tr>
<td>&lt;          小于号         &lt;            &lt;</td>
<td></td>
<td></td>
</tr>
<tr>
<td>&gt;          大于号         &gt;            &gt;</td>
<td></td>
<td></td>
</tr>
<tr>
<td>&amp;          与号          &amp;            &amp;</td>
<td></td>
<td></td>
</tr>
<tr>
<td>“          引号          "           "</td>
<td></td>
<td></td>
</tr>
<tr>
<td>‘          撇号          '           '</td>
<td></td>
<td></td>
</tr>
<tr>
<td>×          乘号          ×          ×</td>
<td></td>
<td></td>
</tr>
<tr>
<td>÷          除号          ÷         ÷</td>
<td></td>
<td></td>
</tr>
<tr>
<td>```</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="引用："><a href="#引用：" class="headerlink" title="引用："></a>引用：</h2><ol>
<li><a href="https://developer.android.com/topic/libraries/data-binding/index.html#generated_binding" target="_blank" rel="noopener">Data Binding Library</a></li>
<li><a href="https://github.com/LyndonChin/MasteringAndroidDataBinding" target="_blank" rel="noopener">MasteringAndroidDataBinding</a> </li>
<li><a href="https://realm.io/news/droidkaigi-kevin-pelgrims-data-real-world-data-binding/" target="_blank" rel="noopener">Data Binding in the Real World</a></li>
<li><a href="http://blog.csdn.net/zhaizu/article/details/51491455" target="_blank" rel="noopener">安卓 Data Binding 使用方法总结（姐姐篇）</a></li>
</ol>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记神器notion学习</title>
    <url>/2021/01/07/2021-01-07-notion/</url>
    <content><![CDATA[<h2 id="Get-Start-官网教程"><a href="#Get-Start-官网教程" class="headerlink" title="Get Start 官网教程"></a>Get Start 官网教程</h2><h3 id="Create-your-own-templates"><a href="#Create-your-own-templates" class="headerlink" title="Create your own templates"></a>Create your own templates</h3><blockquote>
<p><a href="https://www.notion.so/Create-your-own-templates-5c033c12ac3b4c1fb4703491be74550d" target="_blank" rel="noopener">图文教程</a></p>
</blockquote>
<h2 id="常用的设置"><a href="#常用的设置" class="headerlink" title="常用的设置"></a>常用的设置</h2><h3 id="Notion-中如何嵌入-B-站视频？"><a href="#Notion-中如何嵌入-B-站视频？" class="headerlink" title="Notion 中如何嵌入 B 站视频？"></a><strong>Notion 中如何嵌入 B 站视频？</strong></h3><blockquote>
<p><a href="https://linmi.cc/2853.html" target="_blank" rel="noopener">https://linmi.cc/2853.html</a></p>
</blockquote>
<ol>
<li>只有部分视频可以嵌入（个人上传）</li>
<li>点击分享 ==&gt; 复制嵌入的代码</li>
<li><a href="https://player.bilibili.com/player.html?aid=372409066&amp;cid=246257644&amp;page=1" target="_blank" rel="noopener">https://player.bilibili.com/player.html?aid=372409066&amp;cid=246257644&amp;page=1</a><br>把嵌入模板aid参数和cid参数替换掉上面模板</li>
</ol>
<h2 id="Notion-软件优秀交互记录"><a href="#Notion-软件优秀交互记录" class="headerlink" title="Notion 软件优秀交互记录"></a>Notion 软件优秀交互记录</h2><ol>
<li>上传图片可以先获取图片轮廓，及显示图片百分比进度<br><img src="https://cdn.linz.tech/sun_2021-01-11_1.37.43.png" alt=""></li>
</ol>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="入门📒"><a href="#入门📒" class="headerlink" title="入门📒"></a>入门📒</h3><h3 id="模板超市"><a href="#模板超市" class="headerlink" title="模板超市"></a>模板超市</h3><blockquote>
<p>各种各样现成的模板</p>
<p><a href="https://www.notion.so/Notion-Template-Gallery-181e961aeb5c4ee6915307c0dfd5156d" target="_blank" rel="noopener">https://www.notion.so/Notion-Template-Gallery-181e961aeb5c4ee6915307c0dfd5156d</a></p>
</blockquote>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>tool</tag>
        <tag>study</tag>
      </tags>
  </entry>
  <entry>
    <title>Android studio 与 IntelliJ IDEA  使用总结</title>
    <url>/2021/01/05/2018-4-15-android-studio-usage/</url>
    <content><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p><a href="https://zhile.io/2018/08/17/jetbrains-license-server-crack.html" target="_blank" rel="noopener">intellj idea 破解安装</a></p>
<h1 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h1><h2 id="常用插件"><a href="#常用插件" class="headerlink" title="常用插件"></a>常用插件</h2><h3 id="Android-1"><a href="#Android-1" class="headerlink" title="Android"></a>Android</h3><ul>
<li><a href="https://github.com/avast/android-butterknife-zelezny" target="_blank" rel="noopener">ButterKnifeZelezny 5 星</a><br><img src="https://raw.githubusercontent.com/avast/android-butterknife-zelezny/master/img/zelezny_animated.gif" alt=""></li>
<li><a href="https://github.com/pbreault/adb-idea" target="_blank" rel="noopener">ADB Comand 3星</a><br><img src="https://raw.githubusercontent.com/pbreault/adb-idea/master/website/find_actions.png" alt=""></li>
<li><a href="https://github.com/zzz40500/GsonFormat" target="_blank" rel="noopener">GsonFormatString 解析成实体</a> <code>Default Option + s(Mac), Alt + s (win)</code><br><img src="https://camo.githubusercontent.com/0d45c79c54ab57f6efe31e9019b11d93974fa039/687474703a2f2f75706c6f61642d696d616765732e6a69616e7368752e696f2f75706c6f61645f696d616765732f3136363836362d666639646333333661663732643764372e6769663f696d6167654d6f6772322f6175746f2d6f7269656e742f7374726970" alt=""></li>
<li><a href="https://github.com/halirutan/IntelliJ-Key-Promoter-X" target="_blank" rel="noopener">Key Promoter X 快捷键提示</a> AS plugin 搜索安装<br><img src="https://camo.githubusercontent.com/c5696e472c432542417a8c0cb795524b572b1c56/687474703a2f2f692e696d6775722e636f6d2f327a42644d54382e676966" alt=""></li>
<li><a href="https://www.codota.com/thankYou" target="_blank" rel="noopener">codota 代码案例查找【重点】</a> 快捷键 <code>Shift + Alt + Space</code></li>
<li><a href="https://github.com/Vektah/CodeGlance" target="_blank" rel="noopener">CodeGlance 代码概况</a><br><img src="https://camo.githubusercontent.com/d25bcf62d90bfee3308428a4836afe32d347934d/68747470733a2f2f7261772e6769746875622e636f6d2f56656b7461682f436f6465476c616e63652f6d61737465722f7075622f6578616d706c652e706e67" alt=""></li>
<li><a href="https://github.com/mcharmas/android-parcelable-intellij-plugin" target="_blank" rel="noopener">Parcelable Plugin</a><br><img src="https://raw.githubusercontent.com/mcharmas/android-parcelable-intellij-plugin/master/screenshot.png" alt=""></li>
<li><a href="https://github.com/nekocode/JarFilterPlugin/" target="_blank" rel="noopener">JarFilterPlugin</a> 修改第三方Jar并打包进应用，如可以借助 JarFilterPlugin 来修改 Retrofit 的内部代码</li>
</ul>
<h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><h4 id="自动生成-serialVersionUID"><a href="#自动生成-serialVersionUID" class="headerlink" title="自动生成 serialVersionUID"></a><a href="https://blog.csdn.net/qq_35246620/article/details/77686098" target="_blank" rel="noopener">自动生成 serialVersionUID</a></h4><ul>
<li><a href="">lombok</a></li>
</ul>
<h3 id="bashsupport"><a href="#bashsupport" class="headerlink" title="bashsupport"></a>bashsupport</h3><ul>
<li><a href="https://blog.csdn.net/u012443641/article/details/81295999" target="_blank" rel="noopener">IDEA中编写脚本并运行shell脚本</a></li>
</ul>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><ul>
<li><a href="https://github.com/KeepSafe/dexcount-gradle-plugin" target="_blank" rel="noopener">dexcount-gradle-plugin</a> 每次编译都统计Field and Method number<br><img src="https://raw.githubusercontent.com/KeepSafe/dexcount-gradle-plugin/master/web/example.png" alt=""></li>
</ul>
<h2 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h2><ul>
<li><a href="https://github.com/winterDroid/android-drawable-importer-intellij-plugin" target="_blank" rel="noopener">android-drawable-importer</a><br><img src="https://raw.githubusercontent.com/winterDroid/android-drawable-importer-intellij-plugin/develop/src/main/resources/images/scale_add.png" alt=""></li>
<li><a href="https://github.com/inmite/android-selector-chapek" target="_blank" rel="noopener">android-selector</a><br><img src="https://raw.githubusercontent.com/inmite/android-selector-chapek/master/img/select_option.png" alt=""></li>
<li><a href="https://github.com/konifar/android-material-design-icon-generator-plugin" target="_blank" rel="noopener">Material Design Icon Generator</a><br><img src="https://raw.githubusercontent.com/konifar/android-material-design-icon-generator-plugin/master/docs/capture.gif" alt=""></li>
<li><a href="https://github.com/mistamek/Android-drawable-preview-plugin" target="_blank" rel="noopener">Android-drawable-preview-plugin</a><br><img src="https://raw.githubusercontent.com/mistamek/Android-drawable-preview-plugin/master/screenshot.png" alt=""></li>
<li><a href="https://plugins.jetbrains.com/plugin/7972-android-styler" target="_blank" rel="noopener">Android Styler</a> 相对于AS提供的功能，这个优势在能指定style存放的文件及相对的位置；</li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><a href="https://github.com/vsch/idea-multimarkdown" target="_blank" rel="noopener">idea-multimarkdown【收费】</a></li>
<li><a href="https://github.com/vanniktech/gradle-maven-publish-plugin" target="_blank" rel="noopener">gradle-maven-publish-plugin</a> 上传你的代码到所有的版本仓库中</li>
<li><a href="https://github.com/qiugang/DepSwitchPlugin" target="_blank" rel="noopener">DepSwitchPlugin aar和源码切换，开发阶段源码，稳定阶段用aar</a></li>
</ul>
<h2 id="高级"><a href="#高级" class="headerlink" title="高级"></a>高级</h2><h3 id="Android-studio-插件的开发"><a href="#Android-studio-插件的开发" class="headerlink" title="Android studio 插件的开发"></a>Android studio 插件的开发</h3><ul>
<li><a href="https://yalantis.com/blog/android-studio-plugin-development/" target="_blank" rel="noopener">How to Develop Android Studio Plugin</a></li>
</ul>
<h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><p>File and code template -&gt; includes -&gt; file header</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token comment" spellcheck="true">/**
 * 
 *
 * @author ex-linzhi002 &lt;a href="mailto:ex-linzhi002@pingan.com.cn">Contact me.&lt;/a>
 * @version 1.0
 * @since ${DATE} ${TIME}
 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>新建类的时候进行说明</p>
<h1 id="Intellj-后台开发"><a href="#Intellj-后台开发" class="headerlink" title="Intellj 后台开发"></a>Intellj 后台开发</h1><h2 id="1-RestfulToolkit-快速URL"><a href="#1-RestfulToolkit-快速URL" class="headerlink" title="1. RestfulToolkit 快速URL"></a><strong>1. RestfulToolkit</strong> 快速URL</h2><p>功能描述： </p>
<ol>
<li><strong>根据 URL 直接跳转到对应的方法定义</strong>。<ol>
<li>（Window 快捷键 <strong>Ctrl + Alt + N</strong> ）</li>
<li>Mac 快捷键 option  + cmd + N </li>
</ol>
</li>
<li>RestServices侧边栏<br><img src="http://cdn.linz.tech/Intellij_RestfulToolkit.png" alt=""></li>
</ol>
<h2 id="2-Maven-Helper-依赖分析"><a href="#2-Maven-Helper-依赖分析" class="headerlink" title="2. Maven Helper 依赖分析"></a><strong>2. Maven Helper</strong> 依赖分析</h2><p><img src="http://cdn.linz.tech/intellj_maven_helper.png" alt="">  </p>
<h2 id="3-JRebel-热部署-【待实践】"><a href="#3-JRebel-热部署-【待实践】" class="headerlink" title="3. JRebel 热部署 【待实践】"></a>3. <strong>JRebel</strong> 热部署 【待实践】</h2><p>参考破解地址 （附一个参考地址：<a href="https://blog.csdn.net/qierkang/article/details/95095954）" target="_blank" rel="noopener">https://blog.csdn.net/qierkang/article/details/95095954）</a></p>
<h1 id="Android-Intellj-共用"><a href="#Android-Intellj-共用" class="headerlink" title="Android / Intellj 共用"></a>Android / Intellj 共用</h1><h2 id="1-Translation"><a href="#1-Translation" class="headerlink" title="1. Translation"></a><strong>1. Translation</strong></h2><p>用法详解</p>
<ol>
<li><p>Translate and Replace 【重点应用】用于方法和类的命名上提高代码的可读性<br><img src="http://cdn.linz.tech/Translate_and_Replace.png" alt=""></p>
</li>
<li><p>Translate Documentation 能翻译文档并且自动排版，非常易于阅读</p>
</li>
<li><p>Mac Pro 快捷键</p>
<ol>
<li>Ctrl + command + i 快速翻译框</li>
<li>+U 翻译 / + O translter replate  </li>
</ol>
</li>
</ol>
<h2 id="2-codota-官网"><a href="#2-codota-官网" class="headerlink" title="2. codota 官网"></a>2. <a href="https://www.codota.com/" target="_blank" rel="noopener">codota 官网</a></h2><p><img src="http://cdn.linz.tech/intellj_codota.png" alt=""></p>
<p>【注意】：通过查找关联的案例，提高自己的编程能力</p>
<p>使用方式</p>
<ol>
<li>选中要查询的类-&gt; <ol>
<li>右击 get relevant examples / (Mac Pro )ctrl + Shift + O</li>
<li>window  Ctrl + Shift + O</li>
</ol>
</li>
</ol>
<h2 id="3-Rainbow-brackets-不同层级的brackets显示不同颜色"><a href="#3-Rainbow-brackets-不同层级的brackets显示不同颜色" class="headerlink" title="3. Rainbow brackets 不同层级的brackets显示不同颜色"></a>3. Rainbow brackets 不同层级的brackets显示不同颜色</h2><h2 id="提高开发效率"><a href="#提高开发效率" class="headerlink" title="提高开发效率"></a>提高开发效率</h2><h3 id="Lombok"><a href="#Lombok" class="headerlink" title="Lombok"></a><a href="https://projectlombok.org/" target="_blank" rel="noopener">Lombok</a></h3><blockquote>
<p>自动生成 get、set、toString、equals和hashCode方法</p>
</blockquote>
<ul>
<li><a href="https://blog.csdn.net/zhglance/article/details/54931430" target="_blank" rel="noopener">Intellij IDEA 安装lombok及使用详解</a></li>
</ul>
<p>** Android Studio**</p>
<ol>
<li><p>安装 <code>Lombok Plugin</code></p>
</li>
<li><p>增加依赖</p>
<pre class="line-numbers language-gradle"><code class="language-gradle">dependencies {
 compileOnly 'org.projectlombok:lombok:1.18.10'
 annotationProcessor 'org.projectlombok:lombok:1.18.10'
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><a href="https://blog.csdn.net/yang_study_first/article/details/102566950" target="_blank" rel="noopener">Android LomBok的使用</a></p>
</li>
</ol>
<h3 id="GoogleLibraryVersionQuerier"><a href="#GoogleLibraryVersionQuerier" class="headerlink" title="GoogleLibraryVersionQuerier"></a><a href="https://github.com/wuyr/GoogleLibraryVersionQuerier" target="_blank" rel="noopener">GoogleLibraryVersionQuerier</a></h3><blockquote>
<p>帮助你快速添加依赖库和查询历史版本</p>
</blockquote>
<h4 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h4><p><img src="http://cdn.linz.tech/android_sutdio_lib2.gif" alt=""></p>
<p><img src="http://cdn.linz.tech/android_sutdio_lib.gif" alt=""></p>
<h3 id="Tabnine-AI-Code-Completions"><a href="#Tabnine-AI-Code-Completions" class="headerlink" title="Tabnine- AI Code Completions"></a><strong>Tabnine</strong>- AI Code Completions</h3><p>直接在Android插件市场搜索 <code>**tabnine**</code> <font color="red">注意：【T小写】</font>自己搜索<strong>Tabnine</strong>无结果</p>
<pre class="line-numbers language-java"><code class="language-java">tabnine<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>Xml下面的代码能达到代码折叠的效果</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--region Title--></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!--endregion--></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>IDE</tag>
      </tags>
  </entry>
  <entry>
    <title>Android window查缺补漏</title>
    <url>/2021/01/02/2021-01-02-window/</url>
    <content><![CDATA[<h2 id="DecorView"><a href="#DecorView" class="headerlink" title="DecorView"></a>DecorView</h2><p><a href="https://blog.csdn.net/qibin0506/article/details/49245601?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-2&amp;spm=1001.2101.3001.4242" target="_blank" rel="noopener">View测量机制详解—从DecorView说起</a></p>
<h2 id="Window"><a href="#Window" class="headerlink" title="Window"></a>Window</h2><p><a href="https://blog.csdn.net/weixin_43766753/article/details/108350589" target="_blank" rel="noopener">Android全面解析之Window机制</a></p>
<h2 id="PopupWindow"><a href="#PopupWindow" class="headerlink" title="PopupWindow"></a>PopupWindow</h2><p><a href="https://www.cnblogs.com/jzyhywxz/p/7039503.html" target="_blank" rel="noopener">Android PopupWindow使用方法小结</a></p>
<h2 id="getWindowVisibleDisplayFrame"><a href="#getWindowVisibleDisplayFrame" class="headerlink" title="getWindowVisibleDisplayFrame"></a>getWindowVisibleDisplayFrame</h2><ul>
<li><a href="https://blog.csdn.net/ccpat/article/details/55224475" target="_blank" rel="noopener">Android获取窗口可视区域大小: getWindowVisibleDisplayFrame()</a> 讲得比较详细</li>
</ul>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><ul>
<li><a href="https://www.cnblogs.com/fuly550871915/p/4984815.html" target="_blank" rel="noopener">android中的坐标系以及获取坐标的方法</a> 比较详细的描述了坐标的分类</li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>基础</tag>
      </tags>
  </entry>
  <entry>
    <title>RecyclerView使用详解</title>
    <url>/2020/12/31/2020-01-09-RecyclerView/</url>
    <content><![CDATA[<h1 id="RecyclerView使用详解"><a href="#RecyclerView使用详解" class="headerlink" title="RecyclerView使用详解"></a>RecyclerView使用详解</h1><blockquote>
<p><a href="https://developer.android.google.cn/guide/topics/ui/layout/recyclerview.html" target="_blank" rel="noopener">Recyclerview API</a></p>
</blockquote>
<h2 id="第1节-常用属性理解"><a href="#第1节-常用属性理解" class="headerlink" title="第1节 常用属性理解"></a>第1节 常用属性理解</h2><blockquote>
<ol>
<li>stopScroll 停止滚动</li>
</ol>
</blockquote>
<h3 id="1-1-setHasFixedSize-优化"><a href="#1-1-setHasFixedSize-优化" class="headerlink" title="1.1  setHasFixedSize 优化"></a>1.1  setHasFixedSize 优化</h3><blockquote>
<p>官方推荐设置true 理解：告诉RecyclerView我的Item大小不会变，重新绘制的时候不用重新计算</p>
</blockquote>
<p>解释博文：<a href="https://blog.csdn.net/wsdaijianjun/article/details/74735039" target="_blank" rel="noopener">RecyclerView setHasFixedSize(true)的意义</a></p>
<h3 id="1-2-RecyclerView-Adapter-不同数据不同布局"><a href="#1-2-RecyclerView-Adapter-不同数据不同布局" class="headerlink" title="1.2 RecyclerView.Adapter 不同数据不同布局"></a>1.2 RecyclerView.Adapter 不同数据不同布局</h3><p>Demo.java</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemViewType</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mTypeList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">// 横向</span>
            <span class="token keyword">return</span> TYPE_HORIZONTAL<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mTypeList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 纵向</span>
            <span class="token keyword">return</span> TYPE_VERTICAL<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getItemViewType</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@NonNull</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> RecyclerView<span class="token punctuation">.</span>ViewHolder <span class="token function">onCreateViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> ViewGroup parent<span class="token punctuation">,</span> <span class="token keyword">int</span> viewType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>viewType <span class="token operator">==</span> TYPE_HORIZONTAL<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//inflate viewHorizontal</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">HorizontalViewHolder</span><span class="token punctuation">(</span>viewHorizontal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>viewType <span class="token operator">==</span> TYPE_VERTICAL<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//inflate viewVertical</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">VerticalViewHolder</span><span class="token punctuation">(</span>viewVertical<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> null<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onBindViewHolder</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> RecyclerView<span class="token punctuation">.</span>ViewHolder holder<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 布局控制</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>holder <span class="token keyword">instanceof</span> <span class="token class-name">HorizontalViewHolder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mHorizontalList <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>holder <span class="token keyword">instanceof</span> <span class="token class-name">VerticalViewHolder</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>mVerticalList <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="1-3-滑动相关"><a href="#1-3-滑动相关" class="headerlink" title="1.3 滑动相关"></a>1.3 滑动相关</h3><ul>
<li>smoothScrollToPosition(int) 大量数据不理想，查看下文TopSmoothScroller案例，实践过程中TopSmoothScroller在下滑数据量很大的情况下置顶时间过长，滑动时间久会导致使用不舒适</li>
<li>scrollToPosition(int) 滑动到指定位置</li>
<li>scrollBy(int x,int y) 滑动指定像素</li>
</ul>
<p>最终的置顶方案</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">int</span> firstVisibleItemPosition <span class="token operator">=</span> layoutManager<span class="token punctuation">.</span><span class="token function">findFirstVisibleItemPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//当可显示的item大于30时，直接置顶，否则丝滑滚动置顶</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>firstVisibleItemPosition <span class="token operator">></span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mRecyclerView<span class="token punctuation">.</span><span class="token function">scrollToPosition</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        LinearSmoothScroller lss <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TopSmoothScroller</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lss<span class="token punctuation">.</span><span class="token function">setTargetPosition</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        layoutManager<span class="token punctuation">.</span><span class="token function">startSmoothScroll</span><span class="token punctuation">(</span>lss<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="第2节-OnScrollListener"><a href="#第2节-OnScrollListener" class="headerlink" title="第2节 OnScrollListener"></a>第2节 OnScrollListener</h2><h3 id="2-1-三种滑动状态-newState"><a href="#2-1-三种滑动状态-newState" class="headerlink" title="2.1 三种滑动状态 newState"></a>2.1 三种滑动状态 newState</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
 * The RecyclerView is not currently scrolling.（静止没有滚动）
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SCROLL_STATE_IDLE <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">/**
 * The RecyclerView is currently being dragged by outside input such as user touch input.
 *（正在被外部拖拽,一般为用户正在用手指滚动）
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SCROLL_STATE_DRAGGING <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">/**
 * The RecyclerView is currently animating to a final position while not under outside control.
 *（自动滚动）
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SCROLL_STATE_SETTLING <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="2-2-onScrolled"><a href="#2-2-onScrolled" class="headerlink" title="2.2 onScrolled"></a>2.2 onScrolled</h3><blockquote>
<p>onScrolled(RecyclerView recyclerView, int dx, int dy)</p>
</blockquote>
<p>dx : 水平滚动距离<br>dy : 垂直滚动距离</p>
<h2 id="第3节-LinearLayoutManager"><a href="#第3节-LinearLayoutManager" class="headerlink" title="第3节 LinearLayoutManager"></a>第3节 LinearLayoutManager</h2><blockquote>
<p><a href="https://developer.android.com/reference/android/support/v7/widget/LinearLayoutManager.html" target="_blank" rel="noopener">LinearLayoutManager API</a></p>
</blockquote>
<h3 id="2-1-常用API白话理解"><a href="#2-1-常用API白话理解" class="headerlink" title="2.1 常用API白话理解"></a>2.1 常用API白话理解</h3><ol>
<li><strong>位置数量相关</strong></li>
</ol>
<pre class="line-numbers language-java"><code class="language-java">linearLayoutManager<span class="token punctuation">.</span><span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>注解：<em>得到显示屏幕内的list数量</em></p>
<pre class="line-numbers language-java"><code class="language-java">mLinearLayoutManager<span class="token punctuation">.</span><span class="token function">getItemCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>注解：<em>得到list的总数量</em></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">int</span> position <span class="token operator">=</span> linearLayoutManager<span class="token punctuation">.</span><span class="token function">findFirstVisibleItemPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>注解： <font color="red">得到显示屏内的第一个list的位置数position*</font> 类似：<code>findLastVisibleItemPosition</code></p>
<pre class="line-numbers language-java"><code class="language-java">findFirstCompletelyVisibleItemPosition<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>注解：<font color="red">第一个完全显示的Item位置</font> 类似<code>findLastCompletelyVisibleItemPosition</code></p>
<pre class="line-numbers language-java"><code class="language-java">View firstVisiableChildView <span class="token operator">=</span> linearLayoutManager<span class="token punctuation">.</span><span class="token function">findViewByPosition</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>注解：根据position找到这个<font color="red">Item的View</font></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TopSmoothScroller</span> <span class="token keyword">extends</span> <span class="token class-name">LinearSmoothScroller</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token function">TopSmoothScroller</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span> <span class="token keyword">protected</span> <span class="token keyword">int</span> <span class="token function">getHorizontalSnapPreference</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> SNAP_TO_START<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">protected</span> <span class="token keyword">int</span> <span class="token function">getVerticalSnapPreference</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> SNAP_TO_START<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//具体见源码注释</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

LinearSmoothScroller lss <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TopSmoothScroller</span><span class="token punctuation">(</span><span class="token function">getActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
lss<span class="token punctuation">.</span><span class="token function">setTargetPosition</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
layoutManager<span class="token punctuation">.</span><span class="token function">startSmoothScroll</span><span class="token punctuation">(</span>lss<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注解：使滑动到RecyclerView<font color="red">指定位置</font></p>
<pre class="line-numbers language-java"><code class="language-java">canScrollVertically和canScrollHorizontally<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>注解：是否能垂直/水平滑动</p>
<h2 id="第4节-ItemDecoration"><a href="#第4节-ItemDecoration" class="headerlink" title="第4节 ItemDecoration"></a>第4节 ItemDecoration</h2><pre class="line-numbers language-java"><code class="language-java">  <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getItemOffsets</span><span class="token punctuation">(</span>Rect outRect<span class="token punctuation">,</span> View view<span class="token punctuation">,</span> RecyclerView parent<span class="token punctuation">,</span> RecyclerView<span class="token punctuation">.</span>State state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment" spellcheck="true">//根据itemView的位置设置边框大小</span>
        <span class="token keyword">int</span> position <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">getChildAdapterPosition</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
        outRect<span class="token punctuation">.</span>right <span class="token operator">=</span> spaces<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参考：<a href="https://www.jianshu.com/p/6a093bcc6b83" target="_blank" rel="noopener">ItemDecoration解析(二) onDraw onDrawOver</a> 画出Item之间的分割线</p>
<ul>
<li><a href="jianshu.com/p/41ae13016243">RecyclerView系列二：RecyclerView.ItemDecoration的详解使用</a> 【重点】图文结合讲得比较仔细</li>
</ul>
<h3 id="使用案例-RecyclerView分割线"><a href="#使用案例-RecyclerView分割线" class="headerlink" title="使用案例 RecyclerView分割线"></a>使用案例 RecyclerView分割线</h3><script src="https://gist.github.com/Orange168/244c3763887a0cb7584c9de9bbfc72b4.js"></script>

<h2 id="第5-节-ItemTouchHelper"><a href="#第5-节-ItemTouchHelper" class="headerlink" title="第5 节 ItemTouchHelper"></a>第5 节 ItemTouchHelper</h2><pre class="line-numbers language-java"><code class="language-java">ItemTouchHelper<span class="token punctuation">.</span>Callback callback <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DragItemTouchHelper</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
ItemTouchHelper touchHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ItemTouchHelper</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
touchHelper<span class="token punctuation">.</span><span class="token function">attachToRecyclerView</span><span class="token punctuation">(</span>recyclerView<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>DragItemTouchHelper.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DragItemTouchHelper</span> <span class="token keyword">extends</span> <span class="token class-name">ItemTouchHelper<span class="token punctuation">.</span>Callback</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> DragAdapter mAdapter<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">DragItemTouchHelper</span><span class="token punctuation">(</span>DragAdapter adapter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mAdapter <span class="token operator">=</span> adapter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 设置滑动类型标记
     *
     * @param recyclerView
     * @param viewHolder
     * @return 返回一个整数类型的标识，用于判断Item那种移动行为是允许的
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getMovementFlags</span><span class="token punctuation">(</span>RecyclerView recyclerView<span class="token punctuation">,</span> RecyclerView<span class="token punctuation">.</span>ViewHolder viewHolder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment" spellcheck="true">// dragFlags =0 禁止拖动</span>
        <span class="token keyword">int</span> dragFlags <span class="token operator">=</span> ItemTouchHelper<span class="token punctuation">.</span>UP <span class="token operator">|</span> ItemTouchHelper<span class="token punctuation">.</span>DOWN<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 允许上下的拖动</span>
          <span class="token comment" spellcheck="true">//int swipeFlags = ItemTouchHelper.LEFT;  // 只允许从右向左滑动</span>
        <span class="token keyword">int</span> swipeFlags <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 不允许左右滑动</span>
        <span class="token keyword">return</span> <span class="token function">makeMovementFlags</span><span class="token punctuation">(</span>dragFlags<span class="token punctuation">,</span> swipeFlags<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 拖拽切换 Item 的回调
     *
     * @param recyclerView
     * @param viewHolder
     * @param target
     * @return true Item切换了位置，false Item没切换位置
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onMove</span><span class="token punctuation">(</span>RecyclerView recyclerView<span class="token punctuation">,</span> RecyclerView<span class="token punctuation">.</span>ViewHolder viewHolder<span class="token punctuation">,</span> RecyclerView<span class="token punctuation">.</span>ViewHolder target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mAdapter<span class="token punctuation">.</span><span class="token function">onItemMove</span><span class="token punctuation">(</span>viewHolder<span class="token punctuation">.</span><span class="token function">getAdapterPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> target<span class="token punctuation">.</span><span class="token function">getAdapterPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSwiped</span><span class="token punctuation">(</span>RecyclerView<span class="token punctuation">.</span>ViewHolder viewHolder<span class="token punctuation">,</span> <span class="token keyword">int</span> direction<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * Item 是否支持长按拖动
     * @return true  支持长按操作，false 不支持长按操作
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isLongPressDragEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * Item 是否支持滑动
     * @return true  支持滑动操作，false 不支持滑动操作
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isItemViewSwipeEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * Item被选中时候回调
     *
     * @param viewHolder
     * @param actionState 当前Item的状态
     *                    ItemTouchHelper.ACTION_STATE_IDLE   闲置状态
     *                    ItemTouchHelper.ACTION_STATE_SWIPE  滑动中状态
     *                    ItemTouchHelper#ACTION_STATE_DRAG   拖拽中状态
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSelectedChanged</span><span class="token punctuation">(</span>RecyclerView<span class="token punctuation">.</span>ViewHolder viewHolder<span class="token punctuation">,</span> <span class="token keyword">int</span> actionState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// item 被选中的操作</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>actionState <span class="token operator">!=</span> ItemTouchHelper<span class="token punctuation">.</span>ACTION_STATE_IDLE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            viewHolder<span class="token punctuation">.</span>itemView<span class="token punctuation">.</span><span class="token function">setBackgroundResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>select_bg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onSelectedChanged</span><span class="token punctuation">(</span>viewHolder<span class="token punctuation">,</span> actionState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">clearView</span><span class="token punctuation">(</span>RecyclerView recyclerView<span class="token punctuation">,</span> RecyclerView<span class="token punctuation">.</span>ViewHolder viewHolder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 操作完毕后恢复颜色</span>
        viewHolder<span class="token punctuation">.</span>itemView<span class="token punctuation">.</span><span class="token function">setBackgroundResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>common_bg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">clearView</span><span class="token punctuation">(</span>recyclerView<span class="token punctuation">,</span> viewHolder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

     <span class="token comment" spellcheck="true">/**
     * 移动过程中重新绘制 Item，随着滑动的距离，设置 Item 的透明度
     *  @param isCurrentlyActive True if this view is currently being controlled by the user or
     *                          false it is simply animating back to its original state.
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onChildDraw</span><span class="token punctuation">(</span>Canvas c<span class="token punctuation">,</span> RecyclerView recyclerView<span class="token punctuation">,</span> RecyclerView<span class="token punctuation">.</span>ViewHolder viewHolder<span class="token punctuation">,</span> <span class="token keyword">float</span> dX<span class="token punctuation">,</span> <span class="token keyword">float</span> dY<span class="token punctuation">,</span> <span class="token keyword">int</span> actionState<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isCurrentlyActive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">float</span> x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>dX<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0.5f</span><span class="token punctuation">;</span>
        <span class="token keyword">float</span> width <span class="token operator">=</span> viewHolder<span class="token punctuation">.</span>itemView<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">float</span> alpha <span class="token operator">=</span> <span class="token number">1f</span> <span class="token operator">-</span> x <span class="token operator">/</span> width<span class="token punctuation">;</span>
        viewHolder<span class="token punctuation">.</span>itemView<span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span>alpha<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onChildDraw</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> recyclerView<span class="token punctuation">,</span> viewHolder<span class="token punctuation">,</span> dX<span class="token punctuation">,</span> dY<span class="token punctuation">,</span> actionState<span class="token punctuation">,</span> isCurrentlyActive<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onChildDrawOver</span><span class="token punctuation">(</span>Canvas c<span class="token punctuation">,</span> RecyclerView recyclerView<span class="token punctuation">,</span>
                              ViewHolder viewHolder<span class="token punctuation">,</span>
                              <span class="token keyword">float</span> dX<span class="token punctuation">,</span> <span class="token keyword">float</span> dY<span class="token punctuation">,</span> <span class="token keyword">int</span> actionState<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isCurrentlyActive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Recylcerview-常用功能实现"><a href="#Recylcerview-常用功能实现" class="headerlink" title="Recylcerview 常用功能实现"></a>Recylcerview 常用功能实现</h2><ol>
<li><p>水平滑动时不是最后一个Item, 都显示居中</p>
</li>
<li><p>左右联动 <a href="https://github.com/cnwutianhao/RecyclerView/tree/master/app/src/main/java/com/haocent/android/recyclerview/link" target="_blank" rel="noopener">LinkActivity.java</a></p>
<p><img src="https://upload-images.jianshu.io/upload_images/1942828-20138c435cdfbe5c.gif" alt=""></p>
</li>
</ol>
<h1 id="滑动事件冲突"><a href="#滑动事件冲突" class="headerlink" title="滑动事件冲突"></a>滑动事件冲突</h1><p><a href="https://www.jianshu.com/p/d82f426ba8f7" target="_blank" rel="noopener">Android事件分发机制及滑动冲突解决方案</a>【讲解比较详细】,提供两种方式</p>
<ol>
<li>外部拦截法</li>
<li>内部拦截法</li>
</ol>
<p><a href="https://blog.csdn.net/wjj1996825/article/details/99700345" target="_blank" rel="noopener">浅谈RecycleView嵌套RecycleView竖向滑动冲突解决</a></p>
<pre class="line-numbers language-java"><code class="language-java">onInterceptTouchEvent <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 不向下分发，自己消费这次事件</span>
onTouchEvent <span class="token operator">==</span> <span class="token boolean">true</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 不向上分发，自己消费这次事件</span>
parent<span class="token punctuation">.</span><span class="token function">requestDisallowInterceptTouchEvent</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 请求父类true不拦截，false 请求父控件拦截</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h1 id="RecyclerView-源码解析"><a href="#RecyclerView-源码解析" class="headerlink" title="RecyclerView 源码解析"></a>RecyclerView 源码解析</h1><ul>
<li><a href="https://blog.csdn.net/sdfdzx/article/details/79594518" target="_blank" rel="noopener">RecyclerView源码解析(一)——绘制流程</a></li>
</ul>
<h1 id="RecyclerView-优化"><a href="#RecyclerView-优化" class="headerlink" title="RecyclerView 优化"></a>RecyclerView 优化</h1><ul>
<li><a href="https://blog.csdn.net/smileiam/article/details/88396546" target="_blank" rel="noopener">RecyclerView性能优化及高级使用</a></li>
</ul>
<h1 id="实践心酸采坑史"><a href="#实践心酸采坑史" class="headerlink" title="实践心酸采坑史"></a>实践心酸采坑史</h1><h2 id="第9条命-BaseQuickAdapter-getViewByPosition"><a href="#第9条命-BaseQuickAdapter-getViewByPosition" class="headerlink" title="第9条命 BaseQuickAdapter.getViewByPosition"></a>第9条命 BaseQuickAdapter.getViewByPosition</h2><blockquote>
<p><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⚠</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/26a0.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><font color="red"> 这个方法只有在Adapter不复用View的情况下能找到View</font>,即子View全部可见时</p>
<p> <span class="github-emoji" style="display:inline;vertical-align:middle"><span>🐛</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 故事：NestedScrollView -&gt;(换成) LinearLayout， 导致无法找到子View ==&gt; <span class="github-emoji" style="display:inline;vertical-align:middle"><span>🐛</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> NullpointerException</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java">   <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      EditText
          etPrice <span class="token operator">=</span>
          <span class="token punctuation">(</span>EditText<span class="token punctuation">)</span> mAdapter<span class="token punctuation">.</span><span class="token function">getViewByPosition</span><span class="token punctuation">(</span>mRecyclerView<span class="token punctuation">,</span> i<span class="token punctuation">,</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>et_dialog_price<span class="token punctuation">)</span><span class="token punctuation">;</span>
      String priceStr <span class="token operator">=</span> etPrice<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="实战经验"><a href="#实战经验" class="headerlink" title="实战经验"></a>实战经验</h1><h2 id="经验1-RecyclerView中最后Editext被软盘遮挡"><a href="#经验1-RecyclerView中最后Editext被软盘遮挡" class="headerlink" title="经验1  RecyclerView中最后Editext被软盘遮挡"></a>经验1  RecyclerView中最后Editext被软盘遮挡</h2><p><span class="github-emoji" style="display:inline;vertical-align:middle"><span>❓</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2753.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> <strong>问题描述</strong>：</p>
<p>布局类似于</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RelativeLayout</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NestedScrollView</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout1</span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout2</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RecyclerView</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span><span class="token punctuation">/></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RecyclerView</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout2</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NestedScrollView</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RelativeLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>adjustPan和adjustResize设置为我的活动，但是没有任何效果</li>
<li><font color="red"><b>问题描述:</b></font>当RecycleView的item满屏的时候点击最后一个EditText，EditText会被软盘遮挡</li>
</ul>
<p>:+1: <strong>解决</strong> <font color="green"><b>RecyclerView</b></font> 加入属性 <code>android:descendantFocusability="beforeDescendants"</code></p>
<pre class="line-numbers language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.recyclerview.widget.RecyclerView</span>
            <span class="token attr-name">....</span>
        <span class="token attr-name"><span class="token namespace">android:</span>descendantFocusability</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>beforeDescendants<span class="token punctuation">"</span></span>
                <span class="token attr-name">...</span>
<span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="经验2-NestedScrollView-中RecyclerView-底部按钮"><a href="#经验2-NestedScrollView-中RecyclerView-底部按钮" class="headerlink" title="经验2 NestedScrollView 中RecyclerView + 底部按钮"></a>经验2 NestedScrollView 中RecyclerView + 底部按钮</h2><blockquote>
<p>应用场景RecyclerView显示所以item， RecyclerView显示完后显示底部布局，RecyclerView有少量数据，底部布局紧贴屏幕底部</p>
</blockquote>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.core.widget.NestedScrollView</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>fillViewport</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.recyclerview.widget.RecyclerView</span>
        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@+id/mRecyclerView<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>layout_weight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">app:</span>layoutManager</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>androidx.recyclerview.widget.LinearLayoutManager<span class="token punctuation">"</span></span>
        <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span><span class="token punctuation">></span></span>
    ....
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>androidx.core.widget.NestedScrollView</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="一些比较有趣的用法"><a href="#一些比较有趣的用法" class="headerlink" title="一些比较有趣的用法"></a>一些比较有趣的用法</h1><h2 id="ListView-Google-推荐的优化方法"><a href="#ListView-Google-推荐的优化方法" class="headerlink" title="ListView Google 推荐的优化方法"></a>ListView Google 推荐的优化方法</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> View <span class="token function">getView</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">,</span> View convertView<span class="token punctuation">,</span> ViewGroup parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"MyAdapter"</span><span class="token punctuation">,</span> <span class="token string">"Position:"</span> <span class="token operator">+</span> position <span class="token operator">+</span> <span class="token string">"---"</span>
            <span class="token operator">+</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ViewHolder holder<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>convertView <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> LayoutInflater inflater <span class="token operator">=</span> <span class="token punctuation">(</span>LayoutInflater<span class="token punctuation">)</span> mContext
                <span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>LAYOUT_INFLATER_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        convertView <span class="token operator">=</span> inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>list_item_icon_text<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
        holder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ViewHolder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        holder<span class="token punctuation">.</span>icon <span class="token operator">=</span> <span class="token punctuation">(</span>ImageView<span class="token punctuation">)</span> convertView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>icon<span class="token punctuation">)</span><span class="token punctuation">;</span>
        holder<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token punctuation">(</span>TextView<span class="token punctuation">)</span> convertView<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
        convertView<span class="token punctuation">.</span><span class="token function">setTag</span><span class="token punctuation">(</span>holder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        holder <span class="token operator">=</span> <span class="token punctuation">(</span>ViewHolder<span class="token punctuation">)</span> convertView<span class="token punctuation">.</span><span class="token function">getTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    holder<span class="token punctuation">.</span>icon<span class="token punctuation">.</span><span class="token function">setImageResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>icon<span class="token punctuation">)</span><span class="token punctuation">;</span>
    holder<span class="token punctuation">.</span>text<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>mData<span class="token punctuation">[</span>position<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> convertView<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ViewHolder</span> <span class="token punctuation">{</span>
    ImageView icon<span class="token punctuation">;</span>
    TextView text<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="ListView-MultiChoiceModeListener"><a href="#ListView-MultiChoiceModeListener" class="headerlink" title="ListView MultiChoiceModeListener"></a>ListView MultiChoiceModeListener</h2><pre class="line-numbers language-java"><code class="language-java"> listView<span class="token punctuation">.</span><span class="token function">setChoiceMode</span><span class="token punctuation">(</span>ListView<span class="token punctuation">.</span>CHOICE_MODE_MULTIPLE_MODAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
    listView<span class="token punctuation">.</span><span class="token function">setMultiChoiceModeListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MultiChoiceModeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onItemCheckedStateChanged</span><span class="token punctuation">(</span>ActionMode mode<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">,</span> <span class="token keyword">long</span> id<span class="token punctuation">,</span>
          <span class="token keyword">boolean</span> checked<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>checked<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setBo</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          adapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          num<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setBo</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          adapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          num<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        mode<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"  "</span> <span class="token operator">+</span> num <span class="token operator">+</span> <span class="token string">" Selected"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onCreateActionMode</span><span class="token punctuation">(</span>ActionMode mode<span class="token punctuation">,</span> Menu menu<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        MenuInflater inflater <span class="token operator">=</span> mode<span class="token punctuation">.</span><span class="token function">getMenuInflater</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        inflater<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>menu<span class="token punctuation">.</span>action_mode<span class="token punctuation">,</span> menu<span class="token punctuation">)</span><span class="token punctuation">;</span>
        num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        adapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onPrepareActionMode</span><span class="token punctuation">(</span>ActionMode mode<span class="token punctuation">,</span> Menu menu<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        adapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setBo</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onActionItemClicked</span><span class="token punctuation">(</span>ActionMode mode<span class="token punctuation">,</span> MenuItem item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getItemId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>menu_delete<span class="token operator">:</span>
            adapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mode<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>action_save<span class="token operator">:</span>
            <span class="token comment" spellcheck="true">//通过mode.getmenu 来控制menu的显示</span>
                mode<span class="token punctuation">.</span><span class="token function">getMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>
                <span class="token function">findItem</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>action_save<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setIcon</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ic_action_unsave<span class="token punctuation">)</span><span class="token punctuation">;</span>
            mode<span class="token punctuation">.</span><span class="token function">getMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findItem</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>menu_delete<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            adapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDestroyActionMode</span><span class="token punctuation">(</span>ActionMode mode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        adapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><ul>
<li><a href="https://www.jianshu.com/p/1d323775e2f5" target="_blank" rel="noopener">开发笔记-GridLayoutManager实现Item均匀分布</a></li>
<li><a href="https://stackoverflow.com/questions/40587168/simple-android-grid-example-using-recyclerview-with-gridlayoutmanager-like-the" target="_blank" rel="noopener">Simple Android grid example using RecyclerView with GridLayoutManager (like the old GridView)</a></li>
<li><a href="https://juejin.im/post/5a4481e651882527a00fa7d0" target="_blank" rel="noopener">RecyclerView滑动距离计算</a></li>
</ul>
<h2 id="开源库"><a href="#开源库" class="headerlink" title="开源库"></a>开源库</h2><ul>
<li><p><a href="https://github.com/CymChad/BaseRecyclerViewAdapterHelper" target="_blank" rel="noopener">BaseRecyclerViewAdapterHelper</a><br>集成配置</p>
<pre class="line-numbers language-groovy"><code class="language-groovy">allprojects <span class="token punctuation">{</span>
    repositories <span class="token punctuation">{</span>
        maven <span class="token punctuation">{</span> url <span class="token string">"https://jitpack.io"</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

dependencies <span class="token punctuation">{</span>
        compile <span class="token string">'com.github.CymChad:BaseRecyclerViewAdapterHelper:VERSION_CODE'</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>最新发布版本： <a href="https://github.com/CymChad/BaseRecyclerViewAdapterHelper/releases" target="_blank" rel="noopener">release</a>  截止2020-01-12最新 VERSION_CODE=3.0.0-beta11</p>
<p><a href="https://www.niwoxuexi.com/blog/android/article/532.html" target="_blank" rel="noopener">最好用的BaseRecyclerViewAdapterHelper解决recyclerview的繁琐工作</a></p>
</li>
<li><p><a href="https://github.com/bleeding182/recyclerviewItemDecorations?utm_source=androidweekly.io&amp;utm_medium=website" target="_blank" rel="noopener">recyclerviewItemDecorations</a> ItemDecoration 实现比较特殊的效果<br><img src="https://tva1.sinaimg.cn/large/0081Kckwly1gl4zv1g2tag30dc0ar4a3.gif" alt=""></p>
</li>
<li><p><a href="https://github.com/saiwu-bigkoo/Android-ConvenientBanner" target="_blank" rel="noopener">Android-ConvenientBanner</a></p>
</li>
<li><p><a href="https://github.com/cnwutianhao/RecyclerView" target="_blank" rel="noopener">RecyclerView</a> 的使用方法</p>
</li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>总结</tag>
        <tag>实践</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 插件化实践</title>
    <url>/2020/12/31/2020-12-32-plugin/</url>
    <content><![CDATA[<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="插件化对比"><a href="#插件化对比" class="headerlink" title="插件化对比"></a>插件化对比</h2><p>Atlas：<a href="https://alibaba.github.io/atlas/" target="_blank" rel="noopener">https://alibaba.github.io/atlas/</a></p>
<p>VirtualAPK：<a href="https://link.jianshu.com/?t=https:/github.com/didi/VirtualAPK/wiki" target="_blank" rel="noopener">https://github.com/didi/VirtualAPK/wiki</a></p>
<p>RePlugin：<a href="https://link.jianshu.com/?t=https:/github.com/Qihoo360/RePlugin/wiki" target="_blank" rel="noopener">https://github.com/Qihoo360/RePlugin/wiki</a></p>
<table>
<thead>
<tr>
<th><strong>框架</strong></th>
<th><strong>Atlas</strong></th>
<th><strong>RePlugin</strong></th>
<th><strong>VirtualAPK</strong></th>
</tr>
</thead>
<tbody><tr>
<td><strong>定义</strong></td>
<td>Atlas是伴随着手机淘宝的不断发展而衍生出来的一个运行于Android系统上的一个容器化框架，我们也叫动态组件化(Dynamic Bundle)框架。</td>
<td>RePlugin是一套完整的、稳定的、适合全面使用的，占坑类插件化方案。</td>
<td>VirtualAPK是滴滴出行自研的一款优秀的插件化框架。</td>
</tr>
<tr>
<td><strong>功能</strong></td>
<td>1.远程bundle2.插件以so形式，放在sdcard，加载后会自动删除。3.热修复，可以不升级apk就实现宿主和组件的更新。</td>
<td>1.远程bundle2.插件以apk形式放在sdcard，加载后还在会自动备份apk到缓存目录。</td>
<td>1.远程bundle2.插件以apk形式放在sdcard，加载后还在，删除会打不开。</td>
</tr>
<tr>
<td><strong>更新插件方式</strong></td>
<td>必须要和宿主一起，打差异补丁才能更新。</td>
<td>直接通过下载一个新的插件apk，然后调安装方法就能实现插件的更新。</td>
<td>直接通过下载一个新的插件apk，然后调安装方法就能实现插件的更新。</td>
</tr>
<tr>
<td><strong>插件独立性</strong></td>
<td>和宿主的依赖还是挺多，毕竟官方也强调是组件化，不是插件化。</td>
<td>插件不用声明和宿主的联系，所以你生成一个插件后，这个插件可以给其他宿主调用。</td>
<td>插件是一个独立的apk，但插件里面也定义和宿主的关联，就是说这个插件apk并不能给其他宿主用，只能给插件里面声明的那个宿主使用。</td>
</tr>
</tbody></table>
<p><strong>总结</strong></p>
<p>  VirtualAPK不支持对宿主进行热修复。如果app需要热更新和插件的功能，推荐使用Atlas；如果插件无法很好地从宿主中拆出来，或者插件的运行和宿主有较多的交互，推荐使用VirtualAPK；如果同一个插件希望其他宿主也能用的话，那就只能RePlugin了，RePlugin就像一个应用市场，宿主仅仅是一个壳，然后把需要的插件下载加载使用就行，更新的话也无需更新宿主，直接更新插件就行。</p>



<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2>]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>插件化</tag>
      </tags>
  </entry>
  <entry>
    <title>开发必备工具Charles使用补缺</title>
    <url>/2020/12/26/2020-12-26-charles%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="Rewrite-功能"><a href="#Rewrite-功能" class="headerlink" title="Rewrite 功能"></a>Rewrite 功能</h2><ol>
<li><p>修改Header</p>
</li>
<li><p>修改Body</p>
<ol>
<li>修改request的Body</li>
<li>修改response的Body 【常用】 </li>
</ol>
</li>
<li><p>修改query param</p>
</li>
<li><p>修改url</p>
</li>
</ol>
<h3 id="修改Response指定参数"><a href="#修改Response指定参数" class="headerlink" title="修改Response指定参数"></a>修改Response指定参数</h3><p><img src="https://cdn.linz.tech/charles_rewrite.jpg" alt=""></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token string">"redBagNum"</span><span class="token operator">:</span>\s<span class="token operator">*</span><span class="token number">2</span> 
<span class="token string">"redBagNum"</span><span class="token operator">:</span> <span class="token number">5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="其他看附录"><a href="#其他看附录" class="headerlink" title="其他看附录"></a>其他看附录</h3><h2 id="DNS-Spoofiing"><a href="#DNS-Spoofiing" class="headerlink" title="DNS Spoofiing"></a>DNS Spoofiing</h2><blockquote>
<p>把当前访问的域名指定访问其他的地址</p>
</blockquote>
<p><font color="red">注意：端口不能指定</font></p>
<h2 id="Compose"><a href="#Compose" class="headerlink" title="Compose"></a>Compose</h2><blockquote>
<p>修改提交的参数或者新建一个新的请求测试新的Api</p>
</blockquote>
<h2 id="Mirror"><a href="#Mirror" class="headerlink" title="Mirror"></a><a href="https://www.cnblogs.com/xiaobaibailongma/p/12430165.html" target="_blank" rel="noopener">Mirror</a></h2><blockquote>
<p>缓存所有或指定Api map local 可以使用</p>
</blockquote>
<h2 id="New-Session"><a href="#New-Session" class="headerlink" title="New Session"></a>New Session</h2><blockquote>
<p>操作路径 menu -&gt; file</p>
</blockquote>
<p>使用场景暂时保存当前访问的API所有的数据，新的访问会保存在新建的Session中</p>
<h2 id="小计"><a href="#小计" class="headerlink" title="小计"></a>小计</h2><ol>
<li><p>Map </p>
<ol>
<li><p>Local功能最适合本地参数修改，模拟后台返回的数据可能性，不用和后台联调，提高应用的健壮性</p>
</li>
<li><p>remote功能适合，1. 重定向服务器地址</p>
<blockquote>
<p>应用场景当和多个后台开发功能模块时，后台进度不一致，需要多次切换后台调试接口，这个时候可以改动remote参照就行调试</p>
</blockquote>
</li>
<li><p>Rewrite 功能强大，但是设置繁琐适合一些需要比较固定的参数修改</p>
</li>
<li><p>Breakpoints 仅仅试用于当触发Api时截断它，修改参数或查看参数后判断是否进行访问</p>
<blockquote>
<p>可以用在调试时想看请求参数，但是不想修改服务器数据 </p>
</blockquote>
</li>
</ol>
</li>
</ol>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2>]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>30分钟快速上手笔记FlexboxLayout</title>
    <url>/2020/12/20/2020-12-20-Android-flexbox-layout/</url>
    <content><![CDATA[<h2 id="Github-官网入手"><a href="#Github-官网入手" class="headerlink" title="Github 官网入手"></a>Github 官网入手</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><blockquote>
<p>FlexboxLayout is a library project which brings the similar capabilities of <a href="https://www.w3.org/TR/css-flexbox-1" target="_blank" rel="noopener">CSS Flexible Box Layout Module</a> to Android.</p>
</blockquote>
<p><strong>Installtion</strong></p>
<p>默认使用<strong>AndroidX</strong></p>
<pre class="line-numbers language-java"><code class="language-java">dependencies <span class="token punctuation">{</span>
    implementation <span class="token string">'com.google.android:flexbox:2.0.1'</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>非<strong>AndroidX</strong> </p>
<pre class="line-numbers language-groovy"><code class="language-groovy">dependencies <span class="token punctuation">{</span>
    implementation <span class="token string">'com.google.android:flexbox:1.0.0'</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="基本属性上手"><a href="#基本属性上手" class="headerlink" title="基本属性上手"></a>基本属性上手</h3><p>不用配置环境下载（<strong><span class="github-emoji" style="display:inline;vertical-align:middle"><span>😢</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>我丫配置环境打包花了斤2个小时</strong>）, 打包好的Apk 官方<a href="https://cdn.linz.tech/demo-playground-debug.apk" target="_blank" rel="noopener">demo-playground-debug.apk</a> 下载，跟着官方app操作一下基本上手</p>
<p><img src="https://cdn.linz.tech/demo_playground_apk_download.png" alt=""></p>
<h3 id="子View属性"><a href="#子View属性" class="headerlink" title="子View属性"></a>子View属性</h3><p>下载以上Demo直接跟着官网Demo修改体验一下马上入门</p>
<h3 id="分割线设置"><a href="#分割线设置" class="headerlink" title="分割线设置"></a>分割线设置</h3><ul>
<li><p><strong>showDividerHorizontal</strong> (one or more of <code>none | beginning | middle | end</code>)</p>
</li>
<li><p><strong>dividerDrawableHorizontal</strong> (reference to a drawable)</p>
<ul>
<li>Puts horizontal dividers between flex lines (or flex items when flexDirection is set to <code>column</code> or <code>column_rebase</code>).</li>
</ul>
</li>
<li><p><strong>showDividerVertical</strong> (one or more of <code>none | beginning | middle | end</code>)</p>
</li>
<li><p><strong>dividerDrawableVertical</strong> (reference to a drawable)</p>
<ul>
<li>Puts vertical dividers between flex items (or flex lines when flexDirection is set to <code>column</code> or <code>column_rebase</code>).</li>
</ul>
</li>
<li><p><strong>showDivider</strong> (one or more of <code>none | beginning | middle | end</code>)</p>
</li>
<li><p><strong>dividerDrawable</strong> (reference to a drawable)</p>
<ul>
<li>Shorthand for setting both horizontal and vertical dividers. Note that if used with other attributes (such as <code>justifyContent="space_around"</code> or <code>alignContent="space_between"</code> … etc) for putting spaces between flex lines or flex items, you may see unexpected spaces. Please avoid using these at the same time.</li>
</ul>
<p>案例：</p>
<p><code>res/drawable/divider.xml</code></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>size</span>
      <span class="token attr-name"><span class="token namespace">android:</span>width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8dp<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">android:</span>height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>12dp<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>solid</span> <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#44A444<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>android<span class="token punctuation">.</span>flexbox<span class="token punctuation">.</span>FlexboxLayout xmlns<span class="token operator">:</span>android<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res/android"</span>
  xmlns<span class="token operator">:</span>app<span class="token operator">=</span><span class="token string">"http://schemas.android.com/apk/res-auto"</span>
  android<span class="token operator">:</span>layout_width<span class="token operator">=</span><span class="token string">"match_parent"</span>
  android<span class="token operator">:</span>layout_height<span class="token operator">=</span><span class="token string">"match_parent"</span>
  app<span class="token operator">:</span>alignContent<span class="token operator">=</span><span class="token string">"flex_start"</span>
  app<span class="token operator">:</span>alignItems<span class="token operator">=</span><span class="token string">"flex_start"</span>
  app<span class="token operator">:</span>flexWrap<span class="token operator">=</span><span class="token string">"wrap"</span>
  app<span class="token operator">:</span>showDivider<span class="token operator">=</span><span class="token string">"beginning|middle"</span>
  app<span class="token operator">:</span>dividerDrawable<span class="token operator">=</span><span class="token string">"@drawable/divider"</span> <span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="FlexboxLayoutManager"><a href="#FlexboxLayoutManager" class="headerlink" title="FlexboxLayoutManager"></a>FlexboxLayoutManager</h3><p>In RecyclerView</p>
<pre class="line-numbers language-java"><code class="language-java">RecyclerView recyclerView <span class="token operator">=</span> <span class="token punctuation">(</span>RecyclerView<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>recyclerview<span class="token punctuation">)</span><span class="token punctuation">;</span>
FlexboxLayoutManager layoutManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FlexboxLayoutManager</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
layoutManager<span class="token punctuation">.</span><span class="token function">setFlexDirection</span><span class="token punctuation">(</span>FlexDirection<span class="token punctuation">.</span>COLUMN<span class="token punctuation">)</span><span class="token punctuation">;</span>
layoutManager<span class="token punctuation">.</span><span class="token function">setJustifyContent</span><span class="token punctuation">(</span>JustifyContent<span class="token punctuation">.</span>FLEX_END<span class="token punctuation">)</span><span class="token punctuation">;</span>
recyclerView<span class="token punctuation">.</span><span class="token function">setLayoutManager</span><span class="token punctuation">(</span>layoutManager<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>设置子View</p>
<pre class="line-numbers language-java"><code class="language-java">mImageView<span class="token punctuation">.</span><span class="token function">setImageDrawable</span><span class="token punctuation">(</span>drawable<span class="token punctuation">)</span><span class="token punctuation">;</span>
ViewGroup<span class="token punctuation">.</span>LayoutParams lp <span class="token operator">=</span> mImageView<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>lp <span class="token keyword">instanceof</span> <span class="token class-name">FlexboxLayoutManager<span class="token punctuation">.</span>LayoutParams</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    FlexboxLayoutManager<span class="token punctuation">.</span>LayoutParams flexboxLp <span class="token operator">=</span> <span class="token punctuation">(</span>FlexboxLayoutManager<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">)</span> lp<span class="token punctuation">;</span>
    flexboxLp<span class="token punctuation">.</span><span class="token function">setFlexGrow</span><span class="token punctuation">(</span><span class="token number">1.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    flexboxLp<span class="token punctuation">.</span><span class="token function">setAlignSelf</span><span class="token punctuation">(</span>AlignSelf<span class="token punctuation">.</span>FLEX_END<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>Recycle</strong>复用View</p>
<h4 id="FlexBoxLayout-vs-FlexboxLayoutManager"><a href="#FlexBoxLayout-vs-FlexboxLayoutManager" class="headerlink" title="FlexBoxLayout vs FlexboxLayoutManager"></a><strong>FlexBoxLayout vs FlexboxLayoutManager</strong></h4><table>
<thead>
<tr>
<th>Attribute / Feature</th>
<th>FlexboxLayout</th>
<th>FlexboxLayoutManager (RecyclerView)</th>
</tr>
</thead>
<tbody><tr>
<td>flexDirection</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
</tr>
<tr>
<td>flexWrap</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a> (except <code>wrap_reverse</code>)</td>
</tr>
<tr>
<td>justifyContent</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
</tr>
<tr>
<td>alignItems</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
</tr>
<tr>
<td>alignContent</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
<td>-</td>
</tr>
<tr>
<td>layout_order</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
<td>-</td>
</tr>
<tr>
<td>layout_flexGrow</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
</tr>
<tr>
<td>layout_flexShrink</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
</tr>
<tr>
<td>layout_alignSelf</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
</tr>
<tr>
<td>layout_flexBasisPercent</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
</tr>
<tr>
<td>layout_(min/max)Width</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
</tr>
<tr>
<td>layout_(min/max)Height</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
</tr>
<tr>
<td>layout_wrapBefore</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
</tr>
<tr>
<td>Divider</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
</tr>
<tr>
<td>View recycling</td>
<td>-</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
</tr>
<tr>
<td>Scrolling</td>
<td>*1</td>
<td><a href="https://github.com/google/flexbox-layout/blob/master/assets/pngs/check_green_small.png" target="_blank" rel="noopener"><img src="https://github.com/google/flexbox-layout/raw/master/assets/pngs/check_green_small.png" alt="Check"></a></td>
</tr>
</tbody></table>
<h2 id="踩坑记录"><a href="#踩坑记录" class="headerlink" title="踩坑记录"></a>踩坑记录</h2><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2>]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>QMUI_Android UI框架研究系列一</title>
    <url>/2020/12/19/2020-12-19-QMUI-Android%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0%E4%B8%80/</url>
    <content><![CDATA[<h1 id="QMUI-Android"><a href="#QMUI-Android" class="headerlink" title="QMUI_Android"></a><a href="https://github.com/Tencent/QMUI_Android" target="_blank" rel="noopener">QMUI_Android</a></h1>]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>uni-app 学习笔记</title>
    <url>/2020/12/19/2020-12-19-uni-app-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="框架结构"><a href="#框架结构" class="headerlink" title="框架结构"></a>框架结构</h1><p><img src="https://cdn.linz.tech/uni-app-framework.png" alt=""></p>
<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p>┌─cloudfunctions        云函数目录（阿里云为aliyun，腾讯云为tcb，详见uniCloud）<br>│─components            符合vue组件规范的uni-app组件目录<br>│  └─comp-a.vue         可复用的a组件<br>├─hybrid                存放本地网页的目录，<a href="https://uniapp.dcloud.io/component/web-view" target="_blank" rel="noopener">详见</a><br>├─platforms             存放各平台专用页面的目录，<a href="https://uniapp.dcloud.io/platform?id=%E6%95%B4%E4%BD%93%E7%9B%AE%E5%BD%95%E6%9D%A1%E4%BB%B6%E7%BC%96%E8%AF%91" target="_blank" rel="noopener">详见</a><br>├─pages                 业务页面文件存放的目录<br>│  ├─index<br>│  │  └─index.vue       index页面<br>│  └─list<br>│     └─list.vue        list页面<br>├─static                存放应用引用静态资源（如图片、视频等）的目录，注意：静态资源只能存放于此<br>├─wxcomponents          存放小程序组件的目录，详见<br>├─main.js               Vue初始化入口文件<br>├─App.vue               应用配置，用来配置App全局样式以及监听 应用生命周期<br>├─manifest.json         配置应用名称、appid、logo、版本等打包信息，详见<br>└─pages.json            配置页面路由、导航条、选项卡等页面类信息，详见</p>
<h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="vue和nvue"><a href="#vue和nvue" class="headerlink" title="vue和nvue"></a>vue和nvue</h2><blockquote>
<p><code>uni-app</code>是逻辑和渲染分离的。渲染层，在app端提供了<font color="black"><strong>两套排版引擎</strong></font>：<font color="red">小程序方式的webview渲染和weex方式的原生渲染</font>。  两种渲染引擎可以自己根据需要选。vue文件走的webview渲染，nvue走的原生渲染，二者可以混用，根据需要采用不同的渲染引擎。  组件和JavaScript写法是一样的，css不一样，原生排版的能用的css必须是flex布局，这是web的css的子集。</p>
</blockquote>
<p><strong>nvue优势</strong></p>
<blockquote>
<p>总结：在一些复杂交互或要求极致体验上</p>
</blockquote>
<ol>
<li>需要高性能的区域长列表或瀑布流滚动==&gt; 使用nvue的list、recycle-list、waterfall等组件</li>
<li>复杂高性能的自定义下拉刷新。==&gt; 推荐使用nvue的refresh组件</li>
<li>左右拖动的长列表。</li>
<li>实现区域滚动长列表+左右拖动列表+吸顶的复杂排版效果 ==&gt; hello uni-app模板里的swiper-list</li>
<li>原生软盘交互，如软盘显示发送/搜索</li>
<li>解决前端控件无法覆盖原生控件的层级问题</li>
</ol>
<p><strong>vue优势</strong></p>
<ol>
<li>nvue的canvas性能不高，尤其是Android App平台</li>
</ol>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="第1节-教学资源"><a href="#第1节-教学资源" class="headerlink" title="第1节 教学资源"></a>第1节 教学资源</h2><p><strong>四大教育网站</strong></p>
<ul>
<li><a href="https://ke.qq.com/course/list/uni-app?tuin=269fe6b" target="_blank" rel="noopener">腾讯课堂的uni-app相关课程</a></li>
<li><a href="https://study.163.com/courses-search?keyword=uni-app" target="_blank" rel="noopener">网易课堂的uni-app相关课程</a></li>
<li><a href="https://search.bilibili.com/all?keyword=uni-app&amp;from_source=nav_search_new" target="_blank" rel="noopener">bilibili的uni-app相关视频</a></li>
<li><a href="https://www.imooc.com/search/?words=uni-app" target="_blank" rel="noopener">慕课网uni-app相关课程</a></li>
</ul>
<h2 id="第2节-官方文档"><a href="#第2节-官方文档" class="headerlink" title="第2节 官方文档"></a>第2节 官方文档</h2><h2 id="第3节-常用配置"><a href="#第3节-常用配置" class="headerlink" title="第3节 常用配置"></a>第3节 常用配置</h2><h2 id="第三方SDK"><a href="#第三方SDK" class="headerlink" title="第三方SDK"></a>第三方SDK</h2>]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>uni-app</tag>
      </tags>
  </entry>
  <entry>
    <title>HBuilderX 学习笔记</title>
    <url>/2020/12/19/2020-12-19-HBuilderX-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h2><h3 id="快捷"><a href="#快捷" class="headerlink" title="快捷"></a>快捷</h3><p><strong>常用快捷键</strong></p>
<table>
<thead>
<tr>
<th>快速键作用</th>
<th>快捷键</th>
<th>使用频率</th>
</tr>
</thead>
<tbody><tr>
<td>快速搜索文件</td>
<td>Ctrl + p</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td>显示/隐藏项目管理器</td>
<td>Alt + q</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td>显示/隐藏内置浏览器</td>
<td>Alt + p</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td>显示/隐藏文本结构</td>
<td>Alt + w</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td>格式化代码</td>
<td>Ctrl + k</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td>关闭当前TAB页</td>
<td>ctrl+ w</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td>全屏显示</td>
<td>F11</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td>跳转到某行代码</td>
<td>ctrl+ g</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td>在当前目录查找字符串</td>
<td>ctrl+alt+f</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td><strong>文本编辑</strong></td>
<td><strong>快捷键</strong></td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td>向下/上另起一行</td>
<td>Ctrl + enter /shift 上</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td>重复插入当前行</td>
<td>Ctrl + insert</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td>分栏</td>
<td>Alt+Shift + 2(左右)/8(上下)</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td>整行移动</td>
<td>Ctrl + up/down</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td>整单词/行删除</td>
<td>Ctrl（单词）/shift（行） + del(向后)/backspace(向前)</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
</tbody></table>
<p><strong>有点东西</strong></p>
<table>
<thead>
<tr>
<th>快速键作用</th>
<th>快捷键</th>
<th>使用频率</th>
</tr>
</thead>
<tbody><tr>
<td>复制当前文件路径</td>
<td>ctrl+shift+c</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
<tr>
<td>激活代码助手</td>
<td>Alt + /</td>
<td><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⭐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></td>
</tr>
</tbody></table>
<h3 id="自定义快捷键"><a href="#自定义快捷键" class="headerlink" title="自定义快捷键"></a>自定义快捷键</h3><pre class="line-numbers language-json"><code class="language-json">    <span class="token punctuation">{</span><span class="token property">"override"</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token property">"key"</span><span class="token operator">:</span><span class="token string">"command+["</span><span class="token punctuation">,</span><span class="token property">"command"</span><span class="token operator">:</span><span class="token string">"workbench.action.navigateBack"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    //光标前进
    <span class="token punctuation">{</span><span class="token property">"override"</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token property">"key"</span><span class="token operator">:</span><span class="token string">"command+]"</span><span class="token punctuation">,</span><span class="token property">"command"</span><span class="token operator">:</span><span class="token string">"workbench.action.navigateForward"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>vue</tag>
        <tag>uni-app</tag>
      </tags>
  </entry>
  <entry>
    <title>Android &amp; vue Live Template</title>
    <url>/2020/12/17/2020-12-17-live-template/</url>
    <content><![CDATA[<h1 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h1><h2 id="自定义Live-Template"><a href="#自定义Live-Template" class="headerlink" title="自定义Live Template"></a>自定义Live Template</h2><p><strong>代码折叠</strong> </p>
<p>abbreviation: <strong>mcb</strong> </p>
<p>Desc： Mark Code block</p>
<p>template text </p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// &lt;editor-fold defaultstate="collapsed" desc="$description$"></span>
    $SELECTION$
<span class="token comment" spellcheck="true">// &lt;/editor-fold></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>scope： java</p>
<p><strong>新建跳转</strong></p>
<p>abbreviation: <strong>ni</strong> </p>
<p>Desc： new intent for Activity</p>
<p>template text: </p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> Intent <span class="token function">newIntent</span><span class="token punctuation">(</span>$args$<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>$<span class="token keyword">class</span>$<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>scope： java</p>
<h2 id="Android-Studio-内置"><a href="#Android-Studio-内置" class="headerlink" title="Android Studio 内置"></a>Android Studio 内置</h2><p><strong>显示某个类</strong></p>
<p>abbreviation: <strong>visible</strong> </p>
<blockquote>
<p>Desc： Set view visibility to VISIBLE</p>
</blockquote>
<p>template text: </p>
<pre class="line-numbers language-java"><code class="language-java">$VIEW$<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>scope： java</p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>Glide4.x使用总结</title>
    <url>/2020/12/16/2020-12-8-glide%E5%A4%8D%E4%B9%A0/</url>
    <content><![CDATA[<p><img src="https://cdn.linz.tech/%E5%B0%8F%E8%88%B9.jpg" alt=""></p>
<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><h3 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h3><pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//资源地址 本地uri，网络资源，图片路径</span>
     <span class="token punctuation">.</span><span class="token function">asGif</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定资源样式 还可以asBitmap()，但是glide会自动判断,非特殊情况不用指定</span>
     <span class="token punctuation">.</span><span class="token function">placeholder</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>loading<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//加载过程显示</span>
     <span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>error<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 加载错误显示</span>
     <span class="token punctuation">.</span><span class="token function">diskCacheStrategy</span><span class="token punctuation">(</span>DiskCacheStrategy<span class="token punctuation">.</span>NONE<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//缓存设置</span>
     <span class="token punctuation">.</span><span class="token function">centerCrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 图片剪切样式</span>
     <span class="token punctuation">.</span><span class="token function">priority</span><span class="token punctuation">(</span>Priority<span class="token punctuation">.</span>HIGH<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//加载优先级</span>
     <span class="token punctuation">.</span><span class="token function">thumbnail</span><span class="token punctuation">(</span><span class="token number">0.2f</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//缩略图,显示较小图片时用</span>
     <span class="token punctuation">.</span><span class="token function">override</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//指定图片大小，这样可以节省内存消耗</span>
     <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>清理缓存</strong></p>
<pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clearDiskCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清理磁盘缓存 需要在子线程中执行 </span>
Glide<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clearMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//清理内存缓存 可以在UI主线程中进行</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><strong>停止/重启请求</strong></p>
<pre class="line-numbers language-java"><code class="language-java">    Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resumeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resumeRequestsRecursive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pauseRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pauseAllRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="基处知识"><a href="#基处知识" class="headerlink" title="基处知识"></a>基处知识</h3><p><strong>内存使用量计算</strong></p>
<pre class="line-numbers language-shell"><code class="language-shell">ARGB_8888 :32位图,带透明度,每个像素占4个字节
ARGB_4444 :16位图,带透明度,每个像素占2个字节
RGB_565 :16位图,不带透明度,每个像素占2个字节
ALPHA_8 :32位图,只有透明度,不带颜色,每个像素占4个字节<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>glide 默认使用<strong>RGB_565</strong>加载 <strong>一张4000 * 2000</strong>图片</p>
<pre><code>4000 * 2000 * 2(Byte) / 1024 / 1024 = 15 (MB)</code></pre><p><strong>缓存</strong></p>
<p>Glide不仅仅缓存文件，还会缓存与缓存文件相关的内容，如图片大小，使用时应用的变化和设置等等</p>
<h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><h4 id="Requestions"><a href="#Requestions" class="headerlink" title="Requestions"></a>Requestions</h4><pre class="line-numbers language-java"><code class="language-java">RequestOptions cropOptions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">centerCrop</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>cropOptions<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/RequestBuilder.html#apply-com.bumptech.glide.request.RequestOptions-" target="_blank" rel="noopener"><code>apply()</code></a> 方法可以被调用多次，因此 <code>RequestOption</code> 可以被组合使用</li>
<li>如果 <code>RequestOptions</code> 对象之间存在相互冲突的设置，那么只有最后一个被应用的 <code>RequestOptions</code> 会生效。</li>
</ol>
<p><strong>bitmapTransform</strong> 把bitmap转变为各种样式</p>
<pre class="line-numbers language-java"><code class="language-java">  Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>headUrl <span class="token operator">+</span> url<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>RequestOptions<span class="token punctuation">.</span><span class="token function">bitmapTransform</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CircleCrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="TransitionOptions"><a href="#TransitionOptions" class="headerlink" title="TransitionOptions"></a><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/TransitionOptions.html" target="_blank" rel="noopener">TransitionOptions</a></h4><blockquote>
<p>使用场景</p>
<ol>
<li>view淡入</li>
<li>占位符交叉淡入</li>
</ol>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> <span class="token keyword">static</span> com<span class="token punctuation">.</span>bumptech<span class="token punctuation">.</span>glide<span class="token punctuation">.</span>load<span class="token punctuation">.</span>resource<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>DrawableTransitionOptions<span class="token punctuation">.</span>withCrossFade<span class="token punctuation">;</span>

Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span><span class="token function">withCrossFade</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用动画效果</p>
<pre class="line-numbers language-java"><code class="language-java">ViewPropertyAnimation<span class="token punctuation">.</span>Animator animationObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ViewPropertyAnimation<span class="token punctuation">.</span>Animator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">animate</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// if it's a custom view class, cast it here</span>
        <span class="token comment" spellcheck="true">// then find subviews and do the animations</span>
        <span class="token comment" spellcheck="true">// here, we just use the entire view for the fade animation</span>
        view<span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span> <span class="token number">0f</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>

        ObjectAnimator fadeAnim <span class="token operator">=</span> ObjectAnimator<span class="token punctuation">.</span><span class="token function">ofFloat</span><span class="token punctuation">(</span> view<span class="token punctuation">,</span> <span class="token string">"alpha"</span><span class="token punctuation">,</span> <span class="token number">0f</span><span class="token punctuation">,</span> <span class="token number">1f</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
        fadeAnim<span class="token punctuation">.</span><span class="token function">setDuration</span><span class="token punctuation">(</span> <span class="token number">2500</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
        fadeAnim<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

GlideApp  
    <span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>eatFoodyImages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span>GenericTransitionOptions<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>animationObject<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//      .transition(GenericTransitionOptions.with(R.anim.zoom_in)) 支持xml形式</span>
      <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView2<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions.html" target="_blank" rel="noopener">BitmapTransitionOptions</a></li>
<li><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/resource/drawable/DrawableTransitionOptions.html" target="_blank" rel="noopener">DrawableTransitionOptions</a> </li>
</ol>
<h4 id="RequestBuilder"><a href="#RequestBuilder" class="headerlink" title="RequestBuilder"></a>RequestBuilder</h4><ul>
<li>你想加载的资源类型(Bitmap, Drawable, 或其他)</li>
<li>你要加载的资源地址(url/model)</li>
<li>你想最终加载到的View</li>
<li>任何你想应用的（一个或多个）<code>RequestOption</code> 对象</li>
<li>任何你想应用的（一个或多个）<code>TransitionOption</code> 对象</li>
<li>任何你想加载的缩略图 <a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/RequestBuilder.html#thumbnail-com.bumptech.glide.RequestBuilder-" target="_blank" rel="noopener"><code>thumbnail()</code></a></li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//构造</span>
RequestBuilder<span class="token operator">&lt;</span>Drawable<span class="token operator">></span> requestBuilder <span class="token operator">=</span> Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asDrawable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
RequestBuilder<span class="token operator">&lt;</span>Drawable<span class="token operator">></span> requestBuilder <span class="token operator">=</span> Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//as.. 选择资源类型</span>
RequestBuilder<span class="token operator">&lt;</span>Bitmap<span class="token operator">></span> requestBuilder <span class="token operator">=</span> Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asBitmap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//requestOptions transition</span>
RequestBuilder<span class="token operator">&lt;</span>Drawable<span class="token operator">></span> requestBuilder <span class="token operator">=</span> Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asDrawable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
requestBuilder<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>requestOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
requestBuilder<span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span>transitionOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">//复用</span>
RequestBuilder<span class="token operator">&lt;</span>Drawable<span class="token operator">></span> requestBuilder <span class="token operator">=</span>
        Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">asDrawable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>requestOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numViews<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   ImageView view <span class="token operator">=</span> viewGroup<span class="token punctuation">.</span><span class="token function">getChildAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
   String url <span class="token operator">=</span> urls<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
   requestBuilder<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="缩略图-Thumbnail-请求"><a href="#缩略图-Thumbnail-请求" class="headerlink" title="缩略图 (Thumbnail) 请求"></a>缩略图 (Thumbnail) 请求</h4><p>优先加载本地低分辨率图，在加载无损版本</p>
<pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">thumbnail</span><span class="token punctuation">(</span> 
    <span class="token comment" spellcheck="true">//.override 设置本地版本加载大小</span>
    Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>thumbnailUrl<span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="在失败时开始新的请求"><a href="#在失败时开始新的请求" class="headerlink" title="在失败时开始新的请求"></a>在失败时开始新的请求</h4><pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>primaryUrl<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>fallbackUrl<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="组件选项"><a href="#组件选项" class="headerlink" title="组件选项"></a>组件选项</h4><blockquote>
<p><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/Option.html" target="_blank" rel="noopener"><code>Option</code></a> 类是给Glide的组件添加参数的通用办法，包括 <a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/model/ModelLoader.html" target="_blank" rel="noopener"><code>ModelLoaders</code></a> , <a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/ResourceDecoder.html" target="_blank" rel="noopener"><code>ResourceDecoders</code></a> , <a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/ResourceEncoder.html" target="_blank" rel="noopener"><code>ResourceEncoders</code></a> , <a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/Encoder.html" target="_blank" rel="noopener"><code>Encoders</code></a> 等等</p>
</blockquote>
<p>用法设置请求超时时间</p>
<pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">option</span><span class="token punctuation">(</span>MyCustomModelLoader<span class="token punctuation">.</span>TIMEOUT_MS<span class="token punctuation">,</span> 1000L<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span>

RequestOptions options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>MyCustomModelLoader<span class="token punctuation">.</span>TIMEOUT_MS<span class="token punctuation">,</span> 1000L<span class="token punctuation">)</span><span class="token punctuation">;</span>

Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Transformations"><a href="#Transformations" class="headerlink" title="Transformations"></a><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/Transformation.html" target="_blank" rel="noopener">Transformations</a></h3><h4 id="内置类型"><a href="#内置类型" class="headerlink" title="内置类型"></a>内置类型</h4><ul>
<li><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/resource/bitmap/CenterCrop.html" target="_blank" rel="noopener">CenterCrop</a></li>
<li><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/resource/bitmap/FitCenter.html" target="_blank" rel="noopener">FitCenter</a></li>
<li><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/resource/bitmap/CircleCrop.html" target="_blank" rel="noopener">CircleCrop</a></li>
</ul>
<pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">fitCenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span>

RequestOptions options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
options<span class="token punctuation">.</span><span class="token function">centerCrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="多重变换"><a href="#多重变换" class="headerlink" title="多重变换"></a>多重变换</h4><pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
  <span class="token comment" spellcheck="true">// .transform(new FitCenter(), new YourCustomTransformation())</span>
  <span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MultiTransformation</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FitCenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">YourCustomTransformation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>【注意】： 传入变换参数的顺序，决定了这些变换的应用顺序</p>
<h4 id="定制变换"><a href="#定制变换" class="headerlink" title="定制变换"></a>定制变换</h4><p>CircleCrop.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CircleCrop</span> <span class="token keyword">extends</span> <span class="token class-name">BitmapTransformation</span> <span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">// The version of this transformation, incremented to correct an error in a previous version.</span>
  <span class="token comment" spellcheck="true">// See #455.</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> VERSION <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String ID <span class="token operator">=</span> <span class="token string">"com.bumptech.glide.load.resource.bitmap.CircleCrop."</span> <span class="token operator">+</span> VERSION<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ID_BYTES <span class="token operator">=</span> ID<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span>CHARSET<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment" spellcheck="true">// Bitmap doesn't implement equals, so == and .equals are equivalent here.</span>
  <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">"PMD.CompareObjectsWithEquals"</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">protected</span> Bitmap <span class="token function">transform</span><span class="token punctuation">(</span>
      <span class="token annotation punctuation">@NonNull</span> BitmapPool pool<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> Bitmap toTransform<span class="token punctuation">,</span> <span class="token keyword">int</span> outWidth<span class="token punctuation">,</span> <span class="token keyword">int</span> outHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> TransformationUtils<span class="token punctuation">.</span><span class="token function">circleCrop</span><span class="token punctuation">(</span>pool<span class="token punctuation">,</span> toTransform<span class="token punctuation">,</span> outWidth<span class="token punctuation">,</span> outHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span>Object o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> o <span class="token keyword">instanceof</span> <span class="token class-name">CircleCrop</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> ID<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateDiskCacheKey</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> MessageDigest messageDigest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    messageDigest<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>ID_BYTES<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用</p>
<pre class="line-numbers language-java"><code class="language-java">    Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>headUrl <span class="token operator">+</span> url<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>RequestOptions<span class="token punctuation">.</span><span class="token function">bitmapTransform</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CircleCrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Target"><a href="#Target" class="headerlink" title="Target"></a>Target</h3><blockquote>
<p>常用的实现类 ViewTarget、 <a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/request/target/ImageViewTarget.html" target="_blank" rel="noopener"><code>ImageViewTargets</code></a> 、DrawableImageViewTarget</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java">Target<span class="token operator">&lt;</span>Drawable<span class="token operator">></span> target <span class="token operator">=</span> 
   Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Target</span><span class="token operator">&lt;</span>Drawable<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token punctuation">}</span>

          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token punctuation">}</span>

          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token punctuation">}</span>

          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onLoadStarted</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Drawable placeholder<span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token punctuation">}</span>

          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onLoadFailed</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Drawable errorDrawable<span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token punctuation">}</span>

          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResourceReady</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> Drawable resource<span class="token punctuation">,</span>
              <span class="token annotation punctuation">@Nullable</span> Transition<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> Drawable<span class="token operator">></span> transition<span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token punctuation">}</span>

          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onLoadCleared</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Drawable placeholder<span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token punctuation">}</span>

          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getSize</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> SizeReadyCallback cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token punctuation">}</span>

          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeCallback</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> SizeReadyCallback cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token punctuation">}</span>

          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRequest</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Request request<span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token punctuation">}</span>

          <span class="token annotation punctuation">@Nullable</span> <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> Request <span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> null<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="取消和重用"><a href="#取消和重用" class="headerlink" title="取消和重用"></a>取消和重用</h4><ul>
<li>Glide.with(fragment).clear(target); 返回的 <code>Target</code> 来 <a href="https://muyangmin.github.io/glide-docs-cn/javadocs/431/com/bumptech/glide/RequestManager.html#clear-com.bumptech.glide.request.target.Target-" target="_blank" rel="noopener"><code>clear()</code></a> 之前的加载，这将在不需要开始新的加载的情况下释放掉任何相关资源：</li>
<li>仅对ViewTarget而言，你可以在每次加载或清理调用时都传入一个新的实例，而 Glide 仍然可以从 View 的 tag 中取回之前一次加载的信息，从而达到复用的效果</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DrawableImageViewTarget</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">// Some time in the future:</span>
Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>newUrl<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DrawableImageViewTarget</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="尺寸-Sizes-and-dimensions"><a href="#尺寸-Sizes-and-dimensions" class="headerlink" title="尺寸 (Sizes and dimensions)"></a>尺寸 (Sizes and dimensions)</h4><blockquote>
<p>默认情况下，Glide 使用目标通过 <a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/request/target/Target.html#getSize-com.bumptech.glide.request.target.SizeReadyCallback-" target="_blank" rel="noopener"><code>getSize</code></a> 方法提供的尺寸来作为请求的目标尺寸。这允许 Glide 选取合适的 URL，下采样，裁剪和变换合适的图片以减少内存占用，并确保加载尽可能快地完成。</p>
<p><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/431/com/bumptech/glide/request/target/ViewTarget.html" target="_blank" rel="noopener"><code>ViewTarget</code></a> 通过检查 View 的属性和/或使用一个 <a href="https://developer.android.com/reference/android/view/ViewTreeObserver.OnPreDrawListener.html" target="_blank" rel="noopener"><code>OnPreDrawListener</code></a> 在 View 绘制之前直接测量尺寸来实现 <a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/request/target/Target.html#getSize-com.bumptech.glide.request.target.SizeReadyCallback-" target="_blank" rel="noopener"><code>getSize()</code></a> 方法。因此， Glide 可以自动调整大部分图片以匹配目标 <code>View</code></p>
</blockquote>
<p> 请参考 <a href="https://github.com/bumptech/glide/blob/e9cf41fbc190c9d29ce683728f52c061809c749b/library/src/main/java/com/bumptech/glide/request/target/ViewTarget.java#L89" target="_blank" rel="noopener"><code>ViewTarget</code></a> 中的逻辑。</p>
<h4 id="动画资源和定制目标"><a href="#动画资源和定制目标" class="headerlink" title="动画资源和定制目标"></a>动画资源和定制目标</h4><pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">asGif</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleTarget</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onResourceReady</span><span class="token punctuation">(</span>GifDrawable resource<span class="token punctuation">,</span> Transition<span class="token operator">&lt;</span>GifDrawable<span class="token operator">></span> transition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//gif </span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>resource <span class="token keyword">instanceof</span> <span class="token class-name">Animatable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resource<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="过渡"><a href="#过渡" class="headerlink" title="过渡"></a>过渡</h3><blockquote>
<p>允许你定义 Glide 如何从占位符到新加载的图片，或从缩略图到全尺寸图像过渡。</p>
</blockquote>
<ol>
<li>4.x 默认不会使用交叉淡入动画</li>
<li>过渡动画效果在安卓中消耗 比较大需要谨慎使用</li>
</ol>
<p><strong>定制过渡</strong></p>
<p>请查看 <a href="https://github.com/bumptech/glide/blob/8f22bd9b82349bf748e335b4a31e70c9383fb15a/library/src/main/java/com/bumptech/glide/request/transition/DrawableCrossFadeFactory.java#L35" target="_blank" rel="noopener"><code>DrawableCrossFadeFactory</code></a>.</p>
<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ol>
<li><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/module/AppGlideModule.html" target="_blank" rel="noopener"><code>AppGlideModule</code></a> 全局唯一，多个冲突</li>
<li><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/module/LibraryGlideModule.html" target="_blank" rel="noopener"><code>LibraryGlideModule</code></a> 可添加多个</li>
</ol>
<p><strong>基本用法</strong></p>
<p><strong>加入依赖</strong></p>
<pre><code>compile 'com.github.bumptech.glide:annotations:4.11.0'
annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'</code></pre><p><strong>混淆</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token operator">-</span>keep <span class="token keyword">public</span> <span class="token keyword">class</span>  <span class="token class-name">extends</span> com<span class="token punctuation">.</span>bumptech<span class="token punctuation">.</span>glide<span class="token punctuation">.</span>module<span class="token punctuation">.</span>AppGlideModule
<span class="token operator">-</span>keep <span class="token keyword">class</span> <span class="token class-name">com<span class="token punctuation">.</span>bumptech<span class="token punctuation">.</span>glide<span class="token punctuation">.</span>GeneratedAppGlideModuleImpl</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>在 Glide 的 <a href="https://github.com/bumptech/glide/blob/master/samples/flickr/src/main/java/com/bumptech/glide/samples/flickr/FlickrGlideModule.java" target="_blank" rel="noopener">Flickr 示例应用</a> 中</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@GlideModule</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FlickrGlideModule</span> <span class="token keyword">extends</span> <span class="token class-name">AppGlideModule</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerComponents</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Registry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// Photo.class 是一个普通的bean</span>
    registry<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>Photo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> InputStream<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">FlickrModelLoader<span class="token punctuation">.</span>Factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@GlideModule</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">OkHttpLibraryGlideModule</span> <span class="token keyword">extends</span> <span class="token class-name">LibraryGlideModule</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerComponents</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Glide glide<span class="token punctuation">,</span> Registry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    registry<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>GlideUrl<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> InputStream<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">OkHttpUrlLoader<span class="token punctuation">.</span>Factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="应用程序选项"><a href="#应用程序选项" class="headerlink" title="应用程序选项"></a>应用程序选项</h3><p><strong>GlideBuilder 属性</strong></p>
<ul>
<li>.setMemoryCache(MemoryCache memoryCache)</li>
<li>.setBitmapPool(BitmapPool bitmapPool)</li>
<li>.setDiskCache(DiskCache.Factory diskCacheFactory)</li>
<li>.setDiskCacheService(ExecutorService service)</li>
<li>.setResizeService(ExecutorService service)</li>
<li>.setDecodeFormat(DecodeFormat decodeFormat)</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@GlideModule</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">YourAppGlideModule</span> <span class="token keyword">extends</span> <span class="token class-name">AppGlideModule</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">applyOptions</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> GlideBuilder builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment" spellcheck="true">//自定义 MemoryCache 的大小</span>
    MemorySizeCalculator calculator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MemorySizeCalculator<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">setMemoryCacheScreens</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    builder<span class="token punctuation">.</span><span class="token function">setMemoryCache</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LruResourceCache</span><span class="token punctuation">(</span>calculator<span class="token punctuation">.</span><span class="token function">getMemoryCacheSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment" spellcheck="true">//直接覆写缓存大小</span>
       <span class="token keyword">int</span> memoryCacheSizeBytes <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 20mb</span>
    builder<span class="token punctuation">.</span><span class="token function">setMemoryCache</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LruResourceCache</span><span class="token punctuation">(</span>memoryCacheSizeBytes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>Bitmap 池</strong></p>
<pre class="line-numbers language-java"><code class="language-java">YourAppGlideModule<span class="token punctuation">{</span> 
MemorySizeCalculator calculator <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MemorySizeCalculator<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">setBitmapPoolScreens</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    builder<span class="token punctuation">.</span><span class="token function">setBitmapPool</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LruBitmapPool</span><span class="token punctuation">(</span>calculator<span class="token punctuation">.</span><span class="token function">getBitmapPoolSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> bitmapPoolSizeBytes <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">30</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 30mb</span>
    builder<span class="token punctuation">.</span><span class="token function">setBitmapPool</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LruBitmapPool</span><span class="token punctuation">(</span>bitmapPoolSizeBytes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>磁盘缓存</strong> 默认磁盘大小为 <a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/engine/cache/DiskCache.Factory.html#DEFAULT_DISK_CACHE_SIZE" target="_blank" rel="noopener">250 MB</a></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//存位置改到外部存储 </span>
builder<span class="token punctuation">.</span><span class="token function">setDiskCache</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ExternalCacheDiskCacheFactory</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//改变磁盘缓存的大小：</span>
<span class="token keyword">int</span> diskCacheSizeBytes <span class="token operator">=</span> <span class="token number">1024</span>  <span class="token number">1024</span>  <span class="token number">100</span><span class="token punctuation">;</span>  <span class="token number">100</span> MB
builder<span class="token punctuation">.</span><span class="token function">setDiskCache</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InternalCacheDiskCacheFactory</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> diskCacheSizeBytes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="默认请求选项"><a href="#默认请求选项" class="headerlink" title="默认请求选项"></a>默认请求选项</h3><ol>
<li>全局生效</li>
<li>会覆盖之前设置</li>
</ol>
<p>方式一， APPGlideModule设置方式</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@GlideModule</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">YourAppGlideModule</span> <span class="token keyword">extends</span> <span class="token class-name">AppGlideModule</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">applyOptions</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> GlideBuilder builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    builder<span class="token punctuation">.</span><span class="token function">setDefaultRequestOptions</span><span class="token punctuation">(</span>
        <span class="token keyword">new</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>DecodeFormat<span class="token punctuation">.</span>RGB_565<span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">disallowHardwareBitmaps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>方式二. RequestOptions</p>
<pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">applyDefaultRequestOptions</span><span class="token punctuation">(</span>
      <span class="token keyword">new</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>DecodeFormat<span class="token punctuation">.</span>RGB_565<span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">disallowHardwareBitmaps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="注册组件"><a href="#注册组件" class="headerlink" title="注册组件"></a>注册组件</h3><ol>
<li><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/model/ModelLoaderFactory.html" target="_blank" rel="noopener"><code>ModelLoader</code></a>, 用于加载自定义的 Model(Url, Uri,任意的 POJO )和 Data(InputStreams, FileDescriptors)。</li>
<li><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/ResourceDecoder.html" target="_blank" rel="noopener"><code>ResourceDecoder</code></a>, 用于对新的 Resources(Drawables, Bitmaps)或新的 Data 类型(InputStreams, FileDescriptors)进行解码。</li>
<li><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/Encoder.html" target="_blank" rel="noopener"><code>Encoder</code></a>, 用于向 Glide 的磁盘缓存写 Data (InputStreams, FileDesciptors)。</li>
<li><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/resource/transcode/ResourceTranscoder.html" target="_blank" rel="noopener"><code>ResourceTranscoder</code></a>，用于在不同的资源类型之间做转换，例如，从 BitmapResource 转换为 DrawableResource 。</li>
<li><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/ResourceEncoder.html" target="_blank" rel="noopener"><code>ResourceEncoder</code></a>，用于向 Glide 的磁盘缓存写 Resources(BitmapResource, DrawableResource)。</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@GlideModule</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">YourAppGlideModule</span> <span class="token keyword">extends</span> <span class="token class-name">AppGlideModule</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerComponents</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Registry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment" spellcheck="true">//prepend</span>
      <span class="token comment" spellcheck="true">//replace</span>
    registry<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>Photo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> InputStream<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CustomModelLoader<span class="token punctuation">.</span>Factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>案例：<a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/model/ModelLoaderFactory.html" target="_blank" rel="noopener"><code>ModelLoader</code></a> 和 <a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/ResourceDecoder.html" target="_blank" rel="noopener"><code>ResourceDecoder</code></a></p>
<h3 id="实践案例"><a href="#实践案例" class="headerlink" title="实践案例"></a>实践案例</h3><ol>
<li><strong>提高glide图片加载质量</strong></li>
</ol>
<blockquote>
<p>Android 中有两个主要的方法对图片进行解码：ARGB8888 和 RGB565。前者为每个像素使用了 4 个字节，后者仅为每个像素使用了 2 个字节。ARGB8888 的优势是图像质量更高以及能存储一个 alpha 通道。Glide 默认使用低质量的 RGB565</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SimpleGlideModule</span> <span class="token keyword">implements</span> <span class="token class-name">GlideModule</span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">applyOptions</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> GlideBuilder builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        builder<span class="token punctuation">.</span><span class="token function">setDecodeFormat</span><span class="token punctuation">(</span>DecodeFormat<span class="token punctuation">.</span>PREFER_ARGB_8888<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerComponents</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Glide glide<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// nothing to do here</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li><a href="https://mrfu.me/2016/02/28/Glide_Module_Example_Accepting_Self-Signed_HTTPS_Certificates/" target="_blank" rel="noopener">Module 实例：接受自签名证书的 HTTPS</a></li>
</ol>
<h4 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h4><p><strong>未捕获异常策略</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@GlideModule</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">YourAppGlideModule</span> <span class="token keyword">extends</span> <span class="token class-name">AppGlideModule</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">applyOptions</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> GlideBuilder builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> UncaughtThrowableStrategy myUncaughtThrowableStrategy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
    builder<span class="token punctuation">.</span><span class="token function">setDiskCacheExecutor</span><span class="token punctuation">(</span><span class="token function">newDiskCacheExecutor</span><span class="token punctuation">(</span>myUncaughtThrowableStrategy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    builder<span class="token punctuation">.</span><span class="token function">setResizeExecutor</span><span class="token punctuation">(</span><span class="token function">newSourceExecutor</span><span class="token punctuation">(</span>myUncaughtThrowableStrategy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>日志级别</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@GlideModule</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">YourAppGlideModule</span> <span class="token keyword">extends</span> <span class="token class-name">AppGlideModule</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">applyOptions</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> GlideBuilder builder<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    builder<span class="token punctuation">.</span><span class="token function">setLogLevel</span><span class="token punctuation">(</span>Log<span class="token punctuation">.</span>DEBUG<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h2><p><strong>缓存四个级别</strong></p>
<p>Active Resources(View 正在显示) &gt; Memory cache（加载过并在内存） &gt;  Resource（解密并存在磁盘） &gt; Data （曾经写入过文件）</p>
<p><strong>配置缓存</strong></p>
<pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
   <span class="token comment" spellcheck="true">//.onlyRetrieveFromCache(true)</span>
   <span class="token comment" spellcheck="true">//.skipMemoryCache(true)</span>
    <span class="token comment" spellcheck="true">//.diskCacheStrategy(DiskCacheStrategy.NONE)</span>
  <span class="token punctuation">.</span><span class="token function">diskCacheStrategy</span><span class="token punctuation">(</span>DiskCacheStrategy<span class="token punctuation">.</span>ALL<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>定制缓存刷新Key值</strong></p>
<p>文件 <a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/signature/ObjectKey.html" target="_blank" rel="noopener"><code>ObjectKey</code></a></p>
<pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>yourFragment<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>yourFileDataModel<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">signature</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObjectKey</span><span class="token punctuation">(</span>yourVersionMetadata<span class="token comment" spellcheck="true">/*修改日期*/</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>yourImageView<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>媒体存储签名MediaStore </p>
<pre class="line-numbers language-java"><code class="language-java">Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>fragment<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>mediaStoreUri<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">signature</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MediaStoreSignature</span><span class="token punctuation">(</span>mimeType<span class="token punctuation">,</span> dateModified<span class="token punctuation">,</span> orientation<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>定义你自己的签名</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IntegerVersionSignature</span> <span class="token keyword">implements</span> <span class="token class-name">Key</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> currentVersion<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">IntegerVersionSignature</span><span class="token punctuation">(</span><span class="token keyword">int</span> currentVersion<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span>currentVersion <span class="token operator">=</span> currentVersion<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span>Object o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">IntegerVersionSignature</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            IntegerVersionSignature other <span class="token operator">=</span> <span class="token punctuation">(</span>IntegerVersionSignature<span class="token punctuation">)</span> o<span class="token punctuation">;</span>
            <span class="token keyword">return</span> currentVersion <span class="token operator">==</span> other<span class="token punctuation">.</span>currentVersion<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> currentVersion<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateDiskCacheKey</span><span class="token punctuation">(</span>MessageDigest md<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        messageDigest<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>ByteBuffer<span class="token punctuation">.</span><span class="token function">allocate</span><span class="token punctuation">(</span>Integer<span class="token punctuation">.</span>SIZE<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">putInt</span><span class="token punctuation">(</span>signature<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><p><strong>常用的组件概述</strong></p>
<ol>
<li><p><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/model/ModelLoader.html" target="_blank" rel="noopener">ModelLoader</a></p>
<blockquote>
<p>A factory interface for translating an arbitrarily complex data model into a</p>
<p> concrete data type that can be used by an <a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/data/DataFetcher.html" target="_blank" rel="noopener"><code>DataFetcher</code></a> to obtain the data for a resource represented by the model.</p>
</blockquote>
</li>
<li><p><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/ResourceDecoder.html" target="_blank" rel="noopener">ResourceDecoder&lt;T,Z&gt;</a></p>
<blockquote>
<p><code>T</code> - The type the resource will be decoded from (File, InputStream etc).</p>
<p><code>Z</code> - The type of the decoded resource (Bitmap, Drawable etc).</p>
</blockquote>
</li>
<li><p><a href="https://muyangmin.github.io/glide-docs-cn/javadocs/400/com/bumptech/glide/load/ResourceEncoder.html" target="_blank" rel="noopener">ResourceEncoder<t></t></a></p>
<blockquote>
<p><code>T</code> - The type of the data contained by the resource.</p>
</blockquote>
</li>
</ol>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h3 id="1-加载加载角图片度"><a href="#1-加载加载角图片度" class="headerlink" title="1. 加载加载角图片度"></a>1. 加载<strong><em>加载角图片</em>度</strong></h3><p><strong>开源库</strong></p>
<p><a href="https://github.com/wasabeef/glide-transformations" target="_blank" rel="noopener">glide-transformations</a></p>
<p><img src="https://cdn.linz.tech/glide_transformation.gif" alt=""></p>
<h3 id="2-下载文件-获取缓存文件路径"><a href="#2-下载文件-获取缓存文件路径" class="headerlink" title="2. 下载文件/获取缓存文件路径"></a>2. 下载文件/获取缓存文件路径</h3><pre class="line-numbers language-java"><code class="language-java">FutureTarget<span class="token operator">&lt;</span>File<span class="token operator">></span> target <span class="token operator">=</span> Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">downloadOnly</span><span class="token punctuation">(</span>Target<span class="token punctuation">.</span>SIZE_ORIGINAL<span class="token punctuation">,</span> Target<span class="token punctuation">.</span>SIZE_ORIGINAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">final</span> File imageFile <span class="token operator">=</span> target<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="3-根据加载的资源动态设置ImageView大小"><a href="#3-根据加载的资源动态设置ImageView大小" class="headerlink" title="3. 根据加载的资源动态设置ImageView大小"></a>3. 根据加载的资源动态设置ImageView大小</h3><blockquote>
<p>主要是RequestListener 的应用， 获取资源的数据resource.getIntrinsicHeight()</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**
     * 自适应宽度加载图片。保持图片的长宽比例不变，通过修改imageView的高度来完全显示图片。
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">loadIntoUseFitWidth</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> <span class="token keyword">final</span> String imageUrl<span class="token punctuation">,</span> <span class="token keyword">int</span> errorImageId<span class="token punctuation">,</span> <span class="token keyword">final</span> ImageView imageView<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Glide<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>imageUrl<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">diskCacheStrategy</span><span class="token punctuation">(</span>DiskCacheStrategy<span class="token punctuation">.</span>SOURCE<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">listener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RequestListener</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> GlideDrawable<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onException</span><span class="token punctuation">(</span>Exception e<span class="token punctuation">,</span> String model<span class="token punctuation">,</span> Target<span class="token operator">&lt;</span>GlideDrawable<span class="token operator">></span> target<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isFirstResource<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onResourceReady</span><span class="token punctuation">(</span>GlideDrawable resource<span class="token punctuation">,</span> String model<span class="token punctuation">,</span> Target<span class="token operator">&lt;</span>GlideDrawable<span class="token operator">></span> target<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isFromMemoryCache<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isFirstResource<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>imageView <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>imageView<span class="token punctuation">.</span><span class="token function">getScaleType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> ImageView<span class="token punctuation">.</span>ScaleType<span class="token punctuation">.</span>FIT_XY<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            imageView<span class="token punctuation">.</span><span class="token function">setScaleType</span><span class="token punctuation">(</span>ImageView<span class="token punctuation">.</span>ScaleType<span class="token punctuation">.</span>FIT_XY<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        ViewGroup<span class="token punctuation">.</span>LayoutParams params <span class="token operator">=</span> imageView<span class="token punctuation">.</span><span class="token function">getLayoutParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">int</span> vw <span class="token operator">=</span> imageView<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> imageView<span class="token punctuation">.</span><span class="token function">getPaddingLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> imageView<span class="token punctuation">.</span><span class="token function">getPaddingRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">float</span> scale <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> vw <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> resource<span class="token punctuation">.</span><span class="token function">getIntrinsicWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">int</span> vh <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>resource<span class="token punctuation">.</span><span class="token function">getIntrinsicHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> scale<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        params<span class="token punctuation">.</span>height <span class="token operator">=</span> vh <span class="token operator">+</span> imageView<span class="token punctuation">.</span><span class="token function">getPaddingTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> imageView<span class="token punctuation">.</span><span class="token function">getPaddingBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        imageView<span class="token punctuation">.</span><span class="token function">setLayoutParams</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">placeholder</span><span class="token punctuation">(</span>errorImageId<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>errorImageId<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="4-【官方】编写定制的-ModelLoader"><a href="#4-【官方】编写定制的-ModelLoader" class="headerlink" title="4. 【官方】编写定制的 ModelLoader"></a>4. 【官方】<a href="https://muyangmin.github.io/glide-docs-cn/tut/custom-modelloader.html" target="_blank" rel="noopener">编写定制的 ModelLoader</a></h3><h2 id="相关开源库"><a href="#相关开源库" class="headerlink" title="相关开源库"></a>相关开源库</h2><ul>
<li><strong><a href="https://github.com/SherlockGougou/BigImageViewPager" target="_blank" rel="noopener"> BigImageViewPager</a></strong> 基于glide的大图预览库</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://github.com/bumptech/glide" target="_blank" rel="noopener">glide github官网</a></li>
<li><a href="https://muyangmin.github.io/glide-docs-cn/" target="_blank" rel="noopener"> Glide 官网中文文档</a> 【重点.科学上网】</li>
<li><a href="https://blog.csdn.net/sinyu890807/column/info/15318" target="_blank" rel="noopener">Glide最全解析（郭霖的glide系列）</a> （以Glide3.7.0源码为例 共8篇 第2篇较难懂 如果不太理解可以跳过直接从第3篇 缓存开始读 ）</li>
<li><a href="https://blog.csdn.net/songzi1228/article/details/84426165" target="_blank" rel="noopener">Android面试题：Glide</a></li>
<li><a href="https://mrfu.me/2016/02/27/Glide_Image_Resizing_&amp;_Scaling/" target="_blank" rel="noopener">Glide 3.6.1 系列预览 </a></li>
</ul>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><ul>
<li><a href="https://github.com/bumptech/glide" target="_blank" rel="noopener">glide github网址</a></li>
</ul>
<p><a href="https://blog.csdn.net/qq_24675479/article/details/79498250" target="_blank" rel="noopener"><img src="https://cdn.linz.tech/glide_%E6%97%B6%E5%BA%8F%E5%9B%BE.jpg" alt=""></a></p>
]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>Java后台基础学习笔记</title>
    <url>/2020/12/07/2019-2-26-server/</url>
    <content><![CDATA[<h1 id="重点研究开源库"><a href="#重点研究开源库" class="headerlink" title="重点研究开源库"></a>重点研究开源库</h1><ul>
<li><a href="https://gitee.com/shuzheng/zheng" target="_blank" rel="noopener">zheng</a> 比较热门的后台开源库</li>
<li><a href="https://gitee.com/naan1993/guns" target="_blank" rel="noopener">Guns</a> 权限管理<ul>
<li>公开课 <a href="https://www.bilibili.com/video/av32112009" target="_blank" rel="noopener">https://www.bilibili.com/video/av32112009</a></li>
</ul>
</li>
<li><a href="https://github.com/PanJiaChen/vue-element-admin" target="_blank" rel="noopener">vue-element-admin</a> 非常惊艳的前端UI <ul>
<li><a href="https://github.com/PanJiaChen/vue-element-admin/blob/master/README.zh-CN.md" target="_blank" rel="noopener"><strong>README.zh-CN.md</strong></a> 中文文档有教程</li>
</ul>
</li>
<li><a href="https://gitee.com/minull/ace-security" target="_blank" rel="noopener">Cloud-Admin</a><ul>
<li><a href="http://www.evernote.com/l/AtsRl53hvoVG8qlWUWtuLddM0iS5QtylRo4/" target="_blank" rel="noopener">RabbitMQ配置</a></li>
<li><a href="http://www.evernote.com/l/Att5XxYhqY9Gsr0jDsng-4APU7pn9MwK-SY/" target="_blank" rel="noopener">Consul1.2.2配置</a></li>
<li>Docker <ul>
<li><a href="https://docs.docker.com/get-started/" target="_blank" rel="noopener">Get started with Docker</a></li>
<li><a href="https://docs.docker.com/compose/" target="_blank" rel="noopener">Docker Compose</a></li>
<li><a href="https://blog.csdn.net/pushiqiang/article/details/78682323" target="_blank" rel="noopener">docker-compose教程（安装，使用, 快速入门）</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="AG-Admin-v2-0"><a href="#AG-Admin-v2-0" class="headerlink" title="AG-Admin-v2.0"></a><a href="https://gitee.com/minull/AG-Admin-v2.0" target="_blank" rel="noopener">AG-Admin-v2.0</a></h2><ul>
<li>安装问题解决 <a href="https://www.jianshu.com/p/fd3b19cacd99" target="_blank" rel="noopener">https://www.jianshu.com/p/fd3b19cacd99</a><pre class="line-numbers language-shell"><code class="language-shell">Error: Can't find Python executable "D:\workspace\env\common\Python\phyton_3.7.0\python.EXE", you can set the PYTHON env variable
## 解决，管理员身份
npm install --global --production windows-build-tools
npm install --global node-gyp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
Module build failed: Error: Node Sass does not yet support your current environment: Windows 64-bit with Unsupported runtime (64) </li>
</ul>
<p>原因：Node Sass 版本低</p>
<p>解决：</p>
<pre class="line-numbers language-shell"><code class="language-shell">npm uninstall node-sass -D
npm install node-sass -D<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="Mall"><a href="#Mall" class="headerlink" title="Mall"></a>Mall</h2><p><a href="https://github.com/macrozheng/mall" target="_blank" rel="noopener">https://github.com/macrozheng/mall</a></p>
<h2 id="Pay"><a href="#Pay" class="headerlink" title="Pay"></a>Pay</h2><p><a href="https://gitee.com/52itstyle/spring-boot-pay" target="_blank" rel="noopener">https://gitee.com/52itstyle/spring-boot-pay</a></p>
<h2 id="秒杀系统"><a href="#秒杀系统" class="headerlink" title="秒杀系统"></a>秒杀系统</h2><p><a href="https://gitee.com/52itstyle/spring-boot-seckill" target="_blank" rel="noopener">https://gitee.com/52itstyle/spring-boot-seckill</a></p>
<p><a href="https://gitee.com/xiandafu/springboot-plus" target="_blank" rel="noopener">https://gitee.com/xiandafu/springboot-plus</a></p>
<h1 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h1><ul>
<li><p><strong><a href="https://github.com/scouter-project/scouter" target="_blank" rel="noopener">scouter</a></strong>  is an open source APM and an open source profiler for java application like web applications on a tomcat .</p>
</li>
<li><p>tomcat挂掉解决方案</p>
<ul>
<li>Tomcat集群  </li>
<li>tomcat线程监控并自启</li>
</ul>
</li>
</ul>
<h2 id="管理工具"><a href="#管理工具" class="headerlink" title="管理工具"></a>管理工具</h2><ul>
<li><a href="https://github.com/thx/RAP" target="_blank" rel="noopener">RAP</a> Web接口管理工具，开源免费，接口自动化，MOCK数据自动生成，自动化测试，企业级管理。阿里妈妈MUX团队出品！阿里巴巴都在用！1000+公司的选择！API 接口管理</li>
</ul>
<h3 id="Consul"><a href="#Consul" class="headerlink" title="Consul"></a>Consul</h3><p>官网下载地址： <a href="https://www.consul.io/downloads.html" target="_blank" rel="noopener">https://www.consul.io/downloads.html</a></p>
<ul>
<li><a href="https://blog.csdn.net/lc1010078424/article/details/82467399" target="_blank" rel="noopener">CentOS7.5.1804 Minimal安装配置单机Consul1.2.2</a></li>
<li><a href="https://blog.csdn.net/achenyuan/article/details/80389410" target="_blank" rel="noopener">consul安装配置，生产环境部署高可用环境</a></li>
</ul>
<p>下载解压后window 使用</p>
<pre class="line-numbers language-shell"><code class="language-shell">consul agent -dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="远程连接-SecureCRT"><a href="#远程连接-SecureCRT" class="headerlink" title="远程连接  SecureCRT"></a>远程连接  SecureCRT</h3><h4 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h4><p>MAC</p>
<ul>
<li>本地完整安装教程及相关文档 <code>/Users/apple/Documents/env/tools</code></li>
<li><a href="https://blog.csdn.net/u011692780/article/details/89707017" target="_blank" rel="noopener">MAC版SecureCRT+SecureFX破解，版本8.5.1-【CSDN 外网】</a></li>
</ul>
<h4 id="常用设置"><a href="#常用设置" class="headerlink" title="常用设置"></a>常用设置</h4><p>超时从连（<code>Options-－&gt;Session Options－－&gt;Terminal</code>）</p>
<ol>
<li>第一步<br><img src="http://cdn.linz.tech/SecureCRT_1.png" alt=""></li>
<li><img src="http://cdn.linz.tech/SecureCRT_2.png" alt=""></li>
</ol>
<h2 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h2><h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><ul>
<li><p><a href="https://www.cnblogs.com/jiangwangxiang/p/8481661.html" target="_blank" rel="noopener">windows下nginx的安装及使用</a> </p>
<pre class="line-numbers language-shell"><code class="language-shell">start nginx
nginx -s stop(快速停止nginx)  或  nginx -s quit(完整有序的停止nginx)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ul>
<ul>
<li><p>Nginx 常用命令</p>
<pre class="line-numbers language-shell"><code class="language-shell">sudo nginx #打开 nginx
nginx -s reload|reopen|stop|quit  #重新加载配置|重启|停止|退出 nginx
nginx -t   #测试配置是否有语法错误

nginx [-?hvVtq] [-s signal] [-c filename] [-p prefix] [-g directives]

-?,-h           : 打开帮助信息
-v              : 显示版本信息并退出
-V              : 显示版本和配置选项信息，然后退出
-t              : 检测配置文件是否有语法错误，然后退出
-q              : 在检测配置文件期间屏蔽非错误信息
-s signal       : 给一个 nginx 主进程发送信号：stop（停止）, quit（退出）, reopen（重启）, reload（重新加载配置文件）
-p prefix       : 设置前缀路径（默认是：/usr/local/Cellar/nginx/1.2.6/）
-c filename     : 设置配置文件（默认是：/usr/local/etc/nginx/nginx.conf）
-g directives   : 设置配置文件外的全局指令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<p>nginx -t  能查看配置文件所在目录</p>
<pre class="line-numbers language-shell"><code class="language-shell">nginx: the configuration file /usr/local/tengine/conf/nginx.conf syntax is ok
nginx: configuration file /usr/local/tengine/conf/nginx.conf test is successful<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>阿里云后台配置文件路径：<code>/usr/local/tengine/conf/nginx.conf</code></p>
<h3 id="开源库"><a href="#开源库" class="headerlink" title="开源库"></a>开源库</h3><ul>
<li><a href="https://github.com/trimstray/nginx-quick-reference" target="_blank" rel="noopener">nginx-quick-reference 网上教程</a></li>
</ul>
<h2 id="转化工具"><a href="#转化工具" class="headerlink" title="转化工具"></a>转化工具</h2><p><a href="https://www.bejson.com/devtools/properties2yaml/" target="_blank" rel="noopener">properties2yml</a></p>
<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><ul>
<li><a href="https://www.fageka.com/Store/item/s/id/zWS3GuW4356" target="_blank" rel="noopener">数据库从入门到进阶必读18本技术书籍网盘吐血整理</a></li>
<li><a href="https://github.com/cinience/RedisStudio/releases" target="_blank" rel="noopener">RedisStudio</a> redis图形界面管理工具 </li>
</ul>
<h3 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h3><ul>
<li><a href="http://redisdoc.com/" target="_blank" rel="noopener">Redis 命令参考</a></li>
<li><a href="https://github.com/redisson/redisson" target="_blank" rel="noopener"><strong>redisson</strong></a></li>
</ul>
<h3 id="Hibernate"><a href="#Hibernate" class="headerlink" title="Hibernate"></a>Hibernate</h3><ul>
<li><a href="https://www.jianshu.com/p/50e0a7a28b53" target="_blank" rel="noopener">IntelliJ IDEA Hibernate</a>  hibernate生成数据库实体类</li>
</ul>
<h3 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h3><p>配置文档：  <a href="https://docs.mongodb.com/manual/" target="_blank" rel="noopener">MongoDB manual</a></p>
<p><a href="https://www.runoob.com/mongodb/mongodb-tutorial.html" target="_blank" rel="noopener">MongoDB 入门教程</a></p>
<ul>
<li><p><a href="https://blog.csdn.net/weixin_39308542/article/details/88377915" target="_blank" rel="noopener">studio 3t破解</a>, <code>studio3t.bat</code></p>
<pre class="line-numbers language-bat"><code class="language-bat">@echo off
ECHO 重置Studio 3T的使用日期......
FOR /f "tokens=1,2,* " %%i IN ('reg query "HKEY_CURRENT_USER\Software\JavaSoft\Prefs\3t\mongochef\enterprise" ^| find /V "installation" ^| find /V "HKEY"') DO ECHO yes | reg add "HKEY_CURRENT_USER\Software\JavaSoft\Prefs\3t\mongochef\enterprise" /v %%i /t REG_SZ /d ""
ECHO 重置完成, 按任意键退出......
pause>nul
exit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>复制到：<code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code>, 双击运行</p>
</li>
<li><p><a href="https://hub.docker.com/_/mongo" target="_blank" rel="noopener">Docker hub</a> </p>
</li>
<li><p><a href="https://docs.mongodb.com/manual/reference/program/mongod/" target="_blank" rel="noopener">mongod</a> 命令解析</p>
</li>
</ul>
<h4 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h4><p>​    Built-In Roles（内置角色）：<br>​    \1. 数据库用户角色：read、readWrite;<br>​    \2. 数据库管理角色：dbAdmin、dbOwner、userAdmin；<br>​    \3. 集群管理角色：clusterAdmin、clusterManager、clusterMonitor、hostManager；<br>​    \4. 备份恢复角色：backup、restore；<br>​    \5. 所有数据库角色：readAnyDatabase、readWriteAnyDatabase、userAdminAnyDatabase、dbAdminAnyDatabase<br>​    \6. 超级用户角色：root<br>​    // 这里还有几个角色间接或直接提供了系统超级用户的访问（dbOwner 、userAdmin、userAdminAnyDatabase）<br>​    \7. 内部角色：__system</p>
<p>具体角色：<br>Read：允许用户读取指定数据库<br>readWrite：允许用户读写指定数据库<br>dbAdmin：允许用户在指定数据库中执行管理函数，如索引创建、删除，查看统计或访问system.profile<br>userAdmin：允许用户向system.users集合写入，可以找指定数据库里创建、删除和管理用户<br>clusterAdmin：只在admin数据库中可用，赋予用户所有分片和复制集相关函数的管理权限。<br>readAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读权限<br>readWriteAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读写权限<br>userAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限<br>dbAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限。<br>root：只在admin数据库中可用。超级账号，超级权限  </p>
<p>授权操作</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker exec -it mongodb_mongo_1 mongo admin
db.auth("mongo-admin","admin-initial-password")
use octblog

# Step2: create a user
db.createUser(
  {
    user: "gevin",
    pwd: "gevin",
    roles: [ { role: "readWrite", db: "octblog" },
             { role: "readWrite", db: "octblog-log" } ],
    mechanisms : ["SCRAM-SHA-1"]         
  }
)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>授权验证</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker exec -it {containerId} mongo localhost:27017/db_name -u user -p password<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><p>实体类使用流程</p>
<p>第一步：导入<code>pom.xml</code>依赖，配置数据库</p>
<pre class="line-numbers language-yml"><code class="language-yml">  <!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-commons -->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-commons</artifactId>
      <version>1.13.9.RELEASE</version>
    </dependency><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>mongoDB 数据库设置</p>
<pre class="line-numbers language-yml"><code class="language-yml">spring:
  data:
    mongodb:
      uri:  mongodb://root:123@localhost:27017
      database: xc_cms
spring:
  data:
    mongodb:
      database: xc_cms
      host: <ip>
      port: 27017
      password: 
      username: <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第二步：定义实体类</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Id<span class="token punctuation">;</span>
<span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>core<span class="token punctuation">.</span>mapping<span class="token punctuation">.</span>Document<span class="token punctuation">;</span>

<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token annotation punctuation">@Document</span><span class="token punctuation">(</span>collection <span class="token operator">=</span> <span class="token string">"cms_page"</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CmsPage</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> String siteId<span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">//页面ID</span>
  <span class="token annotation punctuation">@Id</span>
  <span class="token keyword">private</span> String pageId<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第三步：配置符合jpa规范的操作仓库</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CmsPageRepository</span> <span class="token keyword">extends</span> <span class="token class-name">MongoRepository</span><span class="token operator">&lt;</span>CmsPage<span class="token punctuation">,</span> String<span class="token operator">></span> <span class="token punctuation">{</span>
     CmsPage <span class="token function">findByPageName</span><span class="token punctuation">(</span>String pageName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>第四步：实现分页</p>
<p>导入<code>pom.xml</code>依赖</p>
<pre class="line-numbers language-xml"><code class="language-xml">    <span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-commons --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.data<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-data-commons<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.13.9.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>PageService.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//查询条件匹配</span>
ExampleMatcher matcher <span class="token operator">=</span> ExampleMatcher<span class="token punctuation">.</span><span class="token function">matching</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Example example <span class="token operator">=</span> Example<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>cmsPage<span class="token punctuation">,</span> matcher<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//分页设置</span>
Pageable pageable <span class="token operator">=</span> PageRequest<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>page <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> page<span class="token punctuation">,</span> size <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">10</span> <span class="token operator">:</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
Page<span class="token operator">&lt;</span>CmsPage<span class="token operator">></span> all <span class="token operator">=</span> cmsPageRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span>example<span class="token punctuation">,</span> pageable<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="RabbitMQ"><a href="#RabbitMQ" class="headerlink" title="RabbitMQ"></a>RabbitMQ</h3><ul>
<li><a href="https://www.cnblogs.com/ityouknow/p/6120544.html" target="_blank" rel="noopener">springboot(八)：RabbitMQ详解</a> </li>
</ul>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><pre class="line-numbers language-shell"><code class="language-shell">  #启动
  rabbitmq-server -detached
  #查看的服务状态
  rabbitmqctl status
  #关闭
  rabbitmqctl stop
  # 配置网页插件， 1. 创建目录； 2. 启用插件
  mkdir /etc/rabbitmq 
  rabbitmq-plugins enable rabbitmq_management 
  # 配置linux网页管理端口： 15672 AMQP端口：5672
  # 然后访问http://localhost:15672即可， 阿里云：http://47.107.130.109:15672
  #默认用户guest 密码guest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><pre class="line-numbers language-shell"><code class="language-shell">#添加用户:
rabbitmqctl add_user <user_name> <password>
#添加权限:
rabbitmqctl set_permissions -p "/" <user_name> ".*" ".*" ".*"
#修改用户角色:
rabbitmqctl set_user_tags <user_name> administrator

# 常用命令
add_user        <UserName> <Password>
delete_user     <UserName>
change_password <UserName> <NewPassword>
list_users
add_vhost    <VHostPath>
delete_vhost <VHostPath>
list_vhostsset_permissions   [-p <VHostPath>] <UserName> <Regexp> <Regexp> <Regexp>
clear_permissions [-p <VHostPath>] <UserName>
list_permissions  [-p <VHostPath>]
list_user_permissions <UserName>
list_queues    [-p <VHostPath>] [<QueueInfoItem> ...]
list_exchanges [-p <VHostPath>] [<ExchangeInfoItem> ...]
list_bindings  [-p <VHostPath>]
list_connections [<ConnectionInfoItem> ...]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h3><h4 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h4><ol>
<li>mybatis 逆向工程 <a href="https://github.com/zouzg/mybatis-generator-gui" target="_blank" rel="noopener">mybatis-generator-gui</a><ol>
<li>使用教程 <a href="https://blog.csdn.net/bei_FengBoby/article/details/88546804" target="_blank" rel="noopener">推荐一款好用的mybatis逆向生成工具(真的很好用)</a></li>
</ol>
</li>
<li><a href="https://www.toutiao.com/a6677391666476745230/" target="_blank" rel="noopener">MyBatis Generator 使用教程</a></li>
<li><a href="https://mybatis.plus/" target="_blank" rel="noopener">MyBatis-Plus 官网</a><ol>
<li><a href="https://blog.csdn.net/qq_32258777/article/details/83382855" target="_blank" rel="noopener">MyBatis-Plus + mysql 网络访问入门demo</a></li>
<li><a href="https://github.com/baomidou/mybatis-plus-samples" target="_blank" rel="noopener"><strong>mybatis-plus-samples</strong></a></li>
</ol>
</li>
</ol>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://blog.csdn.net/qq_32953079/article/category/7493682" target="_blank" rel="noopener">Spring Data Jpa系列教程</a></li>
</ul>
<h3 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h3><p>1、<a href="http://www.mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/" target="_blank" rel="noopener">mybatis-spring-boot-starter 配置项手册</a></p>
<p>2、<a href="https://github.com/mybatis/spring-boot-starter" target="_blank" rel="noopener">GitHub仓库地址，包含代码示例</a></p>
<p>3、<a href="http://www.mybatis.org/mybatis-3/zh/index.html" target="_blank" rel="noopener">中文官方文档</a></p>
<p><a href="mailto:zhengyu@chinapay.com" target="_blank" rel="noopener">zhengyu@chinapay.com</a>; <a href="mailto:11770820@qq.com" target="_blank" rel="noopener">11770820@qq.com</a>; <a href="mailto:huang.haisong@chinapay.con" target="_blank" rel="noopener">huang.haisong@chinapay.con</a></p>
<h2 id="dubbo"><a href="#dubbo" class="headerlink" title="dubbo"></a>dubbo</h2><ul>
<li><a href="https://blog.csdn.net/noaman_wgs/article/details/70214612" target="_blank" rel="noopener">Dubbo入门—搭建一个最简单的Demo框架</a></li>
<li><a href="https://github.com/apache/incubator-dubbo" target="_blank" rel="noopener">incubator-dubbo</a> Apache Dubbo (incubating) is a high-performance, java based, open source RPC framework.</li>
</ul>
<h2 id="zipkin"><a href="#zipkin" class="headerlink" title="zipkin"></a><strong>zipkin</strong></h2><ul>
<li><a href="https://blog.csdn.net/qq_21387171/article/details/53787019" target="_blank" rel="noopener">微服务之分布式跟踪系统（springboot+zipkin）</a></li>
<li><a href="https://blog.csdn.net/xiaoluo033/article/details/80961807" target="_blank" rel="noopener">spring cloud 2.0 入门系列一 （10）分布式链路追踪-Zipkin</a></li>
</ul>
<h2 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h2><p>阿里云Tomcat地址 <code>/root/document/backup/apache-tomcat-7.0.63</code></p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><ol>
<li><p><a href="https://blog.csdn.net/qq_22638399/article/details/81506448" target="_blank" rel="noopener">Spring Boot 两种部署到服务器的方式</a></p>
<pre class="line-numbers language-java"><code class="language-java">jps 
kill <span class="token punctuation">[</span>ip<span class="token punctuation">]</span>
nohup java <span class="token operator">-</span>jar test<span class="token punctuation">.</span>jar <span class="token operator">></span>temp<span class="token punctuation">.</span>txt <span class="token operator">&amp;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h2 id="FastDFS"><a href="#FastDFS" class="headerlink" title="FastDFS"></a>FastDFS</h2><p>   [<a href="https://www.cnblogs.com/chiangchou/p/fastdfs.html" target="_blank" rel="noopener">用FastDFS一步步搭建文件管理系统</a>]</p>
<p>   官网： <a href="https://github.com/happyfish100/fastdfs" target="_blank" rel="noopener"><strong>fastdfs</strong></a></p>
<ol>
<li><a href="https://github.com/qbanxiaoli/fastdfs" target="_blank" rel="noopener">docker-compose  和Dockerfile  生成fastdfs 学习案例</a><ol start="2">
<li><a href="https://github.com/Guu-mc/fastdfs" target="_blank" rel="noopener">moocu/fastdfs source </a></li>
<li>成功使用的案例 <a href="https://www.jianshu.com/p/206b342cc689" target="_blank" rel="noopener">Docker安装fastdfs</a></li>
</ol>
</li>
</ol>
<h2 id="Frp-内网穿透"><a href="#Frp-内网穿透" class="headerlink" title="Frp 内网穿透"></a>Frp 内网穿透</h2><h3 id="1-参考资料"><a href="#1-参考资料" class="headerlink" title="1. 参考资料"></a>1. 参考资料</h3><ul>
<li><a href="https://blog.csdn.net/u013144287/article/details/78589643/" target="_blank" rel="noopener">十分钟教你配置frp实现内网穿透</a></li>
<li><a href="https://www.cnblogs.com/sanduzxcvbnm/category/1171545.html" target="_blank" rel="noopener">frp 教程</a></li>
<li><a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">github官网</a></li>
</ul>
<h3 id="2-实战经验记录"><a href="#2-实战经验记录" class="headerlink" title="2. 实战经验记录"></a>2. 实战经验记录</h3><ol>
<li>【重点-备份】0.27版本全平台版本储存在 <code>E:\software\2.coder\debug</code> </li>
<li>【47公网服务器路径】 <code>/usr/local/frp/frp_0.27.0_linux_amd64</code></li>
<li>【版本问题】 服务器端和客户端版本必须一致，否则会出现各种无法排查的问题</li>
</ol>
<h3 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3. 常用命令"></a>3. 常用命令</h3><pre class="line-numbers language-shell"><code class="language-shell">#启动服务
./frps -c ./frps.ini
#启动后台服务
nohup ./frps -c ./frps.ini &

#启动客户端
./frpc -c ./frpc.ini
#配置热更新
frpc reload -c ./frpc.ini
#得到代理任务
frpc status -c ./frpc.ini<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="4-案例"><a href="#4-案例" class="headerlink" title="4. 案例"></a>4. 案例</h3><h4 id="4-1-经典内网穿透案例"><a href="#4-1-经典内网穿透案例" class="headerlink" title="4.1 经典内网穿透案例"></a>4.1 经典内网穿透案例</h4><p>第一步：配置公网服务配置文件，frps.ini</p>
<pre class="line-numbers language-shell"><code class="language-shell">[common]
bind_port = 7000
token=1234567890
#客户端配置的端口
vhost_http_port = 6081<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>启动</p>
<pre class="line-numbers language-shell"><code class="language-shell">#启动服务
./frps -c ./frps.ini
#启动后台服务
nohup ./frps -c ./frps.ini &<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>第二步：配置内网服务配置文件，frpc.ini</p>
<pre class="line-numbers language-shell"><code class="language-shell">[common]
server_addr = 47.107.130.109
server_port = 7000
token=1234567890

[web]
type = http
local_ip = 192.168.1.2
local_port = 50102
custom_domains = frps.linz.tech<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>【注意】</p>
<ul>
<li>custom_domains 配置的域名必须指向公网IP</li>
<li>local_ip 不一定是本机IP，即内网能访问的IP地址都能映射</li>
</ul>
<h4 id="4-2-自定义子域名使其转发到内网服务中"><a href="#4-2-自定义子域名使其转发到内网服务中" class="headerlink" title="4.2 自定义子域名使其转发到内网服务中"></a>4.2 自定义子域名使其转发到内网服务中</h4><ol>
<li><p>阿里云配置所以*frp.linz.tech 转发到阿里云服务器</p>
</li>
<li><p>服务端配置</p>
<pre class="line-numbers language-shell"><code class="language-shell">[common]
bind_port = 7000
subdomain_host = linz.tech
vhost_http_port = 6081

#log
log_file = ./frps.log
log_level = debug
log_max_days =3

dashboard_port = 7500
# dashboard 用户名密码，默认都为 admin
dashboard_user = admin
dashboard_pwd = admin
#connection pool setting
max_pool_count = 3

#token 和客户端配置的 accesstoken保持一致，不一致无法保持连接
token=1234567890
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>客户端设置</p>
<pre class="line-numbers language-shell"><code class="language-shell">[common]
server_addr = 47.107.130.109
server_port = 7000
user = jobs
token=1234567890
pool_count = 2

[portainer]
type = http
local_port = 9000
subdomain = portainer
#below 2 param default is false
use_encryption = true
use_compression = true

[eureka]
type = http
local_port = 50101
subdomain = eureka<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h4 id="4-3-ssh-登录"><a href="#4-3-ssh-登录" class="headerlink" title="4.3 ssh 登录"></a>4.3 ssh 登录</h4><pre class="line-numbers language-shell"><code class="language-shell"># frpc.ini
[common]
server_addr = x.x.x.x
server_port = 7000

[ssh]
type = tcp
local_ip = 127.0.0.1
local_port = 22
remote_port = 6000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>ssh 连接 <code>ssh -oPort=6000 test@x.x.x.x</code> 其中 test为服务器登录名称</p>
<h2 id="zuul"><a href="#zuul" class="headerlink" title="zuul"></a>zuul</h2><ul>
<li><a href="https://www.cnblogs.com/lexiaofei/p/7080257.html" target="_blank" rel="noopener">zuul入门（1）zuul 的概念和原理</a></li>
<li><a href="https://blog.csdn.net/qq_21082615/article/details/91371252" target="_blank" rel="noopener">zuul 动态网关路由</a></li>
<li><a href="https://blog.csdn.net/u013815546/article/details/69669165" target="_blank" rel="noopener">Zuul性能测试</a></li>
</ul>
<h1 id="配置管理"><a href="#配置管理" class="headerlink" title="配置管理"></a>配置管理</h1><h2 id="对密码加密"><a href="#对密码加密" class="headerlink" title="对密码加密"></a>对密码加密</h2><ul>
<li><a href="https://blog.csdn.net/kecong532664/article/details/82257931" target="_blank" rel="noopener">springboot中对数据库密码加密</a></li>
<li><a href="https://github.com/gooree/spring-boot-security/blob/master/README.md" target="_blank" rel="noopener"><strong>spring-boot-security</strong></a> 配置案例</li>
<li>建议还是把配置文件放在配置中心，类似的有携程的阿波罗<a href="https://github.com/ctripcorp/apollo/wiki/Quick-Start" target="_blank" rel="noopener">https://github.com/ctripcorp/apollo/wiki/Quick-Start</a></li>
<li>disconf <a href="https://github.com/knightliao/disconf" target="_blank" rel="noopener">https://github.com/knightliao/disconf</a></li>
</ul>
<h2 id="开源库-1"><a href="#开源库-1" class="headerlink" title="开源库"></a>开源库</h2><h3 id="nacos"><a href="#nacos" class="headerlink" title="nacos"></a>nacos</h3><ul>
<li><a href="https://github.com/alibaba/nacos" target="_blank" rel="noopener"><strong>nacos</strong></a></li>
</ul>
<h4 id="服务提供者集成nacos"><a href="#服务提供者集成nacos" class="headerlink" title="服务提供者集成nacos"></a><strong>服务提供者集成nacos</strong></h4><p><strong>第一步</strong>：加入必要的依赖配置 <code>pom.xml</code></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.0.5.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- lookup parent from repository --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>Finchley.SR1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-alibaba-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.2.2.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.18.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第二步： 应用入口App启用 <code>@EnableDiscoveryClient</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@EnableDiscoveryClient</span>
<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestApplication</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p> 第三步： 接入nacos服务,如<code>application.properties</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">server.port=8001
spring.application.name=alibaba-nacos-discovery-server
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
#命名空间设置
spring.cloud.nacos.discovery.namespace=f1e5a968-5ddb-479b-8e35-1f8c9ccea438<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="服务消费者"><a href="#服务消费者" class="headerlink" title="服务消费者"></a>服务消费者</h4><p><strong>第一，二，三步</strong>：同上</p>
<p>第四: 请求</p>
<p><strong>RestTemplate</strong></p>
<pre class="line-numbers language-java"><code class="language-java">      <span class="token annotation punctuation">@Bean</span>
    <span class="token annotation punctuation">@LoadBalanced</span>
    <span class="token keyword">public</span> RestTemplate <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
String result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">"http://alibaba-nacos-discovery-server/hello?name=didi"</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>WebClient</strong></p>
<p>第一步：加入必要依赖配置</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-webflux<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>第二步：使用</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Bean</span>
<span class="token annotation punctuation">@LoadBalanced</span>
<span class="token keyword">public</span> WebClient<span class="token punctuation">.</span>Builder <span class="token function">loadBalancedWebClientBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> WebClient<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> Mono<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Mono<span class="token operator">&lt;</span>String<span class="token operator">></span> result <span class="token operator">=</span> webClientBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">uri</span><span class="token punctuation">(</span><span class="token string">"http://alibaba-nacos-discovery-server/hello?name=didi"</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">retrieve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">bodyToMono</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>Feign使用</strong></p>
<p>第一步： 增加openfeign依赖</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>第二步：App 入口启用<code>@EnableFeignClients</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@EnableFeignClients</span>
<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestApplication</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>第三步：使用</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"XC-SERVICE-MANAGE-CMS"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//指定要远程调用的服务名</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CmsPageClient</span> <span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">/**
   * 根据页面id查询页面信息，远程调用cms请求数据
   * @param id page id
   * @return
   */</span>
  <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/cms/page/get/{id}"</span><span class="token punctuation">)</span>
  CmsPage <span class="token function">findCmsPageById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> String id<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment" spellcheck="true">/**
   * 保存页面
   * @param cmsPage
   * @return
   */</span>
  <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/cms/page/save"</span><span class="token punctuation">)</span>
  CmsPageResult <span class="token function">saveCmsPage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> CmsPage cmsPage<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment" spellcheck="true">/**
   * 一键发布接口
   * @param cmsPage
   * @return
   */</span>
  <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/cms/page/postPageQuick"</span><span class="token punctuation">)</span>
  CmsPostPageResult <span class="token function">postPageQuick</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> CmsPage cmsPage<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="配置中心集成"><a href="#配置中心集成" class="headerlink" title="配置中心集成"></a>配置中心集成</h4><p>第一步：加入必要的依赖，</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.0.5.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- lookup parent from repository --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>Finchley.SR1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-alibaba-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.2.2.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-alibaba-nacos-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.18.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>如果已经集成了服务提供或者消费，只需增加如下配置：</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-alibaba-nacos-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>第二步：代码中使用</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>TestApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Slf4j</span>
    <span class="token annotation punctuation">@RestController</span>
    <span class="token annotation punctuation">@RefreshScope</span>
    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>

        <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${didispace.title:}"</span><span class="token punctuation">)</span>
        <span class="token keyword">private</span> String title<span class="token punctuation">;</span>

        <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">)</span>
        <span class="token keyword">public</span> String <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> title<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>配注：</p>
<ol>
<li><code>@Value("${didispace.title:}")</code> 读取配置信息</li>
<li><code>@RefreshScope</code> 这个类配置内容支持动态更新</li>
</ol>
<p>第三步：创建配置文件<code>bootstrap.properties</code></p>
<pre class="line-numbers language-yml"><code class="language-yml">spring.application.name=alibaba-nacos-config-client
server.port=8001
spring.cloud.nacos.config.server-addr=127.0.0.1:8848<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>第四步：自定义配置</p>
<pre class="line-numbers language-ynl"><code class="language-ynl"># blog: http://blog.didispace.com/spring-cloud-alibaba-nacos-config-1/
#自定义配置文件选择
A
#spring.cloud.nacos.config.prefix=example
#spring.cloud.nacos.config.file-extension=properties
#spring.cloud.nacos.config.group=DEV_GROUP

# 开发模式选择
# blog: http://blog.didispace.com/spring-cloud-alibaba-nacos-config-2/
#spring.profiles.active=DEV 
#spring.cloud.nacos.config.group=DEV_GROUP

# blog: http://blog.didispace.com/spring-cloud-alibaba-nacos-config-3/
#多文件配置
#1. B 数组形式
#spring.cloud.nacos.config.ext-config[0].data-id=actuator.properties
#spring.cloud.nacos.config.ext-config[0].group=DEFAULT_GROUP
#spring.cloud.nacos.config.ext-config[0].refresh=true
#spring.cloud.nacos.config.ext-config[1].data-id=log.properties
#spring.cloud.nacos.config.ext-config[1].group=DEFAULT_GROUP
#spring.cloud.nacos.config.ext-config[1].refresh=true
#2. C 分割符形式
#spring.cloud.nacos.config.shared-dataids=actuator.properties,log.properties
#spring.cloud.nacos.config.refreshable-dataids=actuator.properties,log.properties

#配置优先级： A > B > C<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="常用SDK-开源库"><a href="#常用SDK-开源库" class="headerlink" title="常用SDK/开源库"></a>常用SDK/开源库</h1><pre><code>1. 后台
主要是在码云上找的，
官网：https://gitee.com/explore
几个分数很高的后台
https://www.oschina.net/p/guns  【参考】
https://gitee.com/shuzheng/zheng 【推荐】star个数最多
https://gitee.com/jfinal/jfinal  【了解】

2. 权限管理
https://www.oschina.net/p/iBase4J 权限管理

3. UI
有很多的网页端的开源框架，具体的可以咨询藤来
http://www.layui.com/admin/ 【推荐看】这个能直接看到案例，感觉直接套用就可以了
http://element-cn.eleme.io/

主要参考的资料：
2016 年度开源中国新增开源软件排行榜 TOP 100 
网址：https://www.oschina.net/news/80846/2016-osc-new-open-source-software-top-100
2017 年度开源中国新增开源软件排行榜 TOP 100
网址：https://www.jianshu.com/p/ea9f08267c83</code></pre><h2 id="文件存储服"><a href="#文件存储服" class="headerlink" title="文件存储服"></a>文件存储服</h2><ol>
<li><p><a href="https://www.oschina.net/p/fastdfs?hmsr=aladdin1e1" target="_blank" rel="noopener">FastDFS 分布式文件系统</a> 搭建比较麻烦，但是现在一些中型互联网公司还在用</p>
</li>
<li><p><a href="https://docs.min.io/cn/" target="_blank" rel="noopener">MinIO</a> </p>
<blockquote>
<p>MinIO 是一个基于Apache License v2.0开源协议的对象存储服务。它兼容亚马逊S3云存储服务接口，非常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器/虚拟机镜像等，而一个对象文件可以是任意大小，从几kb到最大5T不等。</p>
</blockquote>
</li>
</ol>
<h2 id="常用SDK"><a href="#常用SDK" class="headerlink" title="常用SDK"></a>常用SDK</h2><h3 id="腾云点播"><a href="#腾云点播" class="headerlink" title="腾云点播"></a>腾云点播</h3><blockquote>
<p>一些新品重要的产品可以使用腾云点播<br>腾讯云点播<br><a href="https://cloud.tencent.com/document/product/266" target="_blank" rel="noopener">https://cloud.tencent.com/document/product/266</a><br>计费方式<br><a href="https://cloud.tencent.com/document/product/266/14666" target="_blank" rel="noopener">https://cloud.tencent.com/document/product/266/14666</a></p>
</blockquote>
<p>Tengine CSDN 正在使用</p>
<blockquote>
<p>Tengine是由淘宝网发起的Web服务器项目。它在Nginx的基础上，针对大访问量网站的需求，添加了很多高级功能和特性。它的目的是打造一个高效、安全的Web平台。</p>
</blockquote>
<h1 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h1><h2 id="基础教程"><a href="#基础教程" class="headerlink" title="基础教程"></a>基础教程</h2><ul>
<li><a href="https://gitee.com/didispace/SpringBoot-Learning" target="_blank" rel="noopener">Spring Boot基础教程</a></li>
<li><a href="https://github.com/qibaoguang/Spring-Boot-Reference-Guide" target="_blank" rel="noopener">Spring-Boot-Reference-Guide</a></li>
<li><a href="https://my.oschina.net/genghz/blog/1789240" target="_blank" rel="noopener">spring-boot集成graphql入门教程</a></li>
</ul>
<h2 id="前人总结"><a href="#前人总结" class="headerlink" title="前人总结"></a>前人总结</h2><ul>
<li><a href="http://www.ityouknow.com/springcloud/2016/12/30/springcloud-collect.html" target="_blank" rel="noopener">springcloud学习资料汇总</a> 【重点】</li>
<li><a href="https://github.com/crossoverJie/JCSprout" target="_blank" rel="noopener">JCSprout 处于萌芽阶段的 Java 核心知识库</a></li>
<li><a href="https://github.com/Snailclimb/JavaGuide" target="_blank" rel="noopener">JavaGuide</a></li>
</ul>
<h2 id="学习视频汇总"><a href="#学习视频汇总" class="headerlink" title="学习视频汇总"></a>学习视频汇总</h2><ul>
<li><a href="http://www.cnblogs.com/abc1168/p/9532326.html" target="_blank" rel="noopener">Java架构师分享自己的从业心得，从码农到架构师我用了八年，高级视频课程学习</a></li>
</ul>
<h2 id="开源库汇总"><a href="#开源库汇总" class="headerlink" title="开源库汇总"></a>开源库汇总</h2><ul>
<li><a href="https://www.toutiao.com/i6634379937220411912/?iid=54285592648" target="_blank" rel="noopener">springboot快速开发框架推荐，接私活利器</a></li>
</ul>
<h2 id="博客资料"><a href="#博客资料" class="headerlink" title="博客资料"></a>博客资料</h2><ul>
<li><p><a href="http://blog.didispace.com/" target="_blank" rel="noopener">http://blog.didispace.com/</a></p>
</li>
<li><p><a href="http://www.ityouknow.com/" target="_blank" rel="noopener">纯洁的微笑</a></p>
</li>
</ul>
<h1 id="阿里云学习"><a href="#阿里云学习" class="headerlink" title="阿里云学习"></a>阿里云学习</h1><ul>
<li>远程连接密码 934698</li>
<li>实例密码：老爸168 （Lin）</li>
<li>阿里云后台 47.107.130.109</li>
</ul>
<p>容器镜像服务登录密码：<br>老爸168</p>
<ul>
<li>阿里云手机终端通过SSH连接后台<pre class="line-numbers language-shell"><code class="language-shell"># 网页端后台操作步骤
# 1. 找到管理页面
云服务器ECS-->网络和安全--> 秘钥对-> 秘钥对管理
# 2. 新建绑定下载
创建秘钥->绑定指定后台-> 重启服务器
# Android SSH工具使用
iP：47.107.130.109 
登录名：root
密钥： 选择上面下载xxx.pem
密钥口令：不用填
端口：22（和后台ssh相同）
别名: 随意<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<p>通过ssh远程登录服务器</p>
<pre class="line-numbers language-shell"><code class="language-shell">#获取root权限
shh -i 
#用IP或者域名登录，需要输入元服务器ECS登录密码 
ssh root@47.107.130.109 
ssh root@example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="安全组配置"><a href="#安全组配置" class="headerlink" title="安全组配置"></a>安全组配置</h2><ul>
<li>Redis 有专门的选择专门的Redis协议 6379 自定义TCP协议无效</li>
</ul>
<h2 id="常用配置界面"><a href="#常用配置界面" class="headerlink" title="常用配置界面"></a>常用配置界面</h2><ul>
<li><a href="https://dns.console.aliyun.com/#/dns/setting/linz.tech" target="_blank" rel="noopener">linz.tech 域名配置界面</a></li>
<li><a href="https://ecs.console.aliyun.com/?spm=a2c1d.8251892.aliyun_sidebar.aliyun_sidebar_ecs.34f85b76YnLmUP#/securityGroupDetail/region/cn-shenzhen/groupId/sg-wz933l0ge76qamrg3ng3/rule/intranetIngress" target="_blank" rel="noopener">后台端口开发设置界面</a></li>
<li><a href="https://cloudmonitor.console.aliyun.com/index.htm?spm=5176.2020520101.223.d101.627a4df5vTHaWk&amp;custom_trace=ecs_console#/hostDetail/alarm/instanceId=i-wz933l0ge76qamri4req&amp;system=Linux&amp;region=cn-shenzhen&amp;aliyunhost=true&amp;category=ecs" target="_blank" rel="noopener">新建报警机制</a></li>
<li><a href="https://yundun.console.aliyun.com/?spm=5176.6660585.774526198.1.31926bf8YSEGxy&amp;p=cas#/overview/cn-hangzhou" target="_blank" rel="noopener">ssl 证书申请</a></li>
<li><a href="https://help.aliyun.com/document_detail/98737.html?spm=a2c4g.11186623.6.567.7ce447b9n5gZ2a&amp;short_name=I3.ZW3uZ&amp;app=chrome" target="_blank" rel="noopener">证书下载</a></li>
</ul>
<h1 id="亚马逊云学习"><a href="#亚马逊云学习" class="headerlink" title="亚马逊云学习"></a>亚马逊云学习</h1><p>Linux用r3.pem登录</p>
<pre class="line-numbers language-shell"><code class="language-shell">/mnt/hgfs/ubuntu/workspace/tools/亚马逊服务器连接
chmod 400 aws亚马逊_服务秘钥r3.pem
ssh -i aws亚马逊_服务秘钥r3.pem ubuntu@ec2-18-191-169-66.us-east-2.compute.amazonaws.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="shadowsocket"><a href="#shadowsocket" class="headerlink" title="shadowsocket"></a>shadowsocket</h2><ul>
<li><p><a href="http://www.ycnote.com/post-234.html" target="_blank" rel="noopener">详细教程：shadowsocket：比vpn更牛的科学上网方式，自己搭建shadowsocket的超详细教程</a></p>
</li>
<li><p><a href="https://github.com/shadowsocks" target="_blank" rel="noopener">https://github.com/shadowsocks</a> 开源库官网</p>
</li>
</ul>
<p>总结命令</p>
<ul>
<li><p>install</p>
<pre class="line-numbers language-shell"><code class="language-shell"># root
sudo -s
# install 
apt-get update
apt-get install python-pip
pip install shadowsocks
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>setting <code>vi /etc/shadowsocks.json</code></p>
<ul>
<li><p>单用户</p>
<pre class="line-numbers language-shell"><code class="language-shell">{
    "server":"0.0.0.0",
    "server_port":8989,
    "local_address":"127.0.0.1",
    "local_port":1080,
    "password":"yourpassword",
    "timeout":300,
    "method":"aes-256-cfb",
    "fast_open": false
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>多用户</p>
<pre class="line-numbers language-shell"><code class="language-shell">{
    "server":"0.0.0.0",
    "local_address":"127.0.0.1",
    "local_port":1080,
    "port_password":{
        "8989":"password0",
        "9001":"password1",
        "9002":"password2",
        "9003":"password3",
        "9004":"password4"
    },
    "timeout":300,
    "method":"aes-256-cfb",
    "fast_open": false
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
</li>
<li><p>运行</p>
<pre class="line-numbers language-shell"><code class="language-shell">ssserver -c /etc/shadowsocks.json -d start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>出现如下打印成功启动</p>
<pre class="line-numbers language-shell"><code class="language-shell">INFO: loading config from /etc/shadowsocks.json
2019-02-18 14:32:45 INFO     loading libcrypto from libcrypto.so.1.0.0
started<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>设置开机启动 <code>vi /etc/rc.local</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
# By default this script does nothing.

#增加
ssserver -c /etc/shadowsocks.json -d start
exit 0
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node js"></a>Node js</h1><p>nodejs 在linux上后台运行</p>
<pre><code>1.用forever  进行管理搜索
　　　　npm install -g forever
　　　　forever start index.js</code></pre><h1 id="域名配置"><a href="#域名配置" class="headerlink" title="域名配置"></a>域名配置</h1><ul>
<li><a href="https://www.cnblogs.com/osfipin/p/freessl.html" target="_blank" rel="noopener">免费SSL证书(https网站)申请</a></li>
</ul>
<h1 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h1><h2 id="Centos-virtual-box-安装"><a href="#Centos-virtual-box-安装" class="headerlink" title="Centos virtual-box 安装"></a>Centos virtual-box 安装</h2><ul>
<li><a href="https://www.virtualbox.org/wiki/Linux_Downloads" target="_blank" rel="noopener">Download VirtualBox for Linux Hosts</a></li>
<li>配置版本仓库，在<code>/etc/yum.repos.d/</code>目录下新建<code>virtualbox.repo</code>并写入如下内容<pre class="line-numbers language-shell"><code class="language-shell">[virtualbox]
name=Oracle Linux / RHEL / CentOS-$releasever / $basearch - VirtualBox
baseurl=http://download.virtualbox.org/virtualbox/rpm/el/$releasever/$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://www.virtualbox.org/download/oracle_vbox.asc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>安装<pre class="line-numbers language-shell"><code class="language-shell"># 6.更新yum缓存
yum clean all
yum makecache
# 7.安装virtualbox
yum install VirtualBox-6.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h2 id="Mail"><a href="#Mail" class="headerlink" title="Mail"></a>Mail</h2><h2 id="126邮箱设置"><a href="#126邮箱设置" class="headerlink" title="126邮箱设置"></a>126邮箱设置</h2><table>
<thead>
<tr>
<th>邮件服务器名称</th>
<th>服务器地址</th>
<th>端口号</th>
</tr>
</thead>
<tbody><tr>
<td>POP3服务器</td>
<td>pop.126.com</td>
<td>110</td>
</tr>
<tr>
<td>SMTP服务器</td>
<td>smtp.126.com</td>
<td>25</td>
</tr>
<tr>
<td>IMAP服务器</td>
<td>imap.126.com</td>
<td>143</td>
</tr>
</tbody></table>
<p>Navicat 自动发送短信设置</p>
<pre class="line-numbers language-shell"><code class="language-shell">SMTP服务器： smtp.126.com:25
用户名： zhilinchn@126.com
密码(区分大小写)： !!16...99qQ
安全连接: TLS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Maven-私服务搭建"><a href="#Maven-私服务搭建" class="headerlink" title="Maven 私服务搭建"></a>Maven 私服务搭建</h2><ul>
<li><a href="https://blog.csdn.net/dhmpgt/article/details/9998321" target="_blank" rel="noopener">Nexus创建Maven私有仓库</a></li>
</ul>
<h2 id="Redis-1"><a href="#Redis-1" class="headerlink" title="Redis"></a>Redis</h2><p>Redis 外部访问设置</p>
<pre><code>1&gt;注释掉bind
#bind 127.0.0.1

3&gt;禁用保护模式
protected-mode no</code></pre><h2 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h2><ul>
<li><a href="https://blog.csdn.net/qq_30886555/article/details/61920105" target="_blank" rel="noopener">Jenkins设置网易系邮件通知</a></li>
</ul>
<h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><h2 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h2><ul>
<li>Tomcat 8080 端口配占用<ul>
<li>Windows<pre class="line-numbers language-shell"><code class="language-shell"># 找到pid  代LISTENING的
netstat -ano | findstr "8080"
# 找到进程
tasklist | findstr "pid"
# 杀掉进程
taskkill /f /t /im java.exe <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
</li>
</ul>
<h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><ul>
<li><p>[Windows10下Docker出现net/http:TLS handshake timeout](<a href="https://blog.csdn.net/pop0fa/article/details/80029739）" target="_blank" rel="noopener">https://blog.csdn.net/pop0fa/article/details/80029739）</a></p>
<pre><code>http://69292621.m.daocloud.io
settings-&gt; daemon-&gt; registry mirrors: 
add 
http://69292621.m.daocloud.io</code></pre></li>
<li><p>VMware Workstation 与 Device/Credential Guard 不兼容。在禁用 Device/Credential Guard 后，可以运行 VMware Workstation。有关更多详细信息，请访问 </p>
<p>关闭Hyper-v</p>
</li>
<li><pre class="line-numbers language-shell"><code class="language-shell">WARNING: The vboxdrv kernel module is not loaded. Either there is no module
         available for the current kernel (3.10.0-862.14.4.el7.x86_64) or it failed to
         load. Please recompile the kernel module and install it by
           sudo /sbin/vboxconfig
         You will not be able to start VMs until this problem is fixed.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>/sbin/vboxconfig</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">vboxdrv.sh: Stopping VirtualBox services.
vboxdrv.sh: Starting VirtualBox services.
vboxdrv.sh: Building VirtualBox kernel modules.
This system is currently not set up to build kernel modules.
Please install the Linux kernel "header" files matching the current kernel
for adding new hardware support to the system.
The distribution packages containing the headers are probably:
    kernel-devel kernel-devel-3.10.0-862.14.4.el7.x86_64
This system is currently not set up to build kernel modules.
Please install the Linux kernel "header" files matching the current kernel
for adding new hardware support to the system.
The distribution packages containing the headers are probably:
    kernel-devel kernel-devel-3.10.0-862.14.4.el7.x86_64
There were problems setting up VirtualBox.  To re-start the set-up process, run
  /sbin/vboxconfig
as root.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h2 id="七牛云测试域名过渡"><a href="#七牛云测试域名过渡" class="headerlink" title="七牛云测试域名过渡"></a>七牛云测试域名过渡</h2><ol>
<li><p>操作界面：<a href="https://portal.qiniu.com/cdn/domain/create?bucket=image&amp;fixBucket" target="_blank" rel="noopener"> 域名管理-&gt; 创建域名  </a><br>操作： 如域名为 linz.tech, 填写加速域名为 cdn.linz.tech 其他默认点击创建即可。<br>说明：cdn是可以随意取名的二级域名<br>操作结果：  <a href="https://portal.qiniu.com/cdn/domain?ref=developer.qiniu.com" target="_blank" rel="noopener"><strong>域名管理</strong></a> 界面新增一个域名列表，点击配置 获取如: <code>CNAME：cdn.linz.tech.qiniudns.com</code>的域名映射；</p>
</li>
<li><p>配置CNAME：<a href="https://dns.console.aliyun.com/?spm=5176.100251.111252.28.6dc04f157ZpxzS#/dns/setting/linz.tech" target="_blank" rel="noopener">到域名解析管理里面增加二级域名</a><br>操作步骤： </p>
<ol>
<li>添加记录</li>
<li>记录类型，选择<code>CNAME</code>；</li>
<li>主机记录： 填入<code>cdn</code>,上面自定义的二级域名</li>
<li>记录值把上一步操作的值（<code>cdn.linz.tech.qiniudns.com</code>）填入，其他默认，确定即可；</li>
</ol>
</li>
<li><p>测试： 到<a href="https://portal.qiniu.com/bucket/image/resource" target="_blank" rel="noopener">内容管理界面</a>随便复制一个文件测试访问，访问域名为<code>http://cdn.linz.tech</code>并访问成功，设置成功</p>
<h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3></li>
</ol>
<ul>
<li><a href="https://developer.qiniu.com/kodo/kb/5158/how-to-transition-from-test-domain-name-to-a-custom-domain-name" target="_blank" rel="noopener">如何从测试域名过渡到自定义域名</a></li>
<li><a href="https://developer.qiniu.com/fusion/manual/4939/the-domain-name-to-access。" target="_blank" rel="noopener">域名接入文档</a></li>
</ul>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h2><p>状态监测</p>
<pre class="line-numbers language-shell"><code class="language-shell">#查看端口号是否被占用
netstat -tunlp |grep 8000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>后台</tag>
      </tags>
  </entry>
  <entry>
    <title>【硬核】从新势力电商拼夕夕App洞察，电商App都需要引用什么库</title>
    <url>/2020/12/05/2020-12-5-%E5%A4%A7%E5%8E%82%E9%83%BD%E7%94%A8%E4%BB%80%E4%B9%88%E5%BC%80%E6%BA%90%E5%BA%93/</url>
    <content><![CDATA[<p>【<strong>补充：刚看到华为Android相关的SDK，突然感受到华为在Android领域的深厚的技术积累，所以上两张图</strong>】</p>
<p>在一个技术从业者的角度看华为，牛掰佩服，这就是我的梦想呀！技术傍身披荆斩棘，格局宏大，战略深谋。</p>
<p><strong>鱼翔浅底</strong></p>
<p><strong>鹰击长空,</strong></p>
<p><strong>万类霜天竞自由</strong></p>
<p>希望我未来也能有这种类似精神和气质。</p>
<p><img src="https://cdn.linz.tech/%E5%8D%8E%E4%B8%BA%E7%A0%B4%E9%A3%9E%E6%9C%BA.jpg" alt=""></p>
<p><img src="https://cdn.linz.tech/%E5%8D%8E%E4%B8%BA%E8%8A%AD%E8%95%BE%E8%88%9E%E9%9E%8B.jpeg" alt=""></p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><img src="https://cdn.linz.tech/top_2020_mobile_app.png" alt=""></p>
<p>最近好像着了拼夕夕的道了，成功成为拼夕夕重度用户，身为Android程序员，总觉得拼夕夕的更新App的频率有点低，不是有点低，在我手上半年没更新了，但是各种活动推陈出新，特别是最近我看到</p>
<p><img src="https://cdn.linz.tech/%E6%8B%BC%E5%A4%95%E5%A4%95.jpeg" alt=""></p>
<p>一个之前原生UI界面的功能突然冒出来（多多钱包功能），当然这个可能是后台配置数据而来，之前的功能原来就有，但是这个引起了我研究大厂App的兴致，撸起袖子开赶，把之前知道的反编译知识在捡起来用用。</p>
<p><img src="https://cdn.linz.tech/80s_picture.jpg" alt=""></p>
<h1 id="拼多多"><a href="#拼多多" class="headerlink" title="拼多多"></a>拼多多</h1><p>当然第一个下手的就是拼多多了</p>
<ol>
<li><p><strong>异常捕获</strong> <a href="https://github.com/iqiyi/xCrash" target="_blank" rel="noopener">xCrash</a>  2019 年由爱奇艺在 GitHub 上开源。</p>
<h2 id="偏底层优化"><a href="#偏底层优化" class="headerlink" title="偏底层优化"></a>偏底层优化</h2></li>
<li><p><a href="https://github.com/bytedance/BoostMultiDex" target="_blank" rel="noopener"><strong>BoostMultiDex</strong></a></p>
<blockquote>
<p>相比于 Android 官方原始 MultiDex 方案，它能够减少 80% 以上的黑屏等待时间<br><img src="https://cdn.linz.tech/BoostMultiDex.jpg" alt=""></p>
</blockquote>
</li>
<li><p><strong><a href="https://github.com/Tencent/MMKV" target="_blank" rel="noopener">MMKV</a></strong> 基于 mmap 的高性能通用 key-value 组件</p>
<blockquote>
<p>MMKV 是基于 mmap 内存映射的 key-value 组件，底层序列化/反序列化使用 protobuf 实现，性能高，稳定性强。从 2015 年中至今在微信上使用，其性能和稳定性经过了时间的验证。近期也已移植到 Android / macOS / Win32 / POSIX 平台，一并开源。</p>
<p>官方提供的性能对比图，这个有点凶残了，哈哈</p>
<p><img src="https://cdn.linz.tech/profile_android_mini.png" alt=""></p>
</blockquote>
</li>
<li><p><a href="https://github.com/iqiyi/xHook" target="_blank" rel="noopener">xHook</a>  </p>
<blockquote>
<p>官方描述：xhook 是一个针对 Android 平台 ELF (可执行文件和动态库) 的 PLT (Procedure Linkage Table) hook 库</p>
<p>感觉有点吊so库都能hook感兴趣的小伙伴可以看看</p>
</blockquote>
</li>
<li><p><a href="https://github.com/eclipsesource/J2V8" target="_blank" rel="noopener">J2V8</a>  不知道拼多多是否在Javascript引擎上做了优化，也可能是第三方引用</p>
<blockquote>
<p>J2V8是一套针对谷歌的V8 Javascript引擎的java绑定。J2V8的开发为Android平台带来了高效的Javascript的执行环境 </p>
<p>教程：<a href="https://blog.csdn.net/zyzzate/article/details/52303376?locationNum=8&amp;fps=1" target="_blank" rel="noopener">Java 调用Javascript 输出Hello World!</a></p>
</blockquote>
</li>
<li><p><a href="https://github.com/protocolbuffers/protobuf" target="_blank" rel="noopener"><strong>protobuf</strong></a>  【已经45.1k start可见这个应用范围有多广】是二进制存储 所以比 json传输更快 更易于跨平台开发 但是读写更麻烦,这个在Google开源的时候就知道了，但是身为Android开发没有机会推行这个技术，先记录下来，来一段网上的性能测试，激发一下实践冲动</p>
<blockquote>
<p><strong>空间效率</strong></p>
<p>Json:<strong>107个字节</strong></p>
<p>Protobuf:<strong>32个字节</strong></p>
<p><strong>时间效率</strong></p>
<p>Json序列化: <strong>1ms</strong> , 反序列化:<strong>0ms</strong></p>
<p>Protobuf 序列化: <strong>0ms</strong> 反序列化:<strong>0ms</strong></p>
<p>将public List<phone> list和repeated PhoneInfo phoneInfoList =3;都赋值为1000个PhoneInfo</phone></p>
<p><strong>空间效率</strong></p>
<p>Json:<strong>4206个字节</strong></p>
<p>Protobuf:<strong>1332个字节</strong></p>
<p><strong>时间效率</strong></p>
<p>Json序列化: <strong>4ms</strong> , 反序列化:<strong>1ms</strong></p>
<p>Protobuf 序列化: <strong>1ms</strong> 反序列化:<strong>0ms</strong></p>
</blockquote>
<p>参考：<a href="https://blog.csdn.net/yyz_1987/article/details/81146925" target="_blank" rel="noopener">protobuf在java, Android下的使用总结</a></p>
</li>
<li><p><a href="https://github.com/Tencent/wcdb" target="_blank" rel="noopener">wcdb</a> </p>
<blockquote>
<p>WCDB是一个高效、完整、易用的移动数据库框架，基于<a href="https://github.com/sqlcipher/sqlcipher" target="_blank" rel="noopener">SQLCipher</a>，支持iOS, macOS和Android。</p>
</blockquote>
</li>
</ol>
<h2 id="调试运营维护"><a href="#调试运营维护" class="headerlink" title="调试运营维护"></a>调试运营维护</h2><ol>
<li><p>LDNetDiagnoService_Android </p>
<blockquote>
<p>利用ping、tcp connect和traceroute的原理，对指定域名（通常为后台API的提供域名）进行网络诊断，并收集诊断日志</p>
</blockquote>
</li>
<li><p><a href="https://github.com/KeepSafe/dexcount-gradle-plugin" target="_blank" rel="noopener">dexcount-gradle-plugin</a>  Android Studio 如何查看Android App的方法总数</p>
</li>
<li><p><a href="https://github.com/Tencent/tinker" target="_blank" rel="noopener"><em>tinker</em></a> 不出所料拼多多使用的是腾讯的tinker作为热修复工具，但是不知道是我的原因还是手机的原因，我在本公司项目中使用华为和三星手机都是升级失败，而且还有致命的生效问题有时候把应用杀掉3-4次才生效，毕竟支持UI相关的资源更新，这个避免不了提高复杂的度，使生产环境下升级成功率低。故我还是选择<a href="https://www.jianshu.com/p/f7e079480053" target="_blank" rel="noopener">Android——Sophix热修复接入</a> 成功率高点，试了几次都成功，绝对能解决老板发现bug夺命连环call，或者致命bug世界末日</p>
<blockquote>
<p>【画重点·经验之谈】在一些核心的功能上尽量考虑充分各种情况，有条件必须准备plan B，在不生效的情况下能救你一命，o(╥﹏╥)o。😎</p>
</blockquote>
</li>
</ol>
<h2 id="UI布局相关"><a href="#UI布局相关" class="headerlink" title="UI布局相关"></a>UI布局相关</h2><ol>
<li><p><a href="https://github.com/airbnb/lottie-android" target="_blank" rel="noopener">lottie-android</a> airbnb json 文件转换成动态图片的库</p>
</li>
<li><p><a href="https://github.com/alibaba/Virtualview-Android" target="_blank" rel="noopener">Virtualview-Android</a> 包名com.tmall.wireless.virtualview 天猫也就是阿里开源的库，想不到这两个劲敌在这里合作了，O(∩_∩)O哈哈~</p>
<blockquote>
<p>主要功能：Android 和 IOS都支持，动态下发XML模板数据动态刷新UI</p>
<p>官方描述：</p>
<ul>
<li>一份模板，两端支持。</li>
<li>提供基础的原子控件与容器控件，支持加入自定义组件。</li>
<li>支持一种虚拟化实现控件的协议，在模板里混合使用虚拟控件和实体控件。</li>
<li>支持在模板里编写数据绑定的表达式。</li>
<li>支持在模板里写事件触发的逻辑表达式。</li>
<li>提供配套的开发工具，辅助模板开发工具。</li>
</ul>
</blockquote>
</li>
<li><p><strong><a href="https://github.com/alibaba/vlayout" target="_blank" rel="noopener"> vlayout</a></strong> 又一个阿里开源的库</p>
</li>
<li><p><a href="https://github.com/vinc3m1/RoundedImageView" target="_blank" rel="noopener">RoundedImageView</a><br><img src="https://cdn.linz.tech/roundImageView.png" alt=""></p>
</li>
<li><p><a href="https://github.com/google/flexbox-layout" target="_blank" rel="noopener">flexbox-layout</a> </p>
<blockquote>
<p>FlexboxLayout is a library project which brings the similar capabilities of <a href="https://www.w3.org/TR/css-flexbox-1" target="_blank" rel="noopener">CSS Flexible Box Layout Module</a> to Android.</p>
</blockquote>
</li>
</ol>
<h2 id="常用第三方SDK"><a href="#常用第三方SDK" class="headerlink" title="常用第三方SDK"></a>常用第三方SDK</h2><ol>
<li><p>QQ/微信/支付宝支付</p>
</li>
<li><p><a href="https://wiki.open.qq.com/wiki/mobile/Android_SDK%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E#1._Andriod_SDK.E7.AE.80.E4.BB.8B" target="_blank" rel="noopener">腾讯开发平台 Android_SDK</a></p>
<blockquote>
<p>Android SDK以Jar包形式提供，封装了QQ登录的登录授权以及大部分OpenAPI及社交渠道的分享、邀请、请求礼物、挑战炫耀、语音、应用评价、好友召回、获取附近的人API，移动应用只需要修改少量代码，即可快速实现QQ登录功能，并可调用平台 提供的OpenAPI及社交渠道API的功能。<br>主要提供的功能接口有：登录、注销、邀请好友、应用分享、获取用户信息、获取用户相册列表、发送分享、发表说说、上传图片、创建相册、设置QQ头像、增量授权、分享消息给QQ好友、发送带图微博发送请求、赠送礼物、发送挑战、炫耀等功能，Andriod_SDK_V2.1新增了好友召回，获取附近也在玩该应用的人等新功能。具体修改可参考《接口调用说明》文档。</p>
</blockquote>
</li>
<li><p>【推送】小米推送/hentap(OPPO)推送/vivo推送/魅族推送/<a href="https://www.cnblogs.com/zt007/p/6222160.html" target="_blank" rel="noopener"><strong>腾讯信鸽推送</strong></a></p>
</li>
<li><p>wechat-sdk-android-without-mta:+ 是微信提供给第三方sdk（支付、登录和分享等）</p>
</li>
<li><p><a href="https://cloud.tencent.com/product/mta" target="_blank" rel="noopener">腾讯移动分析 MTA 接入文档</a> 没用过，但是bugly上面有提供相识的功能</p>
<blockquote>
<p>腾讯移动分析有专业的移动应用数据分析能力，为您的应用提供实时数据统计分析服务，监控版本质量、渠道状况、用户画像属性及用户细分行为，通过数据可视化展现，协助产品运营决策。</p>
</blockquote>
</li>
<li><p><a href="https://x5.tencent.com/tbs/guide/sdkInit.html" target="_blank" rel="noopener">TBS腾讯X5浏览器SDK 接入文档</a></p>
<blockquote>
<p>官方【自卖自夸】大小250k完全可接受</p>
<p>1) 速度快：相比系统webview的网页打开速度有30+%的提升；</p>
<p>2) 省流量：使用云端优化技术使流量节省20+%；</p>
<p>3) 更安全：安全问题可以在24小时内修复；</p>
<p>4) 更稳定：经过亿级用户的使用考验，CRASH率低于0.15%；</p>
<p>5) 兼容好：无系统内核的碎片化问题，更少的兼容性问题；</p>
<p>6) 体验优：支持夜间模式、适屏排版、字体设置等浏览增强功能；</p>
<p>7) 功能全：在Html5、ES6上有更完整支持；</p>
<p>8) 更强大：集成强大的视频播放器，支持视频格式远多于系统webview；</p>
<p>9) 视频和文件格式的支持x5内核多于系统内核</p>
<p>10) 防劫持是x5内核的一大亮点</p>
</blockquote>
</li>
<li><p><a href="https://github.com/Tencent/mars" target="_blank" rel="noopener">Github Mars</a><br><a href="https://github.com/Tencent/mars/wiki/Mars-Android-%E6%8E%A5%E5%85%A5%E6%8C%87%E5%8D%97" target="_blank" rel="noopener">官网 Mars Android 接入指南</a></p>
<blockquote>
<p>【官方说明】跨平台</p>
<ul>
<li>comm：可以独立使用的公共库，包括 socket、线程、消息队列、协程等；</li>
<li>xlog：高可靠性高性能的运行期日志组件；</li>
<li>SDT： 网络诊断组件；</li>
<li>STN： 信令分发网络模块，也是 Mars 最主要的部分。</li>
</ul>
</blockquote>
</li>
<li><p>facebook SDK 感觉这个功能应该提供给在中国的外国人使用的，大厂就是考虑周全👍</p>
</li>
</ol>
<h3 id="华为SDK"><a href="#华为SDK" class="headerlink" title="华为SDK"></a>华为SDK</h3><blockquote>
<p>特意单独列出华为SDK这么多年学Android，一直没有觉得华为在Android软件领域有和阿里腾讯的影响力，这次学到了，而且华为开源的一下SDK都是很有深度的，这里必须👍👍（点赞三连）</p>
</blockquote>
<ol>
<li><p>华为推送 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fdeveloper.huawei.com%2Fconsumer%2Fcn%2Fservice%2Fhms%2Fcatalog%2Fhuaweipush.html%3Fpage%3Dhmssdk_huaweipush_devprepare%233%20%E9%9B%86%E6%88%90SDK" target="_blank" rel="noopener">华为开发者联盟&gt;HMS&gt;资源中心&gt;消息推送服务&gt;集成SDK</a></p>
</li>
<li><p><a href="https://developer.huawei.com/consumer/cn/doc/development/huaweihealth-Guides/introduction-0000001051004855" target="_blank" rel="noopener">HUAWEI HiHealth </a></p>
<blockquote>
<p>HUAWEI HiHealth 开放华为在运动健康领域的专业能力，为开发者提供了一个数据接入和服务汇聚的开放平台，满足各行各业的合作伙伴在运动健康方面的需求场景。</p>
<p><a href="https://developer.huawei.com/consumer/cn/doc/#ZH-CN_TOPIC_0000001050060843__section1569462419384" target="_blank" rel="noopener">场景一：数据获取场景</a></p>
<p><a href="https://developer.huawei.com/consumer/cn/doc/#ZH-CN_TOPIC_0000001050060843__section86051845123819" target="_blank" rel="noopener">场景二：数据写入场景</a></p>
</blockquote>
</li>
<li><p>HiAI</p>
<blockquote>
</blockquote>
</li>
</ol>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol>
<li><p><a href="https://github.com/AlbieLiang/IPCInvoker" target="_blank" rel="noopener">IPCInvoker</a> start 个数不多而且是个人维护，这个应该是拼多多初期沿用至今的。 IPC通信建议使用爱奇艺开源维护的<a href="https://github.com/iqiyi/Andromeda" target="_blank" rel="noopener">Andromeda</a> 使用相对简单</p>
<blockquote>
<p><strong>基于Service的IPC通信</strong></p>
<p>IPCInvoker就是一个用来简化跨进程调用的组件，IPCInvoker底层也是通过AIDL实现的，只是把接口封装得更加容易使用</p>
</blockquote>
</li>
</ol>
<h1 id="学习过程偶遇"><a href="#学习过程偶遇" class="headerlink" title="学习过程偶遇"></a>学习过程偶遇</h1><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><ol>
<li><a href="https://github.com/zhengcx/MethodTraceMan" target="_blank" rel="noopener">MethodTraceMan</a></li>
</ol>
<blockquote>
<p>用于快速找到高耗时方法，定位解决Android App卡顿问题。通过gradle plugin+ASM实现可配置范围的方法插桩来统计所有方法的耗时，并在浏览器提供友好的界面展示，支持耗时筛选、线程筛选、方法名筛选等。</p>
</blockquote>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ol>
<li>HMS Scankit <a href="https://blog.csdn.net/winisit86/article/details/104807678" target="_blank" rel="noopener">超简单集成华为HMS Scankit扫码服务实现扫一扫二维码</a> 比zing识别率搞</li>
</ol>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><ul>
<li><p><a href="https://developer.huawei.com/consumer/cn/doc/start/services-provided-by-huawei-developer-0000001053288028" target="_blank" rel="noopener">华为联盟开放的服务一览表</a> 【重点研究】很多有趣的内容，可以研究刷一遍</p>
</li>
<li><p><a href="https://blog.csdn.net/whumr1/article/details/81176494" target="_blank" rel="noopener">零基础开发AI应用–华为HiAI的应用</a></p>
</li>
<li><p><a href="https://blog.csdn.net/DevEco" target="_blank" rel="noopener">CSDN 官网 DevEco</a> 华为在CSDN的一个官方博客，提供了一下比较详细的教程</p>
</li>
</ul>
]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 常用开源库</title>
    <url>/2020/12/03/2018-4-14-android-open-source-tools/</url>
    <content><![CDATA[<h2 id="正在研究"><a href="#正在研究" class="headerlink" title="正在研究"></a>正在研究</h2><hr>
<ul>
<li><strong><a href="https://github.com/albert-lii/SUtils" target="_blank" rel="noopener">SUtils</a></strong> 封装有许多实用的开发工具类</li>
<li><strong><a href="https://github.com/jaredrummler/APKParser" target="_blank" rel="noopener">APKParser</a></strong></li>
<li><strong><a href="https://github.com/johncarl81/parceler" target="_blank" rel="noopener">parceler</a></strong>通过注解的方式序列化对象<br><a href="http://androidtransfuse.org/" target="_blank" rel="noopener">more: Transfuse</a> Transfuse is a Java Dependency Injection (DI) and integration library geared specifically for the Google Android API.</li>
</ul>
<h2 id="数据持久化"><a href="#数据持久化" class="headerlink" title="数据持久化"></a>数据持久化</h2><hr>
<ul>
<li><a href="https://github.com/skydoves/Awesome-Android-Persistence" target="_blank" rel="noopener">Awesome-Android-Persistence</a> 数据持久化优秀的开源库列表 【重点】</li>
<li><strong><a href="https://github.com/jgilfelt/android-sqlite-asset-helper" target="_blank" rel="noopener">android-sqlite-asset-helper</a></strong></li>
</ul>
<h2 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h2><hr>
<ul>
<li><a href="https://github.com/promeG/TinyPinyin" target="_blank" rel="noopener">汉字转拼音库</a>  用于对人名进行排序</li>
</ul>
<h3 id="Gson"><a href="#Gson" class="headerlink" title="Gson"></a><a href="https://github.com/google/gson" target="_blank" rel="noopener">Gson</a></h3><p>导入</p>
<pre class="line-numbers language-gradle"><code class="language-gradle">dependencies {
    implementation 'com.google.code.gson:gson:2.8.4'
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="序列化-反序列化"><a href="#序列化-反序列化" class="headerlink" title="序列化/反序列化"></a>序列化/反序列化</h4><p>Array&lt;=&gt; json</p>
<pre class="line-numbers language-java"><code class="language-java">String namesJson <span class="token operator">=</span> <span class="token string">"['xiaoqiang','chenrenxiang','hahaha']"</span><span class="token punctuation">;</span>
Gson gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
String<span class="token punctuation">[</span><span class="token punctuation">]</span> nameArray <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>namesJson<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>json =&gt; list</p>
<pre class="line-numbers language-java"><code class="language-java">String userJson <span class="token operator">=</span> <span class="token string">"[{'isDeveloper':false,'name':'xiaoqiang','age':26,'email':'578570174@qq.com'},{'isDeveloper':true,'name':'xiaoqiang123','age':27,'email':'578570174@gmail.com'}]"</span><span class="token punctuation">;</span>

Gson gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Type userListType <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TypeToken</span><span class="token operator">&lt;</span>ArrayList<span class="token operator">&lt;</span>User<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

List<span class="token operator">&lt;</span>User<span class="token operator">></span> userList <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>userJson<span class="token punctuation">,</span> userListType<span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>泛型相关应用</p>
<pre class="line-numbers language-java"><code class="language-java">  Type type <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TypeToken</span><span class="token operator">&lt;</span>Response<span class="token operator">&lt;</span>GoodsBean<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Response<span class="token operator">&lt;</span>GoodsBean<span class="token operator">></span> response <span class="token operator">=</span> SUtils<span class="token punctuation">.</span>gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h5 id="控制序列化-反序列化的变量名称"><a href="#控制序列化-反序列化的变量名称" class="headerlink" title="控制序列化/反序列化的变量名称"></a>控制序列化/反序列化的变量名称</h5><pre class="line-numbers language-java"><code class="language-java">
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@Expose</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    String name<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 参与序列化/反序列化</span>

    <span class="token annotation punctuation">@Expose</span><span class="token punctuation">(</span>serialize <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> deserialize <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    String email<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 不参与序列化，也不参与反序列化</span>

    <span class="token annotation punctuation">@Expose</span><span class="token punctuation">(</span>serialize <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">int</span> age<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 只参与反序列化</span>

    <span class="token annotation punctuation">@Expose</span><span class="token punctuation">(</span>deserialize <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    <span class="token keyword">boolean</span> isDeveloper<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 只参与序列化</span>
      <span class="token annotation punctuation">@SerializedName</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"name"</span><span class="token punctuation">,</span> alternate <span class="token operator">=</span> <span class="token string">"fullName"</span><span class="token punctuation">)</span>
      String userName <span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><font color="red"> 注意：使用以上必须使用如下</font></p>
<pre class="line-numbers language-java"><code class="language-java">GsonBuilder builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GsonBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
builder<span class="token punctuation">.</span><span class="token function">excludeFieldsWithoutExposeAnnotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
Gson gson <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h5 id="字段值为-null-时是否序列化"><a href="#字段值为-null-时是否序列化" class="headerlink" title="字段值为 null 时是否序列化"></a>字段值为 null 时是否序列化</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
 * Person 实体一共4个字段：Integer pId、String pName、Date birthday、Boolean isMarry
 * 现在它的属性全部不进行赋值
 */</span>
Person person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/** 不对属性值为 null 的字段进行序列化，转换结果会为空*/</span>
String personStr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/** 对属性值为 null 的字段进行序列化*/</span>
String personStrFinal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GsonBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">serializeNulls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span>

System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>personStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//输出：{}</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>personStrFinal<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="TypeAdapter"><a href="#TypeAdapter" class="headerlink" title="TypeAdapter"></a>TypeAdapter</h5><p><a href="https://www.jianshu.com/p/8cc857583ff4" target="_blank" rel="noopener">Gson全解析（中）-TypeAdapter的使用</a></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">final</span> GsonBuilder gsonBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GsonBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
gsonBuilder<span class="token punctuation">.</span><span class="token function">registerTypeAdapter</span><span class="token punctuation">(</span>Book<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BookTypeAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">final</span> Gson gson <span class="token operator">=</span> gsonBuilder<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
 * Integer 转换 防止 后台返回null 转换异常
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IntegerDefaultAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">TypeAdapter</span><span class="token operator">&lt;</span>Integer<span class="token operator">></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span>JsonWriter jsonWriter<span class="token punctuation">,</span> Integer integer<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>
        jsonWriter<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>integer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> Integer <span class="token function">read</span><span class="token punctuation">(</span>JsonReader jsonReader<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Integer<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>jsonReader<span class="token punctuation">.</span><span class="token function">nextString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NumberFormatException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**
 * String 转换 防止 后台返回null 转换异常
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StringDefaultAdapter</span> <span class="token keyword">extends</span> <span class="token class-name">TypeAdapter</span><span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span>JsonWriter jsonWriter<span class="token punctuation">,</span> String s<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>
        jsonWriter<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> String <span class="token function">read</span><span class="token punctuation">(</span>JsonReader jsonReader<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>jsonReader<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> JsonToken<span class="token punctuation">.</span>NULL<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            jsonReader<span class="token punctuation">.</span><span class="token function">nextNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> jsonReader<span class="token punctuation">.</span><span class="token function">nextString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="直接操作JSON"><a href="#直接操作JSON" class="headerlink" title="直接操作JSON"></a>直接操作JSON</h4><p><font color="red">【重点】</font>方法根据不同Json类型进行解析</p>
<pre class="line-numbers language-java"><code class="language-java"> parse<span class="token punctuation">.</span><span class="token function">isJsonArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 parse<span class="token punctuation">.</span><span class="token function">isJsonNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 parse<span class="token punctuation">.</span><span class="token function">isJsonObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 parse<span class="token punctuation">.</span><span class="token function">isJsonPrimitive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>常用操作JsonObject</p>
<pre class="line-numbers language-java"><code class="language-java">  String jsonStr <span class="token operator">=</span> <span class="token string">"{\"pId\":9527,\"pName\":\"华安\",\"birthday\":\"Nov 23, 2018 1:50:56 PM\",\"isMarry\":true}"</span><span class="token punctuation">;</span>

JsonParser jsonParser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JsonParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">/**
* JsonElement parse(String json)
* 如果被解析的字符串不符合 json 格式，则抛出异常
* */</span>
JsonObject jsonObject <span class="token operator">=</span> jsonParser<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>jsonStr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsJsonObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
* JsonElement get(String memberName)
* 注意：如果 get 的 key 不存在，则返回 null，如果不加判断而进行取值的话，会抛：java.lang.NullPointerException
* */</span>
Integer pId <span class="token operator">=</span> jsonObject<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"pId"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>JsonArray</p>
<pre class="line-numbers language-java"><code class="language-java">String jsonArrayStr <span class="token operator">=</span> <span class="token string">"[{\"pId\":9527,\"pName\":\"华安\",\"isMarry\":true},{\"pId\":8866,\"pName\":\"宁王\",\"isMarry\":false}]"</span><span class="token punctuation">;</span>
JsonParser jsonParser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JsonParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
JsonArray jsonArray <span class="token operator">=</span> jsonParser<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>jsonArrayStr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAsJsonArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>构建JSON</p>
<pre class="line-numbers language-java"><code class="language-java">JsonObject jsonObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JsonObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jsonObject<span class="token punctuation">.</span><span class="token function">addProperty</span><span class="token punctuation">(</span><span class="token string">"pId"</span><span class="token punctuation">,</span> <span class="token number">9527</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jsonObject<span class="token punctuation">.</span><span class="token function">addProperty</span><span class="token punctuation">(</span><span class="token string">"pName"</span><span class="token punctuation">,</span> <span class="token string">"华安"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
jsonObject<span class="token punctuation">.</span><span class="token function">addProperty</span><span class="token punctuation">(</span><span class="token string">"isMarry"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//JsonObject 添加复杂类型属性使用 </span>
<span class="token comment" spellcheck="true">//add(String property, JsonElement value)</span>
<span class="token comment" spellcheck="true">//JsonObject 与 JsonArray 都是 JsonElement 类的子类</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="构建工具"><a href="#构建工具" class="headerlink" title="构建工具"></a>构建工具</h2><hr>
<p><strong><a href="https://github.com/seven456/MultiChannelPackageTool" target="_blank" rel="noopener">MultiChannelPackageTool</a></strong> 快速多渠道打包工具。</p>
<h2 id="开发中实用的工具"><a href="#开发中实用的工具" class="headerlink" title="开发中实用的工具"></a>开发中实用的工具</h2><hr>
<ul>
<li><strong><a href="https://github.com/izacus/RoboGif" target="_blank" rel="noopener">RoboGif</a></strong>  A small utility to record Android device screen to a GIF</li>
<li><a href="https://github.com/venshine/AppUninstall" target="_blank" rel="noopener">AppUninstall Android App监听自身卸载，反馈统计</a></li>
<li><a href="https://github.com/ljuns/LogCollector" target="_blank" rel="noopener">LogCollector</a> 一个收集 app 输出日志的工具</li>
</ul>
<h2 id="UI"><a href="#UI" class="headerlink" title="UI"></a>UI</h2><hr>
<ul>
<li><strong><a href="https://github.com/romannurik/AndroidDesignPreview" target="_blank" rel="noopener">AndroidDesignPreview</a></strong></li>
<li><a href="https://github.com/romannurik/AndroidAssetStudio" target="_blank" rel="noopener">AndroidAssetStudio</a> Android常用图标生成Web</li>
<li><a href="http://bigertech.com/post/assistor-ps-1/" target="_blank" rel="noopener">切图标记外挂神器 Assistor PS 介绍</a></li>
<li><a href="https://github.com/JcMinarro/Philology" target="_blank" rel="noopener">动态修改App字符开源库 Philology</a></li>
</ul>
<h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><ul>
<li><a href="https://github.com/jaredrummler/Cyanea" target="_blank" rel="noopener">Cyanea</a><br><img src="https://camo.githubusercontent.com/b0cdc1242d8170b8184ef2a92d8afd5af4152563/68747470733a2f2f692e696d6775722e636f6d2f706a44456a576c2e676966" alt=""></li>
</ul>
<h3 id="显示效果"><a href="#显示效果" class="headerlink" title="显示效果"></a>显示效果</h3><ul>
<li>闪光 Shimmer<ul>
<li><a href="https://github.com/mike14u/shimmer-recyclerview-x" target="_blank" rel="noopener">shimmer-recyclerview-x</a> 闪光list<br><img src="https://raw.githubusercontent.com/mike14u/shimmer-recyclerview-x/master/screenshots/second_list_demo.gif" alt=""><h4 id="未读消息"><a href="#未读消息" class="headerlink" title="未读消息"></a>未读消息</h4><pre class="line-numbers language-gradle"><code class="language-gradle">implementation 'q.rorbin:badgeview:1.1.3'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
使用</li>
</ul>
</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">new</span> <span class="token class-name">QBadgeView</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bindTarget</span><span class="token punctuation">(</span>textview<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setBadgeNumber</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><a href="https://github.com/qstumn/BadgeView" target="_blank" rel="noopener">https://github.com/qstumn/BadgeView</a></p>
<h2 id="检测优化工具"><a href="#检测优化工具" class="headerlink" title="检测优化工具"></a>检测优化工具</h2><hr>
<ul>
<li><a href="http://github.com/square/leakcanary" target="_blank" rel="noopener">LeakCanary</a> Android 和 Java 内存泄露检测<br>Tutorial <a href="http://www.liaohuqiu.net/cn/posts/leak-canary-read-me/" target="_blank" rel="noopener">Chinese</a><a href="http://https//corner.squareup.com/2015/05/leak-canary.html" target="_blank" rel="noopener">English</a><br>phrof file path: /storage/sdcard0/Download/leakcanary/<br>hprof-conv leakCanary</li>
<li><a href="http://inloop.github.io/apk-method-count/" target="_blank" rel="noopener">apk-method-count</a> 上传Apk，可以根据包名统计方法数量的网站，UI很友好。</li>
<li><strong><a href="https://github.com/google/battery-historian" target="_blank" rel="noopener">battery-historian</a></strong> Google 官网方 针对 Api21 5.0以上系统开发的电量使用情况分析工具</li>
</ul>
<h2 id="功能性开发工具"><a href="#功能性开发工具" class="headerlink" title="功能性开发工具"></a>功能性开发工具</h2><hr>
<ul>
<li><p><a href="http://github.com/card-io/card.io-Android-source" target="_blank" rel="noopener">card.io-Android-source</a> 信用卡扫描ＳＤＫ</p>
</li>
<li><p><a href="http://https//github.com/ajalt/reprint" target="_blank" rel="noopener">reprint</a> A simple, unified fingerprint authentication library for Android with ReactiveX extensions.</p>
</li>
<li><p><a href="http://github.com/ng2Kaming/DimensCodeTools" target="_blank" rel="noopener">DimensCodeTools </a> 一个可以支持生成二维码，条形码和扫描的库</p>
</li>
<li><p>Permission</p>
<ul>
<li>Dexter  Dexter is an Android library that simplifies the process of requesting permissions at runtime.</li>
<li><a href="http://github.com/k0shk0sh/PermissionHelper" target="_blank" rel="noopener">PermissionHelper</a>  </li>
<li><a href="https://github.com/googlesamples/easypermissions" target="_blank" rel="noopener">easypermissions</a> </li>
</ul>
</li>
<li><p>图片加载<br>Picasso<br>Universal-ImageLoader<br>Volley<br><a href="https://github.com/bumptech/glide" target="_blank" rel="noopener">Glide</a>  <a href="http://www.jianshu.com/p/4a3177b57949?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=writer_share&amp;utm_source=weibo" target="_blank" rel="noopener">Tutorial Chinese</a><br>综合：  <a href="http://blog.csdn.net/richiezhu/article/details/46968569" target="_blank" rel="noopener">开源组件加载网络图片的优缺点比较
</a></p>
</li>
<li><p><strong>FileDownload</strong></p>
<ul>
<li><a href="http://github.com/majidgolshadi/Android-Download-Manager-Pro" target="_blank" rel="noopener">Android-Download-Manager-Pro</a></li>
<li><a href="https://github.com/AigeStudio/MultiThreadDownloade" target="_blank" rel="noopener">MultiThreadDownloader</a>  下载 </li>
<li><a href="http://github.com/lingochamp/FileDownloader" target="_blank" rel="noopener">FileDownloader</a>  Multitask、Breakpoint-resume、High-concurrency、Simple to use、Single-process<br><img src="https://github.com/lingochamp/FileDownloader/raw/master/art/parallel_tasks_demo.gif" alt=""></li>
</ul>
</li>
<li><p><a href="http://https//github.com/jonfinerty/Once" target="_blank" rel="noopener">Once</a>  some info may show once in a new app in a update or first time install this via share sharedPreferences sore the timestamp</p>
</li>
</ul>
<h2 id="基础的开发工具"><a href="#基础的开发工具" class="headerlink" title="基础的开发工具"></a>基础的开发工具</h2><hr>
<ul>
<li><strong><a href="https://github.com/VerbalExpressions/JavaVerbalExpressions" target="_blank" rel="noopener">JavaVerbalExpressions</a></strong> Java regular expressions made easy. 帮助简单的实现正则表达</li>
<li>joda-time-android／ThreeTenABP Java8 的Date包移植到Android中来的库</li>
<li><a href="http://github.com/kexanie/MathView" target="_blank" rel="noopener">MathView</a>    A library for displaying math formula in Android apps.<img src="https://github.com/kexanie/MathView/raw/master/screenshot/screenshot.png" alt=""></li>
</ul>
<h2 id="崩溃错误处理"><a href="#崩溃错误处理" class="headerlink" title="崩溃错误处理"></a>崩溃错误处理</h2><h3 id="LoadSir-优雅地处理加载中，重试，无数据等"><a href="#LoadSir-优雅地处理加载中，重试，无数据等" class="headerlink" title="LoadSir 优雅地处理加载中，重试，无数据等"></a><strong><a href="https://github.com/KingJA/LoadSir" target="_blank" rel="noopener">LoadSir</a></strong> 优雅地处理加载中，重试，无数据等</h3><p><em>配置:</em> compile ‘com.kingja.loadsir:loadsir:1.3.6’<br>ProGuard:</p>
<pre><code>-dontwarn com.kingja.loadsir.**
-keep class com.kingja.loadsir.** {*;}</code></pre><h3 id="YCStateLayout-特殊状态提示"><a href="#YCStateLayout-特殊状态提示" class="headerlink" title="YCStateLayout 特殊状态提示"></a>YCStateLayout 特殊状态提示</h3><blockquote>
<p>状态切换，让 View 状态的切换和 Activity 彻底分离开。</p>
</blockquote>
<ul>
<li><a href="https://github.com/yangchong211/YCStateLayout" target="_blank" rel="noopener">YCStateLayout</a></li>
</ul>
<h2 id="BufferKnife"><a href="#BufferKnife" class="headerlink" title="BufferKnife"></a><a href="http://jakewharton.github.io/butterknife/" target="_blank" rel="noopener">BufferKnife</a></h2><h3 id="布局绑定"><a href="#布局绑定" class="headerlink" title="布局绑定"></a>布局绑定</h3><pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">ViewHolder</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@BindView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>form_start_date_tv<span class="token punctuation">)</span> TextView formStartDateTv<span class="token punctuation">;</span>
    <span class="token function">ViewHolder</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ButterKnife<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> view<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="VIEW-LISTS"><a href="#VIEW-LISTS" class="headerlink" title="VIEW LISTS"></a>VIEW LISTS</h3><p>@OnClick({ R.id.door1, R.id.door2, R.id.door3 })</p>
<pre><code>@BindViews({ R.id.first_name, R.id.middle_name, R.id.last_name })
List&lt;EditText&gt; nameViews;

// The apply method allows you to act on all the views in a list at once.

ButterKnife.apply(nameViews, DISABLE);
ButterKnife.apply(nameViews, ENABLED, false);
//Action and Setter interfaces allow specifying simple behavior.
static final ButterKnife.Action&lt;View&gt; DISABLE = new ButterKnife.Action&lt;View&gt;() {
  @Override public void apply(View view, int index) {
    view.setEnabled(false);
  }
};
static final ButterKnife.Setter&lt;View, Boolean&gt; ENABLED = new ButterKnife.Setter&lt;View, Boolean&gt;() {
  @Override public void set(View view, Boolean value, int index) {
    view.setEnabled(value);
  }
};</code></pre><p>An Android <a href="https://developer.android.com/reference/android/util/Property.html" target="_blank" rel="noopener"><code>Property</code></a> can also be used with the <code>apply</code> method.<br><code>ButterKnife.apply(nameViews,  View.ALPHA,  0.0f);</code></p>
<h3 id="RESOURCE-BINDING"><a href="#RESOURCE-BINDING" class="headerlink" title="RESOURCE BINDING"></a>RESOURCE BINDING</h3><pre><code>class ExampleActivity extends Activity {
  @BindString(R.string.title) String title;
  @BindDrawable(R.drawable.graphic) Drawable graphic;
  @BindColor(R.color.red) int red; // int or ColorStateList field
  @BindDimen(R.dimen.spacer) Float spacer; // int (for pixel size) or float (for exact value) field
  // ...
}</code></pre><h3 id="automatically-be-cast"><a href="#automatically-be-cast" class="headerlink" title="automatically be cast."></a>automatically be cast.</h3><pre><code>@OnClick(R.id.submit)
public void sayHi(Button button) {
  button.setText("Hello!");
}</code></pre><h3 id="OPTIONAL-BINDINGS"><a href="#OPTIONAL-BINDINGS" class="headerlink" title="OPTIONAL BINDINGS"></a>OPTIONAL BINDINGS</h3><pre><code>@Optional @OnClick(R.id.maybe_missing) void onMaybeMissingClicked() {
  // TODO ...
}</code></pre><h3 id="BINDING-RESET-on-Fragments"><a href="#BINDING-RESET-on-Fragments" class="headerlink" title="BINDING RESET on Fragments"></a>BINDING RESET on Fragments</h3><pre><code> @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
    View view = inflater.inflate(R.layout.fancy_fragment, container, false);
    unbinder = ButterKnife.bind(this, view);
    // TODO Use fields...
    return view;
  }

@Override public void onDestroyView() {
    super.onDestroyView();
    unbinder.unbind();
  }</code></pre><h3 id="模块化的开发工具"><a href="#模块化的开发工具" class="headerlink" title="模块化的开发工具"></a>模块化的开发工具</h3><ul>
<li><a href="https://github.com/rosuH/AndroidFilePicker" target="_blank" rel="noopener">AndroidFilePicker</a> FilePicker 是一个小巧快速的文件选择器框架，以快速集成、高自定义化和可配置化为目标不断前进</li>
</ul>
<h2 id="网络工具"><a href="#网络工具" class="headerlink" title="网络工具"></a>网络工具</h2><ul>
<li><a href="https://github.com/r0ysue/r0capture" target="_blank" rel="noopener">r0capture</a>  安卓应用层抓包通杀脚本 </li>
</ul>
<h2 id="翻遍工具"><a href="#翻遍工具" class="headerlink" title="翻遍工具"></a>翻遍工具</h2><ul>
<li><a href="https://github.com/google/android-classyshark" target="_blank" rel="noopener">android-classyshark</a><br>mac/win 使用 java -jar ClassyShark.jar</li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 和网页端混合开发小计</title>
    <url>/2020/11/25/2020-11-25-%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<p><img src="https://cdn.linz.tech/chrome.png" alt=""></p>
<h2 id="WebView-详解"><a href="#WebView-详解" class="headerlink" title="WebView 详解"></a>WebView 详解</h2><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><ul>
<li>加载网页<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//加载网页链接</span>
mWebView<span class="token punctuation">.</span><span class="token function">loadUrl</span><span class="token punctuation">(</span><span class="token string">"http://www.itheima.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//加载本地assets目录下的网页</span>
mWebView<span class="token punctuation">.</span><span class="token function">loadUrl</span><span class="token punctuation">(</span><span class="token string">"file:///android_asset/demo.html"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>加载控制<pre class="line-numbers language-java"><code class="language-java">webView<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//刷新页面（当前页面的所有资源都会重新加载）</span>
webView<span class="token punctuation">.</span><span class="token function">stopLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//停止加载</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li>控件高度距离<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//获取当前可见区域的顶端距整个页面顶端的距离，也就是当前内容滚动的距离。</span>
webView<span class="token punctuation">.</span><span class="token function">getScrollY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//获取WebView控件的高度。</span>
webView<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>webView<span class="token punctuation">.</span><span class="token function">getBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//获取HTML的高度（原始高度，不包括缩放后的高度）</span>
webView<span class="token punctuation">.</span><span class="token function">getContentHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>WebView加载上一页和下一页<pre class="line-numbers language-java"><code class="language-java">mWebView<span class="token punctuation">.</span><span class="token function">goBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//跳到上个页面</span>
mWebView<span class="token punctuation">.</span><span class="token function">goForward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//跳到下个页面</span>
mWebView<span class="token punctuation">.</span><span class="token function">canGoBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//是否可以跳到上一页(如果返回false,说明已经是第一页)</span>
mWebView<span class="token punctuation">.</span><span class="token function">canGoForward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//是否可以跳到下一页(如果返回false,说明已经是最后一页)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>WebView基本设置<pre class="line-numbers language-java"><code class="language-java">WebSettings settings <span class="token operator">=</span> mWebView<span class="token punctuation">.</span><span class="token function">getSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
settings<span class="token punctuation">.</span><span class="token function">setBuiltInZoomControls</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 显示缩放按钮(wap网页不支持)</span>
settings<span class="token punctuation">.</span><span class="token function">setUseWideViewPort</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 支持双击缩放(wap网页不支持)</span>
settings<span class="token punctuation">.</span><span class="token function">setJavaScriptEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 支持js功能</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//恢复webview的状态（不靠谱）</span>
    webView<span class="token punctuation">.</span><span class="token function">resumeTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//激活webView的状态，能正常加载网页</span>
    webView<span class="token punctuation">.</span><span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//当页面被失去焦点被切换到后台不可见状态，需要执行onPause</span>
    <span class="token comment" spellcheck="true">//通过onPause动作通知内核暂停所有的动作，比如DOM的解析、plugin的执行、JavaScript执行。</span>
    webView<span class="token punctuation">.</span><span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">//当应用程序(存在webview)被切换到后台时，这个方法不仅仅针对当前的webview而是全局的全应用程序的webview</span>
    <span class="token comment" spellcheck="true">//它会暂停所有webview的layout，parsing，javascripttimer。降低CPU功耗。（不靠谱）</span>
    webView<span class="token punctuation">.</span><span class="token function">pauseTimers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">//在关闭了Activity时，如果Webview的音乐或视频，还在播放。就必须销毁Webview</span>
<span class="token comment" spellcheck="true">//但是注意：webview调用destory时,webview仍绑定在Activity上</span>
<span class="token comment" spellcheck="true">//这是由于自定义webview构建时传入了该Activity的context对象</span>
<span class="token comment" spellcheck="true">//因此需要先从父容器中移除webview,然后再销毁webview:</span>
ViewGroup parent <span class="token operator">=</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>container<span class="token punctuation">)</span><span class="token punctuation">;</span>
parent<span class="token punctuation">.</span><span class="token function">removeView</span><span class="token punctuation">(</span>webView<span class="token punctuation">)</span><span class="token punctuation">;</span>
webView<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="WebViewClient-与-WebChromeClient"><a href="#WebViewClient-与-WebChromeClient" class="headerlink" title="WebViewClient 与 WebChromeClient"></a>WebViewClient 与 WebChromeClient</h3><ul>
<li><p>WebViewClient </p>
<pre class="line-numbers language-java"><code class="language-java">mWebView<span class="token punctuation">.</span><span class="token function">setWebViewClient</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WebViewClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// 开始加载网页</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPageStarted</span><span class="token punctuation">(</span>WebView view<span class="token punctuation">,</span> String url<span class="token punctuation">,</span> Bitmap favicon<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPageStarted</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> url<span class="token punctuation">,</span> favicon<span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"开始加载网页了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 网页加载结束</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onPageFinished</span><span class="token punctuation">(</span>WebView view<span class="token punctuation">,</span> String url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPageFinished</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"网页加载结束"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 所有链接跳转会走此方法</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">shouldOverrideUrlLoading</span><span class="token punctuation">(</span>WebView view<span class="token punctuation">,</span> String url<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"跳转链接:"</span> <span class="token operator">+</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        view<span class="token punctuation">.</span><span class="token function">loadUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 在跳转链接时强制在当前webview中加载</span>

        <span class="token comment" spellcheck="true">//此方法还有其他应用场景, 比如写一个超链接&lt;a href="tel:110">联系我们&lt;/a>, 当点击该超链接时,可以在此方法中获取链接地址tel:110, 解析该地址,获取电话号码, 然后跳转到本地打电话页面, 而不是加载网页, 从而实现了webView和本地代码的交互</span>

        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>onPageStarted()onPageFinished()：页面加载时和页面加载完毕时调用。<br>shouldOverrideKeyEvent()：重写此方法才能处理浏览器中的按键事件。<br>shouldInterceptRequest()：页面每一次请求资源之前都会调用这个方法（非UI线程调用）。<br>onLoadResource()：页面加载资源时调用，每加载一个资源（比如图片）就调用一次。<br>onReceivedError()：加载页面的服务器出现错误（比如404）时回调。<br>onReceivedSslError()：重写此方法可以让webview处理https请求。<br>doUpdateVisitedHistory()：更新历史记录。<br>onFormResubmission()：应用程序重新请求网页数据。<br>onReceivedHttpAuthRequest()：获取返回信息授权请求。<br>onScaleChanged()：WebView发生缩放改变时调用。<br>onUnhandledKeyEvent()：Key事件未被加载时调用。</p>
</li>
<li><p>WebChromeClient </p>
<blockquote>
<p>辅助 WebView 处理 Javascript 的对话框，网站图标，网站标题等等</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java">mWebView<span class="token punctuation">.</span><span class="token function">setWebChromeClient</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WebChromeClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onProgressChanged</span><span class="token punctuation">(</span>WebView view<span class="token punctuation">,</span> <span class="token keyword">int</span> newProgress<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onProgressChanged</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> newProgress<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 进度发生变化</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"进度:"</span> <span class="token operator">+</span> newProgress<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceivedTitle</span><span class="token punctuation">(</span>WebView view<span class="token punctuation">,</span> String title<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onReceivedTitle</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> title<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 网页标题</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"网页标题:"</span> <span class="token operator">+</span> title<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>onReceivedTitle()：获得网页的标题时回调。<br>onReceivedIcon()：获得网页的图标时回调。<br>onCreateWindow()：打开新窗口时回调。<br>onCloseWindow()：关闭窗口时回调。</p>
</li>
</ul>
<h3 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h3><h4 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h4><ul>
<li>缓存设置</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java">WebSettings settings <span class="token operator">=</span> mWebView<span class="token punctuation">.</span><span class="token function">getSettings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//只要本地有，无论是否过期，或者no-cache，都使用缓存中的数据</span>
settings<span class="token punctuation">.</span><span class="token function">setCacheMode</span><span class="token punctuation">(</span>WebSettings<span class="token punctuation">.</span>LOAD_CACHE_ELSE_NETWORK<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//只加载缓存</span>
settings<span class="token punctuation">.</span><span class="token function">setCacheMode</span><span class="token punctuation">(</span>WebSettings<span class="token punctuation">.</span>LOAD_CACHE_ONLY<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//根据cache-control决定是否从网络上取数据</span>
settings<span class="token punctuation">.</span><span class="token function">setCacheMode</span><span class="token punctuation">(</span>WebSettings<span class="token punctuation">.</span>LOAD_DEFAULT<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//不加载缓存</span>
settings<span class="token punctuation">.</span><span class="token function">setCacheMode</span><span class="token punctuation">(</span>WebSettings<span class="token punctuation">.</span>LOAD_NO_CACHE<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>缓存清楚</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//最简便的方式:</span>
mWebView<span class="token punctuation">.</span><span class="token function">clearCache</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">//另外一种方式:</span>
<span class="token comment" spellcheck="true">//删除缓存文件夹</span>
File file <span class="token operator">=</span> CacheManager<span class="token punctuation">.</span><span class="token function">getCacheFileBaseDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token keyword">if</span> <span class="token punctuation">(</span>file <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> file<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
  <span class="token keyword">for</span> <span class="token punctuation">(</span>File item <span class="token operator">:</span> file<span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    item<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
  <span class="token punctuation">}</span> 
  file<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span> 
<span class="token comment" spellcheck="true">//删除缓存数据库</span>
context<span class="token punctuation">.</span><span class="token function">deleteDatabase</span><span class="token punctuation">(</span><span class="token string">"webview.db"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
context<span class="token punctuation">.</span><span class="token function">deleteDatabase</span><span class="token punctuation">(</span><span class="token string">"webviewCache.db"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">//清除当前webview访问的历史记录</span>
<span class="token comment" spellcheck="true">//只会webview访问历史记录里的所有记录除了当前访问记录</span>
Webview<span class="token punctuation">.</span><span class="token function">clearHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//这个api仅仅清除自动完成填充的表单数据，并不会清除WebView存储到本地的数据</span>
Webview<span class="token punctuation">.</span><span class="token function">clearFormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h4><ul>
<li>Cookie设置</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java">    CookieSyncManager<span class="token punctuation">.</span><span class="token function">createInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    CookieManager cookieManager <span class="token operator">=</span> CookieManager<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cookieManager<span class="token punctuation">.</span><span class="token function">setAcceptCookie</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    String cookie <span class="token operator">=</span> <span class="token string">"name=xxx;age=18"</span><span class="token punctuation">;</span>
    cookieManager<span class="token punctuation">.</span><span class="token function">setCookie</span><span class="token punctuation">(</span>URL<span class="token punctuation">,</span> cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>
    CookieSyncManager<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><p>获取Cookie</p>
<pre class="line-numbers language-java"><code class="language-java">  CookieManager cookieManager <span class="token operator">=</span> CookieManager<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  String cookie <span class="token operator">=</span> cookieManager<span class="token punctuation">.</span><span class="token function">getCookie</span><span class="token punctuation">(</span>URL<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>清除Cookie</p>
<pre class="line-numbers language-java"><code class="language-java">  CookieSyncManager<span class="token punctuation">.</span><span class="token function">createInstance</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  CookieManager cookieManager <span class="token operator">=</span> CookieManager<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment" spellcheck="true">//这个两个在 API level 21 被抛弃</span>
cookieManager<span class="token punctuation">.</span><span class="token function">removeSessionCookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cookieManager<span class="token punctuation">.</span><span class="token function">removeAllCookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//Api 21 新增</span>
<span class="token comment" spellcheck="true">//移除所有过期 cookie</span>
cookieManager<span class="token punctuation">.</span><span class="token function">removeSessionCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//移除所有的 cookie</span>
cookieManager<span class="token punctuation">.</span><span class="token function">removeAllCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//回调</span>
CookieManager<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAllCookies</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ValueCallback</span><span class="token operator">&lt;</span>Boolean<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceiveValue</span><span class="token punctuation">(</span>Boolean value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// 清除结果</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<pre><code>CookieSyncManager.getInstance().sync();  </code></pre><pre><code>#### 高级设置

```java
 //设置自适应屏幕，两者合用
    webSettings.setUseWideViewPort(true); //将图片调整到适合webview的大小
    webSettings.setLoadWithOverviewMode(true); // 缩放至屏幕的大小

    webSettings.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.SINGLE_COLUMN); //支持内容重新布局

    //缩放操作
    webSettings.setSupportZoom(true); //支持缩放，默认为true。是下面那个的前提。
    webSettings.setBuiltInZoomControls(true); //设置内置的缩放控件。若为false，则该WebView不可缩放
    webSettings.setDisplayZoomControls(false); //隐藏原生的缩放控件
    webSettings.setTextZoom(2);//设置文本的缩放倍数，默认为 100

    webSettings.setRenderPriority(WebSettings.RenderPriority.HIGH);  //提高渲染的优先级

    webSettings.setStandardFontFamily("");//设置 WebView 的字体，默认字体为 "sans-serif"
    webSettings.setDefaultFontSize(20);//设置 WebView 字体的大小，默认大小为 16
    webSettings.setMinimumFontSize(12);//设置 WebView 支持的最小字体大小，默认为 8
        webSettings.setVerticalScrollBarEnabled(false); //vertical bar 不显示
        webSettings.setHorizontalScrollBarEnabled(false); // horizontal bar 不显示

    // 5.1以上默认禁止了https和http混用，以下方式是开启
    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) {
        webSettings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);
    }


        //其他
    webSettings.setAllowFileAccess(true); //设置可以访问文件
    webSettings.setJavaScriptCanOpenWindowsAutomatically(true); //支持通过JS打开新窗口
    webSettings.setLoadsImagesAutomatically(true); //支持自动加载图片
    webSettings.setDefaultTextEncodingName("utf-8");//设置编码格式
    webSettings.setGeolocationEnabled(true);//允许网页执行定位操作

        //分段加载HTML文件
        if (VERSION.SDK_INT &gt;= 21) {
        WebView.enableSlowWholeDocumentDraw();
    }</code></pre><h2 id="JavaScript-和-Native-交互"><a href="#JavaScript-和-Native-交互" class="headerlink" title="JavaScript 和 Native 交互"></a>JavaScript 和 Native 交互</h2><h3 id="DSBridge-Android"><a href="#DSBridge-Android" class="headerlink" title="DSBridge-Android"></a><a href="https://github.com/wendux/DSBridge-Android" target="_blank" rel="noopener">DSBridge-Android</a></h3><p>用于JavaScript and native applications 相互调用</p>
<ol>
<li><p>依赖引用</p>
<pre class="line-numbers language-groovy"><code class="language-groovy">dependencies <span class="token punctuation">{</span>
 <span class="token comment" spellcheck="true">//compile 'com.github.wendux:DSBridge-Android:3.0-SNAPSHOT'</span>
 <span class="token comment" spellcheck="true">//support the x5 browser core of Tencent</span>
 <span class="token comment" spellcheck="true">//compile 'com.github.wendux:DSBridge-Android:x5-3.0-SNAPSHOT'</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>JavaScript 调用原生</p>
<ul>
<li><p>原生提供调用方法</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsApi</span><span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//for synchronous invocation</span>
      <span class="token comment" spellcheck="true">//【err】易错点： msg 这个参数必须是Object否则JavaScript会不识别方法</span>
    <span class="token annotation punctuation">@JavascriptInterface</span>
    <span class="token keyword">public</span> String <span class="token function">testSyn</span><span class="token punctuation">(</span>Object msg<span class="token punctuation">)</span>  <span class="token punctuation">{</span>
        <span class="token keyword">return</span> msg <span class="token operator">+</span> <span class="token string">"［syn call］"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">//for asynchronous invocation</span>
    <span class="token annotation punctuation">@JavascriptInterface</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAsyn</span><span class="token punctuation">(</span>Object msg<span class="token punctuation">,</span> CompletionHandler handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        handler<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span>msg<span class="token operator">+</span><span class="token string">" [ asyn call]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>加入DWebView生效</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> wendu<span class="token punctuation">.</span>dsbridge<span class="token punctuation">.</span>DWebView
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
DWebView dwebView<span class="token operator">=</span> <span class="token punctuation">(</span>DWebView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>dwebview<span class="token punctuation">)</span><span class="token punctuation">;</span>
dwebView<span class="token punctuation">.</span><span class="token function">addJavascriptObject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JsApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>JavaScript  <a href="https://raw.githubusercontent.com/wendux/DSBridge-Android/master/app/src/main/assets/js-call-native.html" target="_blank" rel="noopener">项目demo js-call-native.html（需要配置科学上网）</a></p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//cdn</span>
<span class="token comment" spellcheck="true">//&lt;script src="https://unpkg.com/dsbridge@3.1.3/dist/dsbridge.js"> &lt;/script></span>
<span class="token comment" spellcheck="true">//npm</span>
<span class="token comment" spellcheck="true">//npm install dsbridge@3.1.3</span>
<span class="token keyword">var</span> dsBridge<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"dsbridge"</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//Call synchronously </span>
<span class="token keyword">var</span> str<span class="token operator">=</span>dsBridge<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"testSyn"</span><span class="token punctuation">,</span><span class="token string">"testSyn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">//Call asynchronously</span>
dsBridge<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">"testAsyn"</span><span class="token punctuation">,</span><span class="token string">"testAsyn"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">alert</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">//Register javascript API for Native</span>
 dsBridge<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'addValue'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">return</span> l<span class="token operator">+</span>r<span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
</li>
</ol>
<h2 id="常用的第三方库"><a href="#常用的第三方库" class="headerlink" title="常用的第三方库"></a>常用的第三方库</h2><p><img src="https://cdn.linz.tech/1200px-Apache_Cordova_Logo.svg.png" alt=""></p>
<h3 id="cordova"><a href="#cordova" class="headerlink" title="cordova"></a>cordova</h3><blockquote>
<p>Cordova提供了一组设备相关的API，通过这组API，移动应用能够以JavaScript访问原生的设备功能，如摄像头、麦克风等。</p>
</blockquote>
<ul>
<li><a href="http://cordova.axuer.com/" target="_blank" rel="noopener">cordova 中文</a></li>
<li><a href="https://www.jianshu.com/p/43872edf70e2" target="_blank" rel="noopener">Android集成Cordova</a></li>
<li><a href="https://blog.csdn.net/github_39500961/article/details/76270299" target="_blank" rel="noopener">cordova插件汇总大全</a></li>
</ul>
<h3 id="mui"><a href="#mui" class="headerlink" title="mui"></a><a href="https://github.com/dcloudio/mui" target="_blank" rel="noopener">mui</a></h3><ul>
<li>mui是最接近原生App体验的前端框架</li>
</ul>
<p>参考博文</p>
<ul>
<li><p><a href="https://blog.csdn.net/qq_42618969/article/details/102916085" target="_blank" rel="noopener">Android原生集成MUI框架进行混合开发</a></p>
</li>
<li><p><a href="https://blog.csdn.net/qq_33018731/article/details/83650579?utm_medium=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromBaidu-1.control&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-BlogCommendFromBaidu-1.control" target="_blank" rel="noopener">浅聊基于MUI框架的混合开发</a></p>
</li>
</ul>
<h2 id="实践案例"><a href="#实践案例" class="headerlink" title="实践案例"></a>实践案例</h2><ul>
<li><a href="https://blog.csdn.net/lsyz0021/article/details/56677132" target="_blank" rel="noopener">Android webview处理404、500、断网、timeout页面的问题</a></li>
<li></li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://blog.csdn.net/vicwudi/article/details/81990467" target="_blank" rel="noopener">WebView全面解析</a></li>
</ul>
]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>com.google.android.material 上手笔记</title>
    <url>/2020/09/15/2020-09-15-hello-MaterialButton/</url>
    <content><![CDATA[<p>导入依赖包</p>
<pre class="line-numbers language-groovy"><code class="language-groovy">implementation <span class="token string">'com.google.android.material:material:1.2.0'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="MaterialButton"><a href="#MaterialButton" class="headerlink" title="MaterialButton"></a>MaterialButton</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>最小案例</p>
<pre class="line-numbers language-xml"><code class="language-xml">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.button.MaterialButton</span>
      <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Hello World!<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">app:</span>strokeColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:color/black<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">app:</span>strokeWidth</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1dp<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">app:</span>cornerRadius</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16dp<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">app:</span>icon</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/ic_like<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">app:</span>iconSize</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20dp<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">app:</span>iconTint</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:color/holo_red_light<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">app:</span>backgroundTint</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/colorAccent<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintBottom_toBottomOf</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintLeft_toLeftOf</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintRight_toRightOf</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintTop_toTopOf</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">app:</span>rippleColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:color/holo_purple<span class="token punctuation">"</span></span>
      <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>常用属性</p>
<p><img src="http://cdn.linz.tech/material_button_screen_shot.png" alt=""></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>app:backgroundTint</td>
<td>背景着色</td>
</tr>
<tr>
<td>app:backgroundTintMode</td>
<td>着色模式</td>
</tr>
<tr>
<td>app:strokeColor</td>
<td>描边颜色</td>
</tr>
<tr>
<td>app:strokeWidth</td>
<td>描边宽度</td>
</tr>
<tr>
<td>app:cornerRadius</td>
<td>圆角大小</td>
</tr>
<tr>
<td>app:rippleColor</td>
<td>按压水波纹颜色</td>
</tr>
<tr>
<td>app:icon</td>
<td>图标icon</td>
</tr>
<tr>
<td>app:iconSize</td>
<td>图标大小</td>
</tr>
<tr>
<td>app:iconGravity</td>
<td>图标重心</td>
</tr>
<tr>
<td>app:iconTint</td>
<td>图标着色</td>
</tr>
<tr>
<td>app:iconTintMode</td>
<td>图标着色模式</td>
</tr>
<tr>
<td>app:iconPadding</td>
<td>图标和文本之间的间距</td>
</tr>
</tbody></table>
<h2 id="上手发现"><a href="#上手发现" class="headerlink" title="上手发现"></a>上手发现</h2><h3 id="backgroundTint-默认颜色"><a href="#backgroundTint-默认颜色" class="headerlink" title="backgroundTint 默认颜色"></a>backgroundTint 默认颜色</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 主题设置的颜色 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorPrimary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/colorPrimary<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="渐变色"><a href="#渐变色" class="headerlink" title="渐变色"></a>渐变色</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.button.MaterialButton</span>
    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation">=</span>”@drawable/custom_background”</span>
    <span class="token attr-name"><span class="token namespace">app:</span>backgroundTint</span><span class="token attr-value"><span class="token punctuation">=</span>”@empty”</span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ul>
<li><code>@empty</code> AS 不识别</li>
<li>以下配置之后下面属性设置将无效<pre class="line-numbers language-xml"><code class="language-xml">app:cornerRadius="16dp"
app:rippleColor="@android:color/holo_purple"
app:strokeColor="@android:color/black"
app:strokeWidth="1dp"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="去掉阴影"><a href="#去掉阴影" class="headerlink" title="去掉阴影"></a>去掉阴影</h3><p>布局中加入</p>
<pre class="line-numbers language-xml"><code class="language-xml"> style="@style/Widget.MaterialComponents.Button.UnelevatedButton"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="Disable-无颜色改变"><a href="#Disable-无颜色改变" class="headerlink" title="Disable 无颜色改变"></a>Disable 无颜色改变</h3><p>解决：</p>
<p>第一步：新建<code>res/color</code>文件夹 <font color="red">注意：selecctor_color.xml 必须放到该文件夹下</font></p>
<p>第二步：新建selector文件，selector_blue_material_btn.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>selector</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!--  disable 显示--></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#999999<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">android:</span>state_enabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token comment" spellcheck="true">&lt;!--  正常状态下显示--></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#0D78F5<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>selector</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第三步：使用</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.button.MaterialButton</span> 
    <span class="token attr-name">...</span>
    <span class="token attr-name"><span class="token namespace">android:</span>backgroundTint</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@color/selector_blue_material_btn<span class="token punctuation">"</span></span>
    <span class="token attr-name">..</span>                                                   
<span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="上手问题"><a href="#上手问题" class="headerlink" title="上手问题"></a>上手问题</h2><h3 id="问题一"><a href="#问题一" class="headerlink" title="问题一"></a>问题一</h3><p>参考：<a href="https://blog.csdn.net/github_35186068/article/details/83929124" target="_blank" rel="noopener">迁移到 AndroidX 过程中遇到的各种问题</a></p>
<pre class="line-numbers language-java"><code class="language-java">Caused by<span class="token operator">:</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>IllegalArgumentException<span class="token operator">:</span> The style on <span class="token keyword">this</span> component requires your app theme to be Theme<span class="token punctuation">.</span>MaterialComponents<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>解决一：</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.MyApp<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.MaterialComponents.Light.Bridge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!-- ... --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>可以选择主题</p>
<pre class="line-numbers language-xml"><code class="language-xml">Theme.MaterialComponents.Bridge
Theme.MaterialComponents.Light.Bridge
Theme.MaterialComponents.NoActionBar.Bridge
Theme.MaterialComponents.Light.NoActionBar.Bridge
Theme.MaterialComponents.Light.DarkActionBar.Bridge<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>解决二AppCompat增加属性：</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.MyApp<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.AppCompat<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

  <span class="token comment" spellcheck="true">&lt;!-- Original AppCompat attributes. --></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorPrimary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/my_app_primary_color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorSecondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/my_app_secondary_color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:colorBackground<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/my_app_background_color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorError<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/my_app_error_color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>

  <span class="token comment" spellcheck="true">&lt;!-- New MaterialComponents attributes. --></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorPrimaryVariant<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/my_app_primary_variant_color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorSecondaryVariant<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/my_app_secondary_variant_color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorSurface<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/my_app_surface_color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorOnPrimary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/my_app_color_on_primary<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorOnSecondary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/my_app_color_on_secondary<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorOnBackground<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/my_app_color_on_background<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorOnError<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/my_app_color_on_error<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorOnSurface<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/my_app_color_on_surface<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scrimBackground<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/mtrl_scrim_color<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textAppearanceHeadline1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@style/TextAppearance.MaterialComponents.Headline1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textAppearanceHeadline2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@style/TextAppearance.MaterialComponents.Headline2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textAppearanceHeadline3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@style/TextAppearance.MaterialComponents.Headline3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textAppearanceHeadline4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@style/TextAppearance.MaterialComponents.Headline4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textAppearanceHeadline5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@style/TextAppearance.MaterialComponents.Headline5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textAppearanceHeadline6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@style/TextAppearance.MaterialComponents.Headline6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textAppearanceSubtitle1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@style/TextAppearance.MaterialComponents.Subtitle1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textAppearanceSubtitle2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@style/TextAppearance.MaterialComponents.Subtitle2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textAppearanceBody1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@style/TextAppearance.MaterialComponents.Body1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textAppearanceBody2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@style/TextAppearance.MaterialComponents.Body2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textAppearanceCaption<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@style/TextAppearance.MaterialComponents.Caption<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textAppearanceButton<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@style/TextAppearance.MaterialComponents.Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>textAppearanceOverline<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@style/TextAppearance.MaterialComponents.Overline<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="ShapeableImageView"><a href="#ShapeableImageView" class="headerlink" title="ShapeableImageView"></a>ShapeableImageView</h1><p><img src="http://cdn.linz.tech/ShapeableImageView.png" alt=""></p>
<h2 id="style-设置"><a href="#style-设置" class="headerlink" title="style 设置"></a>style 设置</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>StyleShapeAppearanceImage<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">
    &lt;item name=<span class="token string">"cornerFamily"</span>>rounded&lt;/item>
    &lt;item name=<span class="token string">"cornerSize"</span>><span class="token number">16</span>dp&lt;/item>
    &lt;item name=<span class="token string">"cornerSizeTopRight"</span>><span class="token number">10</span>dp&lt;/item>
    &lt;item name=<span class="token string">"cornerSizeBottomRight"</span>><span class="token number">0</span>dp&lt;/item>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.google.android.material.imageview.ShapeableImageView</span>
    <span class="token attr-name"><span class="token namespace">app:</span>shapeAppearance</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@style/StyleShapeAppearanceImage<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span>
    <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="代码设置"><a href="#代码设置" class="headerlink" title="代码设置"></a>代码设置</h2><pre class="line-numbers language-java"><code class="language-java">imageView<span class="token operator">?</span><span class="token punctuation">.</span>shapeAppearanceModel <span class="token operator">=</span> ShapeAppearanceModel<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setAllCorners</span><span class="token punctuation">(</span>CornerFamily<span class="token punctuation">.</span>ROUNDED<span class="token punctuation">,</span><span class="token number">20f</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setTopLeftCorner</span><span class="token punctuation">(</span>CornerFamily<span class="token punctuation">.</span>CUT<span class="token punctuation">,</span><span class="token function">RelativeCornerSize</span><span class="token punctuation">(</span><span class="token number">0.3f</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setTopRightCorner</span><span class="token punctuation">(</span>CornerFamily<span class="token punctuation">.</span>CUT<span class="token punctuation">,</span><span class="token function">RelativeCornerSize</span><span class="token punctuation">(</span><span class="token number">0.3f</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBottomRightCorner</span><span class="token punctuation">(</span>CornerFamily<span class="token punctuation">.</span>CUT<span class="token punctuation">,</span><span class="token function">RelativeCornerSize</span><span class="token punctuation">(</span><span class="token number">0.3f</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBottomLeftCorner</span><span class="token punctuation">(</span>CornerFamily<span class="token punctuation">.</span>CUT<span class="token punctuation">,</span><span class="token function">RelativeCornerSize</span><span class="token punctuation">(</span><span class="token number">0.3f</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setAllCornerSizes</span><span class="token punctuation">(</span>ShapeAppearanceModel<span class="token punctuation">.</span>PILL<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setTopLeftCornerSize</span><span class="token punctuation">(</span><span class="token number">20f</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setTopRightCornerSize</span><span class="token punctuation">(</span><span class="token function">RelativeCornerSize</span><span class="token punctuation">(</span><span class="token number">0.5f</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBottomLeftCornerSize</span><span class="token punctuation">(</span><span class="token number">10f</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBottomRightCornerSize</span><span class="token punctuation">(</span><span class="token function">AbsoluteCornerSize</span><span class="token punctuation">(</span><span class="token number">30f</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>cornerSize 表示设置的大小，有RelativeCornerSize和AbsoluteCornerSize，RelativeCornerSize构造方法接收一个百分比，范围0-1；AbsoluteCornerSize构造方法接收一个具体数值，这个数值就是圆角的数值。</li>
<li>CornerFamily 有ROUNDED和CUT两种，ROUNDED是圆角，CUT是直接将圆角部分裁切掉。setAllCornerSizes(ShapeAppearanceModel.PILL)可以直接实现圆形效果。</li>
</ul>
<h1 id="Slider-加强版的SeekBar"><a href="#Slider-加强版的SeekBar" class="headerlink" title="Slider(加强版的SeekBar)"></a>Slider(加强版的SeekBar)</h1><p><img src="http://cdn.linz.tech/material_google_slider.png" alt=""></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>android:valueFrom</td>
<td>进度起点</td>
</tr>
<tr>
<td>android:valueTo</td>
<td>进度终点</td>
</tr>
<tr>
<td>android:value</td>
<td>当前进度点</td>
</tr>
<tr>
<td>android:stepSize</td>
<td>步长（必须大于0）</td>
</tr>
<tr>
<td>app:values</td>
<td>配置多个slider节点</td>
</tr>
<tr>
<td>app:labelBehavior</td>
<td>slider 滑动时顶部是否显示变化效果</td>
</tr>
<tr>
<td>app:labelStyle</td>
<td>配置slider节点顶部view style</td>
</tr>
</tbody></table>
<h1 id="BottomNavigationView"><a href="#BottomNavigationView" class="headerlink" title="BottomNavigationView"></a>BottomNavigationView</h1><p><img src="http://cdn.linz.tech/BottomNavigationView.png" alt=""></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><h2 id="material-components-android"><a href="#material-components-android" class="headerlink" title="material-components-android"></a><a href="https://github.com/material-components/material-components-android" target="_blank" rel="noopener">material-components-android</a></h2><h2 id="Android-Material组件使用详解"><a href="#Android-Material组件使用详解" class="headerlink" title="Android Material组件使用详解"></a><a href="https://blog.csdn.net/magic0908/article/details/101029876" target="_blank" rel="noopener">Android Material组件使用详解</a></h2>]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Jetpack Compose 上手笔记</title>
    <url>/2020/09/14/2020-09-14-hello-compose/</url>
    <content><![CDATA[<p>参考文章：<a href="https://juejin.im/post/6844903999347359751" target="_blank" rel="noopener">新技术又来了，Android Jetpack Compose 最全上手指南</a></p>
<p>【注意】: preview 动态预览模式<a href="https://developer.android.com/studio/preview" target="_blank" rel="noopener">Android studio &gt;= 4.2 版本(点击下载)</a></p>
<h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><p>官网：</p>
<p><em><a href="https://developer.android.com/jetpack/compose" target="_blank" rel="noopener">https://developer.android.com/jetpack/compose</a></em></p>
<p>官方demo ：</p>
<p><em><a href="https://github.com/android/compose-samples" target="_blank" rel="noopener">https://github.com/android/compose-samples</a></em></p>
<p>官方的介绍： </p>
<p><em><a href="https://developer.android.com/jetpack/compose/setup" target="_blank" rel="noopener">https://developer.android.com/jetpack/compose/setup</a></em></p>
]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>从零搭建禅道</title>
    <url>/2020/07/13/2020-07-13-zentao/</url>
    <content><![CDATA[<h2 id="Docker-安装"><a href="#Docker-安装" class="headerlink" title="Docker 安装"></a>Docker 安装</h2><pre class="line-numbers language-shell"><code class="language-shell">curl -fsSL get.docker.com -o get-docker.sh
sudo sh get-docker.sh --mirror Aliyun
mkdir -p /etc/docker/
vim /etc/docker/daemon.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>向daemon.json写入国内docker镜像</p>
<pre class="line-numbers language-shell"><code class="language-shell">{
  "registry-mirrors": ["http://hub-mirror.c.163.com"]
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>启动docker</p>
<pre class="line-numbers language-shell"><code class="language-shell">su root #切换到root用户
systemctl enable docker #设置开机自动启用docker服务
systemctl start docker #启动docker 服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>检查是否启动成功</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="禅道安装"><a href="#禅道安装" class="headerlink" title="禅道安装"></a>禅道安装</h2><p>下载最新的镜像，官方镜像地址  <a href="https://hub.docker.com/r/easysoft/zentao" target="_blank" rel="noopener">https://hub.docker.com/r/easysoft/zentao</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">docker pull easysoft/zentao:latest
##开源版本
sudo docker pull easysoft/zentao:12.2.stable<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>Quick start 案例</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker run --name [容器名] -p [主机端口]:80 -v [主机禅道目录]:/app/zentaopms \
       -v [主机mysql目录]:/var/lib/mysql \
       -e MYSQL_ROOT_PASSWORD=[数据库密码] -d easysoft/zentao:[镜像标签]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>其中，容器名：启动的容器名字，可随意指定；<br>主机端口：主机端口为web访问端口；<br>主机禅道目录：必须指定，方便禅道代码、附件等数据的持久化，非升级情况需指定空目录；<br>主机mysql目录：必须指定，方便禅道数据持久化，非升级情况需指定空目录；<br>数据库密码： 容器内置mysql用户名为root,默认密码123456，如果不修改可以不指定该变量，<br>果想更改密码可以设置 MYSQL_ROOT_PASSWORD变量来更改密码；</p>
</blockquote>
<p>实践中使用的案例</p>
<p>第一步： 新建持久化需要的目录</p>
<pre class="line-numbers language-shell"><code class="language-shell">mkdir -p /root/app/zentao/zentaopms && mkdir -p /root/app/zentao/mysqldata<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>第二步：直接跑起来</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker run --name zentao_container -p 10371:80 -v /root/app/zentao/zentaopms:/app/zentaopms \
       -v /root/app/zentao/mysqldata:/var/lib/mysql \
       -e MYSQL_ROOT_PASSWORD=66688866 -d easysoft/zentao:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="参考文件"><a href="#参考文件" class="headerlink" title="参考文件"></a>参考文件</h2><ul>
<li><a href="https://www.zentao.net/book/zentaopmshelp/405.html#5" target="_blank" rel="noopener">禅道官方Docker安装文档</a></li>
</ul>
]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>Facebook rebound模仿现实生活中的阻力和弹力的库</title>
    <url>/2020/07/12/2020-07-12-rebound/</url>
    <content><![CDATA[<h1 id="Rebound库实战笔记"><a href="#Rebound库实战笔记" class="headerlink" title="Rebound库实战笔记"></a>Rebound库实战笔记</h1><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p> <strong><a href="https://github.com/facebookarchive/rebound" target="_blank" rel="noopener"> github rebound</a></strong> </p>
<p>导入</p>
<pre class="line-numbers language-groovy"><code class="language-groovy">implementation <span class="token string">'com.facebook.rebound:rebound:0.3.8'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><h3 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h3><pre class="line-numbers language-java"><code class="language-java">Spring spring <span class="token operator">=</span> SpringSystem<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createSpring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//tension(拉力)值改成100(拉力值越小，晃动越慢)，friction(摩擦力)值改成1(摩擦力越小，弹动大小越明显)</span>
spring<span class="token punctuation">.</span><span class="token function">setSpringConfig</span><span class="token punctuation">(</span>SpringConfig<span class="token punctuation">.</span><span class="token function">fromOrigamiTensionAndFriction</span><span class="token punctuation">(</span>tension<span class="token punctuation">,</span> friction<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
spring<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleSpringListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="SpringChain"><a href="#SpringChain" class="headerlink" title="SpringChain"></a>SpringChain</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//创建SpringChain对象</span>
SpringChain springChain <span class="token operator">=</span> SpringChain<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 springChain<span class="token punctuation">.</span><span class="token function">addSpring</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleSpringListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="弹簧效果"><a href="#弹簧效果" class="headerlink" title="弹簧效果"></a>弹簧效果</h3><p>Demo1 </p>
<pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//Facebook-Rebound弹簧</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">Two</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//创建SpringSystem对象</span>
        SpringSystem springSystem <span class="token operator">=</span> SpringSystem<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//添加到弹簧系统</span>
        Spring spring <span class="token operator">=</span> springSystem<span class="token punctuation">.</span><span class="token function">createSpring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        spring<span class="token punctuation">.</span><span class="token function">setCurrentValue</span><span class="token punctuation">(</span><span class="token number">1.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//tension(拉力)值改成100(拉力值越小，晃动越慢)，friction(摩擦力)值改成1(摩擦力越小，弹动大小越明显)</span>
        spring<span class="token punctuation">.</span><span class="token function">setSpringConfig</span><span class="token punctuation">(</span>SpringConfig<span class="token punctuation">.</span><span class="token function">fromOrigamiTensionAndFriction</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//与上面一样，回弹效果更明显，但速度慢</span>
<span class="token comment" spellcheck="true">//        spring.setSpringConfig(new SpringConfig(100, 1));</span>
        spring<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleSpringListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSpringUpdate</span><span class="token punctuation">(</span>Spring spring<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">float</span> value <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> spring<span class="token punctuation">.</span><span class="token function">getCurrentValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">float</span> scale <span class="token operator">=</span> <span class="token number">1f</span> <span class="token operator">-</span> <span class="token punctuation">(</span>value <span class="token operator">*</span> <span class="token number">0.5f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                imageView<span class="token punctuation">.</span><span class="token function">setScaleX</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span><span class="token punctuation">;</span>
                imageView<span class="token punctuation">.</span><span class="token function">setScaleY</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          spring<span class="token punctuation">.</span><span class="token function">setEndValue</span><span class="token punctuation">(</span><span class="token number">0.1f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Demo2 </p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token comment" spellcheck="true">/**
   * 弹簧动画
   * @param v 动画View
   * @param tension 拉力系数
   * @param friction 摩擦力系数
   */</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">animateViewDirection</span><span class="token punctuation">(</span><span class="token keyword">final</span> View v<span class="token punctuation">,</span> <span class="token keyword">float</span> from<span class="token punctuation">,</span> <span class="token keyword">float</span> to<span class="token punctuation">,</span> <span class="token keyword">double</span> tension<span class="token punctuation">,</span>
      <span class="token keyword">double</span> friction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Spring spring <span class="token operator">=</span> SpringSystem<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createSpring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    spring<span class="token punctuation">.</span><span class="token function">setCurrentValue</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment" spellcheck="true">//tension(拉力)值改成100(拉力值越小，晃动越慢)，friction(摩擦力)值改成1(摩擦力越小，弹动大小越明显)</span>
    spring<span class="token punctuation">.</span><span class="token function">setSpringConfig</span><span class="token punctuation">(</span>SpringConfig<span class="token punctuation">.</span><span class="token function">fromOrigamiTensionAndFriction</span><span class="token punctuation">(</span>tension<span class="token punctuation">,</span> friction<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    spring<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleSpringListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSpringUpdate</span><span class="token punctuation">(</span>Spring spring<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//根据rebound返回的值进行更新</span>
         <span class="token keyword">float</span> value <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> spring<span class="token punctuation">.</span><span class="token function">getCurrentValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">float</span> scale <span class="token operator">=</span> <span class="token number">1f</span> <span class="token operator">-</span> <span class="token punctuation">(</span>value <span class="token operator">*</span> <span class="token number">0.5f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        v<span class="token punctuation">.</span><span class="token function">setTranslationY</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> spring<span class="token punctuation">.</span><span class="token function">getCurrentValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    spring<span class="token punctuation">.</span><span class="token function">setEndValue</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment" spellcheck="true">//setControlSpringIndex：从第几个子view开始</span>
  springChain<span class="token punctuation">.</span><span class="token function">setControlSpringIndex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">//设置结束的位置，</span>
  springChain<span class="token punctuation">.</span><span class="token function">getControlSpring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setEndValue</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="多个childView-“chain-“-进行控制"><a href="#多个childView-“chain-“-进行控制" class="headerlink" title="多个childView “chain “ 进行控制"></a>多个childView “chain “ 进行控制</h3><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">//Facebook-Rebound</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">One</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ViewGroup viewGroup <span class="token operator">=</span> <span class="token punctuation">(</span>ViewGroup<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>chain_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        viewGroup<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//创建SpringChain对象</span>
        SpringChain springChain <span class="token operator">=</span> SpringChain<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//获取到子控件</span>
        <span class="token keyword">int</span> childCount <span class="token operator">=</span> viewGroup<span class="token punctuation">.</span><span class="token function">getChildCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> childCount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> View view <span class="token operator">=</span> viewGroup<span class="token punctuation">.</span><span class="token function">getChildAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>

            springChain<span class="token punctuation">.</span><span class="token function">addSpring</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleSpringListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token annotation punctuation">@Override</span>
                <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSpringUpdate</span><span class="token punctuation">(</span>Spring spring<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">float</span> value <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> spring<span class="token punctuation">.</span><span class="token function">getCurrentValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment" spellcheck="true">//只设置沿X轴</span>
                    view<span class="token punctuation">.</span><span class="token function">setTranslationX</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        List<span class="token operator">&lt;</span>Spring<span class="token operator">></span> springs <span class="token operator">=</span> springChain<span class="token punctuation">.</span><span class="token function">getAllSprings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> springs<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            springs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCurrentValue</span><span class="token punctuation">(</span><span class="token number">1080</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">//setControlSpringIndex：从第几个子view开始</span>
        springChain<span class="token punctuation">.</span><span class="token function">setControlSpringIndex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//设置结束的位置，</span>
        springChain<span class="token punctuation">.</span><span class="token function">getControlSpring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setEndValue</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://blog.csdn.net/wuqingsen1/article/details/84635115" target="_blank" rel="noopener">Facebook-Rebound弹簧效果</a></li>
</ul>
]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac苹果电脑使用</title>
    <url>/2020/06/04/2020-06-04-Mac_pro_usage/</url>
    <content><![CDATA[<h1 id="常用软件安装"><a href="#常用软件安装" class="headerlink" title="常用软件安装"></a>常用软件安装</h1><h2 id="第一节-开发软件安装"><a href="#第一节-开发软件安装" class="headerlink" title="第一节 开发软件安装"></a>第一节 开发软件安装</h2><ul>
<li><a href="https://www.jianshu.com/p/4e93b48f9f63" target="_blank" rel="noopener">navicat</a> 数据库</li>
</ul>
<h2 id="第二节-日常使用"><a href="#第二节-日常使用" class="headerlink" title="第二节 日常使用"></a>第二节 日常使用</h2><h3 id="开发软件"><a href="#开发软件" class="headerlink" title="开发软件"></a>开发软件</h3><p> <a href="https://www.cnblogs.com/yoyo008/articles/9016015.html" target="_blank" rel="noopener">MAC系统里JDK版本切换（转）–亲测有效</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">export JAVA_13_HOME=/Library/Java/JavaVirtualMachines/jdk-13.0.2.jdk/Contents/Home
export JAVA_8_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home
export JAVA_HOME=$JAVA_8_HOME

alias jdk8='export JAVA_HOME=$JAVA_8_HOME'
alias jdk13='export JAVA_HOME=$JAVA_13_HOME'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="第三节-Mac系统快捷键"><a href="#第三节-Mac系统快捷键" class="headerlink" title="第三节 Mac系统快捷键"></a>第三节 Mac系统快捷键</h2><p>Mac 快捷键</p>
<p>Mac键盘布局及图标对照</p>
<p><img src="http://cdn.linz.tech/Mac%E9%94%AE%E7%9B%98%E5%B8%83%E5%B1%80%E5%AF%B9%E7%85%A7%E5%9B%BE.png" alt=""></p>
<h3 id="系统应用"><a href="#系统应用" class="headerlink" title="系统应用"></a>系统应用</h3><ol>
<li>退出当前应用 cmd + Q</li>
<li>关闭当前窗口 command+W</li>
<li>⌘ + option + v 移动</li>
<li>⌘+ delete 删除</li>
<li>⌘ + T打开标签页</li>
<li>⌘ + i  显示当前文件简介</li>
<li>⌘ + H 隐藏窗口</li>
<li>⌘ + H 最小化窗口 </li>
<li>强制退出应用程序：option+command+esc</li>
<li>Command + Shift + 4 截图区域 （鼠标悬停+ 加空格键截取软件软件单个窗口）</li>
<li>Command + Shift + 5 截屏货录屏</li>
<li>Command + Shift + 3 截取全屏屏幕</li>
<li>⌘ + O 打开文件</li>
<li>选择文件 + 空格键 快速预览</li>
<li>选中多个文件 + ⌘ + ctrl + n 快速收纳</li>
<li>⌘ + option + 关机键 进入休眠 </li>
<li>⌘ + ctrl + 关机键  重启电脑 </li>
<li>⌘ + option + ctrl + 关机键 快速关机</li>
<li>F11 显示桌面</li>
</ol>
<h3 id="软件应用"><a href="#软件应用" class="headerlink" title="软件应用"></a>软件应用</h3><ol>
<li>bof</li>
<li>. ⌘⇧.(Command + Shift + .) 显示和隐藏文件</li>
</ol>
<p>Fasdf</p>
<p>终端快捷键</p>
<p>cmmand + D 终端分屏幕</p>
<p>打开finder ： 在Terminal中输入命令: open .</p>
<p>android studio Mac 快捷键</p>
<p>new scratch file </p>
<p>Command + shift + N </p>
<p>Cmd + alt + control + r rebuild </p>
<p>Control +cmc + F12 attach to process</p>
<p>新建typora快捷键</p>
<p>alias typora=”open -a typora”</p>
<p>Typora . //打开本地文件</p>
]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>Coding Interview University</title>
    <url>/2020/03/27/2020-03-27-Coding%20Interview%20University-Readme-cn/</url>
    <content><![CDATA[<h1 id="译-Coding-Interview-University-一套完整的学习手册帮助自己准备-Google-的面试"><a href="#译-Coding-Interview-University-一套完整的学习手册帮助自己准备-Google-的面试" class="headerlink" title="[译] Coding Interview University 一套完整的学习手册帮助自己准备 Google 的面试"></a>[译] Coding Interview University 一套完整的学习手册帮助自己准备 Google 的面试</h1><blockquote>
<ul>
<li>原文地址：<a href="https://github.com/jwasham/coding-interview-university" target="_blank" rel="noopener">Coding Interview University</a></li>
</ul>
</blockquote>
<ul>
<li>原文作者：<a href="https://github.com/jwasham" target="_blank" rel="noopener">John Washam</a></li>
<li>译文出自：<a href="https://github.com/xitu/gold-miner" target="_blank" rel="noopener">掘金翻译计划</a></li>
<li>译者：<a href="https://github.com/aleen42" target="_blank" rel="noopener">aleen42</a>，<a href="https://github.com/Newt0n" target="_blank" rel="noopener">Newton</a>，<a href="https://github.com/bobmayuze" target="_blank" rel="noopener">bobmayuze</a>，<a href="https://github.com/laobie" target="_blank" rel="noopener">Jaeger</a>，<a href="https://github.com/sqrthree" target="_blank" rel="noopener">sqrthree</a></li>
</ul>
<p><a href="https://github.com/xitu/gold-miner" target="_blank" rel="noopener"><img src="https://camo.githubusercontent.com/c9c9db0a39b56738a62332f0791d58b1522fdf82/68747470733a2f2f7261776769742e636f6d2f616c65656e34322f6261646765732f6d61737465722f7372632f786974752e737667" alt="xitu"></a></p>
<h2 id="这是？"><a href="#这是？" class="headerlink" title="这是？"></a>这是？</h2><p>这是我为了从 web 开发者（自学、非计算机科学学位）蜕变至 Google 软件工程师所制定的计划，其内容历时数月。</p>
<p><img src="https://d3j2pkmjtin6ou.cloudfront.net/coding-at-the-whiteboard-silicon-valley.png" alt="白板上编程 ———— 来自 HBO 频道的剧集，“硅谷”"></p>
<p>这一长列表是从 <strong>Google 的指导笔记</strong> 中萃取出来并进行扩展。因此，有些事情你必须去了解一下。我在列表的底部添加了一些额外项，用于解决面试中可能会出现的问题。这些额外项大部分是来自于 Steve Yegge 的“<a href="http://steve-yegge.blogspot.com/2008/03/get-that-job-at-google.html" target="_blank" rel="noopener">得到在 Google 工作的机会</a>”。而在 Google 指导笔记的逐字间，它们有时也会被反映出来。</p>
<hr>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li><a href="#这是">这是？</a></li>
<li><a href="#为何要用到它">为何要用到它？</a></li>
<li><a href="#如何使用它">如何使用它</a></li>
<li><a href="#拥有一名-googler-的心态">拥有一名 Googler 的心态</a></li>
<li><a href="#我得到了工作吗">我得到了工作吗？</a></li>
<li><a href="#跟着我的脚步">跟着我的脚步</a></li>
<li><a href="#不要妄自菲薄">不要妄自菲薄</a></li>
<li><a href="#关于-google">关于 Google</a></li>
<li><a href="#相关视频资源">相关视频资源</a></li>
<li><a href="#面试过程--通用的面试准备">面试过程 &amp; 通用的面试准备</a></li>
<li><a href="#为你的面试选择一种语言">为你的面试选择一种语言</a></li>
<li><a href="#在你开始之前">在你开始之前</a></li>
<li><a href="#你所看不到的">你所看不到的</a></li>
<li><a href="#日常计划">日常计划</a></li>
<li><a href="#必备知识">必备知识</a></li>
<li><a href="#算法复杂度--big-o--渐进分析法">算法复杂度 / Big-O / 渐进分析法</a></li>
<li><a href="#数据结构">数据结构</a><ul>
<li><a href="#数组arrays">数组（Arrays）</a></li>
<li><a href="#链表linked-lists">链表（Linked Lists）</a></li>
<li><a href="#堆栈stack">堆栈（Stack）</a></li>
<li><a href="#队列queue">队列（Queue）</a></li>
<li><a href="#哈希表hash-table">哈希表（Hash table）</a></li>
</ul>
</li>
<li><a href="#更多的知识">更多的知识</a><ul>
<li><a href="#二分查找binary-search">二分查找（Binary search）</a></li>
<li><a href="#按位运算bitwise-operations">按位运算（Bitwise operations）</a></li>
</ul>
</li>
<li><a href="#树trees">树（Trees）</a><ul>
<li><a href="#树--笔记--背景">树 —— 笔记 &amp; 背景</a></li>
<li><a href="#二叉查找树binary-search-treesbsts">二叉查找树（Binary search trees）：BSTs</a></li>
<li><a href="#堆heap--优先级队列priority-queue--二叉堆binary-heap">堆（Heap） / 优先级队列（Priority Queue） / 二叉堆（Binary Heap）</a></li>
<li><a href="#字典树tries">字典树（Tries）</a></li>
<li><a href="#平衡查找树balanced-search-trees">平衡查找树（Balanced search trees）</a></li>
<li><a href="#n-叉树k-叉树m-叉树">N 叉树（K 叉树、M 叉树）</a></li>
</ul>
</li>
<li><a href="#排序sorting">排序</a></li>
<li><a href="#图graphs">图（Graphs）</a></li>
<li><a href="#更多知识">更多知识</a><ul>
<li><a href="#递归recursion">递归</a></li>
<li><a href="#动态规划dynamic-programming">动态规划</a></li>
<li><a href="#组合combinatorics-n-中选-k-个--概率probability">组合 &amp; 概率</a></li>
<li><a href="#np-np-完全和近似算法">NP, NP-完全和近似算法</a></li>
<li><a href="#缓存cache">缓存</a></li>
<li><a href="#进程processe和线程thread">进程和线程</a></li>
<li><a href="#系统设计可伸缩性数据处理">系统设计、可伸缩性、数据处理</a></li>
<li><a href="#论文">论文</a></li>
<li><a href="#测试">测试</a></li>
<li><a href="#调度">调度</a></li>
<li><a href="#实现系统例程">实现系统例程</a></li>
<li><a href="#字符串搜索和操作">字符串搜索和操作</a></li>
</ul>
</li>
<li><a href="#终面">终面</a></li>
<li><a href="#书籍">书籍</a></li>
<li><a href="#编码练习和挑战">编码练习和挑战</a></li>
<li><a href="#当你临近面试时">当你临近面试时</a></li>
<li><a href="#你的简历">你的简历</a></li>
<li><a href="#当面试来临的时候">当面试来临的时候</a></li>
<li><a href="#问面试官的问题">问面试官的问题</a></li>
<li><a href="#当你获得了梦想的职位">当你获得了梦想的职位</a></li>
</ul>
<p>—————- 下面的内容是可选的 —————-</p>
<ul>
<li><a href="#附加的学习">附加的学习</a><ul>
<li><a href="#unicode">Unicode</a></li>
<li><a href="#字节顺序">字节顺序</a></li>
<li><a href="#emacs-and-vim">Emacs and vi(m)</a></li>
<li><a href="#unix-命令行工具">Unix 命令行工具</a></li>
<li><a href="#信息资源-视频">信息资源 (视频)</a></li>
<li><a href="#奇偶校验位--汉明码-视频">奇偶校验位 &amp; 汉明码 (视频)</a></li>
<li><a href="#系统熵值系统复杂度">系统熵值（系统复杂度）</a></li>
<li><a href="#密码学">密码学</a></li>
<li><a href="#压缩">压缩</a></li>
<li><a href="#网络-视频">网络 (视频)</a></li>
<li><a href="#计算机安全">计算机安全</a></li>
<li><a href="#释放缓存">释放缓存</a></li>
<li><a href="#并行并发编程">并行/并发编程</a></li>
<li><a href="#设计模式">设计模式</a></li>
<li><a href="#信息传输-序列化和队列化的系统">信息传输, 序列化, 和队列化的系统</a></li>
<li><a href="#快速傅里叶变换">快速傅里叶变换</a></li>
<li><a href="#布隆过滤器">布隆过滤器</a></li>
<li><a href="#van-emde-boas-树">van Emde Boas 树</a></li>
<li><a href="#更深入的数据结构">更深入的数据结构</a></li>
<li><a href="#跳表">跳表</a></li>
<li><a href="#网络流">网络流</a></li>
<li><a href="#不相交集--联合查找">不相交集 &amp; 联合查找</a></li>
<li><a href="#math-for-fast-processing">快速处理数学</a></li>
<li><a href="#树堆-treap">树堆 (Treap)</a></li>
<li><a href="#线性规划linear-programming视频">线性规划</a></li>
<li><a href="#几何凸包geometry-convex-hull视频">几何：凸包（Geometry, Convex hull）</a></li>
<li><a href="#离散数学">离散数学</a></li>
<li><a href="#机器学习machine-learning">机器学习</a></li>
<li><a href="#go-语言">Go 语言</a></li>
</ul>
</li>
<li><a href="#一些主题的额外内容">一些主题的额外内容</a></li>
<li><a href="#视频系列">视频系列</a></li>
<li><a href="#计算机科学课程">计算机科学课程</a></li>
</ul>
<hr>
<h2 id="为何要用到它？"><a href="#为何要用到它？" class="headerlink" title="为何要用到它？"></a>为何要用到它？</h2><p>我一直都是遵循该计划去准备 Google 的面试。自 1997 年以来，我一直从事于 web 程序的构建、服务器的构建及创业型公司的创办。对于只有着一个经济学学位，而不是计算机科学学位（CS degree）的我来说，在职业生涯中所取得的都非常成功。然而，我想在 Google 工作，并进入大型系统中，真正地去理解计算机系统、算法效率、数据结构性能、低级别编程语言及其工作原理。可一项都不了解的我，怎么会被 Google 所应聘呢？</p>
<p>当我创建该项目时，我从一个堆栈到一个堆都不了解。那时的我，完全不了解 Big-O 、树，或如何去遍历一个图。如果非要我去编写一个排序算法的话，我只能说我所写的肯定是很糟糕。一直以来，我所用的任何数据结构都是内建于编程语言当中。至于它们在背后是如何运作，对此我一概不清楚。此外，以前的我并不需要对内存进行管理，最多就只是在一个正在执行的进程抛出了“内存不足”的错误后，采取一些权变措施。而在我的编程生活中，也甚少使用到多维数组，可关联数组却成千上万。而且，从一开始到现在，我都还未曾自己实现过数据结构。</p>
<p>就是这样的我，在经过该学习计划后，已然对被 Google 所雇佣充满信心。这是一个漫长的计划，以至于花费了我数月的时间。若您早已熟悉大部分的知识，那么也许能节省大量的时间。</p>
<h2 id="如何使用它"><a href="#如何使用它" class="headerlink" title="如何使用它"></a>如何使用它</h2><p>下面所有的东西都只是一个概述。因此，你需要由上而下逐一地去处理它。</p>
<p>在学习过程中，我是使用 GitHub 特殊的语法特性 markdown flavor 去检查计划的进展，包括使用任务列表。</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> 创建一个新的分支，以使得你可以像这样去检查计划的进展。直接往方括号中填写一个字符 x 即可：[x]</li>
</ul>
<p><a href="https://guides.github.com/features/mastering-markdown/#GitHub-flavored-markdown" target="_blank" rel="noopener">更多关于 Github-flavored markdown 的详情</a></p>
<h2 id="我得到了工作吗？"><a href="#我得到了工作吗？" class="headerlink" title="我得到了工作吗？"></a>我得到了工作吗？</h2><p>我还没去应聘。</p>
<p>因为我离完成学习（完成该疯狂的计划列表）还需要数天的时间，并打算在下周开始用一整天的时间，以编程的方式去解决问题。当然，这将会持续数周的时间。然后，我才通过使用在二月份所得到的一个介绍资格，去正式应聘 Google（没错，是二月份时就得到的）。</p>
<pre><code>感谢 JP 的这次介绍。</code></pre><h2 id="跟着我的脚步"><a href="#跟着我的脚步" class="headerlink" title="跟着我的脚步"></a>跟着我的脚步</h2><p>目前我仍在该计划的执行过程中，如果你想跟随我脚步去学习的话，可以登进我在 <a href="https://googleyasheck.com/" target="_blank" rel="noopener">GoogleyAsHeck.com</a> 上所写的博客。</p>
<p>下面是我的联系方式：</p>
<ul>
<li>Twitter: <a href="https://twitter.com/googleyasheck" target="_blank" rel="noopener">@googleyasheck</a></li>
<li>Twitter: <a href="https://twitter.com/StartupNextDoor" target="_blank" rel="noopener">@StartupNextDoor</a></li>
<li>Google+: <a href="https://plus.google.com/+Googleyasheck" target="_blank" rel="noopener">+Googleyasheck</a></li>
<li>LinkedIn: <a href="https://www.linkedin.com/in/johnawasham" target="_blank" rel="noopener">johnawasham</a></li>
</ul>
<p><img src="https://dng5l3qzreal6.cloudfront.net/2016/Aug/book_stack_photo_resized_18_1469302751157-1472661280368.png" alt="John Washam - Coding Interview University"></p>
<h2 id="不要妄自菲薄"><a href="#不要妄自菲薄" class="headerlink" title="不要妄自菲薄"></a>不要妄自菲薄</h2><ul>
<li>Google 的工程师都是才智过人的。但是，就算是工作在 Google 的他们，仍然会因为觉得自己不够聪明而感到一种不安。</li>
<li><a href="https://www.youtube.com/watch?v=0SARbwvhupQ" target="_blank" rel="noopener">天才程序员的神话</a></li>
</ul>
<h2 id="关于-Google"><a href="#关于-Google" class="headerlink" title="关于 Google"></a>关于 Google</h2><ul>
<li><input disabled="" type="checkbox"> 面向学生 —— <a href="https://www.google.com/about/careers/students/guide-to-technical-development.html" target="_blank" rel="noopener">Google 的职业生涯：技术开发指导</a></li>
<li><input disabled="" type="checkbox"> Google 检索的原理：<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=mTBShTwCnD4" target="_blank" rel="noopener">Google 检索的发展史（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.google.com/insidesearch/howsearchworks/thestory/" target="_blank" rel="noopener">Google 检索的原理 —— 故事篇</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.google.com/insidesearch/howsearchworks/" target="_blank" rel="noopener">Google 检索的原理</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=BNHR6IQJGZs" target="_blank" rel="noopener">Google 检索的原理 —— Matt Cutts（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=J5RZOU6vK4Q" target="_blank" rel="noopener">Google 是如何改善其检索算法（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 系列文章：<ul>
<li><input disabled="" type="checkbox"> <a href="https://backchannel.com/how-google-search-dealt-with-mobile-33bc09852dc9" target="_blank" rel="noopener">Google 检索是如何处理移动设备</a></li>
<li><input disabled="" type="checkbox"> <a href="https://backchannel.com/googles-secret-study-to-find-out-our-needs-eba8700263bf" target="_blank" rel="noopener">Google 为了寻找大众需求的秘密研究</a></li>
<li><input disabled="" type="checkbox"> <a href="https://backchannel.com/google-search-will-be-your-next-brain-5207c26e4523" target="_blank" rel="noopener">Google 检索将成为你的下一个大脑</a></li>
<li><input disabled="" type="checkbox"> <a href="https://backchannel.com/the-deep-mind-of-demis-hassabis-156112890d8a" target="_blank" rel="noopener">Demis Hassabis 的心灵直白</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.amazon.com/How-Google-Works-Eric-Schmidt/dp/1455582344" target="_blank" rel="noopener">书籍：Google 公司是如何运作的</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=q4y0KOeXViI" target="_blank" rel="noopener">由 Google 通告所制作 —— 2016年10月（视频）</a></li>
</ul>
<h2 id="相关视频资源"><a href="#相关视频资源" class="headerlink" title="相关视频资源"></a>相关视频资源</h2><p>部分视频只能通过在 Coursera、Edx 或 Lynda.com class 上注册登录才能观看。这些视频被称为网络公开课程（MOOC）。即便是免费观看，部分课程可能会由于不在时间段内而无法获取。因此，你需要多等待几个月。</p>
<pre><code>很感谢您能帮我把网络公开课程的视频链接转换成公开的视频源，以代替那些在线课程的视频。此外，一些大学的讲座视频也是我所青睐的。</code></pre><h2 id="面试过程-amp-通用的面试准备"><a href="#面试过程-amp-通用的面试准备" class="headerlink" title="面试过程 &amp; 通用的面试准备"></a>面试过程 &amp; 通用的面试准备</h2><ul>
<li><input disabled="" type="checkbox"> <p>视频：</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=oWbUtlUhwa8&amp;feature=youtu.be" target="_blank" rel="noopener">如何在 Google 工作 —— 考生指导课程（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=qc1owf2-220&amp;feature=youtu.be" target="_blank" rel="noopener">Google 招聘者所分享的技术面试小窍门（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=8npJLXkcmu8" target="_blank" rel="noopener">如何在 Google 工作：技术型简历的准备（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>文章：</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="http://www.google.com/about/careers/lifeatgoogle/hiringprocess/" target="_blank" rel="noopener">三步成为 Googler</a></li>
<li><input disabled="" type="checkbox"> <a href="http://steve-yegge.blogspot.com/2008/03/get-that-job-at-google.html" target="_blank" rel="noopener">得到在 Google 的工作机会</a><ul>
<li>所有他所提及的事情都列在了下面</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <em>（早已过期）</em> <a href="http://dondodge.typepad.com/the_next_big_thing/2010/09/how-to-get-a-job-at-google-interview-questions-hiring-process.html" target="_blank" rel="noopener">如何得到 Google 的一份工作，面试题，应聘过程</a></li>
<li><input disabled="" type="checkbox"> <a href="http://sites.google.com/site/steveyegge2/five-essential-phone-screen-questions" target="_blank" rel="noopener">电话面试的问题</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>附加的（虽然 Google 不建议，但我还是添加在此）：</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://medium.com/always-be-coding/abc-always-be-coding-d5f8051afce2#.4heg8zvm4" target="_blank" rel="noopener">ABC：永远都要去编程（Always Be Coding）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://medium.com/always-be-coding/four-steps-to-google-without-a-degree-8f381aa6bd5e#.asalo1vfx" target="_blank" rel="noopener">四步成为 Google 里一名没有学位的员工</a></li>
<li><input disabled="" type="checkbox"> <a href="https://medium.com/@dpup/whiteboarding-4df873dbba2e#.hf6jn45g1" target="_blank" rel="noopener">共享白板（Whiteboarding）</a></li>
<li><input disabled="" type="checkbox"> <a href="http://www.kpcb.com/blog/lessons-learned-how-google-thinks-about-hiring-management-and-culture" target="_blank" rel="noopener">Google 是如何看待应聘、管理和公司文化</a></li>
<li><input disabled="" type="checkbox"> <a href="http://www.coderust.com/blog/2014/04/10/effective-whiteboarding-during-programming-interviews/" target="_blank" rel="noopener">程序开发面试中有效的白板（Whiteboarding）</a></li>
<li><input disabled="" type="checkbox"> 震撼开发类面试 第一集：<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=rEJzOhC5ZtQ" target="_blank" rel="noopener">Gayle L McDowell —— 震撼开发类面试（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=aClxtDcdpsQ" target="_blank" rel="noopener">震撼开发类面试 —— 作者 Gayle Laakmann McDowell（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 如何在世界四强企业中获得一份工作：<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=YJZCUhxNCv8" target="_blank" rel="noopener">“如何在世界四强企业中获得一份工作 —— Amazon、Facebook、Google 和 Microsoft”（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://alexbowe.com/failing-at-google-interviews/" target="_blank" rel="noopener">面试 Google 失败</a></li>
</ul>
</li>
</ul>
<h2 id="为你的面试选择一种语言"><a href="#为你的面试选择一种语言" class="headerlink" title="为你的面试选择一种语言"></a>为你的面试选择一种语言</h2><p>在这，我就以下话题写一篇短文 —— <a href="https://googleyasheck.com/important-pick-one-language-for-the-google-interview/" target="_blank" rel="noopener">重点：为在 Google 的面试选择一种语言</a></p>
<p>在大多数公司的面试当中，你可以在编程这一环节，使用一种自己用起来较为舒适的语言去完成编程。但在 Google，你只有三种固定的选择：</p>
<ul>
<li>C++</li>
<li>Java</li>
<li>Python</li>
</ul>
<p>有时你也可以使用下面两种，但需要事先查阅说明。因为，说明中会有警告：</p>
<ul>
<li>JavaScript</li>
<li>Ruby</li>
</ul>
<p>你需要对你所选择的语言感到非常舒适且足够了解。</p>
<p>更多关于语言选择的阅读：</p>
<ul>
<li><a href="http://www.byte-by-byte.com/choose-the-right-language-for-your-coding-interview/" target="_blank" rel="noopener">http://www.byte-by-byte.com/choose-the-right-language-for-your-coding-interview/</a></li>
<li><a href="http://blog.codingforinterviews.com/best-programming-language-jobs/" target="_blank" rel="noopener">http://blog.codingforinterviews.com/best-programming-language-jobs/</a></li>
<li><a href="https://www.quora.com/What-is-the-best-language-to-program-in-for-an-in-person-Google-interview" target="_blank" rel="noopener">https://www.quora.com/What-is-the-best-language-to-program-in-for-an-in-person-Google-interview</a></li>
</ul>
<p><a href="../programming-language-resources.md">在此查看相关语言的资源</a></p>
<p>由于，我正在学习C、C++ 和 Python。因此，在下面你会看到部分关于它们的学习资料。相关书籍请看文章的底部。</p>
<h2 id="在你开始之前"><a href="#在你开始之前" class="headerlink" title="在你开始之前"></a>在你开始之前</h2><p>该列表已经持续更新了很长的一段时间，所以，我们的确很容易会对其失去控制。</p>
<p>这里列出了一些我所犯过的错误，希望您不要重滔覆辙。</p>
<h3 id="1-你不可能把所有的东西都记住"><a href="#1-你不可能把所有的东西都记住" class="headerlink" title="1. 你不可能把所有的东西都记住"></a>1. 你不可能把所有的东西都记住</h3><p>就算我查看了数小时的视频，并记录了大量的笔记。几个月后的我，仍然会忘却其中大部分的东西。所以，我翻阅了我的笔记，并将可回顾的东西制作成抽认卡（flashcard）（请往下看）</p>
<h3 id="2-使用抽认卡"><a href="#2-使用抽认卡" class="headerlink" title="2. 使用抽认卡"></a>2. 使用抽认卡</h3><p>为了解决善忘的问题，我制作了一些关于抽认卡的页面，用于添加两种抽认卡：正常的及带有代码的。每种卡都会有不同的格式设计。</p>
<p>而且，我还以移动设备为先去设计这些网页，以使得在任何地方的我，都能通过我的手机及平板去回顾知识。</p>
<p>你也可以免费制作属于你自己的抽认卡网站：</p>
<ul>
<li><a href="https://github.com/jwasham/computer-science-flash-cards" target="_blank" rel="noopener">抽认卡页面的代码仓库</a></li>
<li><a href="https://github.com/jwasham/computer-science-flash-cards/blob/master/cards-jwasham.db" target="_blank" rel="noopener">我的抽认卡数据库</a>：有一点需要记住的是，我做事有点过头，以至于把卡片都覆盖到所有的东西上。从汇编语言和 Python 的细枝末节，乃至到机器学习和统计都被覆盖到卡片上。而这种做法，对于 Google 的要求来说，却是多余。</li>
</ul>
<p><strong>在抽认卡上做笔记：</strong> 若你第一次发现你知道问题的答案时，先不要急着把其标注成“已懂”。你需要做的，是去查看一下是否有同样的抽认卡，并在你真正懂得如何解决问题之前，多问自己几次。重复地问答可帮助您深刻记住该知识点。</p>
<h3 id="3-回顾，回顾，回顾"><a href="#3-回顾，回顾，回顾" class="headerlink" title="3. 回顾，回顾，回顾"></a>3. 回顾，回顾，回顾</h3><p>我留有一组 ASCII 码表、OSI 堆栈、Big-O 记号及更多的小抄纸，以便在空余的时候可以学习。</p>
<p>每编程半个小时就要休息一下，并去回顾你的抽认卡。</p>
<h3 id="4-专注"><a href="#4-专注" class="headerlink" title="4. 专注"></a>4. 专注</h3><p>在学习的过程中，往往会有许多令人分心的事占据着我们宝贵的时间。因此，专注和集中注意力是非常困难的。</p>
<h2 id="你所看不到的"><a href="#你所看不到的" class="headerlink" title="你所看不到的"></a>你所看不到的</h2><p>由于，这个巨大的列表一开始是作为我个人从 Google 面试指导笔记所形成的一个事件处理列表。因此，有一些我熟悉且普遍的技术在此都未被谈及到：</p>
<ul>
<li>SQL</li>
<li>Javascript</li>
<li>HTML、CSS 和其他前端技术</li>
</ul>
<h2 id="日常计划"><a href="#日常计划" class="headerlink" title="日常计划"></a>日常计划</h2><p>部分问题可能会花费一天的时间去学习，而部分则会花费多天。当然，有些学习并不需要我们懂得如何实现。</p>
<p>因此，每一天我都会在下面所列出的列表中选择一项，并查看相关的视频。然后，使用以下的一种语言去实现：</p>
<pre><code>C —— 使用结构体和函数，该函数会接受一个结构体指针 * 及其他数据作为参数。
C++ —— 不使用内建的数据类型。
C++ —— 使用内建的数据类型，如使用 STL 的 std::list 来作为链表。
Python ——  使用内建的数据类型（为了持续练习 Python），并编写一些测试去保证自己代码的正确性。有时，只需要使用断言函数 assert() 即可。
此外，你也可以使用 Java 或其他语言。以上只是我的个人偏好而已。</code></pre><p>为何要在这些语言上分别实现一次？</p>
<pre><code>因为可以练习，练习，练习，直至我厌倦它，并完美地实现出来。（若有部分边缘条件没想到时，我会用书写的形式记录下来并去记忆）
因为可以在纯原生的条件下工作（不需垃圾回收机制的帮助下，分配/释放内存（除了 Python））
因为可以利用上内建的数据类型，以使得我拥有在现实中使用内建工具的经验（在生产环境中，我不会去实现自己的链表）</code></pre><p>就算我没有时间去每一项都这么做，但我也会尽我所能的。</p>
<p>在这里，你可以查看到我的代码：</p>
<ul>
<li><a href="https://github.com/jwasham/practice-c" target="_blank" rel="noopener">C</a></li>
<li><a href="https://github.com/jwasham/practice-cpp" target="_blank" rel="noopener">C++</a></li>
<li><a href="https://github.com/jwasham/practice-python" target="_blank" rel="noopener">Python</a></li>
</ul>
<p>你不需要记住每一个算法的内部原理。</p>
<p>在一个白板上写代码，而不要直接在计算机上编写。在测试完部分简单的输入后，到计算机上再测试一遍。</p>
<h2 id="必备知识"><a href="#必备知识" class="headerlink" title="必备知识"></a>必备知识</h2><ul>
<li><input disabled="" type="checkbox"> <p><strong>计算机是如何处理一段程序：</strong></p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=42KTvGYQYnA" target="_blank" rel="noopener">CPU 是如何执行代码（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Mv2XQgpbTNE" target="_blank" rel="noopener">机器码指令（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><strong>编译器</strong></p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=IhC7sdYe-Jg" target="_blank" rel="noopener">编译器是如何在 ~1 分钟内工作（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=CSZLNYF4Klo" target="_blank" rel="noopener">Hardvard CS50 —— 编译器（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=twodd1KFfGk" target="_blank" rel="noopener">C++（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=FnGCDLhaxKU" target="_blank" rel="noopener">掌握编译器的优化（C++）（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><strong>浮点数是如何存储的：</strong></p>
<ul>
<li><input disabled="" type="checkbox"> 简单的 8-bit：<a href="https://www.youtube.com/watch?v=ji3SfClm8TU" target="_blank" rel="noopener">浮点数的表达形式　—— 1（视频 —— 在计算上有一个错误 —— 详情请查看视频的介绍）</a></li>
<li><input disabled="" type="checkbox"> 32 bit：<a href="https://www.youtube.com/watch?v=50ZYcZebIec" target="_blank" rel="noopener">IEEE754 32-bit 浮点二进制（视频）</a></li>
</ul>
</li>
</ul>
<h2 id="算法复杂度-Big-O-渐进分析法"><a href="#算法复杂度-Big-O-渐进分析法" class="headerlink" title="算法复杂度 / Big-O / 渐进分析法"></a>算法复杂度 / Big-O / 渐进分析法</h2><ul>
<li><p>并不需要实现</p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=iOq5kSKqeR4" target="_blank" rel="noopener">Harvard CS50 —— 渐进表示（视频）</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=V6mKVRU1evU" target="_blank" rel="noopener">Big O 记号（通用快速教程）（视频）</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=ei-A_wy5Yxw&amp;index=2&amp;list=PL1BaGV1cIH4UhkL8a9bJGG356covJ76qN" target="_blank" rel="noopener">Big O 记号（以及 Omega 和 Theta）——  最佳数学解释（视频）</a></p>
</li>
<li><input disabled="" type="checkbox"> <p>Skiena 算法：</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=gSyDMtdPNpU&amp;index=2&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">视频</a></li>
<li><a href="http://www3.cs.stonybrook.edu/~algorith/video-lectures/2007/lecture2.pdf" target="_blank" rel="noopener">幻灯片</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><a href="http://discrete.gr/complexity/" target="_blank" rel="noopener">对于算法复杂度分析的一次详细介绍</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://class.coursera.org/algorithmicthink1-004/lecture/59" target="_blank" rel="noopener">增长阶数（Orders of Growth）（视频）</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://class.coursera.org/algorithmicthink1-004/lecture/61" target="_blank" rel="noopener">渐进性（Asymptotics）（视频）</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://youtu.be/VIS4YDpuP98" target="_blank" rel="noopener">UC Berkeley Big O（视频）</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://youtu.be/ca3e7UVmeUc" target="_blank" rel="noopener">UC Berkeley Big Omega（视频）</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=B3SpQZaAZP4&amp;index=10&amp;list=PL1BaGV1cIH4UhkL8a9bJGG356covJ76qN" target="_blank" rel="noopener">平摊分析法（Amortized Analysis）（视频）</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://class.coursera.org/algorithmicthink1-004/lecture/63" target="_blank" rel="noopener">举证“Big O”（视频）</a></p>
</li>
<li><input disabled="" type="checkbox"> <p>高级编程（包括递归关系和主定理）：</p>
<ul>
<li><a href="https://www.topcoder.com/community/data-science/data-science-tutorials/computational-complexity-section-1/" target="_blank" rel="noopener">计算性复杂度：第一部</a></li>
<li><a href="https://www.topcoder.com/community/data-science/data-science-tutorials/computational-complexity-section-2/" target="_blank" rel="noopener">计算性复杂度：第二部</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><a href="http://bigocheatsheet.com/" target="_blank" rel="noopener">速查表（Cheat sheet）</a></p>
<p>  如果部分课程过于学术性，你可直接跳到文章底部，去查看离散数学的视频以获取相关背景知识。</p>
</li>
</ul>
<h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><ul>
<li><h3 id="数组（Arrays）"><a href="#数组（Arrays）" class="headerlink" title="数组（Arrays）"></a>数组（Arrays）</h3><ul>
<li>实现一个可自动调整大小的动态数组。</li>
<li><input disabled="" type="checkbox"> 介绍：<ul>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/OsBSF/arrays" target="_blank" rel="noopener">数组（视频）</a></li>
<li><a href="https://archive.org/details/0102WhatYouShouldKnow/02_04-basicArrays.mp4" target="_blank" rel="noopener">数组的基础知识（视频）</a></li>
<li><a href="https://archive.org/details/0102WhatYouShouldKnow/02_05-multidimensionalArrays.mp4" target="_blank" rel="noopener">多维数组（视频）</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/EwbnV/dynamic-arrays" target="_blank" rel="noopener">动态数组（视频）</a></li>
<li><a href="https://archive.org/details/0102WhatYouShouldKnow/02_06-jaggedArrays.mp4" target="_blank" rel="noopener">不规则数组（视频）</a></li>
<li><a href="https://archive.org/details/0102WhatYouShouldKnow/03_01-resizableArrays.mp4" target="_blank" rel="noopener">调整数组的大小（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 实现一个动态数组（可自动调整大小的可变数组）：<ul>
<li><input disabled="" type="checkbox"> 练习使用数组和指针去编码，并且指针是通过计算去跳转而不是使用索引</li>
<li><input disabled="" type="checkbox"> 通过分配内存来新建一个原生数据型数组<ul>
<li>可以使用 int 类型的数组，但不能使用其语法特性</li>
<li>从大小为16或更大的数（使用2的倍数 —— 16、32、64、128）开始编写</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> size() —— 数组元素的个数</li>
<li><input disabled="" type="checkbox"> capacity() —— 可容纳元素的个数</li>
<li><input disabled="" type="checkbox"> is_empty()</li>
<li><input disabled="" type="checkbox"> at(index) —— 返回对应索引的元素，且若索引越界则愤然报错</li>
<li><input disabled="" type="checkbox"> push(item)</li>
<li><input disabled="" type="checkbox"> insert(index, item) —— 在指定索引中插入元素，并把后面的元素依次后移</li>
<li><input disabled="" type="checkbox"> prepend(item) —— 可以使用上面的 insert 函数，传参 index 为 0</li>
<li><input disabled="" type="checkbox"> pop() —— 删除在数组末端的元素，并返回其值</li>
<li><input disabled="" type="checkbox"> delete(index) —— 删除指定索引的元素，并把后面的元素依次前移</li>
<li><input disabled="" type="checkbox"> remove(item) —— 删除指定值的元素，并返回其索引（即使有多个元素）</li>
<li><input disabled="" type="checkbox"> find(item) —— 寻找指定值的元素并返回其中第一个出现的元素其索引，若未找到则返回 -1</li>
<li><input disabled="" type="checkbox"> resize(new_capacity) // 私有函数<ul>
<li>若数组的大小到达其容积，则变大一倍</li>
<li>获取元素后，若数组大小为其容积的1/4，则缩小一半</li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 时间复杂度<ul>
<li>在数组末端增加/删除、定位、更新元素，只允许占 O(1) 的时间复杂度（平摊（amortized）去分配内存以获取更多空间）</li>
<li>在数组任何地方插入/移除元素，只允许 O(n) 的时间复杂度</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 空间复杂度<ul>
<li>因为在内存中分配的空间邻近，所以有助于提高性能</li>
<li>空间需求 = （大于或等于 n 的数组容积）* 元素的大小。即便空间需求为 2n，其空间复杂度仍然是 O(n)</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="链表（Linked-Lists）"><a href="#链表（Linked-Lists）" class="headerlink" title="链表（Linked Lists）"></a>链表（Linked Lists）</h3><ul>
<li><input disabled="" type="checkbox"> 介绍：<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/kHhgK/singly-linked-lists" target="_blank" rel="noopener">单向链表（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=sJtJOtXCW_M&amp;list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd&amp;index=5" target="_blank" rel="noopener">CS 61B —— 链表（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=QN6FPiD0Gzo" target="_blank" rel="noopener">C 代码（视频）</a><ul>
<li>并非看完整个视频，只需要看关于节点结果和内存分配那一部分即可</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 链表 vs 数组：<ul>
<li><a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/rjBs9/core-linked-lists-vs-arrays" target="_blank" rel="noopener">基本链表 Vs 数组（视频）</a></li>
<li><a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/QUaUd/in-the-real-world-lists-vs-arrays" target="_blank" rel="noopener">在现实中，链表 Vs 数组（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=YQs6IC-vgmo" target="_blank" rel="noopener">为什么你需要避免使用链表（视频）</a></li>
<li><input disabled="" type="checkbox"> 的确：你需要关于“指向指针的指针”的相关知识：（因为当你传递一个指针到一个函数时，该函数可能会改变指针所指向的地址）该页只是为了让你了解“指向指针的指针”这一概念。但我并不推荐这种链式遍历的风格。因为，这种风格的代码，其可读性和可维护性太低。<ul>
<li><a href="https://www.eskimo.com/~scs/cclass/int/sx8.html" target="_blank" rel="noopener">指向指针的指针</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 实现（我实现了使用尾指针以及没有使用尾指针这两种情况）：<ul>
<li><input disabled="" type="checkbox"> size() —— 返回链表中数据元素的个数</li>
<li><input disabled="" type="checkbox"> empty() —— 若链表为空则返回一个布尔值 true</li>
<li><input disabled="" type="checkbox"> value_at(index) —— 返回第 n 个元素的值（从0开始计算）</li>
<li><input disabled="" type="checkbox"> push_front(value) —— 添加元素到链表的首部</li>
<li><input disabled="" type="checkbox"> pop_front() —— 删除首部元素并返回其值</li>
<li><input disabled="" type="checkbox"> push_back(value) —— 添加元素到链表的尾部</li>
<li><input disabled="" type="checkbox"> pop_back() —— 删除尾部元素并返回其值</li>
<li><input disabled="" type="checkbox"> front() —— 返回首部元素的值</li>
<li><input disabled="" type="checkbox"> back() —— 返回尾部元素的值</li>
<li><input disabled="" type="checkbox"> insert(index, value) —— 插入值到指定的索引，并把当前索引的元素指向到新的元素</li>
<li><input disabled="" type="checkbox"> erase(index) —— 删除指定索引的节点</li>
<li><input disabled="" type="checkbox"> value_n_from_end(n) —— 返回倒数第 n 个节点的值</li>
<li><input disabled="" type="checkbox"> reverse() —— 逆序链表</li>
<li><input disabled="" type="checkbox"> remove_value(value) —— 删除链表中指定值的第一个元素</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 双向链表<ul>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/jpGKD/doubly-linked-lists" target="_blank" rel="noopener">介绍（视频）</a></li>
<li>并不需要实现</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="堆栈（Stack）"><a href="#堆栈（Stack）" class="headerlink" title="堆栈（Stack）"></a>堆栈（Stack）</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/UdKzQ/stacks" target="_blank" rel="noopener">堆栈（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/0102WhatYouShouldKnow/05_01-usingStacksForLast-inFirst-out.mp4" target="_blank" rel="noopener">使用堆栈 —— 后进先出（视频）</a></li>
<li><input disabled="" type="checkbox"> 可以不实现，因为使用数组来实现并不重要</li>
</ul>
</li>
<li><h3 id="队列（Queue）"><a href="#队列（Queue）" class="headerlink" title="队列（Queue）"></a>队列（Queue）</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/0102WhatYouShouldKnow/05_03-usingQueuesForFirst-inFirst-out.mp4" target="_blank" rel="noopener">使用队列 —— 先进先出（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/EShpq/queue" target="_blank" rel="noopener">队列（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Circular_buffer" target="_blank" rel="noopener">原型队列/先进先出（FIFO）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/0102WhatYouShouldKnow/05_04-priorityQueuesAndDeques.mp4" target="_blank" rel="noopener">优先级队列（视频）</a></li>
<li><input disabled="" type="checkbox"> 使用含有尾部指针的链表来实现:<ul>
<li>enqueue(value) —— 在尾部添加值</li>
<li>dequeue() —— 删除最早添加的元素并返回其值（首部元素）</li>
<li>empty()</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 使用固定大小的数组实现：<ul>
<li>enqueue(value) —— 在可容的情况下添加元素到尾部</li>
<li>dequeue() —— 删除最早添加的元素并返回其值</li>
<li>empty()</li>
<li>full()</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 花销：<ul>
<li>在糟糕的实现情况下，使用链表所实现的队列，其入列和出列的时间复杂度将会是 O(n)。因为，你需要找到下一个元素，以致循环整个队列</li>
<li>enqueue：O(1)（平摊（amortized）、链表和数组 [探测（probing）]）</li>
<li>dequeue：O(1)（链表和数组）</li>
<li>empty：O(1)（链表和数组）</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="哈希表（Hash-table）"><a href="#哈希表（Hash-table）" class="headerlink" title="哈希表（Hash table）"></a>哈希表（Hash table）</h3><ul>
<li><input disabled="" type="checkbox"> <p>视频：</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=0M_kIqhwbFo&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=8" target="_blank" rel="noopener">链式哈希表（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=BRO7mVIFt08&amp;index=9&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">Table Doubling 和 Karp-Rabin（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=rvdJDijO2Ro&amp;index=10&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">Open Addressing 和密码型哈希（Cryptographic Hashing）（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=C4Kc8xzcA68" target="_blank" rel="noopener">PyCon 2010：The Mighty Dictionary（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=z0lJ2k0sl1g&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=11" target="_blank" rel="noopener">（进阶）随机取样（Randomization）：全域哈希（Universal Hashing）&amp; 完美哈希（Perfect Hashing）（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=N0COwN14gt0&amp;list=PL2B4EEwhKD-NbwZ4ezj7gyc_3yNrojKM9&amp;index=4" target="_blank" rel="noopener">（进阶）完美哈希（Perfect hashing）（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>在线课程：</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/0102WhatYouShouldKnow/06_02-understandingHashFunctions.mp4" target="_blank" rel="noopener">哈希函数的掌握（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/0102WhatYouShouldKnow/06_03-usingHashTables.mp4" target="_blank" rel="noopener">使用哈希表（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/0102WhatYouShouldKnow/06_04-supportingHashing.mp4" target="_blank" rel="noopener">哈希表的支持（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/0102WhatYouShouldKnow/06_05-languageSupportForHashTables.mp4" target="_blank" rel="noopener">哈希表的语言支持（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/m7UuP/core-hash-tables" target="_blank" rel="noopener">基本哈希表（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/home/week/3" target="_blank" rel="noopener">数据结构（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/NYZZP/phone-book-problem" target="_blank" rel="noopener">电话薄问题（Phone Book Problem）（视频）</a></li>
<li><input disabled="" type="checkbox"> 分布式哈希表：<ul>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/DvaIb/instant-uploads-and-storage-optimization-in-dropbox" target="_blank" rel="noopener">Dropbox 中的瞬时上传及存储优化（视频）</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/tvH8H/distributed-hash-tables" target="_blank" rel="noopener">分布式哈希表（视频）</a></li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>使用线性探测的数组去实现</p>
<ul>
<li>hash(k, m) —— m 是哈希表的大小</li>
<li>add(key, value) —— 如果 key 已存在则更新值</li>
<li>exists(key)</li>
<li>get(key)</li>
<li>remove(key)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="更多的知识"><a href="#更多的知识" class="headerlink" title="更多的知识"></a>更多的知识</h2><ul>
<li><h3 id="二分查找（Binary-search）"><a href="#二分查找（Binary-search）" class="headerlink" title="二分查找（Binary search）"></a>二分查找（Binary search）</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=D5SrAga1pno" target="_blank" rel="noopener">二分查找（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.khanacademy.org/computing/computer-science/algorithms/binary-search/a/binary-search" target="_blank" rel="noopener">二分查找（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.topcoder.com/community/data-science/data-science-tutorials/binary-search/" target="_blank" rel="noopener">详情</a></li>
<li><input disabled="" type="checkbox"> 实现：<ul>
<li>二分查找（在一个已排序好的整型数组中查找）</li>
<li>迭代式二分查找</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="按位运算（Bitwise-operations）"><a href="#按位运算（Bitwise-operations）" class="headerlink" title="按位运算（Bitwise operations）"></a>按位运算（Bitwise operations）</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://github.com/jwasham/coding-interview-university/blob/master/extras/cheat%20sheets/bits-cheat-cheet.pdf" target="_blank" rel="noopener">Bits 速查表</a><ul>
<li>你需要知道大量2的幂数值（从2^1 到 2^16 及 2^32）</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 好好理解位操作符的含义：&amp;、|、^、~、&gt;&gt;、&lt;&lt;<ul>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Word_(computer_architecture)" target="_blank" rel="noopener">字码（words）</a></li>
<li><input disabled="" type="checkbox"> 好的介绍：<br>  <a href="https://www.youtube.com/watch?v=7jkIUgLC29I" target="_blank" rel="noopener">位操作（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=d0AwjSpNXR0" target="_blank" rel="noopener">C 语言编程教程 2-10：按位运算（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Bit_manipulation" target="_blank" rel="noopener">位操作</a></li>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Bitwise_operation" target="_blank" rel="noopener">按位运算</a></li>
<li><input disabled="" type="checkbox"> <a href="https://graphics.stanford.edu/~seander/bithacks.html" target="_blank" rel="noopener">Bithacks</a></li>
<li><input disabled="" type="checkbox"> <a href="http://bits.stephan-brumme.com/" target="_blank" rel="noopener">位元抚弄者（The Bit Twiddler）</a></li>
<li><input disabled="" type="checkbox"> <a href="http://bits.stephan-brumme.com/interactive.html" target="_blank" rel="noopener">交互式位元抚弄者（The Bit Twiddler Interactive）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 一补数和补码<ul>
<li><a href="https://www.youtube.com/watch?v=lKTsv6iVxV4" target="_blank" rel="noopener">二进制：利 &amp; 弊（为什么我们要使用补码）（视频）</a></li>
<li><a href="https://en.wikipedia.org/wiki/Ones%27_complement" target="_blank" rel="noopener">一补数（1s Complement）</a></li>
<li><a href="https://en.wikipedia.org/wiki/Two%27s_complement" target="_blank" rel="noopener">补码（2s Complement）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 计算置位（Set Bits）<ul>
<li><a href="https://youtu.be/Hzuzo9NJrlc" target="_blank" rel="noopener">计算一个字节中置位（Set Bits）的四种方式（视频）</a></li>
<li><a href="https://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetKernighan" target="_blank" rel="noopener">计算比特位</a></li>
<li><a href="http://stackoverflow.com/questions/109023/how-to-count-the-number-of-set-bits-in-a-32-bit-integer" target="_blank" rel="noopener">如何在一个 32 位的整型中计算置位（Set Bits）的数量</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 四舍五入2的幂数：<ul>
<li><a href="http://bits.stephan-brumme.com/roundUpToNextPowerOfTwo.html" target="_blank" rel="noopener">四舍五入到2的下一幂数</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 交换值：<ul>
<li><a href="http://bits.stephan-brumme.com/swap.html" target="_blank" rel="noopener">交换（Swap）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 绝对值：<ul>
<li><a href="http://bits.stephan-brumme.com/absInteger.html" target="_blank" rel="noopener">绝对整型（Absolute Integer）</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="树（Trees）"><a href="#树（Trees）" class="headerlink" title="树（Trees）"></a>树（Trees）</h2><ul>
<li><h3 id="树-——-笔记-amp-背景"><a href="#树-——-笔记-amp-背景" class="headerlink" title="树 —— 笔记 &amp; 背景"></a>树 —— 笔记 &amp; 背景</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/ovovP/core-trees" target="_blank" rel="noopener">系列：基本树（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/95qda/trees" target="_blank" rel="noopener">系列：树（视频）</a></li>
<li>基本的树形结构</li>
<li>遍历</li>
<li>操作算法</li>
<li>BFS（广度优先检索，breadth-first search）<ul>
<li><a href="https://www.youtube.com/watch?v=s-CYnVz-uh4&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=13" target="_blank" rel="noopener">MIT（视频）</a></li>
<li>层序遍历（使用队列的 BFS 算法）<ul>
<li>时间复杂度： O(n)</li>
<li>空间复杂度：<ul>
<li>最好情况： O(1)</li>
<li>最坏情况：O(n/2)=O(n)</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>DFS（深度优先检索，depth-first search）<ul>
<li><a href="https://www.youtube.com/watch?v=AfSk24UTFS8&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=14" target="_blank" rel="noopener">MIT（视频）</a></li>
<li>笔记：<ul>
<li>时间复杂度：O(n)</li>
<li>空间复杂度：<ul>
<li>最好情况：O(log n) - 树的平均高度</li>
<li>最坏情况：O(n)</li>
</ul>
</li>
</ul>
</li>
<li>中序遍历（DFS：左、节点本身、右）</li>
<li>后序遍历（DFS：左、右、节点本身）</li>
<li>先序遍历（DFS：节点本身、左、右）</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="二叉查找树（Binary-search-trees）：BSTs"><a href="#二叉查找树（Binary-search-trees）：BSTs" class="headerlink" title="二叉查找树（Binary search trees）：BSTs"></a>二叉查找树（Binary search trees）：BSTs</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=x6At0nzX92o&amp;index=1&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6" target="_blank" rel="noopener">二叉查找树概览（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/p82sw/core-introduction-to-binary-search-trees" target="_blank" rel="noopener">系列（视频）</a><ul>
<li>从符号表开始到 BST 程序</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/E7cXP/introduction" target="_blank" rel="noopener">介绍（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=9Jry5-82I68" target="_blank" rel="noopener">MIT（视频）</a></li>
<li>C/C++:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=COZK7NATh4k&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;index=28" target="_blank" rel="noopener">二叉查找树 —— 在 C/C++ 中实现（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=hWokyBoo0aI&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;index=29" target="_blank" rel="noopener">BST 的实现 —— 在堆栈和堆中的内存分配（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Ut90klNN264&amp;index=30&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" target="_blank" rel="noopener">在二叉查找树中找到最小和最大的元素（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=_pnqMz5nrRs&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;index=31" target="_blank" rel="noopener">寻找二叉树的高度（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=9RHO6jU--GU&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;index=32" target="_blank" rel="noopener">二叉树的遍历 —— 广度优先和深度优先策略（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=86g8jAQug04&amp;index=33&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" target="_blank" rel="noopener">二叉树：层序遍历（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=gm8DUJJhmY4&amp;index=34&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" target="_blank" rel="noopener">二叉树的遍历：先序、中序、后序（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=yEwSGhSsT0U&amp;index=35&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" target="_blank" rel="noopener">判断一棵二叉树是否为二叉查找树（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=gcULXE7ViZw&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;index=36" target="_blank" rel="noopener">从二叉查找树中删除一个节点（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=5cPbNCrdotA&amp;index=37&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" target="_blank" rel="noopener">二叉查找树中序遍历的后继者（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 实现：<ul>
<li><input disabled="" type="checkbox"> insert    // 往树上插值</li>
<li><input disabled="" type="checkbox"> get_node_count // 查找树上的节点数</li>
<li><input disabled="" type="checkbox"> print_values // 从小到大打印树中节点的值</li>
<li><input disabled="" type="checkbox"> delete_tree</li>
<li><input disabled="" type="checkbox"> is_in_tree // 如果值存在于树中则返回 true</li>
<li><input disabled="" type="checkbox"> get_height // 返回节点所在的高度（如果只有一个节点，那么高度则为1）</li>
<li><input disabled="" type="checkbox"> get_min   // 返回树上的最小值</li>
<li><input disabled="" type="checkbox"> get_max   // 返回树上的最大值</li>
<li><input disabled="" type="checkbox"> is_binary_search_tree</li>
<li><input disabled="" type="checkbox"> delete_value</li>
<li><input disabled="" type="checkbox"> get_successor // 返回给定值的后继者，若没有则返回-1</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="堆（Heap）-优先级队列（Priority-Queue）-二叉堆（Binary-Heap）"><a href="#堆（Heap）-优先级队列（Priority-Queue）-二叉堆（Binary-Heap）" class="headerlink" title="堆（Heap） / 优先级队列（Priority Queue） / 二叉堆（Binary Heap）"></a>堆（Heap） / 优先级队列（Priority Queue） / 二叉堆（Binary Heap）</h3><ul>
<li>可视化是一棵树，但通常是以线性的形式存储（数组、链表）</li>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Heap_(data_structure)" target="_blank" rel="noopener">堆</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/2OpTs/introduction" target="_blank" rel="noopener">介绍（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/z3l9N/naive-implementations" target="_blank" rel="noopener">无知的实现（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/GRV2q/binary-trees" target="_blank" rel="noopener">二叉树（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/supplement/S5xxz/tree-height-remark" target="_blank" rel="noopener">关于树高的讨论（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/0g1dl/basic-operations" target="_blank" rel="noopener">基本操作（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/gl5Ni/complete-binary-trees" target="_blank" rel="noopener">完全二叉树（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/HxQo9/pseudocode" target="_blank" rel="noopener">伪代码（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/odNJmw5TOEE?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;t=3291" target="_blank" rel="noopener">堆排序 —— 跳到起点（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/hSzMO/heap-sort" target="_blank" rel="noopener">堆排序（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/dwrOS/building-a-heap" target="_blank" rel="noopener">构建一个堆（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=B7hVxCmfPtM&amp;index=4&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">MIT：堆与堆排序（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=yIUFT6AKBGE&amp;index=24&amp;list=PL4BBB74C7D2A1049C" target="_blank" rel="noopener">CS 61B Lecture 24：优先级队列（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=MiyLo8adrWw" target="_blank" rel="noopener">构建线性时间复杂度的堆（大顶堆）</a></li>
<li><input disabled="" type="checkbox"> 实现一个大顶堆：<ul>
<li><input disabled="" type="checkbox"> insert</li>
<li><input disabled="" type="checkbox"> sift_up —— 用于插入元素</li>
<li><input disabled="" type="checkbox"> get_max —— 返回最大值但不移除元素</li>
<li><input disabled="" type="checkbox"> get_size() —— 返回存储的元素数量</li>
<li><input disabled="" type="checkbox"> is_empty() —— 若堆为空则返回 true</li>
<li><input disabled="" type="checkbox"> extract_max —— 返回最大值并移除</li>
<li><input disabled="" type="checkbox"> sift_down —— 用于获取最大值元素</li>
<li><input disabled="" type="checkbox"> remove(i) —— 删除指定索引的元素</li>
<li><input disabled="" type="checkbox"> heapify —— 构建堆，用于堆排序</li>
<li><input disabled="" type="checkbox"> heap_sort() —— 拿到一个未排序的数组，然后使用大顶堆进行就地排序<ul>
<li>注意：若用小顶堆可节省操作，但导致空间复杂度加倍。（无法做到就地）</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="字典树（Tries）"><a href="#字典树（Tries）" class="headerlink" title="字典树（Tries）"></a>字典树（Tries）</h3><ul>
<li>需要注意的是，字典树各式各样。有些有前缀，而有些则没有。有些使用字符串而不使用比特位来追踪路径。</li>
<li>阅读代码，但不实现。</li>
<li><input disabled="" type="checkbox"> <a href="http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Tries" target="_blank" rel="noopener">数据结构笔记及编程技术</a></li>
<li><input disabled="" type="checkbox"> 短课程视频：<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/08Xyf/core-introduction-to-tries" target="_blank" rel="noopener">对字典树的介绍（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/PvlZW/core-performance-of-tries" target="_blank" rel="noopener">字典树的性能（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/DFvd3/core-implementing-a-trie" target="_blank" rel="noopener">实现一棵字典树（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.toptal.com/java/the-trie-a-neglected-data-structure" target="_blank" rel="noopener">字典树：一个被忽略的数据结构</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.topcoder.com/community/data-science/data-science-tutorials/using-tries/" target="_blank" rel="noopener">高级编程 —— 使用字典树</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=TJ8SkcUSdbU" target="_blank" rel="noopener">标准教程（现实中的用例）（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=NinWEPPrkDQ&amp;index=16&amp;list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf" target="_blank" rel="noopener">MIT，高阶数据结构，使用字符串追踪路径（可事半功倍）</a></li>
</ul>
</li>
<li><h3 id="平衡查找树（Balanced-search-trees）"><a href="#平衡查找树（Balanced-search-trees）" class="headerlink" title="平衡查找树（Balanced search trees）"></a>平衡查找树（Balanced search trees）</h3><ul>
<li><p>掌握至少一种平衡查找树（并懂得如何实现）：</p>
</li>
<li><p>“在各种平衡查找树当中，AVL 树和2-3树已经成为了过去，而红黑树（red-black trees）看似变得越来越受人青睐。这种令人特别感兴趣的数据结构，亦称伸展树（splay tree）。它可以自我管理，且会使用轮换来移除任何访问过根节点的 key。” —— Skiena</p>
</li>
<li><p>因此，在各种各样的平衡查找树当中，我选择了伸展树来实现。虽然，通过我的阅读，我发现在 Google 的面试中并不会被要求实现一棵平衡查找树。但是，为了胜人一筹，我们还是应该看看如何去实现。在阅读了大量关于红黑树的代码后，我才发现伸展树的实现确实会使得各方面更为高效。</p>
<ul>
<li>伸展树：插入、查找、删除函数的实现，而如果你最终实现了红黑树，那么请尝试一下：</li>
<li>跳过删除函数，直接实现搜索和插入功能</li>
</ul>
</li>
<li><p>我希望能阅读到更多关于 B 树的资料，因为它也被广泛地应用到大型的数据库当中。</p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://en.wikipedia.org/wiki/Self-balancing_binary_search_tree" target="_blank" rel="noopener">自平衡二叉查找树</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><strong>AVL 树</strong></p>
<ul>
<li>实际中：我能告诉你的是，该种树并无太多的用途，但我能看到有用的地方在哪里：AVL 树是另一种平衡查找树结构。其可支持时间复杂度为 O(log n) 的查询、插入及删除。它比红黑树严格意义上更为平衡，从而导致插入和删除更慢，但遍历却更快。正因如此，才彰显其结构的魅力。只需要构建一次，就可以在不重新构造的情况下读取，适合于实现诸如语言字典（或程序字典，如一个汇编程序或解释程序的操作码）。</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=FNeL18KsWPc&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=6" target="_blank" rel="noopener">MIT AVL 树 / AVL 树的排序（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/Qq5E0/avl-trees" target="_blank" rel="noopener">AVL 树（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/PKEBC/avl-tree-implementation" target="_blank" rel="noopener">AVL 树的实现（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/22BgE/split-and-merge" target="_blank" rel="noopener">分离与合并</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><strong>伸展树</strong></p>
<ul>
<li>实际中：伸展树一般用于缓存、内存分配者、路由器、垃圾回收者、数据压缩、ropes（字符串的一种替代品，用于存储长串的文本字符）、Windows NT（虚拟内存、网络及文件系统）等的实现。</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Najzh1rYQTo&amp;index=23&amp;list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd" target="_blank" rel="noopener">CS 61B：伸展树（Splay trees）（视频）</a></li>
<li><input disabled="" type="checkbox"> MIT 教程：伸展树（Splay trees）：<ul>
<li>该教程会过于学术，但请观看到最后的10分钟以确保掌握。</li>
<li><a href="https://www.youtube.com/watch?v=QnPl_Y6EqMo" target="_blank" rel="noopener">视频</a></li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><strong>2-3查找树</strong></p>
<ul>
<li>实际中：2-3树的元素插入非常快速，但却有着查询慢的代价（因为相比较 AVL 树来说，其高度更高）。</li>
<li>你会很少用到2-3树。这是因为，其实现过程中涉及到不同类型的节点。因此，人们更多地会选择红黑树。</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=C3SsdUqasD4&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&amp;index=2" target="_blank" rel="noopener">2-3树的直感与定义（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=iYvBtGKsqSg&amp;index=3&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6" target="_blank" rel="noopener">2-3树的二元观点</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=TOb1tuEZ2X4&amp;index=5&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">2-3树（学生叙述）（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><strong>2-3-4树 (亦称2-4树)</strong></p>
<ul>
<li>实际中：对于每一棵2-4树，都有着对应的红黑树来存储同样顺序的数据元素。在2-4树上进行插入及删除操作等同于在红黑树上进行颜色翻转及轮换。这使得2-4树成为一种用于掌握红黑树背后逻辑的重要工具。这就是为什么许多算法引导文章都会在介绍红黑树之前，先介绍2-4树，尽管<strong>2-4树在实际中并不经常使用</strong>。</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=zqrqYXkth6Q&amp;index=26&amp;list=PL4BBB74C7D2A1049C" target="_blank" rel="noopener">CS 61B Lecture 26：平衡查找树（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=DQdMYevEyE4&amp;index=4&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6" target="_blank" rel="noopener">自底向上的2-4树（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=2679VQ26Fp4&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&amp;index=5" target="_blank" rel="noopener">自顶向下的2-4树（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><strong>B 树</strong></p>
<ul>
<li>有趣的是：为啥叫 B 仍然是一个神秘。因为 B 可代表波音（Boeing）、平衡（Balanced）或 Bayer（联合创造者）</li>
<li>实际中：B 树会被广泛适用于数据库中，而现代大多数的文件系统都会使用到这种树（或变种)。除了运用在数据库中，B 树也会被用于文件系统以快速访问一个文件的任意块。但存在着一个基本的问题，那就是如何将文件块 i 转换成一个硬盘块（或一个柱面-磁头-扇区）上的地址。</li>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/B-tree" target="_blank" rel="noopener">B 树</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=I22wEC1tTGo&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&amp;index=6" target="_blank" rel="noopener">B 树的介绍（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=s3bCdZGrgpA&amp;index=7&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6" target="_blank" rel="noopener">B 树的定义及其插入操作（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=svfnVhJOfMc&amp;index=8&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6" target="_blank" rel="noopener">B 树的删除操作（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=V3omVLzI0WE&amp;index=7&amp;list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf" target="_blank" rel="noopener">MIT 6.851 —— 内存层次模块（Memory Hierarchy Models）（视频）</a><ul>
<li>覆盖有高速缓存参数无关型（cache-oblivious）B 树和非常有趣的数据结构</li>
<li>头37分钟讲述的很专业，或许可以跳过（B 指块的大小、即缓存行的大小）</li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><strong>红黑树</strong></p>
<ul>
<li>实际中：红黑树提供了在最坏情况下插入操作、删除操作和查找操作的时间保证。这些时间值的保障不仅对时间敏感型应用有用，例如实时应用，还对在其他数据结构中块的构建非常有用，而这些数据结构都提供了最坏情况下的保障；例如，许多用于计算几何学的数据结构都可以基于红黑树，而目前 Linux 系统所采用的完全公平调度器（the Completely Fair Scheduler）也使用到了该种树。在 Java 8中，红黑树也被用于存储哈希列表集合中相同的数据，而不是使用链表及哈希码。</li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/1W3x0f_RmUo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;t=3871" target="_blank" rel="noopener">Aduni —— 算法 —— 课程4（该链接直接跳到开始部分）（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=hm2GHwyKF1o&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=5" target="_blank" rel="noopener">Aduni —— 算法 —— 课程5（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Red%E2%80%93black_tree" target="_blank" rel="noopener">黑树（Black Tree）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.topcoder.com/community/data-science/data-science-tutorials/an-introduction-to-binary-search-and-red-black-trees/" target="_blank" rel="noopener">二分查找及红黑树的介绍</a></li>
</ul>
</li>
</ul>
</li>
<li><h3 id="N-叉树（K-叉树、M-叉树）"><a href="#N-叉树（K-叉树、M-叉树）" class="headerlink" title="N 叉树（K 叉树、M 叉树）"></a>N 叉树（K 叉树、M 叉树）</h3><ul>
<li>注意：N 或 K 指的是分支系数（即树的最大分支数）：<ul>
<li>二叉树是一种分支系数为2的树</li>
<li>2-3树是一种分支系数为3的树</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/K-ary_tree" target="_blank" rel="noopener">K 叉树</a></li>
</ul>
</li>
</ul>
<h2 id="排序（Sorting）"><a href="#排序（Sorting）" class="headerlink" title="排序（Sorting）"></a>排序（Sorting）</h2><ul>
<li><input disabled="" type="checkbox"> <p>笔记:</p>
<ul>
<li>实现各种排序 &amp; 知道每种排序的最坏、最好和平均的复杂度分别是什么场景:<ul>
<li>不要用冒泡排序 - 大多数情况下效率感人 - 时间复杂度 O(n^2), 除非 n &lt;= 16</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 排序算法的稳定性 (“快排是稳定的么?”)<ul>
<li><a href="https://en.wikipedia.org/wiki/Sorting_algorithm#Stability" target="_blank" rel="noopener">排序算法的稳定性</a></li>
<li><a href="http://stackoverflow.com/questions/1517793/stability-in-sorting-algorithms" target="_blank" rel="noopener">排序算法的稳定性</a></li>
<li><a href="http://stackoverflow.com/questions/1517793/stability-in-sorting-algorithms" target="_blank" rel="noopener">排序算法的稳定性</a></li>
<li><a href="http://www.geeksforgeeks.org/stability-in-sorting-algorithms/" target="_blank" rel="noopener">排序算法的稳定性</a></li>
<li><a href="http://homepages.math.uic.edu/~leon/cs-mcs401-s08/handouts/stability.pdf" target="_blank" rel="noopener">排序算法 - 稳定性</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 哪种排序算法可以用链表？哪种用数组？哪种两者都可？<ul>
<li>并不推荐对一个链表排序，但归并排序是可行的.</li>
<li><a href="http://www.geeksforgeeks.org/merge-sort-for-linked-list/" target="_blank" rel="noopener">链表的归并排序</a></li>
</ul>
</li>
</ul>
</li>
<li><p>关于堆排序，请查看前文堆的数据结构部分。堆排序很强大，不过是非稳定排序。</p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=P00xJgWzz2c&amp;index=1&amp;list=PL89B61F78B552C1AB" target="_blank" rel="noopener">冒泡排序 (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=ni_zk257Nqo&amp;index=7&amp;list=PL89B61F78B552C1AB" target="_blank" rel="noopener">冒泡排序分析 (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=Kg4bqzAqRBM&amp;index=3&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">插入排序 &amp; 归并排序 (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=c4BRHC7kTaQ&amp;index=2&amp;list=PL89B61F78B552C1AB" target="_blank" rel="noopener">插入排序 (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=GCae1WNvnZM&amp;index=3&amp;list=PL89B61F78B552C1AB" target="_blank" rel="noopener">归并排序 (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=y_G9BkAm6B8&amp;index=4&amp;list=PL89B61F78B552C1AB" target="_blank" rel="noopener">快排 (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=6nDMgr0-Yyo&amp;index=8&amp;list=PL89B61F78B552C1AB" target="_blank" rel="noopener">选择排序 (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p>斯坦福大学关于排序算法的视频:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ENp00xylP7c&amp;index=15&amp;list=PLFE6E58F856038C69" target="_blank" rel="noopener">课程 15 | 编程抽象 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=y4M9IVgrVKo&amp;index=16&amp;list=PLFE6E58F856038C69" target="_blank" rel="noopener">课程 16 | 编程抽象 (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>Shai Simonson 视频, <a href="http://www.aduni.org/" target="_blank" rel="noopener">Aduni.org</a>:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=odNJmw5TOEE&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=2" target="_blank" rel="noopener">算法 - 排序 - 第二讲 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=hj8YKFTFKEE&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=3" target="_blank" rel="noopener">算法 - 排序2 - 第三讲 (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>Steven Skiena 关于排序的视频:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/ute-pmMkyuk?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;t=1600" target="_blank" rel="noopener">课程从 26:46 开始 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=yLvp-pB8mak&amp;index=8&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">课程从 27:40 开始 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=q7K9otnzlfE&amp;index=9&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">课程从 35:00 开始 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=TvqIGu9Iupw&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;index=10" target="_blank" rel="noopener">课程从 23:50 开始 (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>加州大学伯克利分校（UC Berkeley） 大学课程:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=EiUvYS2DT6I&amp;list=PL4BBB74C7D2A1049C&amp;index=29" target="_blank" rel="noopener">CS 61B 课程 29: 排序 I (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=2hTY3t80Qsk&amp;list=PL4BBB74C7D2A1049C&amp;index=30" target="_blank" rel="noopener">CS 61B 课程 30: 排序 II (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Y6LOLpxg6Dc&amp;index=32&amp;list=PL4BBB74C7D2A1049C" target="_blank" rel="noopener">CS 61B 课程 32: 排序 III (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=qNMQ4ly43p4&amp;index=33&amp;list=PL4BBB74C7D2A1049C" target="_blank" rel="noopener">CS 61B 课程 33: 排序 V (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <ul>
<li>归并排序:<ul>
<li><input disabled="" type="checkbox"> <a href="http://www.cs.yale.edu/homes/aspnes/classes/223/examples/sorting/mergesort.c" target="_blank" rel="noopener">使用外部数组</a></li>
<li><input disabled="" type="checkbox"> <a href="https://github.com/jwasham/practice-cpp/blob/master/merge_sort/merge_sort.cc" target="_blank" rel="noopener">对原数组直接排序</a></li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <ul>
<li>快速排序:<ul>
<li><input disabled="" type="checkbox"> <a href="http://www.cs.yale.edu/homes/aspnes/classes/223/examples/randomization/quick.c" target="_blank" rel="noopener">实现</a></li>
<li><input disabled="" type="checkbox"> <a href="https://github.com/jwasham/practice-c/blob/master/quick_sort/quick_sort.c" target="_blank" rel="noopener">实现</a></li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>实现:</p>
<ul>
<li><input disabled="" type="checkbox"> 归并：平均和最差情况的时间复杂度为 O(n log n)。</li>
<li><input disabled="" type="checkbox"> 快排：平均时间复杂度为 O(n log n)。</li>
<li>选择排序和插入排序的最坏、平均时间复杂度都是 O(n^2)。</li>
<li>关于堆排序，请查看前文堆的数据结构部分。</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>有兴趣的话，还有一些补充 - 但并不是必须的:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#radixSort" target="_blank" rel="noopener">基数排序</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=xhr26ia4k38" target="_blank" rel="noopener">基数排序 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Nz1KZXbghj8&amp;index=7&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">基数排序, 计数排序 (线性时间内) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=cNB2lADK3_s&amp;index=8&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">随机算法: 矩阵相乘, 快排, Freivalds’ 算法 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=pOKy3RZbSws&amp;list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf&amp;index=14" target="_blank" rel="noopener">线性时间内的排序 (video)</a></li>
</ul>
</li>
</ul>
<h2 id="图（Graphs）"><a href="#图（Graphs）" class="headerlink" title="图（Graphs）"></a>图（Graphs）</h2><p>图论能解决计算机科学里的很多问题，所以这一节会比较长，像树和排序的部分一样。</p>
<ul>
<li><p>Yegge 的笔记:</p>
<ul>
<li>有 3 种基本方式在内存里表示一个图:<ul>
<li>对象和指针</li>
<li>矩阵</li>
<li>邻接表</li>
</ul>
</li>
<li>熟悉以上每一种图的表示法，并了解各自的优缺点</li>
<li>宽度优先搜索和深度优先搜索 - 知道它们的计算复杂度和设计上的权衡以及如何用代码实现它们</li>
<li>遇到一个问题时，首先尝试基于图的解决方案，如果没有再去尝试其他的。</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>Skiena 教授的课程 - 很不错的介绍:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=OiXxhDrFruw&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;index=11" target="_blank" rel="noopener">CSE373 2012 - 课程 11 - 图的数据结构 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=g5vF8jscteo&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;index=12" target="_blank" rel="noopener">CSE373 2012 - 课程 12 - 广度优先搜索 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=S23W6eTcqdY&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;index=13" target="_blank" rel="noopener">CSE373 2012 - 课程 13 - 图的算法 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=WitPBKGV0HY&amp;index=14&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">CSE373 2012 - 课程 14 - 图的算法 (1) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ia1L30l7OIg&amp;index=15&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">CSE373 2012 - 课程 15 - 图的算法 (2) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=jgDOQq6iWy8&amp;index=16&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">CSE373 2012 - 课程 16 - 图的算法 (3) (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>图 (复习和其他):</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Aa2sqUhIn-E&amp;index=15&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">6.006 单源最短路径问题 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=2E7MmKv0Y24&amp;index=16&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">6.006 Dijkstra 算法 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ozsuci5pIso&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=17" target="_blank" rel="noopener">6.006 Bellman-Ford 算法(video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=CHvQ3q_gJ7E&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=18" target="_blank" rel="noopener">6.006 Dijkstra 效率优化 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=i_AQT_XfvD8&amp;index=6&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm" target="_blank" rel="noopener">Aduni: 图的算法 I - 拓扑排序, 最小生成树, Prim 算法 -  第六课 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ufj5_bppBsA&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=7" target="_blank" rel="noopener">Aduni: 图的算法 II - 深度优先搜索, 广度优先搜索, Kruskal 算法, 并查集数据结构 - 第七课 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=DiedsPsMKXc&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=8" target="_blank" rel="noopener">Aduni: 图的算法 III: 最短路径 - 第八课 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=XIAQRlNkJAw&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=9" target="_blank" rel="noopener">Aduni: 图的算法. IV: 几何算法介绍 - 第九课 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/dgjX4HdMI-Q?list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd&amp;t=3489" target="_blank" rel="noopener">CS 61B 2014 (从 58:09 开始) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=aJjlQCFwylA&amp;list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd&amp;index=19" target="_blank" rel="noopener">CS 61B 2014: 加权图 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=tKwnms5iRBU&amp;index=16&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">贪心算法: 最小生成树 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=RpgcYiky7uw" target="_blank" rel="noopener">图的算法之强连通分量 Kosaraju 算法 (video)</a></li>
</ul>
</li>
<li><p>完整的 Coursera 课程:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-on-graphs/home/welcome" target="_blank" rel="noopener">图的算法 (video)</a></li>
</ul>
</li>
<li><p>Yegge: 如果有机会，可以试试研究更酷炫的算法:</p>
<ul>
<li><input disabled="" type="checkbox"> Dijkstra 算法 - 上文 - 6.006</li>
<li><input disabled="" type="checkbox"> A* 算法<ul>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/A*_search_algorithm" target="_blank" rel="noopener">A* 算法</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=KNXfSOx4eEE" target="_blank" rel="noopener">A* 寻路教程 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=-L-WgKMFuhE" target="_blank" rel="noopener">A* 寻路 (E01: 算法解释) (video)</a></li>
</ul>
</li>
</ul>
</li>
<li><p>我会实现:</p>
<ul>
<li><input disabled="" type="checkbox"> DFS 邻接表 (递归)</li>
<li><input disabled="" type="checkbox"> DFS 邻接表 (栈迭代)</li>
<li><input disabled="" type="checkbox"> DFS 邻接矩阵 (递归)</li>
<li><input disabled="" type="checkbox"> DFS 邻接矩阵 (栈迭代)</li>
<li><input disabled="" type="checkbox"> BFS 邻接表</li>
<li><input disabled="" type="checkbox"> BFS 邻接矩阵</li>
<li><input disabled="" type="checkbox"> 单源最短路径问题 (Dijkstra)</li>
<li><input disabled="" type="checkbox"> 最小生成树</li>
<li>基于 DFS 的算法 (根据上文 Aduni 的视频):<ul>
<li><input disabled="" type="checkbox"> 检查环 (我们会先检查是否有环存在以便做拓扑排序)</li>
<li><input disabled="" type="checkbox"> 拓扑排序</li>
<li><input disabled="" type="checkbox"> 计算图中的连通分支</li>
<li><input disabled="" type="checkbox"> 列出强连通分量</li>
<li><input disabled="" type="checkbox"> 检查双向图</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>可以从 Skiena 的书（参考下面的书推荐小节）和面试书籍中学习更多关于图的实践。</p>
<h2 id="更多知识"><a href="#更多知识" class="headerlink" title="更多知识"></a>更多知识</h2><ul>
<li><h3 id="递归（Recursion）"><a href="#递归（Recursion）" class="headerlink" title="递归（Recursion）"></a>递归（Recursion）</h3><ul>
<li><input disabled="" type="checkbox"> Stanford 大学关于递归 &amp; 回溯的课程:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=gl3emqCuueQ&amp;list=PLFE6E58F856038C69&amp;index=8" target="_blank" rel="noopener">课程 8 | 抽象编程 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=uFJhEPrbycQ&amp;list=PLFE6E58F856038C69&amp;index=9" target="_blank" rel="noopener">课程 9 | 抽象编程 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=NdF1QDTRkck&amp;index=10&amp;list=PLFE6E58F856038C69" target="_blank" rel="noopener">课程 10 | 抽象编程 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=p-gpaIGRCQI&amp;list=PLFE6E58F856038C69&amp;index=11" target="_blank" rel="noopener">课程 11 | 抽象编程 (video)</a></li>
</ul>
</li>
<li>什么时候适合使用</li>
<li>尾递归会更好么?<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.quora.com/What-is-tail-recursion-Why-is-it-so-bad" target="_blank" rel="noopener">什么是尾递归以及为什么它如此糟糕?</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=L1jjXGfxozc" target="_blank" rel="noopener">尾递归 (video)</a></li>
</ul>
</li>
</ul>
</li>
<li><h3 id="动态规划（Dynamic-Programming）"><a href="#动态规划（Dynamic-Programming）" class="headerlink" title="动态规划（Dynamic Programming）"></a>动态规划（Dynamic Programming）</h3><ul>
<li><p><strong>注意</strong> ：动态规划是门极为重要的技术，尽管其并未被 Google 提供的准备手册提及，但你可能会对寻求最佳解的方式有点疑问，所以我将其列入这份表单。</p>
</li>
<li><p>这一部分会有点困难，每个可以用动态规划解决的问题都必须先定义出递推关系，要推导出来可能会有点棘手。</p>
</li>
<li><p>我建议先阅读和学习足够多的动态规划的例子，以便对解决 DP 问题的一般模式有个扎实的理解。</p>
</li>
<li><input disabled="" type="checkbox"> <p>视频:</p>
<ul>
<li>Skiena 的视频可能会有点难跟上，有时候他用白板写的字会比较小，难看清楚。</li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/Qc2ieXRgR0k?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;t=1718" target="_blank" rel="noopener">Skiena: CSE373 2012 - 课程 19 - 动态规划介绍 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/IsmMhMdyeGY?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;t=2749" target="_blank" rel="noopener">Skiena: CSE373 2012 - 课程 20 - 编辑距离 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/o0V9eYF4UI8?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;t=406" target="_blank" rel="noopener">Skiena: CSE373 2012 - 课程 21 - 动态规划举例 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=dRbMC1Ltl3A&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;index=22" target="_blank" rel="noopener">Skiena: CSE373 2012 - 课程 22 - 动态规划应用 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/J5aJEcOr6Eo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;t=3558" target="_blank" rel="noopener">Simonson: 动态规划 0 (starts at 59:18) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=0EzHjQ_SOeU&amp;index=11&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm" target="_blank" rel="noopener">Simonson: 动态规划 I - 课程 11 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=v1qiRwuJU7g&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=12" target="_blank" rel="noopener">Simonson: 动态规划 II - 课程 12 (video)</a></li>
<li><input disabled="" type="checkbox"> 单独的 DP 问题 (每一个视频都很短):<br>  <a href="https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr" target="_blank" rel="noopener">动态规划 (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>Yale 课程笔记:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#dynamicProgramming" target="_blank" rel="noopener">动态规划</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>Coursera 课程:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithmic-thinking-2/lecture/80RrW/the-rna-secondary-structure-problem" target="_blank" rel="noopener">RNA 二级结构问题 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithmic-thinking-2/lecture/PSonq/a-dynamic-programming-algorithm" target="_blank" rel="noopener">动态规划算法 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithmic-thinking-2/lecture/oUEK2/illustrating-the-dp-algorithm" target="_blank" rel="noopener">DP 算法描述 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithmic-thinking-2/lecture/nfK2r/running-time-of-the-dp-algorithm" target="_blank" rel="noopener">DP 算法的运行时间 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithmic-thinking-2/lecture/M999a/dp-vs-recursive-implementation" target="_blank" rel="noopener">DP vs 递归实现 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithmic-thinking-2/lecture/UZ7o6/global-pairwise-sequence-alignment" target="_blank" rel="noopener">全局成对序列排列 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithmic-thinking-2/lecture/WnNau/local-pairwise-sequence-alignment" target="_blank" rel="noopener">本地成对序列排列 (video)</a></li>
</ul>
</li>
</ul>
</li>
<li><h3 id="组合（Combinatorics）-n-中选-k-个-amp-概率（Probability）"><a href="#组合（Combinatorics）-n-中选-k-个-amp-概率（Probability）" class="headerlink" title="组合（Combinatorics） (n 中选 k 个) &amp; 概率（Probability）"></a>组合（Combinatorics） (n 中选 k 个) &amp; 概率（Probability）</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=8RRo6Ti9d0U" target="_blank" rel="noopener">数据技巧: 如何找出阶乘、排列和组合(选择) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=sZkAAk9Wwa4" target="_blank" rel="noopener">来点学校的东西: 概率 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=dNaJg-mLobQ" target="_blank" rel="noopener">来点学校的东西: 概率和马尔可夫链 (video)</a></li>
<li><input disabled="" type="checkbox"> 可汗学院:<ul>
<li>课程设置:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.khanacademy.org/math/probability/probability-and-combinatorics-topic" target="_blank" rel="noopener">概率理论基础</a></li>
</ul>
</li>
<li>视频 - 41 (每一个都短小精悍):<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=uzkc-qNVoOk&amp;list=PLC58778F28211FA19" target="_blank" rel="noopener">概率解释 (video)</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="NP-NP-完全和近似算法"><a href="#NP-NP-完全和近似算法" class="headerlink" title="NP, NP-完全和近似算法"></a>NP, NP-完全和近似算法</h3><ul>
<li>知道最经典的一些 NP 完全问题，比如旅行商问题和背包问题,<br>  而且能在面试官试图忽悠你的时候识别出他们。</li>
<li>知道 NP 完全是什么意思.</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=moPtwq_cVH8&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=23" target="_blank" rel="noopener">计算复杂度 (video)</a></li>
<li><input disabled="" type="checkbox"> Simonson:<ul>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/qcGnJ47Smlo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;t=2939" target="_blank" rel="noopener">贪心算法. II &amp; 介绍 NP-完全性 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=e0tGC6ZQdQE&amp;index=16&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm" target="_blank" rel="noopener">NP-完全性 II &amp; 归约 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=fCX1BGT3wjE&amp;index=17&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm" target="_blank" rel="noopener">NP-完全性 III (Video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=NKLDp3Rch3M&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=18" target="_blank" rel="noopener">NP-完全性 IV (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Skiena:<ul>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/KiK5TVgXbFg?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;t=1508" target="_blank" rel="noopener">CSE373 2012 - 课程 23 - 介绍 NP-完全性 IV (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=27Al52X3hd4&amp;index=24&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">CSE373 2012 - 课程 24 - NP-完全性证明 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=xCPH4gwIIXM&amp;index=25&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">CSE373 2012 - 课程 25 - NP-完全性挑战 (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=eHZifpgyH_4&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=22" target="_blank" rel="noopener">复杂度: P, NP, NP-完全性, 规约 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=MEz1J9wY2iM&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=24" target="_blank" rel="noopener">复杂度: 近视算法 Algorithms (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=4q-jmGrmxKs&amp;index=25&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">复杂度: 固定参数算法 (video)</a></li>
<li>Peter Norvik 讨论旅行商问题的近似最优解:<ul>
<li><a href="http://nbviewer.jupyter.org/url/norvig.com/ipython/TSP.ipynb" target="_blank" rel="noopener">Jupyter 笔记本</a></li>
</ul>
</li>
<li>《算法导论》的第 1048 - 1140 页。</li>
</ul>
</li>
<li><h3 id="缓存（Cache）"><a href="#缓存（Cache）" class="headerlink" title="缓存（Cache）"></a>缓存（Cache）</h3><ul>
<li><input disabled="" type="checkbox"> LRU 缓存:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=R5ON3iwx78M" target="_blank" rel="noopener">LRU 的魔力 (100 Days of Google Dev) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=bq6N7Ym81iI" target="_blank" rel="noopener">实现 LRU (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=8-FZRAjR7qU" target="_blank" rel="noopener">LeetCode - 146 LRU Cache (C++) (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> CPU 缓存:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=vjYF_fAZI5E&amp;list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-&amp;index=24" target="_blank" rel="noopener">MIT 6.004 L15: 存储体系 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ajgC3-pyGlk&amp;index=25&amp;list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-" target="_blank" rel="noopener">MIT 6.004 L16: 缓存的问题 (video)</a></li>
</ul>
</li>
</ul>
</li>
<li><h3 id="进程（Processe）和线程（Thread）"><a href="#进程（Processe）和线程（Thread）" class="headerlink" title="进程（Processe）和线程（Thread）"></a>进程（Processe）和线程（Thread）</h3><ul>
<li><input disabled="" type="checkbox"> 计算机科学 162 - 操作系统 (25 个视频):<ul>
<li>视频 1-11 是关于进程和线程</li>
<li><a href="https://www.youtube.com/playlist?list=PL-XXv-cvA_iBDyz-ba4yDskqMDY6A1w_c" target="_blank" rel="noopener">操作系统和系统编程 (video)</a></li>
</ul>
</li>
<li><a href="https://www.quora.com/What-is-the-difference-between-a-process-and-a-thread" target="_blank" rel="noopener">进程和线程的区别是什么?</a></li>
<li>涵盖了:<ul>
<li>进程、线程、协程<ul>
<li>进程和线程的区别</li>
<li>进程</li>
<li>线程</li>
<li>锁</li>
<li>互斥</li>
<li>信号量</li>
<li>监控</li>
<li>他们是如何工作的</li>
<li>死锁</li>
<li>活锁</li>
</ul>
</li>
<li>CPU 活动, 中断, 上下文切换</li>
<li>现代多核处理器的并发式结构</li>
<li>进程资源需要（内存：代码、静态存储器、栈、堆、文件描述符、I/O）</li>
<li>线程资源需要（在同一个进程内和其他线程共享以上的资源，但是每个线程都有独立的程序计数器、栈计数器、寄存器和栈）</li>
<li>Fork 操作是真正的写时复制（只读），直到新的进程写到内存中，才会生成一份新的拷贝。</li>
<li>上下文切换<ul>
<li>操作系统和底层硬件是如何初始化上下文切换的。</li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/playlist?list=PL5jc9xFGsL8E12so1wlMS0r0hTQoJL74M" target="_blank" rel="noopener">C++ 的线程 (系列 - 10 个视频)</a></li>
<li><input disabled="" type="checkbox"> Python 的协程 (视频):<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/playlist?list=PL1H1sBF1VAKVMONJWJkmUh6_p8g4F2oy1" target="_blank" rel="noopener">线程系列</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Bs7vPNbB9JM" target="_blank" rel="noopener">Python 线程</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Obt-vMVdM8s" target="_blank" rel="noopener">理解 Python 的 GIL (2010)</a><ul>
<li><a href="http://www.dabeaz.com/GIL" target="_blank" rel="noopener">参考</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=MCs5OvhV9S4" target="_blank" rel="noopener">David Beazley - Python 协程 - PyCon 2015</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ZzfHjytDceU" target="_blank" rel="noopener">Keynote David Beazley - 兴趣主题 (Python 异步 I/O)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=0zaPs8OtyKY" target="_blank" rel="noopener">Python 中的互斥</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<pre><code>系统设计以及可伸缩性，要把软硬件的伸缩性设计的足够好有很多的东西要考虑，所以这是个包含非常多内容和资源的大主题。需要花费相当多的时间在这个主题上。</code></pre><ul>
<li><h3 id="系统设计、可伸缩性、数据处理"><a href="#系统设计、可伸缩性、数据处理" class="headerlink" title="系统设计、可伸缩性、数据处理"></a>系统设计、可伸缩性、数据处理</h3><ul>
<li>Yegge 的注意事项:<ul>
<li>伸缩性<ul>
<li>把大数据集提取为单一值</li>
<li>大数据集转换</li>
<li>处理大量的数据集</li>
</ul>
</li>
<li>系统<ul>
<li>特征集</li>
<li>接口</li>
<li>类层次结构</li>
<li>在特定的约束下设计系统</li>
<li>轻量和健壮性</li>
<li>权衡和折衷</li>
<li>性能分析和优化</li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <strong>从这里开始</strong>: <a href="http://www.hiredintech.com/system-design/" target="_blank" rel="noopener">HiredInTech：系统设计</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.quora.com/How-do-I-prepare-to-answer-design-questions-in-a-technical-interview?redirected_qid=1500023" target="_blank" rel="noopener">该如何为技术面试里设计方面的问题做准备?</a></li>
<li><input disabled="" type="checkbox"> <a href="http://blog.gainlo.co/index.php/2015/10/22/8-things-you-need-to-know-before-system-design-interviews/" target="_blank" rel="noopener">在系统设计面试前必须知道的 8 件事</a></li>
<li><input disabled="" type="checkbox"> <a href="http://www.hiredintech.com/algorithm-design/" target="_blank" rel="noopener">算法设计</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=UrYLYV7WSHM" target="_blank" rel="noopener">数据库范式 - 1NF, 2NF, 3NF and 4NF (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://github.com/checkcheckzz/system-design-interview" target="_blank" rel="noopener">系统设计面试</a> - 这一部分有很多的资源，浏览一下我放在下面的文章和例子。</li>
<li><input disabled="" type="checkbox"> <a href="http://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/" target="_blank" rel="noopener">如何在系统设计面试中脱颖而出</a></li>
<li><input disabled="" type="checkbox"> <a href="http://everythingisdata.wordpress.com/2009/10/17/numbers-everyone-should-know/" target="_blank" rel="noopener">每个人都该知道的一些数字</a></li>
<li><input disabled="" type="checkbox"> <a href="http://blog.tsunanet.net/2010/11/how-long-does-it-take-to-make-context.html" target="_blank" rel="noopener">上下文切换操作会耗费多少时间?</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=srOgpXECblk" target="_blank" rel="noopener">跨数据中心的事务 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="http://ksat.me/a-plain-english-introduction-to-cap-theorem/" target="_blank" rel="noopener">简明 CAP 理论介绍</a></li>
<li><input disabled="" type="checkbox"> Paxos 一致性算法:<ul>
<li><a href="https://www.youtube.com/watch?v=s8JqcZtvnsM" target="_blank" rel="noopener">时间很短</a></li>
<li><a href="https://www.youtube.com/watch?v=JEpsBg0AO6o" target="_blank" rel="noopener">用例 和 multi-paxos</a></li>
<li><a href="http://research.microsoft.com/en-us/um/people/lamport/pubs/paxos-simple.pdf" target="_blank" rel="noopener">论文</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://www.tom-e-white.com/2007/11/consistent-hashing.html" target="_blank" rel="noopener">一致性哈希</a></li>
<li><input disabled="" type="checkbox"> <a href="http://horicky.blogspot.com/2009/11/nosql-patterns.html" target="_blank" rel="noopener">NoSQL 模式</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=OkC7HKtiZC0&amp;list=PLGLfVvz_LVvQ5G-LdJ8RLqe-ndo7QITYc" target="_blank" rel="noopener">OOSE: UML 2.0 系列 (video)</a></li>
<li><input disabled="" type="checkbox"> OOSE: 使用 UML 和 Java 开发软件 (21 videos):<ul>
<li>如果你对 OO 都深刻的理解和实践，可以跳过这部分。</li>
<li><a href="https://www.youtube.com/playlist?list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO" target="_blank" rel="noopener">OOSE: 使用 UML 和 Java 开发软件</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 面向对象编程的 SOLID 原则:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=TMuno5RZNeE" target="_blank" rel="noopener">Bob Martin 面向对象的 SOLID 原则和敏捷设计 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/playlist?list=PL8m4NUhTQU48oiGCSgCP1FiJEcg_xJzyQ" target="_blank" rel="noopener">C# SOLID 设计模式 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/playlist?list=PL4CE9F710017EA77A" target="_blank" rel="noopener">SOLID 原则 (video)</a></li>
<li><input disabled="" type="checkbox"> S - <a href="http://www.oodesign.com/single-responsibility-principle.html" target="_blank" rel="noopener">单一职责原则</a> | <a href="http://www.javacodegeeks.com/2011/11/solid-single-responsibility-principle.html" target="_blank" rel="noopener">每个对象的单一职责</a><ul>
<li><a href="https://docs.google.com/open?id=0ByOwmqah_nuGNHEtcU5OekdDMkk" target="_blank" rel="noopener">更多</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> O - <a href="http://www.oodesign.com/open-close-principle.html" target="_blank" rel="noopener">开闭原则</a>  | <a href="https://en.wikipedia.org/wiki/Open/closed_principle" target="_blank" rel="noopener">生产环境里的对象应该为扩展做准备而不是为更改</a><ul>
<li><a href="http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgN2M5MTkwM2EtNWFkZC00ZTI3LWFjZTUtNTFhZGZiYmUzODc1&amp;hl=en" target="_blank" rel="noopener">更多</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> L - <a href="http://www.oodesign.com/liskov-s-substitution-principle.html" target="_blank" rel="noopener">里氏代换原则</a> | <a href="http://stackoverflow.com/questions/56860/what-is-the-liskov-substitution-principle" target="_blank" rel="noopener">基类和继承类遵循 ‘IS A’ 原则</a><ul>
<li><a href="http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgNzAzZjA5ZmItNjU3NS00MzQ5LTkwYjMtMDJhNDU5ZTM0MTlh&amp;hl=en" target="_blank" rel="noopener">更多</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> I - <a href="http://www.oodesign.com/interface-segregation-principle.html" target="_blank" rel="noopener">接口隔离原则</a> | 客户端被迫实现用不到的接口<ul>
<li><a href="https://www.youtube.com/watch?v=3CtAfl7aXAQ" target="_blank" rel="noopener">5 分钟讲解接口隔离原则 (video)</a></li>
<li><a href="http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOTViYjJhYzMtMzYxMC00MzFjLWJjMzYtOGJiMDc5N2JkYmJi&amp;hl=en" target="_blank" rel="noopener">更多</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> D -<a href="http://www.oodesign.com/dependency-inversion-principle.html" target="_blank" rel="noopener">依赖反转原则</a> | 减少对象里的依赖。<ul>
<li><a href="http://stackoverflow.com/questions/62539/what-is-the-dependency-inversion-principle-and-why-is-it-important" target="_blank" rel="noopener">什么是依赖倒置以及它为什么重要</a></li>
<li><a href="http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgMjdlMWIzNGUtZTQ0NC00ZjQ5LTkwYzQtZjRhMDRlNTQ3ZGMz&amp;hl=en" target="_blank" rel="noopener">更多</a></li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 可伸缩性:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=-W9F__D3oY4" target="_blank" rel="noopener">很棒的概述 (video)</a></li>
<li><input disabled="" type="checkbox"> 简短系列:<ul>
<li><a href="http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones" target="_blank" rel="noopener">克隆</a></li>
<li><a href="http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database" target="_blank" rel="noopener">数据库</a></li>
<li><a href="http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache" target="_blank" rel="noopener">缓存</a></li>
<li><a href="http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism" target="_blank" rel="noopener">异步</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://www.aosabook.org/en/distsys.html" target="_blank" rel="noopener">可伸缩的 Web 架构和分布式系统</a></li>
<li><input disabled="" type="checkbox"> <a href="https://pages.cs.wisc.edu/~zuyu/files/fallacies.pdf" target="_blank" rel="noopener">错误的分布式系统解释</a></li>
<li><input disabled="" type="checkbox"> <a href="http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html" target="_blank" rel="noopener">实用编程技术</a><ul>
<li><a href="http://horicky.blogspot.com/2010/07/google-pregel-graph-processing.html" target="_blank" rel="noopener">extra: Google Pregel 图形处理</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=modXC5IWTJI" target="_blank" rel="noopener">Jeff Dean - 在 Goolge 构建软件系统 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="http://lethain.com/introduction-to-architecting-systems-for-scale/" target="_blank" rel="noopener">可伸缩系统架构设计介绍</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=9nWyWwY2Onc" target="_blank" rel="noopener">使用 App Engine 和云存储扩展面向全球用户的手机游戏架构实践(video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=H4vMcD7zKM0" target="_blank" rel="noopener">How Google Does Planet-Scale Engineering for Planet-Scale Infra (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.topcoder.com/community/data-science/data-science-tutorials/the-importance-of-algorithms/" target="_blank" rel="noopener">算法的重要性</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html" target="_blank" rel="noopener">分片</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.infoq.com/presentations/Scale-at-Facebook" target="_blank" rel="noopener">Facebook 系统规模扩展实践 (2009)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=oodS71YtkGU" target="_blank" rel="noopener">Facebook 系统规模扩展实践 (2012), “为 10 亿用户构建” (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=p0jGmgIrf_M&amp;list=PLRXxvay_m8gqVlExPC5DG3TGWJTaBgqSA&amp;index=4" target="_blank" rel="noopener">Long Game 工程实践 - Astrid Atkinson Keynote(video)</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2012/3/26/7-years-of-youtube-scalability-lessons-in-30-minutes.html" target="_blank" rel="noopener">30 分钟看完 YouTuBe 7 年系统扩展经验</a><ul>
<li><a href="https://www.youtube.com/watch?v=G-lGCC4KKok" target="_blank" rel="noopener">video</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/8/15/how-paypal-scaled-to-billions-of-transactions-daily-using-ju.html" target="_blank" rel="noopener">PayPal 如何用 8 台虚拟机扛住 10 亿日交易量系统</a></li>
<li><input disabled="" type="checkbox"> <a href="https://blog.clevertap.com/how-to-remove-duplicates-in-large-datasets/" target="_blank" rel="noopener">如何对大数据集去重</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=3vV4YiqKm1o" target="_blank" rel="noopener">Etsy 的扩展和工程文化探究 Jon Cowie (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="http://thenewstack.io/led-amazon-microservices-architecture/" target="_blank" rel="noopener">是什么造就了 Amazon 自己的微服务架构</a></li>
<li><input disabled="" type="checkbox"> <a href="https://eng.uber.com/trip-data-squeeze/" target="_blank" rel="noopener">压缩还是不压缩，是 Uber 面临的问题</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/3/3/asyncio-tarantool-queue-get-in-the-queue.html" target="_blank" rel="noopener">异步 I/O Tarantool 队列</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/2/25/when-should-approximate-query-processing-be-used.html" target="_blank" rel="noopener">什么时候应该用近视查询处理?</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/2/23/googles-transition-from-single-datacenter-to-failover-to-a-n.html" target="_blank" rel="noopener">Google 从单数据中心到故障转移, 到本地多宿主架构的演变</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2012/9/24/google-spanners-most-surprising-revelation-nosql-is-out-and.html" target="_blank" rel="noopener">Spanner</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/2/15/egnyte-architecture-lessons-learned-in-building-and-scaling.html" target="_blank" rel="noopener">Egnyte: 构建和扩展 PB 级分布式系统架构的经验教训</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/7/6/machine-learning-driven-programming-a-new-programming-for-a.html" target="_blank" rel="noopener">机器学习驱动的编程: 新世界的新编程方式</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/6/15/the-image-optimization-technology-that-serves-millions-of-re.html" target="_blank" rel="noopener">日服务数百万请求的图像优化技术</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/2/1/a-patreon-architecture-short.html" target="_blank" rel="noopener">Patreon 架构</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/1/27/tinder-how-does-one-of-the-largest-recommendation-engines-de.html" target="_blank" rel="noopener">Tinder: 推荐引擎是如何决定下一个你将会看到谁的?</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/1/25/design-of-a-modern-cache.html" target="_blank" rel="noopener">现代缓存设计</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/1/13/live-video-streaming-at-facebook-scale.html" target="_blank" rel="noopener">Facebook 实时视频流扩展</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/1/11/a-beginners-guide-to-scaling-to-11-million-users-on-amazons.html" target="_blank" rel="noopener">在 Amazon AWS 上把服务扩展到 1100 万量级的新手教程</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2015/12/16/how-does-the-use-of-docker-effect-latency.html" target="_blank" rel="noopener">对延时敏感的应用是否应该使用 Docker?</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2015/12/14/does-amp-counter-an-existential-threat-to-google.html" target="_blank" rel="noopener">AMP（Accelerated Mobile Pages）的存在是对 Google 的威胁么?</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html" target="_blank" rel="noopener">360 度解读 Netflix 技术栈</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/latency-everywhere-and-it-costs-you-sales-how-crush-it" target="_blank" rel="noopener">延迟无处不在 - 如何搞定它？</a></li>
<li><input disabled="" type="checkbox"> <a href="http://martinfowler.com/articles/serverless.html" target="_blank" rel="noopener">无服务器架构</a></li>
<li><input disabled="" type="checkbox"> <a href="http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances" target="_blank" rel="noopener">是什么驱动着 Instagram: 上百个实例、几十种技术</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html" target="_blank" rel="noopener">Cinchcast 架构 - 每天处理 1500 小时的音频</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html" target="_blank" rel="noopener">Justin.Tv 实时视频播放架构</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html" target="_blank" rel="noopener">Playfish’s 社交游戏架构 - 每月五千万用户增长</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html" target="_blank" rel="noopener">猫途鹰架构 - 40 万访客, 200 万动态页面访问, 30TB 数据</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/plentyoffish-architecture" target="_blank" rel="noopener">PlentyOfFish 架构</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html" target="_blank" rel="noopener">Salesforce 架构 - 如何扛住 13 亿日交易量</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html" target="_blank" rel="noopener">ESPN’s 架构扩展</a></li>
<li><input disabled="" type="checkbox"> 下面 『消息、序列化和消息系统』部分的内容会提到什么样的技术能把各种服务整合到一起</li>
<li><input disabled="" type="checkbox"> Twitter:<ul>
<li><a href="https://www.youtube.com/watch?v=5cKTP36HVgI" target="_blank" rel="noopener">O’Reilly MySQL CE 2011: Jeremy Cole, “Big and Small Data at @Twitter” (video)</a></li>
<li><a href="https://www.infoq.com/presentations/Twitter-Timeline-Scalability" target="_blank" rel="noopener">时间线的扩展</a></li>
</ul>
</li>
<li>更多内容可以查看视频部分的『大规模数据挖掘』视频系列。</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 系统设计问题练习：下面有一些指导原则，每一个都有相关文档以及在现实中该如何处理。<ul>
<li>复习: <a href="http://www.hiredintech.com/system-design/" target="_blank" rel="noopener">HiredInTech 的系统设计</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/blob/master/extras/cheat%20sheets/system-design.pdf" target="_blank" rel="noopener">cheat sheet</a></li>
<li>流程:<ol>
<li>理解问题和范围:<ul>
<li>在面试官的帮助下定义用例</li>
<li>提出附加功能的建议</li>
<li>去掉面试官认定范围以外的内容</li>
<li>假定高可用是必须的，而且要作为一个用例</li>
</ul>
</li>
<li>考虑约束:<ul>
<li>问一下每月请求量</li>
<li>问一下每秒请求量 (他们可能会主动提到或者让你算一下)</li>
<li>评估读写所占的百分比</li>
<li>评估的时候牢记 2/8 原则</li>
<li>每秒写多少数据</li>
<li>总的数据存储量要考虑超过 5 年的情况</li>
<li>每秒读多少数据</li>
</ul>
</li>
<li>抽象设计:<ul>
<li>分层 (服务, 数据, 缓存)</li>
<li>基础设施: 负载均衡, 消息</li>
<li>粗略的概括任何驱动整个服务的关键算法</li>
<li>考虑瓶颈并指出解决方案</li>
</ul>
</li>
</ol>
</li>
<li>练习:<ul>
<li><a href="http://repository.cmu.edu/cgi/viewcontent.cgi?article=2112&amp;context=compsci" target="_blank" rel="noopener">设计一个 CDN 网络</a></li>
<li><a href="https://blog.twitter.com/2010/announcing-snowflake" target="_blank" rel="noopener">设计一个随机唯一 ID 生成系统</a></li>
<li><a href="http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html" target="_blank" rel="noopener">设计一个在线多人卡牌游戏</a></li>
<li><a href="http://www.slideshare.net/dvirsky/introduction-to-redis" target="_blank" rel="noopener">设计一个 key-value 数据库</a></li>
<li><a href="https://icmi.cs.ucsb.edu/research/tech_reports/reports/2005-23.pdf" target="_blank" rel="noopener">设计一个函数获取过去某个时间段内前 K 个最高频访问的请求</a></li>
<li><a href="http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html" target="_blank" rel="noopener">设计一个图片分享系统</a></li>
<li><a href="http://ijcai13.org/files/tutorial_slides/td3.pdf" target="_blank" rel="noopener">设计一个推荐系统</a></li>
<li><a href="http://www.hiredintech.com/system-design/the-system-design-process/" target="_blank" rel="noopener">设计一个短域名生成系统</a></li>
<li><a href="https://www.adayinthelifeof.nl/2011/02/06/memcache-internals/" target="_blank" rel="noopener">设计一个缓存系统</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="论文"><a href="#论文" class="headerlink" title="论文"></a>论文</h3><ul>
<li>有 Google 的论文和一些知名的论文.</li>
<li>你很可能实在没时间一篇篇完整的读完他们。我建议可以有选择的读其中一些论文里的核心部分。</li>
<li><input disabled="" type="checkbox"> <a href="http://spinroot.com/courses/summer/Papers/hoare_1978.pdf" target="_blank" rel="noopener">1978: 通信顺序处理</a><ul>
<li><a href="https://godoc.org/github.com/thomas11/csp" target="_blank" rel="noopener">Go 实现</a></li>
<li><a href="https://www.cs.cmu.edu/~crary/819-f09/" target="_blank" rel="noopener">喜欢经典的论文?</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://static.googleusercontent.com/media/research.google.com/en//archive/gfs-sosp2003.pdf" target="_blank" rel="noopener">2003: The Google 文件系统</a><ul>
<li>2012 年被 Colossus 取代了</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://static.googleusercontent.com/media/research.google.com/en//archive/mapreduce-osdi04.pdf" target="_blank" rel="noopener">2004: MapReduce: Simplified Data Processing on Large Clusters</a><ul>
<li>大多被云数据流取代了?</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.akkadia.org/drepper/cpumemory.pdf" target="_blank" rel="noopener">2007: 每个程序员都应该知道的内存知识 (非常长，作者建议跳过某些章节来阅读)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.wired.com/2012/07/google-colossus/" target="_blank" rel="noopener">2012: Google 的 Colossus</a><ul>
<li>没有论文</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 2012: AddressSanitizer: 快速的内存访问检查器:<ul>
<li><a href="http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/37752.pdf" target="_blank" rel="noopener">论文</a></li>
<li><a href="https://www.usenix.org/conference/atc12/technical-sessions/presentation/serebryany" target="_blank" rel="noopener">视频</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 2013: Spanner: Google 的分布式数据库:<ul>
<li><a href="http://static.googleusercontent.com/media/research.google.com/en//archive/spanner-osdi2012.pdf" target="_blank" rel="noopener">论文</a></li>
<li><a href="https://www.usenix.org/node/170855" target="_blank" rel="noopener">视频</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43146.pdf" target="_blank" rel="noopener">2014: Machine Learning: The High-Interest Credit Card of Technical Debt</a></li>
<li><input disabled="" type="checkbox"> <a href="http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43790.pdf" target="_blank" rel="noopener">2015: Continuous Pipelines at Google</a></li>
<li><input disabled="" type="checkbox"> <a href="https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/44686.pdf" target="_blank" rel="noopener">2015: 大规模高可用: 构建 Google Ads 的数据基础设施</a></li>
<li><input disabled="" type="checkbox"> <a href="http://download.tensorflow.org/paper/whitepaper2015.pdf" target="_blank" rel="noopener">2015: TensorFlow: 异构分布式系统上的大规模机器学习</a></li>
<li><input disabled="" type="checkbox"> <a href="http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43835.pdf" target="_blank" rel="noopener">2015: 开发者应该如何搜索代码：用例学习</a></li>
<li><input disabled="" type="checkbox"> <a href="http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/44843.pdf" target="_blank" rel="noopener">2016: Borg, Omega, and Kubernetes</a></li>
</ul>
</li>
<li><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><ul>
<li>涵盖了:<ul>
<li>单元测试是如何工作的</li>
<li>什么是模拟对象</li>
<li>什么是集成测试</li>
<li>什么是依赖注入</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=SAhJf36_u5U" target="_blank" rel="noopener">James Bach 讲敏捷软件测试 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ILkT_HV9DVU" target="_blank" rel="noopener">James Bach 软件测试公开课 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://vimeo.com/83960706" target="_blank" rel="noopener">Steve Freeman - 测试驱动的开发 (video)</a><ul>
<li><a href="http://gotocon.com/dl/goto-berlin-2013/slides/SteveFreeman_TestDrivenDevelopmentThatsNotWhatWeMeant.pdf" target="_blank" rel="noopener">slides</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://david.heinemeierhansson.com/2014/tdd-is-dead-long-live-testing.html" target="_blank" rel="noopener">测试驱动的开发已死。测试不朽。</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=z9quxZsLcfo" target="_blank" rel="noopener">测试驱动的开发已死? (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=nzJapzxH_rE&amp;list=PLAwxTw4SYaPkWVHeC_8aSIbSxE_NXI76g" target="_blank" rel="noopener">视频系列 (152 个) - 并不都是必须 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="http://www.obeythetestinggoat.com/pages/book.html#toc" target="_blank" rel="noopener">Python：测试驱动的 Web 开发</a></li>
<li><input disabled="" type="checkbox"> 依赖注入:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=IKD2-MAkXyQ" target="_blank" rel="noopener">视频</a></li>
<li><input disabled="" type="checkbox"> <a href="http://jasonpolites.github.io/tao-of-testing/ch3-1.1.html" target="_blank" rel="noopener">测试之道</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://jasonpolites.github.io/tao-of-testing/ch4-1.1.html" target="_blank" rel="noopener">如何编写测试</a></li>
</ul>
</li>
<li><h3 id="调度"><a href="#调度" class="headerlink" title="调度"></a>调度</h3><ul>
<li>在操作系统中是如何运作的</li>
<li>在操作系统部分的视频里有很多资料</li>
</ul>
</li>
<li><h3 id="实现系统例程"><a href="#实现系统例程" class="headerlink" title="实现系统例程"></a>实现系统例程</h3><ul>
<li>理解你使用的系统 API 底层有什么</li>
<li>你能自己实现它们么?</li>
</ul>
</li>
<li><h3 id="字符串搜索和操作"><a href="#字符串搜索和操作" class="headerlink" title="字符串搜索和操作"></a>字符串搜索和操作</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/tAfHI/search-pattern-in-text" target="_blank" rel="noopener">文本的搜索模式 (video)</a></li>
<li><input disabled="" type="checkbox"> Rabin-Karp (videos):<ul>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/c0Qkw/rabin-karps-algorithm" target="_blank" rel="noopener">Rabin Karps 算法</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/nYrc8/optimization-precomputation" target="_blank" rel="noopener">预先计算的优化</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/h4ZLc/optimization-implementation-and-analysis" target="_blank" rel="noopener">优化: 实现和分析</a></li>
<li><a href="https://www.youtube.com/watch?v=BRO7mVIFt08&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=9" target="_blank" rel="noopener">Table Doubling, Karp-Rabin</a></li>
<li><a href="https://www.youtube.com/watch?v=w6nuXg0BISo&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=32" target="_blank" rel="noopener">滚动哈希</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Knuth-Morris-Pratt (KMP) 算法:<ul>
<li><a href="https://en.wikipedia.org/wiki/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm" target="_blank" rel="noopener">Pratt 算法</a></li>
<li><a href="https://www.youtube.com/watch?v=2ogqPWJSftE" target="_blank" rel="noopener">教程: Knuth-Morris-Pratt (KMP) 字符串匹配算法</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Boyer–Moore 字符串搜索算法<ul>
<li><a href="https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string_search_algorithm" target="_blank" rel="noopener">Boyer-Moore字符串搜索算法</a></li>
<li><a href="https://www.youtube.com/watch?v=QDZpzctPf10" target="_blank" rel="noopener">Boyer-Moore-Horspool 高级字符串搜索算法 (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-on-strings/home/week/1" target="_blank" rel="noopener">Coursera: 字符串的算法</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="终面"><a href="#终面" class="headerlink" title="终面"></a>终面</h2><pre><code>这一部分有一些短视频，你可以快速的观看和复习大多数重要概念。
这对经常性的巩固很有帮助。</code></pre><h4 id="综述"><a href="#综述" class="headerlink" title="综述:"></a>综述:</h4><ul>
<li><input disabled="" type="checkbox"> 2-3 分钟的短视频系列 (23 个)<ul>
<li><a href="https://www.youtube.com/watch?v=r4r1DZcx1cM&amp;list=PLmVb1OknmNJuC5POdcDv5oCS7_OUkDgpj&amp;index=22" target="_blank" rel="noopener">Videos</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 2-5 分钟的短视频系列 - Michael Sambol (18 个):<ul>
<li><a href="https://www.youtube.com/channel/UCzDJwLWoYCUQowF_nG3m5OQ" target="_blank" rel="noopener">Videos</a></li>
</ul>
</li>
</ul>
<h4 id="排序"><a href="#排序" class="headerlink" title="排序:"></a>排序:</h4><ul>
<li><input disabled="" type="checkbox"> 归并排序: <a href="https://www.youtube.com/watch?v=GCae1WNvnZM" target="_blank" rel="noopener">https://www.youtube.com/watch?v=GCae1WNvnZM</a></li>
</ul>
<h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><h3 id="Google-Coaching-里提到的"><a href="#Google-Coaching-里提到的" class="headerlink" title="Google Coaching 里提到的"></a>Google Coaching 里提到的</h3><p><strong>阅读并做练习:</strong></p>
<ul>
<li><input disabled="" type="checkbox"> <p>算法设计手册 (Skiena)</p>
<ul>
<li><p>书 (Kindle 上可以租到):</p>
<ul>
<li><a href="http://www.amazon.com/Algorithm-Design-Manual-Steven-Skiena/dp/1849967202" target="_blank" rel="noopener">Algorithm Design Manual</a></li>
</ul>
</li>
<li><p>Half.com 是一个资源丰富且性价比很高的在线书店.</p>
</li>
<li><p>答案:</p>
<ul>
<li><a href="http://www.algorithm.cs.sunysb.edu/algowiki/index.php/The_Algorithms_Design_Manual_(Second_Edition)" target="_blank" rel="noopener">解答</a></li>
<li><a href="http://blog.panictank.net/category/algorithmndesignmanualsolutions/page/2/" target="_blank" rel="noopener">解答</a></li>
</ul>
</li>
<li><p><a href="http://www3.cs.stonybrook.edu/~skiena/algorist/book/errata" target="_blank" rel="noopener">勘误表</a></p>
<p>read and do exercises from the books below. Then move to coding challenges (further down below)<br>一旦你理解了每日计划里的所有内容，就去读上面所列的书并完成练习，然后开始读下面所列的书并做练习，之后就可以开始实战写代码了（本文再往后的部分）</p>
</li>
</ul>
</li>
</ul>
<p><strong>首先阅读:</strong></p>
<ul>
<li><input disabled="" type="checkbox"> <a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-047012167X.html" target="_blank" rel="noopener">Programming Interviews Exposed: Secrets to Landing Your Next Job, 2nd Edition</a></li>
</ul>
<p><strong>然后阅读 (这本获得了很多推荐， 但是不在 Google coaching 的文档里):</strong></p>
<ul>
<li><input disabled="" type="checkbox"> <a href="http://www.amazon.com/Cracking-Coding-Interview-6th-Programming/dp/0984782850/" target="_blank" rel="noopener">Cracking the Coding Interview, 6th Edition</a><ul>
<li>如果你看到有人在看 “The Google Resume”, 实际上它和 “Cracking the Coding Interview” 是同一个作者写的，而且后者是升级版。</li>
</ul>
</li>
</ul>
<h3 id="附加书单"><a href="#附加书单" class="headerlink" title="附加书单"></a>附加书单</h3><p>这些没有被 Google 推荐阅读，不过我因为需要这些背景知识所以也把它们列在了这里。</p>
<ul>
<li><input disabled="" type="checkbox"> <p>C Programming Language, Vol 2</p>
<ul>
<li><a href="https://github.com/lekkas/c-algorithms" target="_blank" rel="noopener">练习的答案</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>C++ Primer Plus, 6th Edition</p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="http://product.half.ebay.com/The-UNIX-Programming-Environment-by-Brian-W-Kernighan-and-Rob-Pike-1983-Other/54385&amp;tg=info" target="_blank" rel="noopener">《Unix 环境高级编程》 The Unix Programming Environment</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="http://www.amazon.com/Programming-Pearls-2nd-Jon-Bentley/dp/0201657880" target="_blank" rel="noopener">《编程珠玑》 Programming Pearls</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="http://www.amazon.com/Algorithms-Programming-Solutions-Alexander-Shen/dp/0817638474" target="_blank" rel="noopener">Algorithms and Programming: Problems and Solutions</a></p>
</li>
</ul>
<h3 id="如果你有时间"><a href="#如果你有时间" class="headerlink" title="如果你有时间"></a>如果你有时间</h3><ul>
<li><input disabled="" type="checkbox"> <p><a href="https://www.amazon.com/Introduction-Algorithms-3rd-MIT-Press/dp/0262033844" target="_blank" rel="noopener">Introduction to Algorithms</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.amazon.com/Elements-Programming-Interviews-Insiders-Guide/dp/1479274836" target="_blank" rel="noopener">Elements of Programming Interviews</a></p>
<ul>
<li>如果你希望在面试里用 C++ 写代码，这本书的代码全都是 C++ 写的</li>
<li>通常情况下能找到解决方案的好书.</li>
</ul>
</li>
</ul>
<h2 id="编码练习和挑战"><a href="#编码练习和挑战" class="headerlink" title="编码练习和挑战"></a>编码练习和挑战</h2><p>一旦你学会了理论基础，就应该把它们拿出来练练。<br>尽量坚持每天做编码练习，越多越好。</p>
<p>编程问题预备:</p>
<ul>
<li><input disabled="" type="checkbox"> <p><a href="http://www.hiredintech.com/algorithm-design/" target="_blank" rel="noopener">不错的介绍 (摘自 System Design 章节): 算法设计:</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.topcoder.com/community/data-science/data-science-tutorials/how-to-find-a-solution/" target="_blank" rel="noopener">如何找到解决方案</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.topcoder.com/community/data-science/data-science-tutorials/how-to-dissect-a-topcoder-problem-statement/" target="_blank" rel="noopener">如何剖析 Topcoder 题目描述</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.topcoder.com/community/data-science/data-science-tutorials/mathematics-for-topcoders/" target="_blank" rel="noopener">Topcoders 里用到的数学</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.topcoder.com/community/data-science/data-science-tutorials/dynamic-programming-from-novice-to-advanced/" target="_blank" rel="noopener">动态规划 – 从入门到精通</a></p>
</li>
<li><p><a href="https://courses.csail.mit.edu/iap/interview/materials.php" target="_blank" rel="noopener">MIT 面试材料</a></p>
</li>
<li><p><a href="http://exercism.io/languages" target="_blank" rel="noopener">针对编程语言本身的练习</a></p>
</li>
</ul>
<p>编码练习平台:</p>
<ul>
<li><p><a href="https://leetcode.com/" target="_blank" rel="noopener">LeetCode</a></p>
</li>
<li><p><a href="https://www.topcoder.com/" target="_blank" rel="noopener">TopCoder</a></p>
</li>
<li><p><a href="https://projecteuler.net/index.php?section=problems" target="_blank" rel="noopener">Project Euler (数学方向为主)</a></p>
</li>
<li><p><a href="http://www.codewars.com" target="_blank" rel="noopener">Codewars</a></p>
</li>
<li><p><a href="https://www.hackerrank.com/" target="_blank" rel="noopener">HackerRank</a></p>
</li>
<li><p><a href="https://codility.com/programmers/" target="_blank" rel="noopener">Codility</a></p>
</li>
<li><p><a href="https://www.interviewcake.com/" target="_blank" rel="noopener">InterviewCake</a></p>
</li>
<li><p><a href="https://www.interviewbit.com/invite/icjf" target="_blank" rel="noopener">InterviewBit</a></p>
</li>
<li><p><a href="http://www.gainlo.co/" target="_blank" rel="noopener">模拟大公司的面试</a></p>
</li>
</ul>
<h2 id="当你临近面试时"><a href="#当你临近面试时" class="headerlink" title="当你临近面试时"></a>当你临近面试时</h2><ul>
<li><input disabled="" type="checkbox"> 搞定代码面试 (videos):<ul>
<li><a href="https://www.youtube.com/watch?v=4NIb9l3imAo" target="_blank" rel="noopener">Cracking The Code Interview</a></li>
<li><a href="https://www.youtube.com/watch?v=Eg5-tdAwclo" target="_blank" rel="noopener">Cracking the Coding Interview - 全栈系列</a></li>
<li><a href="https://www.youtube.com/watch?v=1fqxMuPmGak" target="_blank" rel="noopener">Ask Me Anything: Gayle Laakmann McDowell (Cracking the Coding Interview 的作者)</a></li>
</ul>
</li>
</ul>
<h2 id="你的简历"><a href="#你的简历" class="headerlink" title="你的简历"></a>你的简历</h2><ul>
<li><a href="http://steve-yegge.blogspot.co.uk/2007_09_01_archive.html" target="_blank" rel="noopener">10 条小贴士让你写出一份还算不错的简历</a></li>
<li>这是搞定面试的第一个关键步骤</li>
</ul>
<h2 id="当面试来临的时候"><a href="#当面试来临的时候" class="headerlink" title="当面试来临的时候"></a>当面试来临的时候</h2><pre><code>随着下面列举的问题思考下你可能会遇到的 20 个面试问题
每个问题准备 2-3 种回答
准备点故事，不要只是摆一些你完成的事情的数据，相信我，人人都喜欢听故事</code></pre><ul>
<li>你为什么想得到这份工作？</li>
<li>你解决过的最有难度的问题是什么？</li>
<li>面对过的最大挑战是什么?</li>
<li>见过的最好或者最坏的设计是怎么样的?</li>
<li>对某项 Google 产品提出改进建议。</li>
<li>你作为一个个体同时也是团队的一员，如何达到最好的工作状态?</li>
<li>你的什么技能或者经验是你的角色中不可或缺的?为什么？</li>
<li>你在某份工作或某个项目中最享受的是什么?</li>
<li>你在某份工作或某个项目中面临过的最大挑战是什么?</li>
<li>你在某份工作或某个项目中遇到过的最蛋疼的 Bug 是什么样的？</li>
<li>你在某份工作或某个项目中学到了什么？</li>
<li>你在某份工作或某个项目中哪些地方还可以做的更好？</li>
</ul>
<h2 id="问面试官的问题"><a href="#问面试官的问题" class="headerlink" title="问面试官的问题"></a>问面试官的问题</h2><pre><code>我会问的一些：(可能我已经知道了答案但我想听听面试官的看法或者了解团队的前景):</code></pre><ul>
<li>团队多大规模?</li>
<li>开发周期是怎样的? 会使用瀑布流/极限编程/敏捷开发么?</li>
<li>经常会为 deadline 加班么? 或者是有弹性的?</li>
<li>团队里怎么做技术选型?</li>
<li>每周平均开多少次会?</li>
<li>你觉得工作环境有助于员工集中精力吗?</li>
<li>目前正在做什么工作?</li>
<li>喜欢这些事情吗?</li>
<li>工作期限是怎么样的?</li>
</ul>
<h2 id="当你获得了梦想的职位"><a href="#当你获得了梦想的职位" class="headerlink" title="当你获得了梦想的职位"></a>当你获得了梦想的职位</h2><p>我还能说些什么呢，恭喜你！</p>
<ul>
<li><a href="https://medium.com/@moonstorming/10-things-i-wish-i-knew-on-my-first-day-at-google-107581d87286#.livxn7clw" target="_blank" rel="noopener">我希望在 Google 的第一天就知道的 10 件事</a></li>
</ul>
<p>坚持继续学习。</p>
<p>得到这份工作只是一个开始。</p>
<hr>
<pre><code>*****************************************************************************************************
*****************************************************************************************************

下面的内容都是可选的。这些是我的推荐，不是 Google 的。
通过学习这些内容，你将会得到更多的有关 CS 的概念，并将为所有的软件工程工作做更好的准备。

*****************************************************************************************************
*****************************************************************************************************</code></pre><hr>
<h2 id="附加的学习"><a href="#附加的学习" class="headerlink" title="附加的学习"></a>附加的学习</h2><ul>
<li><h3 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h3><ul>
<li><input disabled="" type="checkbox"> <a href="http://www.joelonsoftware.com/articles/Unicode.html" target="_blank" rel="noopener">每一个软件开发者的绝对最低限度，必须要知道的关于 Unicode 和字符集知识</a></li>
<li><input disabled="" type="checkbox"> <a href="http://kunststube.net/encoding/" target="_blank" rel="noopener">关于处理文本需要的编码和字符集, 每个程序员绝对需要知道的知识</a></li>
</ul>
</li>
<li><h3 id="字节顺序"><a href="#字节顺序" class="headerlink" title="字节顺序"></a>字节顺序</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.cs.umd.edu/class/sum2003/cmsc311/Notes/Data/endian.html" target="_blank" rel="noopener">大、小端字节序</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=JrNF0KRAlyo" target="_blank" rel="noopener">大端字节 Vs 小端字节(视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=oBSuXP-1Tc0" target="_blank" rel="noopener">大、小端字节序的里里外外(Big And Little Endian Inside/Out) (视频)</a><ul>
<li>内核开发者的讨论非常技术性，如果大多数都超出了你的理解范围，不要太担心。</li>
<li>前半段已经足够了。</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Emacs-and-vi-m"><a href="#Emacs-and-vi-m" class="headerlink" title="Emacs and vi(m)"></a>Emacs and vi(m)</h3><ul>
<li>Yegge 的建议，从一个很早以前的亚马逊招聘信息中而来：熟悉基于 unix 的代码编辑器</li>
<li>vi(m):<ul>
<li><a href="https://www.youtube.com/watch?v=5givLEMcINQ&amp;index=1&amp;list=PL13bz4SHGmRxlZVmWQ9DvXo1fEg4UdGkr" target="_blank" rel="noopener">使用 vim 进行编辑 01 - 安装, 设置和模式 (视频)</a></li>
<li><a href="http://vim-adventures.com/" target="_blank" rel="noopener">VIM 的冒险之旅</a></li>
<li>4 个视频集:<ul>
<li><a href="https://www.youtube.com/watch?v=SI8TeVMX8pk" target="_blank" rel="noopener">vi/vim 编辑器 - 课程 1</a></li>
<li><a href="https://www.youtube.com/watch?v=F3OO7ZIOaJE" target="_blank" rel="noopener">vi/vim 编辑器 - 课程 2</a></li>
<li><a href="https://www.youtube.com/watch?v=1lYD5gwgZIA" target="_blank" rel="noopener">vi/vim 编辑器 - 课程 4</a></li>
<li><a href="https://www.youtube.com/watch?v=ZYEccA_nMaI" target="_blank" rel="noopener">vi/vim 编辑器 - 课程 3</a></li>
</ul>
</li>
<li><a href="http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Using_Vi_instead_of_Emacs" target="_blank" rel="noopener">使用 Vi 而不是 Emacs</a></li>
</ul>
</li>
<li>emacs:<ul>
<li><a href="https://www.youtube.com/watch?v=hbmV1bnQ-i0" target="_blank" rel="noopener">基础 Emacs 教程 (视频)</a></li>
<li>3 个视频集:<ul>
<li><a href="https://www.youtube.com/watch?v=ujODL7MD04Q" target="_blank" rel="noopener">Emacs 教程 (初学者) -第 1 部分- 文件命令, 剪切/复制/粘贴,  自定义命令</a></li>
<li><a href="https://www.youtube.com/watch?v=XWpsRupJ4II" target="_blank" rel="noopener">Emacs 教程 (初学者 -第 2 部分- Buffer 管理, 搜索, M-x grep 和 rgrep 模式</a></li>
<li><a href="https://www.youtube.com/watch?v=paSgzPso-yc" target="_blank" rel="noopener">Emacs 教程 (初学者 -第 3 部分- 表达式, 声明, ~/.emacs 文件和包机制</a></li>
</ul>
</li>
<li><a href="https://www.youtube.com/watch?v=JWD1Fpdd4Pc" target="_blank" rel="noopener">Evil 模式: 或许, 我是怎样对 Emacs 路人转粉的 (视频)</a></li>
<li><a href="http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Writing_C_programs_with_Emacs" target="_blank" rel="noopener">使用 Emacs 开发 C 程序</a></li>
<li><a href="https://www.youtube.com/watch?v=nsGYet02bEk" target="_blank" rel="noopener">(或许) 深度组织模式:管理结构 (视频)</a></li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Unix-命令行工具"><a href="#Unix-命令行工具" class="headerlink" title="Unix 命令行工具"></a>Unix 命令行工具</h3><ul>
<li>下列内容中的优秀工具由的 Yegge 推荐，Yegge 目前致力于 Amazon 人事招聘处。</li>
<li><input disabled="" type="checkbox"> bash</li>
<li><input disabled="" type="checkbox"> cat</li>
<li><input disabled="" type="checkbox"> grep</li>
<li><input disabled="" type="checkbox"> sed</li>
<li><input disabled="" type="checkbox"> awk</li>
<li><input disabled="" type="checkbox"> curl or wget</li>
<li><input disabled="" type="checkbox"> sort</li>
<li><input disabled="" type="checkbox"> tr</li>
<li><input disabled="" type="checkbox"> uniq</li>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Strace" target="_blank" rel="noopener">strace</a></li>
<li><input disabled="" type="checkbox"> <a href="https://danielmiessler.com/study/tcpdump/" target="_blank" rel="noopener">tcpdump</a></li>
</ul>
</li>
<li><h3 id="信息资源-视频"><a href="#信息资源-视频" class="headerlink" title="信息资源 (视频)"></a>信息资源 (视频)</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.khanacademy.org/computing/computer-science/informationtheory" target="_blank" rel="noopener">Khan Academy 可汗学院</a></li>
<li><input disabled="" type="checkbox"> 更多有关马尔可夫的内容:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/waxgx/core-markov-text-generation" target="_blank" rel="noopener">Core Markov Text Generation马尔可夫内容生成</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/gZhiC/core-implementing-markov-text-generation" target="_blank" rel="noopener">Core Implementing Markov Text Generation马尔可夫内容生成补充</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/EUjrq/project-markov-text-generation-walk-through" target="_blank" rel="noopener">Project = Markov Text Generation Walk Through一个马尔可夫内容生成器的项目</a></li>
</ul>
</li>
<li>关于更多信息，请参照下方 MIT 6.050J 信息和系统复杂度的内容.</li>
</ul>
</li>
<li><h3 id="奇偶校验位-amp-汉明码-视频"><a href="#奇偶校验位-amp-汉明码-视频" class="headerlink" title="奇偶校验位 &amp; 汉明码 (视频)"></a>奇偶校验位 &amp; 汉明码 (视频)</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=q-3BctoUpHE" target="_blank" rel="noopener">入门</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=DdMcAUlxh1M" target="_blank" rel="noopener">奇偶校验位</a></li>
<li><input disabled="" type="checkbox"> 汉明码(Hamming Code):<ul>
<li><a href="https://www.youtube.com/watch?v=1A_NcXxdoCc" target="_blank" rel="noopener">发现错误</a></li>
<li><a href="https://www.youtube.com/watch?v=JAMLuxdHH8o" target="_blank" rel="noopener">修正错误</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=wbH2VxzmoZk" target="_blank" rel="noopener">检查错误</a></li>
</ul>
</li>
<li><h3 id="系统熵值（系统复杂度）"><a href="#系统熵值（系统复杂度）" class="headerlink" title="系统熵值（系统复杂度）"></a>系统熵值（系统复杂度）</h3><ul>
<li>请参考下方视频</li>
<li>观看之前，请先确定观看了信息论的视频</li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/JnJq3Py0dyM?t=176" target="_blank" rel="noopener">信息理论, 克劳德·香农, 熵值, 系统冗余, 数据比特压缩 (视频)</a></li>
</ul>
</li>
<li><h3 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h3><ul>
<li>请参考下方视频</li>
<li>观看之前，请先确定观看了信息论的视频</li>
<li><input disabled="" type="checkbox"> <a href="https://www.khanacademy.org/computing/computer-science/密码学" target="_blank" rel="noopener">可汗学院</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=KqqOXndnvic&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=30" target="_blank" rel="noopener">密码学: 哈希函数</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=9TNI2wHmaeI&amp;index=31&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">密码学: 加密</a></li>
</ul>
</li>
<li><h3 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h3><ul>
<li>观看之前，请先确定观看了信息论的视频</li>
<li><input disabled="" type="checkbox"> 压缩 (视频):<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Lto-ajuqW3w" target="_blank" rel="noopener">压缩</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=M5c_RFKVkko" target="_blank" rel="noopener">压缩熵值</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=umTbivyJoiI" target="_blank" rel="noopener">由上而下的树 (霍夫曼编码树)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=DV8efuB3h2g" target="_blank" rel="noopener">额外比特 - 霍夫曼编码树</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=goOa3DGezUA" target="_blank" rel="noopener">优雅的压缩数据 (无损数据压缩方法)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=cCDCfoHTsaU" target="_blank" rel="noopener">Text Compression Meets Probabilities</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/playlist?list=PLOU2XLYxmsIJGErt5rrCqaSGTMyyqNt2H" target="_blank" rel="noopener">数据压缩的艺术</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=whGwm0Lky2s" target="_blank" rel="noopener">(可选) 谷歌开发者: GZIP 还差远了呢!</a></li>
</ul>
</li>
<li><h3 id="网络-视频"><a href="#网络-视频" class="headerlink" title="网络 (视频)"></a>网络 (视频)</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.khanacademy.org/computing/computer-science/internet-intro" target="_blank" rel="noopener">可汗学院</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Vdc8TCESIg8" target="_blank" rel="noopener">网络传输协议中的数据压缩</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=e5DEVa9eSN0" target="_blank" rel="noopener">TCP/IP 和 OSI 模型解析!</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=nomyRJehhnM" target="_blank" rel="noopener">TCP/IP 教程：传输数据包.</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=WGJrLqtX7As" target="_blank" rel="noopener">HTTP</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=S2iBR2ZlZf0" target="_blank" rel="noopener">SSL 和 HTTPS</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Rp3iZUvXWlM" target="_blank" rel="noopener">SSL/TLS</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=E9FxNzv1Tr8" target="_blank" rel="noopener">HTTP 2.0</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/playlist?list=PLEbnTDJUr_IegfoqO4iPnPYQui46QqT0j" target="_blank" rel="noopener">视频</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=t5xYI0jzOf4" target="_blank" rel="noopener">子网络解密 - 第五部分 经典内部域名指向 CIDR 标记</a></li>
</ul>
</li>
<li><h3 id="计算机安全"><a href="#计算机安全" class="headerlink" title="计算机安全"></a>计算机安全</h3><ul>
<li><a href="https://www.youtube.com/playlist?list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">MIT</a><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=GqmQg-cszw4&amp;index=1&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">威胁模型：入门</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=6bwzNg5qQ0o&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&amp;index=2" target="_blank" rel="noopener">控制攻击</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=drQyrzRoRiA&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&amp;index=3" target="_blank" rel="noopener">缓冲数据注入和防御</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=6SIJmoE9L9g&amp;index=4&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">优先权区分</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=8VqTSY-11F4&amp;index=5&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">能力</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=VEV74hwASeU&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&amp;index=6" target="_blank" rel="noopener">在沙盒中运行原生代码</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=chkFBigodIw&amp;index=7&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">网络安全模型</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=EBQIGy1ROLY&amp;index=8&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">网络安全应用</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=yRVZPvHYHzw&amp;index=9&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">标志化执行</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=SIEVvk3NVuk&amp;index=11&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">网络安全</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=QOtA76ga_fY&amp;index=12&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">网络协议</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=PuVMkSEcPiI&amp;index=15&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">旁路攻击</a></li>
</ul>
</li>
</ul>
</li>
<li><h3 id="释放缓存"><a href="#释放缓存" class="headerlink" title="释放缓存"></a>释放缓存</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=StdfeXaKGEc&amp;list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd&amp;index=25" target="_blank" rel="noopener">Java 释放缓存; 片段化数据 (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/playlist?list=PLO9y7hOkmmSGTy5z6HZ-W4k2y8WXF7Bff" target="_blank" rel="noopener">编译器 (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=iHVs_HkjdmI" target="_blank" rel="noopener">Python 释放缓存 (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.infoq.com/presentations/garbage-collection-benefits" target="_blank" rel="noopener">深度解析：论释放缓存在 JAVA 中的重要性</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=P-8Z0-MhdQs&amp;list=PLdzf4Clw0VbOEWOS_sLhT_9zaiQDrS5AR&amp;index=3" target="_blank" rel="noopener">深度解析：论释放缓存在 Python 中的重要性(视频)</a></li>
</ul>
</li>
<li><h3 id="并行-并发编程"><a href="#并行-并发编程" class="headerlink" title="并行/并发编程"></a>并行/并发编程</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/parprog1/home/week/1" target="_blank" rel="noopener">Coursera (Scala)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=uY85GkaYzBk" target="_blank" rel="noopener">论并行/并发编程如何提高 Python 执行效率 (视频)</a></li>
</ul>
</li>
<li><h3 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=3cmzqZzwNDM&amp;list=PLGLfVvz_LVvQ5G-LdJ8RLqe-ndo7QITYc&amp;index=3" target="_blank" rel="noopener">UML统一建模语言概览 (视频)</a></li>
<li><input disabled="" type="checkbox"> 主要有如下的设计模式:<ul>
<li><input disabled="" type="checkbox"> s(strategy)</li>
<li><input disabled="" type="checkbox"> singleton</li>
<li><input disabled="" type="checkbox"> adapter</li>
<li><input disabled="" type="checkbox"> prototype</li>
<li><input disabled="" type="checkbox"> decorator</li>
<li><input disabled="" type="checkbox"> visitor</li>
<li><input disabled="" type="checkbox"> factory, abstract factory</li>
<li><input disabled="" type="checkbox"> facade</li>
<li><input disabled="" type="checkbox"> observer</li>
<li><input disabled="" type="checkbox"> proxy</li>
<li><input disabled="" type="checkbox"> delegate</li>
<li><input disabled="" type="checkbox"> command</li>
<li><input disabled="" type="checkbox"> state</li>
<li><input disabled="" type="checkbox"> memento</li>
<li><input disabled="" type="checkbox"> iterator</li>
<li><input disabled="" type="checkbox"> composite</li>
<li><input disabled="" type="checkbox"> flyweight</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/LAP2A80Ajrg?list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO&amp;t=3344" target="_blank" rel="noopener">第六章 (第 1 部分 ) - 设计模式 (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=U8-PGsjvZc4&amp;index=12&amp;list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO" target="_blank" rel="noopener">第六章 (第 2 部分 ) - Abstraction-Occurrence, General Hierarchy, Player-Role, Singleton, Observer, Delegation (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=7sduBHuex4c&amp;index=13&amp;list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO" target="_blank" rel="noopener">第六章 (第 3 部分 ) - Adapter, Facade, Immutable, Read-Only Interface, Proxy (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/playlist?list=PLF206E906175C7E07" target="_blank" rel="noopener">视频</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.amazon.com/Head-First-Design-Patterns-Freeman/dp/0596007124" target="_blank" rel="noopener">Head First 设计模型</a><ul>
<li>尽管这本书叫做设计模式：重复使用模块，但是我还是认为Head First是对于新手来说很不错的书。</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://sourcemaking.com/design-patterns-and-tips" target="_blank" rel="noopener">基于实际操作对于入门开发者的建议</a></li>
</ul>
</li>
<li><h3 id="信息传输-序列化-和队列化的系统"><a href="#信息传输-序列化-和队列化的系统" class="headerlink" title="信息传输, 序列化,和队列化的系统"></a>信息传输, 序列化,和队列化的系统</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://thrift.apache.org/" target="_blank" rel="noopener">Thrift</a><ul>
<li><a href="http://thrift-tutorial.readthedocs.io/en/latest/intro.html" target="_blank" rel="noopener">教程</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://developers.google.com/protocol-buffers/" target="_blank" rel="noopener">协议缓冲</a><ul>
<li><a href="https://developers.google.com/protocol-buffers/docs/tutorials" target="_blank" rel="noopener">教程</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://www.grpc.io/" target="_blank" rel="noopener">gRPC</a><ul>
<li><a href="https://www.youtube.com/watch?v=5tmPvSe7xXQ&amp;list=PLcTqM9n_dieN0k1nSeN36Z_ppKnvMJoly&amp;index=1" target="_blank" rel="noopener">gRPC 对于JAVA开发者的入门教程（视频）</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://redis.io/" target="_blank" rel="noopener">Redis</a><ul>
<li><a href="http://try.redis.io/" target="_blank" rel="noopener">教程</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://aws.amazon.com/sqs/" target="_blank" rel="noopener">Amazon的 SQS 系统 (队列)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://aws.amazon.com/sns/" target="_blank" rel="noopener">Amazon的 SNS 系统 (pub-sub)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.rabbitmq.com/" target="_blank" rel="noopener">RabbitMQ</a><ul>
<li><a href="https://www.rabbitmq.com/getstarted.html" target="_blank" rel="noopener">入门教程</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://www.celeryproject.org/" target="_blank" rel="noopener">Celery</a><ul>
<li><a href="http://docs.celeryproject.org/en/latest/getting-started/first-steps-with-celery.html" target="_blank" rel="noopener">Celery入门</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://zeromq.org/" target="_blank" rel="noopener">ZeroMQ</a><ul>
<li><a href="http://zeromq.org/intro:read-the-manual" target="_blank" rel="noopener">入门教程</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://activemq.apache.org/" target="_blank" rel="noopener">ActiveMQ</a></li>
<li><input disabled="" type="checkbox"> <a href="http://kafka.apache.org/documentation.html#introduction" target="_blank" rel="noopener">Kafka</a></li>
<li><input disabled="" type="checkbox"> <a href="http://msgpack.org/index.html" target="_blank" rel="noopener">MessagePack</a></li>
<li><input disabled="" type="checkbox"> <a href="https://avro.apache.org/" target="_blank" rel="noopener">Avro</a></li>
</ul>
</li>
<li><h3 id="快速傅里叶变换"><a href="#快速傅里叶变换" class="headerlink" title="快速傅里叶变换"></a>快速傅里叶变换</h3><ul>
<li><input disabled="" type="checkbox"> <a href="http://www.askamathematician.com/2012/09/q-what-is-a-fourier-transform-what-is-it-used-for/" target="_blank" rel="noopener">什么是傅立叶变换？论傅立叶变换的用途</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Xxut2PN-V8Q" target="_blank" rel="noopener">什么是傅立叶变换？ (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=iTMn0Kt18tg&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=4" target="_blank" rel="noopener">关于 FFT 的不同观点 (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="http://jakevdp.github.io/blog/2013/08/28/understanding-the-fft/" target="_blank" rel="noopener">FTT 是什么</a></li>
</ul>
</li>
<li><h3 id="布隆过滤器"><a href="#布隆过滤器" class="headerlink" title="布隆过滤器"></a>布隆过滤器</h3><ul>
<li>给一个布隆过滤器m比特和k个哈希函数，所有的注入和相关测试都会是通过。</li>
<li><a href="https://www.youtube.com/watch?v=-SuTGoFYjZs" target="_blank" rel="noopener">布隆过滤器</a></li>
<li><a href="https://www.youtube.com/watch?v=qBTdukbzc78" target="_blank" rel="noopener">布隆过滤器 | 数据挖掘 | Stanford University</a></li>
<li><a href="http://billmill.org/bloomfilter-tutorial/" target="_blank" rel="noopener">教程</a></li>
<li><a href="http://blog.michaelschmatz.com/2016/04/11/how-to-write-a-bloom-filter-cpp/" target="_blank" rel="noopener">如何写一个布隆过滤器应用</a></li>
</ul>
</li>
<li><h3 id="van-Emde-Boas-树"><a href="#van-Emde-Boas-树" class="headerlink" title="van Emde Boas 树"></a>van Emde Boas 树</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=hmReJCupbNU&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=6" target="_blank" rel="noopener">争论: van Emde Boas 树 (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2012/lecture-notes/MIT6_046JS12_lec15.pdf" target="_blank" rel="noopener">MIT课堂笔记</a></li>
</ul>
</li>
<li><h3 id="更深入的数据结构"><a href="#更深入的数据结构" class="headerlink" title="更深入的数据结构"></a>更深入的数据结构</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/zksIj9O8_jc?list=PL4BBB74C7D2A1049C&amp;t=950" target="_blank" rel="noopener">CS 61B 第 39 课: 更深入的数据结构</a></li>
</ul>
</li>
<li><h3 id="跳表"><a href="#跳表" class="headerlink" title="跳表"></a>跳表</h3><ul>
<li>“有一种非常迷幻的数据类型” - Skiena</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=2g9OSRKJuzM&amp;index=10&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">随机化: 跳表 (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Skip_list" target="_blank" rel="noopener">更生动详细的解释</a></li>
</ul>
</li>
<li><h3 id="网络流"><a href="#网络流" class="headerlink" title="网络流"></a>网络流</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=v1VgJmkEJW0" target="_blank" rel="noopener">5分钟简析Ford-Fulkerson (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=v1VgJmkEJW0" target="_blank" rel="noopener">Ford-Fulkerson 算法 (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=2vhN4Ice5jI" target="_blank" rel="noopener">网络流 (视频)</a></li>
</ul>
</li>
<li><h3 id="不相交集-amp-联合查找"><a href="#不相交集-amp-联合查找" class="headerlink" title="不相交集 &amp; 联合查找"></a>不相交集 &amp; 联合查找</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Disjoint-set_data_structure" target="_blank" rel="noopener">不相交集</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=MAEGXTwmUsI&amp;list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd&amp;index=21" target="_blank" rel="noopener">UCB 61B - 不相交集; 排序 &amp; 选择(视频)</a></li>
<li><input disabled="" type="checkbox"> Coursera (not needed since the above video explains it great):<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/JssSY/overview" target="_blank" rel="noopener">概览</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/EM5D0/naive-implementations" target="_blank" rel="noopener">初级实践</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/Mxu0w/trees" target="_blank" rel="noopener">树状结构</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/qb4c2/union-by-rank" target="_blank" rel="noopener">合并树状结构</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/Q9CVI/path-compression" target="_blank" rel="noopener">路径压缩</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/GQQLN/analysis-optional" target="_blank" rel="noopener">分析选项</a></li>
</ul>
</li>
</ul>
</li>
<li><h3 id="快速处理数学"><a href="#快速处理数学" class="headerlink" title="快速处理数学"></a>快速处理数学</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=eCaXlAaN2uE&amp;index=11&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">整数运算, Karatsuba 乘法 (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ru7mWZJlRQg" target="_blank" rel="noopener">中国剩余定理 (在密码学中的使用) (视频)</a></li>
</ul>
</li>
<li><h3 id="树堆-Treap"><a href="#树堆-Treap" class="headerlink" title="树堆 (Treap)"></a>树堆 (Treap)</h3><ul>
<li>一个二叉搜索树和一个堆的组合</li>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Treap" target="_blank" rel="noopener">树堆</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=6podLUYinH8" target="_blank" rel="noopener">数据结构：树堆的讲解(video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.cs.cmu.edu/~scandal/papers/treaps-spaa98.pdf" target="_blank" rel="noopener">集合操作的应用(Applications in set operations)</a></li>
</ul>
</li>
<li><h3 id="线性规划（Linear-Programming）（视频）"><a href="#线性规划（Linear-Programming）（视频）" class="headerlink" title="线性规划（Linear Programming）（视频）"></a>线性规划（Linear Programming）（视频）</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=M4K6HYLHREQ" target="_blank" rel="noopener">线性规划</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=2ACJ9ewUC6U" target="_blank" rel="noopener">寻找最小成本</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=8AA_81xI3ik" target="_blank" rel="noopener">寻找最大值</a></li>
</ul>
</li>
<li><h3 id="几何：凸包（Geometry-Convex-hull）（视频）"><a href="#几何：凸包（Geometry-Convex-hull）（视频）" class="headerlink" title="几何：凸包（Geometry, Convex hull）（视频）"></a>几何：凸包（Geometry, Convex hull）（视频）</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/XIAQRlNkJAw?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;t=3164" target="_blank" rel="noopener">Graph Alg. IV: 几何算法介绍 - 第 9 课</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=J5aJEcOr6Eo&amp;index=10&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm" target="_blank" rel="noopener">Graham &amp; Jarvis: 几何算法 - 第 10 课</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=EzeYI7p9MjU&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=2" target="_blank" rel="noopener">Divide &amp; Conquer: 凸包, 中值查找</a></li>
</ul>
</li>
<li><h3 id="离散数学"><a href="#离散数学" class="headerlink" title="离散数学"></a>离散数学</h3><ul>
<li>查看下面的视频：(这里没看到视频= =）</li>
</ul>
</li>
<li><h3 id="机器学习（Machine-Learning）"><a href="#机器学习（Machine-Learning）" class="headerlink" title="机器学习（Machine Learning）"></a>机器学习（Machine Learning）</h3><ul>
<li><input disabled="" type="checkbox"> 为什么学习机器学习？<ul>
<li><input disabled="" type="checkbox"> <a href="https://backchannel.com/how-google-is-remaking-itself-as-a-machine-learning-first-company-ada63defcb70" target="_blank" rel="noopener">谷歌如何将自己改造成一家「机器学习优先」公司？</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=QSaZGT4-6EY" target="_blank" rel="noopener">智能计算机系统的大规模深度学习 (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=X769cyzBNVw" target="_blank" rel="noopener">Peter Norvig：深度学习和理解与软件工程和验证的对比</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Ja2hxBAwG_0" target="_blank" rel="noopener">谷歌云机器学习工具（视频）</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/playlist?list=PLOU2XLYxmsIIuiBfYad6rFYQU_jL2ryal" target="_blank" rel="noopener">谷歌开发者机器学习清单 (Scikit Learn 和 Tensorflow) (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=oZikw5k_2FM" target="_blank" rel="noopener">Tensorflow (视频)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.tensorflow.org/versions/r0.11/tutorials/index.html" target="_blank" rel="noopener">Tensorflow 教程</a></li>
<li><input disabled="" type="checkbox"> <a href="http://www.analyticsvidhya.com/blog/2016/04/neural-networks-python-theano/" target="_blank" rel="noopener">Python 实现神经网络实例教程（使用 Theano）</a></li>
<li>课程:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/machine-learning" target="_blank" rel="noopener">很棒的初级课程：机器学习</a><pre><code>- [视频教程](https://www.youtube.com/playlist?list=PLZ9qNFMHZ-A4rycgrgOYma6zxF4BZGGPW)
- 看第 12-18 集复习线性代数（第 14 集和第 15 集是重复的）</code></pre></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/neural-networks" target="_blank" rel="noopener">机器学习中的神经网络</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.udacity.com/course/deep-learning--ud730" target="_blank" rel="noopener">Google 深度学习微学位</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.udacity.com/course/machine-learning-engineer-nanodegree-by-google--nd009" target="_blank" rel="noopener">Google/Kaggle 机器学习工程师微学位</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.udacity.com/drive" target="_blank" rel="noopener">无人驾驶工程师微学位</a></li>
<li><input disabled="" type="checkbox"> <a href="http://www.thisismetis.com/explore-data-science" target="_blank" rel="noopener">Metis 在线课程 (两个月 99 美元)</a></li>
</ul>
</li>
<li>资源:<ul>
<li>书籍: Data Science from Scratch: First Principles with Python: <a href="https://www.amazon.com/Data-Science-Scratch-Principles-Python/dp/149190142X" target="_blank" rel="noopener">https://www.amazon.com/Data-Science-Scratch-Principles-Python/dp/149190142X</a></li>
<li>网站: Data School: <a href="http://www.dataschool.io/" target="_blank" rel="noopener">http://www.dataschool.io/</a></li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Go-语言"><a href="#Go-语言" class="headerlink" title="Go 语言"></a>Go 语言</h3><ul>
<li><input disabled="" type="checkbox"> 视频:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=FTl0tl9BGdc" target="_blank" rel="noopener">为什么学习 Go 语言？</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=CF9S4QZuV30" target="_blank" rel="noopener">Go 语言编程</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ytEkHepK08c" target="_blank" rel="noopener">Go 语言之旅</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 书籍:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.golang-book.com/books/intro" target="_blank" rel="noopener">Go 语言编程入门 (免费在线阅读)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.amazon.com/Programming-Language-Addison-Wesley-Professional-Computing/dp/0134190440" target="_blank" rel="noopener">Go 语言圣经 (Donovan &amp; Kernighan)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.golang-book.com/guides/bootcamp" target="_blank" rel="noopener">Go 语言新手训练营</a></li>
</ul>
</li>
</ul>
<p>–</p>
<h2 id="一些主题的额外内容"><a href="#一些主题的额外内容" class="headerlink" title="一些主题的额外内容"></a>一些主题的额外内容</h2><pre><code>我为前面提到的某些主题增加了一些额外的内容，之所以没有直接添加到前面，是因为这样很容易导致某个主题内容过多。毕竟你想在本世纪找到一份工作，对吧？</code></pre><ul>
<li><input disabled="" type="checkbox"> <p><strong>动态规划的更多内容</strong> (视频)</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=OQ5jsbhAv_M&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=19" target="_blank" rel="noopener">6.006: 动态规划 I: 斐波那契数列, 最短路径</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ENyox7kNKeY&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=20" target="_blank" rel="noopener">6.006: 动态规划 II: 文本匹配, 二十一点/黑杰克</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ocZMDMZwhCY&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=21" target="_blank" rel="noopener">6.006: 动态规划 III: 最优加括号方式, 最小编辑距离, 背包问题</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=tp4_UXaVyx8&amp;index=22&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">6.006: 动态规划 IV: 吉他指法，拓扑，超级马里奥.</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Tw1k46ywN6E&amp;index=14&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">6.046: 动态规划: 动态规划进阶</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=NzgFUwOaoIw&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=15" target="_blank" rel="noopener">6.046: 动态规划: 所有点对最短路径</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=krZI60lKPek&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=12" target="_blank" rel="noopener">6.046: 动态规划: 更多示例</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><strong>图形处理进阶</strong> (视频)</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=mUBmcbbJNf4&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=27" target="_blank" rel="noopener">异步分布式算法: 对称性破缺，最小生成树</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=kQ-UQAzcnzA&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=28" target="_blank" rel="noopener">异步分布式算法: 最小生成树</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>MIT <strong>概率论</strong> (mathy, and go slowly, which is good for mathy things) (视频):</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=SmFwFdESMHI&amp;index=18&amp;list=PLB7540DEDD482705B" target="_blank" rel="noopener">MIT 6.042J - 概率论概述</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=E6FbvM-FGZ8&amp;index=19&amp;list=PLB7540DEDD482705B" target="_blank" rel="noopener">MIT 6.042J - 条件概率 Probability</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=l1BCv3qqW4A&amp;index=20&amp;list=PLB7540DEDD482705B" target="_blank" rel="noopener">MIT 6.042J - 独立</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=MOfhhFaQdjw&amp;list=PLB7540DEDD482705B&amp;index=21" target="_blank" rel="noopener">MIT 6.042J - 随机变量</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=gGlMSe7uEkA&amp;index=22&amp;list=PLB7540DEDD482705B" target="_blank" rel="noopener">MIT 6.042J - 期望 I</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=oI9fMUqgfxY&amp;index=23&amp;list=PLB7540DEDD482705B" target="_blank" rel="noopener">MIT 6.042J - 期望 II</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=q4mwO2qS2z4&amp;index=24&amp;list=PLB7540DEDD482705B" target="_blank" rel="noopener">MIT 6.042J - 大偏差</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=56iFMY8QW2k&amp;list=PLB7540DEDD482705B&amp;index=25" target="_blank" rel="noopener">MIT 6.042J - 随机游走</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=oDniZCmNmNw&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=19" target="_blank" rel="noopener">Simonson: 近似算法 (视频)</a></p>
</li>
</ul>
<h2 id="视频系列"><a href="#视频系列" class="headerlink" title="视频系列"></a>视频系列</h2><p> 坐下来享受一下吧。”netflix and skill” :P</p>
<ul>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr" target="_blank" rel="noopener">个人的动态规划问题列表 (都是短视频哟)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/playlist?list=PL038BE01D3BAEFDB0" target="_blank" rel="noopener">x86 架构，汇编，应用程序 (11 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/playlist?list=PLE7DDD91010BC51F8" target="_blank" rel="noopener">MIT 18.06 线性代数，2005 年春季 (35 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/playlist?list=PL3B08AE665AB9002A" target="_blank" rel="noopener">绝妙的 MIT 微积分：单变量微积分</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/playlist?list=PL-XXv-cvA_iD8wQm8U0gG_Z1uHjImKXFy" target="_blank" rel="noopener">计算机科学 70, 001 - 2015 年春季 - 离散数学和概率理论</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/playlist?list=PL3o9D4Dl2FJ9q0_gtFXPh_H4POI5dK0yG" target="_blank" rel="noopener">离散数学 (19 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p>CSE373 - 算法分析 (25 个视频)</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=ZFjhkohHdAA&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;index=1" target="_blank" rel="noopener">Skiena 的算法设计手册讲座</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=mFPmKGIrQs4&amp;list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd" target="_blank" rel="noopener">UC Berkeley 61B (2014 年春季): 数据结构 (25 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/playlist?list=PL4BBB74C7D2A1049C" target="_blank" rel="noopener">UC Berkeley 61B (2006 年秋季): 数据结构 (39 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=gJJeUFyuvvg&amp;list=PL-XXv-cvA_iCl2-D-FS5mk0jFF6cYSJs_" target="_blank" rel="noopener">UC Berkeley 61C: 计算机结构 (26 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/playlist?list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO" target="_blank" rel="noopener">OOSE: 使用 UML 和 Java 进行软件开发 (21 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=UH0QYvtP7Rk&amp;index=20&amp;list=PLkFD6_40KJIwEiwQx1dACXwh-2Fuo32qr" target="_blank" rel="noopener">UC Berkeley CS 152: 计算机结构和工程 (20 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/playlist?list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-" target="_blank" rel="noopener">MIT 6.004: 计算结构 (49 视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/playlist?list=PL5PHm2jkkXmi5CxxI7b3JCL1TWybTDtKq" target="_blank" rel="noopener">卡內基梅隆大学 - 计算机架构讲座 (39 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=HtSuA80QTyo&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;nohtml5=False" target="_blank" rel="noopener">MIT 6.006: 算法介绍 (47 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=zm2VP0kHl1M&amp;list=PL6535748F59DCA484" target="_blank" rel="noopener">MIT 6.033: 计算机系统工程 (22 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/playlist?list=PLUl4u3cNGP63gFHB6xb-kVBiQHYe_4hSi" target="_blank" rel="noopener">MIT 6.034 人工智能, 2010 年秋季 (30 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=L3LMbpZIKhQ&amp;list=PLB7540DEDD482705B" target="_blank" rel="noopener">MIT 6.042J: 计算机科学数学, 2010 年秋季 (25 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=2P-yW7LQr08&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">MIT 6.046: 算法设计与分析 (34 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=phxsQrZQupo&amp;list=PL_2Bwul6T-A7OldmhGODImZL8KEVE38X7" target="_blank" rel="noopener">MIT 6.050J: 信息和熵, 2008 年春季 (19 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=T0yzrZL1py0&amp;list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf&amp;index=1" target="_blank" rel="noopener">MIT 6.851: 高等数据结构 (22 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/playlist?list=PL6ogFv-ieghdoGKGg2Bik3Gl1glBTEu8c" target="_blank" rel="noopener">MIT 6.854: 高等算法, 2016 年春季 (24 个视频)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=GqmQg-cszw4&amp;index=1&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">MIT 6.858计算机系统安全, 2014 年秋季</a></p>
</li>
<li><input disabled="" type="checkbox"> <p>斯坦福: 编程范例 (17 个视频)</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=jTSvthW34GU&amp;list=PLC0B8B318B7394B6F&amp;nohtml5=False" target="_blank" rel="noopener">C 和 C++ 课程</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=2aHkqB2-46k&amp;feature=youtu.be" target="_blank" rel="noopener">密码学导论</a></p>
<ul>
<li><a href="https://www.youtube.com/channel/UC1usFRN4LCMcfIV7UjHNuQg" target="_blank" rel="noopener">本系列更多内容 (不分先后顺序)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/playlist?list=PLLssT5z_DsK9JDLcT8T62VtzwyW9LNepV" target="_blank" rel="noopener">大数据 - 斯坦福大学 (94 个视频)</a></p>
</li>
</ul>
<h2 id="计算机科学课程"><a href="#计算机科学课程" class="headerlink" title="计算机科学课程"></a>计算机科学课程</h2><ul>
<li><a href="https://github.com/open-source-society/computer-science" target="_blank" rel="noopener"> 在线 CS 课程目录 </a></li>
<li><a href="https://github.com/prakhar1989/awesome-courses" target="_blank" rel="noopener">CS 课程目录 (一些是在线讲座)</a></li>
</ul>
]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>Coding Interview University (英文对照版本)</title>
    <url>/2020/03/27/2020-03-27-Coding%20Interview%20University-Readme/</url>
    <content><![CDATA[<h1 id="Coding-Interview-University"><a href="#Coding-Interview-University" class="headerlink" title="Coding Interview University"></a>Coding Interview University</h1><blockquote>
<p>I originally created this as a short to-do list of study topics for becoming a software engineer,<br>but it grew to the large list you see today. After going through this study plan, <a href="https://startupnextdoor.com/ive-been-acquired-by-amazon/?src=ciu" target="_blank" rel="noopener">I got hired<br>as a Software Development Engineer at Amazon</a>!<br>You probably won’t have to study as much as I did. Anyway, everything you need is here.</p>
<p>I studied about 8-12 hours a day, for several months. This is my story: <a href="https://medium.freecodecamp.org/why-i-studied-full-time-for-8-months-for-a-google-interview-cc662ce9bb13" target="_blank" rel="noopener">Why I studied full-time for 8 months for a Google interview</a></p>
<p>The items listed here will prepare you well for a technical interview at just about any software company,<br>including the giants: Amazon, Facebook, Google, and Microsoft.</p>
<p><em>Best of luck to you!</em></p>
</blockquote>
<details>
<summary>Translations:</summary>

<ul>
<li><a href="translations/README-cn.md">中文版本</a></li>
<li><a href="translations/README-vi.md">Tiếng Việt - Vietnamese</a></li>
<li><a href="translations/README-es.md">Español</a></li>
<li><a href="translations/README-ptbr.md">Português Brasileiro</a></li>
</ul>
</details>

<details>
<summary>Translations in progress:</summary>

<ul>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/81" target="_blank" rel="noopener">हिन्दी</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/82" target="_blank" rel="noopener">עברית</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/101" target="_blank" rel="noopener">Bahasa Indonesia</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/98" target="_blank" rel="noopener">Arabic</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/90" target="_blank" rel="noopener">Turkish</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/89" target="_blank" rel="noopener">French</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/87" target="_blank" rel="noopener">Russian</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/106" target="_blank" rel="noopener">Ukrainian</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/118" target="_blank" rel="noopener">Korean(한국어)</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/117" target="_blank" rel="noopener">Telugu</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/122" target="_blank" rel="noopener">Polish</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/140" target="_blank" rel="noopener">Urdu</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/156" target="_blank" rel="noopener">Thai</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/166" target="_blank" rel="noopener">Greek</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/170" target="_blank" rel="noopener">Italian</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/239" target="_blank" rel="noopener">Malayalam</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/issues/257" target="_blank" rel="noopener">Japanese (日本語)</a></li>
</ul>
</details>

<h2 id="What-is-it"><a href="#What-is-it" class="headerlink" title="What is it?"></a>What is it?</h2><p>This is my multi-month study plan for going from web developer (self-taught, no CS degree) to software engineer for a large company.</p>
<p><img src="https://d3j2pkmjtin6ou.cloudfront.net/coding-at-the-whiteboard-silicon-valley.png" alt="Coding at the whiteboard - from HBO's Silicon Valley"></p>
<p>This is meant for <strong>new software engineers</strong> or those switching from<br>software/web development to software engineering (where computer science knowledge is required). If you have<br>many years of experience and are claiming many years of software engineering experience, expect a harder interview.</p>
<p>If you have many years of software/web development experience, note that large software companies like Google, Amazon,<br>Facebook and Microsoft view software engineering as different from software/web development, and they require computer science knowledge.</p>
<p>If you want to be a reliability engineer or operations engineer, study more from the optional list (networking, security).</p>
<hr>
<h2 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h2><ul>
<li><a href="#what-is-it">What is it?</a></li>
<li><a href="#why-use-it">Why use it?</a></li>
<li><a href="#how-to-use-it">How to use it</a></li>
<li><a href="#dont-feel-you-arent-smart-enough">Don’t feel you aren’t smart enough</a></li>
<li><a href="#about-video-resources">About Video Resources</a></li>
<li><a href="#interview-process--general-interview-prep">Interview Process &amp; General Interview Prep</a></li>
<li><a href="#pick-one-language-for-the-interview">Pick One Language for the Interview</a></li>
<li><a href="#book-list">Book List</a></li>
<li><a href="#before-you-get-started">Before you Get Started</a></li>
<li><a href="#what-you-wont-see-covered">What you Won’t See Covered</a></li>
<li><a href="#prerequisite-knowledge">Prerequisite Knowledge</a></li>
<li><a href="#the-daily-plan">The Daily Plan</a></li>
<li><a href="#algorithmic-complexity--big-o--asymptotic-analysis">Algorithmic complexity / Big-O / Asymptotic analysis</a></li>
<li><a href="#data-structures">Data Structures</a><ul>
<li><a href="#arrays">Arrays</a></li>
<li><a href="#linked-lists">Linked Lists</a></li>
<li><a href="#stack">Stack</a></li>
<li><a href="#queue">Queue</a></li>
<li><a href="#hash-table">Hash table</a></li>
</ul>
</li>
<li><a href="#more-knowledge">More Knowledge</a><ul>
<li><a href="#binary-search">Binary search</a></li>
<li><a href="#bitwise-operations">Bitwise operations</a></li>
</ul>
</li>
<li><a href="#trees">Trees</a><ul>
<li><a href="#trees---notes--background">Trees - Notes &amp; Background</a></li>
<li><a href="#binary-search-trees-bsts">Binary search trees: BSTs</a></li>
<li><a href="#heap--priority-queue--binary-heap">Heap / Priority Queue / Binary Heap</a></li>
<li>balanced search trees (general concept, not details)</li>
<li>traversals: preorder, inorder, postorder, BFS, DFS</li>
</ul>
</li>
<li><a href="#sorting">Sorting</a><ul>
<li>selection</li>
<li>insertion</li>
<li>heapsort</li>
<li>quicksort</li>
<li>merge sort</li>
</ul>
</li>
<li><a href="#graphs">Graphs</a><ul>
<li>directed</li>
<li>undirected</li>
<li>adjacency matrix</li>
<li>adjacency list</li>
<li>traversals: BFS, DFS</li>
</ul>
</li>
<li><a href="#even-more-knowledge">Even More Knowledge</a><ul>
<li><a href="#recursion">Recursion</a></li>
<li><a href="#dynamic-programming">Dynamic Programming</a></li>
<li><a href="#object-oriented-programming">Object-Oriented Programming</a></li>
<li><a href="#design-patterns">Design Patterns</a></li>
<li><a href="#combinatorics-n-choose-k--probability">Combinatorics (n choose k) &amp; Probability</a></li>
<li><a href="#np-np-complete-and-approximation-algorithms">NP, NP-Complete and Approximation Algorithms</a></li>
<li><a href="#caches">Caches</a></li>
<li><a href="#processes-and-threads">Processes and Threads</a></li>
<li><a href="#testing">Testing</a></li>
<li><a href="#scheduling">Scheduling</a></li>
<li><a href="#string-searching--manipulations">String searching &amp; manipulations</a></li>
<li><a href="#tries">Tries</a></li>
<li><a href="#floating-point-numbers">Floating Point Numbers</a></li>
<li><a href="#unicode">Unicode</a></li>
<li><a href="#endianness">Endianness</a></li>
<li><a href="#networking">Networking</a></li>
</ul>
</li>
<li><a href="#system-design-scalability-data-handling">System Design, Scalability, Data Handling</a> (if you have 4+ years experience)</li>
<li><a href="#final-review">Final Review</a></li>
<li><a href="#coding-question-practice">Coding Question Practice</a></li>
<li><a href="#coding-exerciseschallenges">Coding exercises/challenges</a></li>
<li><a href="#once-youre-closer-to-the-interview">Once you’re closer to the interview</a></li>
<li><a href="#your-resume">Your Resume</a></li>
<li><a href="#be-thinking-of-for-when-the-interview-comes">Be thinking of for when the interview comes</a></li>
<li><a href="#have-questions-for-the-interviewer">Have questions for the interviewer</a></li>
<li><a href="#once-youve-got-the-job">Once You’ve Got The Job</a></li>
</ul>
<p>—————- Everything below this point is optional —————-</p>
<h2 id="Additional-Resources"><a href="#Additional-Resources" class="headerlink" title="Additional Resources"></a>Additional Resources</h2><ul>
<li><a href="#additional-books">Additional Books</a></li>
<li><a href="#additional-learning">Additional Learning</a><ul>
<li><a href="#compilers">Compilers</a></li>
<li><a href="#emacs-and-vim">Emacs and vi(m)</a></li>
<li><a href="#unix-command-line-tools">Unix command line tools</a></li>
<li><a href="#information-theory-videos">Information theory</a></li>
<li><a href="#parity--hamming-code-videos">Parity &amp; Hamming Code</a></li>
<li><a href="#entropy">Entropy</a></li>
<li><a href="#cryptography">Cryptography</a></li>
<li><a href="#compression">Compression</a></li>
<li><a href="#computer-security">Computer Security</a></li>
<li><a href="#garbage-collection">Garbage collection</a></li>
<li><a href="#parallel-programming">Parallel Programming</a></li>
<li><a href="#messaging-serialization-and-queueing-systems">Messaging, Serialization, and Queueing Systems</a></li>
<li><a href="#a">A*</a></li>
<li><a href="#fast-fourier-transform">Fast Fourier Transform</a></li>
<li><a href="#bloom-filter">Bloom Filter</a></li>
<li><a href="#hyperloglog">HyperLogLog</a></li>
<li><a href="#locality-sensitive-hashing">Locality-Sensitive Hashing</a></li>
<li><a href="#van-emde-boas-trees">van Emde Boas Trees</a></li>
<li><a href="#augmented-data-structures">Augmented Data Structures</a></li>
<li><a href="#balanced-search-trees">Balanced search trees</a><ul>
<li>AVL trees</li>
<li>Splay trees</li>
<li>Red/black trees</li>
<li>2-3 search trees</li>
<li>2-3-4 Trees (aka 2-4 trees)</li>
<li>N-ary (K-ary, M-ary) trees</li>
<li>B-Trees</li>
</ul>
</li>
<li><a href="#k-d-trees">k-D Trees</a></li>
<li><a href="#skip-lists">Skip lists</a></li>
<li><a href="#network-flows">Network Flows</a></li>
<li><a href="#disjoint-sets--union-find">Disjoint Sets &amp; Union Find</a></li>
<li><a href="#math-for-fast-processing">Math for Fast Processing</a></li>
<li><a href="#treap">Treap</a></li>
<li><a href="#linear-programming-videos">Linear Programming</a></li>
<li><a href="#geometry-convex-hull-videos">Geometry, Convex hull</a></li>
<li><a href="#discrete-math">Discrete math</a></li>
<li><a href="#machine-learning">Machine Learning</a></li>
</ul>
</li>
<li><a href="#additional-detail-on-some-subjects">Additional Detail on Some Subjects</a></li>
<li><a href="#video-series">Video Series</a></li>
<li><a href="#computer-science-courses">Computer Science Courses</a></li>
<li><a href="#papers">Papers</a></li>
</ul>
<hr>
<h2 id="Why-use-it"><a href="#Why-use-it" class="headerlink" title="Why use it?"></a>Why use it?</h2><p>When I started this project, I didn’t know a stack from a heap, didn’t know Big-O anything, anything about trees, or how to<br>traverse a graph. If I had to code a sorting algorithm, I can tell ya it wouldn’t have been very good.<br>Every data structure I’ve ever used was built into the language, and I didn’t know how they worked<br>under the hood at all. I’ve never had to manage memory unless a process I was running would give an “out of<br>memory” error, and then I’d have to find a workaround. I’ve used a few multidimensional arrays in my life and<br>thousands of associative arrays, but I’ve never created data structures from scratch.</p>
<p>It’s a long plan. It may take you months. If you are familiar with a lot of this already it will take you a lot less time.</p>
<h2 id="How-to-use-it"><a href="#How-to-use-it" class="headerlink" title="How to use it"></a>How to use it</h2><p>Everything below is an outline, and you should tackle the items in order from top to bottom.</p>
<p>I’m using Github’s special markdown flavor, including tasks lists to check progress.</p>
<p><strong>Create a new branch so you can check items like this, just put an x in the brackets: [x]</strong></p>
<pre><code>Fork a branch and follow the commands below</code></pre><p><code>git checkout -b progress</code></p>
<p><code>git remote add jwasham https://github.com/jwasham/coding-interview-university</code></p>
<p><code>git fetch --all</code></p>
<pre><code>Mark all boxes with X after you completed your changes</code></pre><p><code>git add .</code></p>
<p><code>git commit -m "Marked x"</code></p>
<p><code>git rebase jwasham/master</code></p>
<p><code>git push --force</code></p>
<p><a href="https://guides.github.com/features/mastering-markdown/#GitHub-flavored-markdown" target="_blank" rel="noopener">More about Github-flavored markdown</a></p>
<h2 id="Don’t-feel-you-aren’t-smart-enough"><a href="#Don’t-feel-you-aren’t-smart-enough" class="headerlink" title="Don’t feel you aren’t smart enough"></a>Don’t feel you aren’t smart enough</h2><ul>
<li>Successful software engineers are smart, but many have an insecurity that they aren’t smart enough.</li>
<li><a href="https://www.youtube.com/watch?v=0SARbwvhupQ" target="_blank" rel="noopener">The myth of the Genius Programmer</a></li>
<li><a href="https://www.youtube.com/watch?v=1i8ylq4j_EY" target="_blank" rel="noopener">It’s Dangerous to Go Alone: Battling the Invisible Monsters in Tech</a></li>
</ul>
<h2 id="About-Video-Resources"><a href="#About-Video-Resources" class="headerlink" title="About Video Resources"></a>About Video Resources</h2><p>Some videos are available only by enrolling in a Coursera or EdX class. These are called MOOCs.<br>Sometimes the classes are not in session so you have to wait a couple of months, so you have no access.</p>
<pre><code>I'd appreciate your help to add free and always-available public sources, such as YouTube videos to accompany the online course videos.
I like using university lectures.</code></pre><h2 id="Interview-Process-amp-General-Interview-Prep"><a href="#Interview-Process-amp-General-Interview-Prep" class="headerlink" title="Interview Process &amp; General Interview Prep"></a>Interview Process &amp; General Interview Prep</h2><ul>
<li><input disabled="" type="checkbox"> <a href="https://medium.com/always-be-coding/abc-always-be-coding-d5f8051afce2#.4heg8zvm4" target="_blank" rel="noopener">ABC: Always Be Coding</a></li>
<li><input disabled="" type="checkbox"> <a href="https://medium.com/@dpup/whiteboarding-4df873dbba2e#.hf6jn45g1" target="_blank" rel="noopener">Whiteboarding</a></li>
<li><input disabled="" type="checkbox"> <a href="http://www.coderust.com/blog/2014/04/10/effective-whiteboarding-during-programming-interviews/" target="_blank" rel="noopener">Effective Whiteboarding during Programming Interviews</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=N233T0epWTs" target="_blank" rel="noopener">Demystifying Tech Recruiting</a></li>
<li><input disabled="" type="checkbox"> How to Get a Job at the Big 4:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=YJZCUhxNCv8" target="_blank" rel="noopener">How to Get a Job at the Big 4 - Amazon, Facebook, Google &amp; Microsoft (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Cracking The Coding Interview Set 1:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=rEJzOhC5ZtQ" target="_blank" rel="noopener">Gayle L McDowell - Cracking The Coding Interview (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=aClxtDcdpsQ" target="_blank" rel="noopener">Cracking the Coding Interview with Author Gayle Laakmann McDowell (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Cracking the Facebook Coding Interview<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=wCl9kvQGHPI" target="_blank" rel="noopener">The Approach</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=4UWDyJq8jZg" target="_blank" rel="noopener">Problem Walkthrough</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Prep Course:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.udemy.com/software-engineer-interview-unleashed" target="_blank" rel="noopener">Software Engineer Interview Unleashed (paid course)</a>:<ul>
<li>Learn how to make yourself ready for software engineer interviews from a former Google interviewer.</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.udemy.com/python-for-data-structures-algorithms-and-interviews/" target="_blank" rel="noopener">Python for Data Structures, Algorithms, and Interviews (paid course)</a>:<ul>
<li>A Python centric interview prep course which covers data structures, algorithms, mock interviews and much more.</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.udacity.com/course/data-structures-and-algorithms-in-python--ud513" target="_blank" rel="noopener">Intro to Data Structures and Algorithms using Python (Udacity free course)</a>:<ul>
<li>A free Python centric data structures and algorithms course.</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.udacity.com/course/data-structures-and-algorithms-nanodegree--nd256" target="_blank" rel="noopener">Data Structures and Algorithms Nanodegree! (Udacity paid Nanodegree)</a>:<ul>
<li>Get hands-on practice with over 100 data structures and algorithm exercises and guidance from a dedicated mentor to help prepare you for interviews and on-the-job scenarios.</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Pick-One-Language-for-the-Interview"><a href="#Pick-One-Language-for-the-Interview" class="headerlink" title="Pick One Language for the Interview"></a>Pick One Language for the Interview</h2><p>You can use a language you are comfortable in to do the coding part of the interview, but for large companies, these are solid choices:</p>
<ul>
<li>C++</li>
<li>Java</li>
<li>Python</li>
</ul>
<p>You could also use these, but read around first. There may be caveats:</p>
<ul>
<li>JavaScript</li>
<li>Ruby</li>
</ul>
<p>Here is an article I wrote about choosing a language for the interview: <a href="https://startupnextdoor.com/important-pick-one-language-for-the-coding-interview/" target="_blank" rel="noopener">Pick One Language for the Coding Interview</a></p>
<p>You need to be very comfortable in the language and be knowledgeable.</p>
<p>Read more about choices:</p>
<ul>
<li><a href="http://www.byte-by-byte.com/choose-the-right-language-for-your-coding-interview/" target="_blank" rel="noopener">http://www.byte-by-byte.com/choose-the-right-language-for-your-coding-interview/</a></li>
<li><a href="http://blog.codingforinterviews.com/best-programming-language-jobs/" target="_blank" rel="noopener">http://blog.codingforinterviews.com/best-programming-language-jobs/</a></li>
</ul>
<p><a href="programming-language-resources.md">See language resources here</a></p>
<p>You’ll see some C, C++, and Python learning included below, because I’m learning. There are a few books involved, see the bottom.</p>
<h2 id="Book-List"><a href="#Book-List" class="headerlink" title="Book List"></a>Book List</h2><p>This is a shorter list than what I used. This is abbreviated to save you time.</p>
<h3 id="Interview-Prep"><a href="#Interview-Prep" class="headerlink" title="Interview Prep"></a>Interview Prep</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.amazon.com/Programming-Interviews-Exposed-Through-Interview/dp/111941847X/" target="_blank" rel="noopener">Programming Interviews Exposed: Coding Your Way Through the Interview, 4th Edition</a><ul>
<li>answers in C++ and Java</li>
<li>this is a good warm-up for Cracking the Coding Interview</li>
<li>not too difficult, most problems may be easier than what you’ll see in an interview (from what I’ve read)</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://www.amazon.com/Cracking-Coding-Interview-6th-Programming/dp/0984782850/" target="_blank" rel="noopener">Cracking the Coding Interview, 6th Edition</a><ul>
<li>answers in Java</li>
</ul>
</li>
</ul>
<h3 id="If-you-have-tons-of-extra-time"><a href="#If-you-have-tons-of-extra-time" class="headerlink" title="If you have tons of extra time:"></a>If you have tons of extra time:</h3><p>Choose one:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.amazon.com/Elements-Programming-Interviews-Insiders-Guide/dp/1479274836" target="_blank" rel="noopener">Elements of Programming Interviews (C++ version)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.amazon.com/Elements-Programming-Interviews-Python-Insiders/dp/1537713949/" target="_blank" rel="noopener">Elements of Programming Interviews in Python</a></li>
<li><input disabled="" type="checkbox"> Elements of Programming Interviews (Java version)<ul>
<li><a href="https://www.amazon.com/Elements-Programming-Interviews-Java-Insiders/dp/1517435803/" target="_blank" rel="noopener">book</a></li>
<li><a href="https://github.com/gardncl/elements-of-programming-interviews" target="_blank" rel="noopener">Companion Project - Method Stub and Test Cases for Every Problem in the Book</a></li>
</ul>
</li>
</ul>
<h3 id="Language-Specific"><a href="#Language-Specific" class="headerlink" title="Language Specific"></a>Language Specific</h3><p><strong>You need to choose a language for the interview (see above).</strong></p>
<p>Here are my recommendations by language. I don’t have resources for all languages. I welcome additions.</p>
<p>If you read through one of these, you should have all the data structures and algorithms knowledge you’ll need to start doing coding problems.<br><strong>You can skip all the video lectures in this project</strong>, unless you’d like a review.</p>
<p><a href="programming-language-resources.md">Additional language-specific resources here.</a></p>
<h3 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h3><p>I haven’t read these two, but they are highly rated and written by Sedgewick. He’s awesome.</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.amazon.com/Algorithms-Parts-1-4-Fundamentals-Structure/dp/0201350882/" target="_blank" rel="noopener">Algorithms in C++, Parts 1-4: Fundamentals, Data Structure, Sorting, Searching</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.amazon.com/Algorithms-Part-Graph-3rd-Pt-5/dp/0201361183/" target="_blank" rel="noopener">Algorithms in C++ Part 5: Graph Algorithms</a></li>
</ul>
<p>If you have a better recommendation for C++, please let me know. Looking for a comprehensive resource.</p>
<h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.amazon.com/Algorithms-4th-Robert-Sedgewick/dp/032157351X/" target="_blank" rel="noopener">Algorithms (Sedgewick and Wayne)</a><ul>
<li>videos with book content (and Sedgewick!) on coursera:<ul>
<li><a href="https://www.coursera.org/learn/algorithms-part1" target="_blank" rel="noopener">Algorithms I</a></li>
<li><a href="https://www.coursera.org/learn/algorithms-part2" target="_blank" rel="noopener">Algorithms II</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p>OR:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.amazon.com/Data-Structures-Algorithms-Michael-Goodrich/dp/1118771338/" target="_blank" rel="noopener">Data Structures and Algorithms in Java</a><ul>
<li>by Goodrich, Tamassia, Goldwasser</li>
<li>used as optional text for CS intro course at UC Berkeley</li>
<li>see my book report on the Python version below. This book covers the same topics.</li>
</ul>
</li>
</ul>
<h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.amazon.com/Structures-Algorithms-Python-Michael-Goodrich/dp/1118290275/" target="_blank" rel="noopener">Data Structures and Algorithms in Python</a><ul>
<li>by Goodrich, Tamassia, Goldwasser</li>
<li>I loved this book. It covered everything and more.</li>
<li>Pythonic code</li>
<li>my glowing book report: <a href="https://startupnextdoor.com/book-report-data-structures-and-algorithms-in-python/" target="_blank" rel="noopener">https://startupnextdoor.com/book-report-data-structures-and-algorithms-in-python/</a></li>
</ul>
</li>
</ul>
<h2 id="Before-you-Get-Started"><a href="#Before-you-Get-Started" class="headerlink" title="Before you Get Started"></a>Before you Get Started</h2><p>This list grew over many months, and yes, it kind of got out of hand.</p>
<p>Here are some mistakes I made so you’ll have a better experience.</p>
<h3 id="1-You-Won’t-Remember-it-All"><a href="#1-You-Won’t-Remember-it-All" class="headerlink" title="1. You Won’t Remember it All"></a>1. You Won’t Remember it All</h3><p>I watched hours of videos and took copious notes, and months later there was much I didn’t remember. I spent 3 days going<br>through my notes and making flashcards so I could review.</p>
<p>Read please so you won’t make my mistakes:</p>
<p><a href="https://startupnextdoor.com/retaining-computer-science-knowledge/" target="_blank" rel="noopener">Retaining Computer Science Knowledge</a>.</p>
<p>A course recommended to me (haven’t taken it): <a href="https://www.coursera.org/learn/learning-how-to-learn" target="_blank" rel="noopener">Learning how to Learn</a></p>
<h3 id="2-Use-Flashcards"><a href="#2-Use-Flashcards" class="headerlink" title="2. Use Flashcards"></a>2. Use Flashcards</h3><p>To solve the problem, I made a little flashcards site where I could add flashcards of 2 types: general and code.<br>Each card has different formatting.</p>
<p>I made a mobile-first website so I could review on my phone and tablet, wherever I am.</p>
<p>Make your own for free:</p>
<ul>
<li><a href="https://github.com/jwasham/computer-science-flash-cards" target="_blank" rel="noopener">Flashcards site repo</a></li>
<li><a href="https://github.com/jwasham/computer-science-flash-cards/blob/master/cards-jwasham.db" target="_blank" rel="noopener">My flash cards database (old - 1200 cards)</a>:</li>
<li><a href="https://github.com/jwasham/computer-science-flash-cards/blob/master/cards-jwasham-extreme.db" target="_blank" rel="noopener">My flash cards database (new - 1800 cards)</a>:</li>
</ul>
<p>Keep in mind I went overboard and have cards covering everything from assembly language and Python trivia to machine learning and statistics. It’s way too much for what’s required.</p>
<p><strong>Note on flashcards:</strong> The first time you recognize you know the answer, don’t mark it as known. You have to see the<br>same card and answer it several times correctly before you really know it. Repetition will put that knowledge deeper in<br>your brain.</p>
<p>An alternative to using my flashcard site is <a href="http://ankisrs.net/" target="_blank" rel="noopener">Anki</a>, which has been recommended to me numerous times. It uses a repetition system to help you remember.<br>It’s user-friendly, available on all platforms and has a cloud sync system. It costs $25 on iOS but is free on other platforms.</p>
<p>My flashcard database in Anki format: <a href="https://ankiweb.net/shared/info/25173560" target="_blank" rel="noopener">https://ankiweb.net/shared/info/25173560</a> (thanks <a href="https://github.com/xiewenya" target="_blank" rel="noopener">@xiewenya</a>)</p>
<h3 id="3-Start-doing-coding-interview-questions-while-you’re-learning-data-structures-and-algorithms"><a href="#3-Start-doing-coding-interview-questions-while-you’re-learning-data-structures-and-algorithms" class="headerlink" title="3. Start doing coding interview questions while you’re learning data structures and algorithms,"></a>3. Start doing coding interview questions while you’re learning data structures and algorithms,</h3><p>You need to apply what you’re learning to solving problems, or you’ll forget. I made this mistake. Once you’ve learned a topic,<br>and feel comfortable with it, like linked lists, open one of the coding interview books and do a couple of questions regarding<br>linked lists. Then move on to the next learning topic. Then later, go back and do another linked list problem,<br>or recursion problem, or whatever. But keep doing problems while you’re learning. You’re not being hired for knowledge,<br>but how you apply the knowledge. There are several books and sites I recommend.<br>See here for more: <a href="#coding-question-practice">Coding Question Practice</a></p>
<h3 id="4-Review-review-review"><a href="#4-Review-review-review" class="headerlink" title="4. Review, review, review"></a>4. Review, review, review</h3><p>I keep a set of cheat sheets on ASCII, OSI stack, Big-O notations, and more. I study them when I have some spare time.</p>
<p>Take a break from programming problems for a half hour and go through your flashcards.</p>
<h3 id="5-Focus"><a href="#5-Focus" class="headerlink" title="5. Focus"></a>5. Focus</h3><p>There are a lot of distractions that can take up valuable time. Focus and concentration are hard. Turn on some music<br>without lyrics and you’ll be able to focus pretty well.</p>
<h2 id="What-you-won’t-see-covered"><a href="#What-you-won’t-see-covered" class="headerlink" title="What you won’t see covered"></a>What you won’t see covered</h2><p>These are prevalent technologies but not part of this study plan:</p>
<ul>
<li>SQL</li>
<li>Javascript</li>
<li>HTML, CSS, and other front-end technologies</li>
</ul>
<h2 id="The-Daily-Plan"><a href="#The-Daily-Plan" class="headerlink" title="The Daily Plan"></a>The Daily Plan</h2><p>Some subjects take one day, and some will take multiple days. Some are just learning with nothing to implement.</p>
<p>Each day I take one subject from the list below, watch videos about that subject, and write an implementation in:</p>
<ul>
<li>C - using structs and functions that take a struct * and something else as args.</li>
<li>C++ - without using built-in types</li>
<li>C++ - using built-in types, like STL’s std::list for a linked list</li>
<li>Python - using built-in types (to keep practicing Python)</li>
<li>and write tests to ensure I’m doing it right, sometimes just using simple assert() statements</li>
<li>You may do Java or something else, this is just my thing.</li>
</ul>
<p>You don’t need all these. You need only <a href="#pick-one-language-for-the-interview">one language for the interview</a>.</p>
<p>Why code in all of these?</p>
<ul>
<li>Practice, practice, practice, until I’m sick of it, and can do it with no problem (some have many edge cases and bookkeeping details to remember)</li>
<li>Work within the raw constraints (allocating/freeing memory without help of garbage collection (except Python or Java))</li>
<li>Make use of built-in types so I have experience using the built-in tools for real-world use (not going to write my own linked list implementation in production)</li>
</ul>
<p>I may not have time to do all of these for every subject, but I’ll try.</p>
<p>You can see my code here:</p>
<ul>
<li><a href="https://github.com/jwasham/practice-c" target="_blank" rel="noopener">C</a></li>
<li><a href="https://github.com/jwasham/practice-cpp" target="_blank" rel="noopener">C++</a></li>
<li><a href="https://github.com/jwasham/practice-python" target="_blank" rel="noopener">Python</a></li>
</ul>
<p>You don’t need to memorize the guts of every algorithm.</p>
<p>Write code on a whiteboard or paper, not a computer. Test with some sample inputs. Then test it out on a computer.</p>
<h2 id="Prerequisite-Knowledge"><a href="#Prerequisite-Knowledge" class="headerlink" title="Prerequisite Knowledge"></a>Prerequisite Knowledge</h2><ul>
<li><input disabled="" type="checkbox"> <p><strong>Learn C</strong></p>
<ul>
<li>C is everywhere. You’ll see examples in books, lectures, videos, <em>everywhere</em> while you’re studying.</li>
<li><input disabled="" type="checkbox"> <a href="https://www.amazon.com/Programming-Language-Brian-W-Kernighan/dp/0131103628" target="_blank" rel="noopener">C Programming Language, Vol 2</a><ul>
<li>This is a short book, but it will give you a great handle on the C language and if you practice it a little<br>  you’ll quickly get proficient. Understanding C helps you understand how programs and memory work.</li>
<li><a href="https://github.com/lekkas/c-algorithms" target="_blank" rel="noopener">answers to questions</a></li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><strong>How computers process a program:</strong></p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=XM4lGflQFvA" target="_blank" rel="noopener">How CPU executes a program (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/1I5ZMmrOfnA" target="_blank" rel="noopener">How computers calculate - ALU (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/fpnE6UAfbtU" target="_blank" rel="noopener">Registers and RAM (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/FZGugFqdr60" target="_blank" rel="noopener">The Central Processing Unit (CPU) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/zltgXvg6r3k" target="_blank" rel="noopener">Instructions and Programs (video)</a></li>
</ul>
</li>
</ul>
<h2 id="Algorithmic-complexity-Big-O-Asymptotic-analysis"><a href="#Algorithmic-complexity-Big-O-Asymptotic-analysis" class="headerlink" title="Algorithmic complexity / Big-O / Asymptotic analysis"></a>Algorithmic complexity / Big-O / Asymptotic analysis</h2><ul>
<li>Nothing to implement</li>
<li>There are a lot of videos here. Just watch enough until you understand it. You can always come back and review.</li>
<li>If some of the lectures are too mathy, you can jump down to the bottom and watch the discrete mathematics videos to get the background knowledge.</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=iOq5kSKqeR4" target="_blank" rel="noopener">Harvard CS50 - Asymptotic Notation (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=V6mKVRU1evU" target="_blank" rel="noopener">Big O Notations (general quick tutorial) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ei-A_wy5Yxw&amp;index=2&amp;list=PL1BaGV1cIH4UhkL8a9bJGG356covJ76qN" target="_blank" rel="noopener">Big O Notation (and Omega and Theta) - best mathematical explanation (video)</a></li>
<li><input disabled="" type="checkbox"> Skiena:<ul>
<li><a href="https://www.youtube.com/watch?v=gSyDMtdPNpU&amp;index=2&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">video</a></li>
<li><a href="http://www3.cs.stonybrook.edu/~algorith/video-lectures/2007/lecture2.pdf" target="_blank" rel="noopener">slides</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://discrete.gr/complexity/" target="_blank" rel="noopener">A Gentle Introduction to Algorithm Complexity Analysis</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/lecture/algorithmic-thinking-1/orders-of-growth-6PKkX" target="_blank" rel="noopener">Orders of Growth (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/lecture/algorithmic-thinking-1/asymptotics-bXAtM" target="_blank" rel="noopener">Asymptotics (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/ucberkeley_webcast_VIS4YDpuP98" target="_blank" rel="noopener">UC Berkeley Big O (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/ucberkeley_webcast_ca3e7UVmeUc" target="_blank" rel="noopener">UC Berkeley Big Omega (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=B3SpQZaAZP4&amp;index=10&amp;list=PL1BaGV1cIH4UhkL8a9bJGG356covJ76qN" target="_blank" rel="noopener">Amortized Analysis (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/lecture/algorithmic-thinking-1/illustrating-big-o-YVqzv" target="_blank" rel="noopener">Illustrating “Big O” (video)</a></li>
<li><input disabled="" type="checkbox"> TopCoder (includes recurrence relations and master theorem):<ul>
<li><a href="https://www.topcoder.com/community/competitive-programming/tutorials/computational-complexity-section-1/" target="_blank" rel="noopener">Computational Complexity: Section 1</a></li>
<li><a href="https://www.topcoder.com/community/competitive-programming/tutorials/computational-complexity-section-2/" target="_blank" rel="noopener">Computational Complexity: Section 2</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://bigocheatsheet.com/" target="_blank" rel="noopener">Cheat sheet</a></li>
</ul>
<h2 id="Data-Structures"><a href="#Data-Structures" class="headerlink" title="Data Structures"></a>Data Structures</h2><ul>
<li><h3 id="Arrays"><a href="#Arrays" class="headerlink" title="Arrays"></a>Arrays</h3><ul>
<li>Implement an automatically resizing vector.</li>
<li><input disabled="" type="checkbox"> Description:<ul>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/OsBSF/arrays" target="_blank" rel="noopener">Arrays (video)</a></li>
<li><a href="https://archive.org/details/ucberkeley_webcast_Wp8oiO_CZZE" target="_blank" rel="noopener">UC Berkeley CS61B - Linear and Multi-Dim Arrays (video)</a> (Start watching from 15m 32s)</li>
<li><a href="https://archive.org/details/0102WhatYouShouldKnow/02_04-basicArrays.mp4" target="_blank" rel="noopener">Basic Arrays (video)</a></li>
<li><a href="https://archive.org/details/0102WhatYouShouldKnow/02_05-multidimensionalArrays.mp4" target="_blank" rel="noopener">Multi-dim (video)</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/EwbnV/dynamic-arrays" target="_blank" rel="noopener">Dynamic Arrays (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=1jtrQqYpt7g" target="_blank" rel="noopener">Jagged Arrays (video)</a></li>
<li><a href="https://archive.org/details/0102WhatYouShouldKnow/02_06-jaggedArrays.mp4" target="_blank" rel="noopener">Jagged Arrays (video)</a></li>
<li><a href="https://archive.org/details/0102WhatYouShouldKnow/03_01-resizableArrays.mp4" target="_blank" rel="noopener">Resizing arrays (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Implement a vector (mutable array with automatic resizing):<ul>
<li><input disabled="" type="checkbox"> Practice coding using arrays and pointers, and pointer math to jump to an index instead of using indexing.</li>
<li><input disabled="" type="checkbox"> new raw data array with allocated memory<ul>
<li>can allocate int array under the hood, just not use its features</li>
<li>start with 16, or if starting number is greater, use power of 2 - 16, 32, 64, 128</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> size() - number of items</li>
<li><input disabled="" type="checkbox"> capacity() - number of items it can hold</li>
<li><input disabled="" type="checkbox"> is_empty()</li>
<li><input disabled="" type="checkbox"> at(index) - returns item at given index, blows up if index out of bounds</li>
<li><input disabled="" type="checkbox"> push(item)</li>
<li><input disabled="" type="checkbox"> insert(index, item) - inserts item at index, shifts that index’s value and trailing elements to the right</li>
<li><input disabled="" type="checkbox"> prepend(item) - can use insert above at index 0</li>
<li><input disabled="" type="checkbox"> pop() - remove from end, return value</li>
<li><input disabled="" type="checkbox"> delete(index) - delete item at index, shifting all trailing elements left</li>
<li><input disabled="" type="checkbox"> remove(item) - looks for value and removes index holding it (even if in multiple places)</li>
<li><input disabled="" type="checkbox"> find(item) - looks for value and returns first index with that value, -1 if not found</li>
<li><input disabled="" type="checkbox"> resize(new_capacity) // private function<ul>
<li>when you reach capacity, resize to double the size</li>
<li>when popping an item, if size is 1/4 of capacity, resize to half</li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Time<ul>
<li>O(1) to add/remove at end (amortized for allocations for more space), index, or update</li>
<li>O(n) to insert/remove elsewhere</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Space<ul>
<li>contiguous in memory, so proximity helps performance</li>
<li>space needed = (array capacity, which is &gt;= n) * size of item, but even if 2n, still O(n)</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Linked-Lists"><a href="#Linked-Lists" class="headerlink" title="Linked Lists"></a>Linked Lists</h3><ul>
<li><input disabled="" type="checkbox"> Description:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/kHhgK/singly-linked-lists" target="_blank" rel="noopener">Singly Linked Lists (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/ucberkeley_webcast_htzJdKoEmO0" target="_blank" rel="noopener">CS 61B - Linked Lists 1 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/ucberkeley_webcast_-c4I3gFYe3w" target="_blank" rel="noopener">CS 61B - Linked Lists 2 (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=QN6FPiD0Gzo" target="_blank" rel="noopener">C Code (video)</a><pre><code>  - not the whole video, just portions about Node struct and memory allocation.</code></pre></li>
<li><input disabled="" type="checkbox"> Linked List vs Arrays:<ul>
<li><a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/rjBs9/core-linked-lists-vs-arrays" target="_blank" rel="noopener">Core Linked Lists Vs Arrays (video)</a></li>
<li><a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/QUaUd/in-the-real-world-lists-vs-arrays" target="_blank" rel="noopener">In The Real World Linked Lists Vs Arrays (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=YQs6IC-vgmo" target="_blank" rel="noopener">why you should avoid linked lists (video)</a></li>
<li><input disabled="" type="checkbox"> Gotcha: you need pointer to pointer knowledge:<br>  (for when you pass a pointer to a function that may change the address where that pointer points)<br>  This page is just to get a grasp on ptr to ptr. I don’t recommend this list traversal style. Readability and maintainability suffer due to cleverness.<ul>
<li><a href="https://www.eskimo.com/~scs/cclass/int/sx8.html" target="_blank" rel="noopener">Pointers to Pointers</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> implement (I did with tail pointer &amp; without):<ul>
<li><input disabled="" type="checkbox"> size() - returns number of data elements in list</li>
<li><input disabled="" type="checkbox"> empty() - bool returns true if empty</li>
<li><input disabled="" type="checkbox"> value_at(index) - returns the value of the nth item (starting at 0 for first)</li>
<li><input disabled="" type="checkbox"> push_front(value) - adds an item to the front of the list</li>
<li><input disabled="" type="checkbox"> pop_front() - remove front item and return its value</li>
<li><input disabled="" type="checkbox"> push_back(value) - adds an item at the end</li>
<li><input disabled="" type="checkbox"> pop_back() - removes end item and returns its value</li>
<li><input disabled="" type="checkbox"> front() - get value of front item</li>
<li><input disabled="" type="checkbox"> back() - get value of end item</li>
<li><input disabled="" type="checkbox"> insert(index, value) - insert value at index, so current item at that index is pointed to by new item at index</li>
<li><input disabled="" type="checkbox"> erase(index) - removes node at given index</li>
<li><input disabled="" type="checkbox"> value_n_from_end(n) - returns the value of the node at nth position from the end of the list</li>
<li><input disabled="" type="checkbox"> reverse() - reverses the list</li>
<li><input disabled="" type="checkbox"> remove_value(value) - removes the first item in the list with this value</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Doubly-linked List<ul>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/jpGKD/doubly-linked-lists" target="_blank" rel="noopener">Description (video)</a></li>
<li>No need to implement</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/UdKzQ/stacks" target="_blank" rel="noopener">Stacks (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/0102WhatYouShouldKnow/05_01-usingStacksForLast-inFirst-out.mp4" target="_blank" rel="noopener">Using Stacks Last-In First-Out (video)</a></li>
<li><input disabled="" type="checkbox"> Will not implement. Implementing with array is trivial.</li>
</ul>
</li>
<li><h3 id="Queue"><a href="#Queue" class="headerlink" title="Queue"></a>Queue</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/0102WhatYouShouldKnow/05_03-usingQueuesForFirst-inFirst-out.mp4" target="_blank" rel="noopener">Using Queues First-In First-Out(video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/lecture/data-structures/queues-EShpq" target="_blank" rel="noopener">Queue (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Circular_buffer" target="_blank" rel="noopener">Circular buffer/FIFO</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/0102WhatYouShouldKnow/05_04-priorityQueuesAndDeques.mp4" target="_blank" rel="noopener">Priority Queues (video)</a></li>
<li><input disabled="" type="checkbox"> Implement using linked-list, with tail pointer:<ul>
<li>enqueue(value) - adds value at position at tail</li>
<li>dequeue() - returns value and removes least recently added element (front)</li>
<li>empty()</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Implement using fixed-sized array:<ul>
<li>enqueue(value) - adds item at end of available storage</li>
<li>dequeue() - returns value and removes least recently added element</li>
<li>empty()</li>
<li>full()</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Cost:<ul>
<li>a bad implementation using linked list where you enqueue at head and dequeue at tail would be O(n)<br>  because you’d need the next to last element, causing a full traversal each dequeue</li>
<li>enqueue: O(1) (amortized, linked list and array [probing])</li>
<li>dequeue: O(1) (linked list and array)</li>
<li>empty: O(1) (linked list and array)</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Hash-table"><a href="#Hash-table" class="headerlink" title="Hash table"></a>Hash table</h3><ul>
<li><input disabled="" type="checkbox"> <p>Videos:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=0M_kIqhwbFo&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=8" target="_blank" rel="noopener">Hashing with Chaining (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=BRO7mVIFt08&amp;index=9&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">Table Doubling, Karp-Rabin (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=rvdJDijO2Ro&amp;index=10&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">Open Addressing, Cryptographic Hashing (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=C4Kc8xzcA68" target="_blank" rel="noopener">PyCon 2010: The Mighty Dictionary (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=z0lJ2k0sl1g&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=11" target="_blank" rel="noopener">(Advanced) Randomization: Universal &amp; Perfect Hashing (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=N0COwN14gt0&amp;list=PL2B4EEwhKD-NbwZ4ezj7gyc_3yNrojKM9&amp;index=4" target="_blank" rel="noopener">(Advanced) Perfect hashing (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>Online Courses:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/0102WhatYouShouldKnow/06_02-understandingHashFunctions.mp4" target="_blank" rel="noopener">Understanding Hash Functions (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/0102WhatYouShouldKnow/06_03-usingHashTables.mp4" target="_blank" rel="noopener">Using Hash Tables (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/0102WhatYouShouldKnow/06_04-supportingHashing.mp4" target="_blank" rel="noopener">Supporting Hashing (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/0102WhatYouShouldKnow/06_05-languageSupportForHashTables.mp4" target="_blank" rel="noopener">Language Support Hash Tables (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/m7UuP/core-hash-tables" target="_blank" rel="noopener">Core Hash Tables (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/home/week/3" target="_blank" rel="noopener">Data Structures (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/NYZZP/phone-book-problem" target="_blank" rel="noopener">Phone Book Problem (video)</a></li>
<li><input disabled="" type="checkbox"> distributed hash tables:<ul>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/DvaIb/instant-uploads-and-storage-optimization-in-dropbox" target="_blank" rel="noopener">Instant Uploads And Storage Optimization In Dropbox (video)</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/tvH8H/distributed-hash-tables" target="_blank" rel="noopener">Distributed Hash Tables (video)</a></li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>implement with array using linear probing</p>
<ul>
<li>hash(k, m) - m is size of hash table</li>
<li>add(key, value) - if key already exists, update value</li>
<li>exists(key)</li>
<li>get(key)</li>
<li>remove(key)</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="More-Knowledge"><a href="#More-Knowledge" class="headerlink" title="More Knowledge"></a>More Knowledge</h2><ul>
<li><h3 id="Binary-search"><a href="#Binary-search" class="headerlink" title="Binary search"></a>Binary search</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=D5SrAga1pno" target="_blank" rel="noopener">Binary Search (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.khanacademy.org/computing/computer-science/algorithms/binary-search/a/binary-search" target="_blank" rel="noopener">Binary Search (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.topcoder.com/community/competitive-programming/tutorials/binary-search/" target="_blank" rel="noopener">detail</a></li>
<li><input disabled="" type="checkbox"> Implement:<ul>
<li>binary search (on sorted array of integers)</li>
<li>binary search using recursion</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Bitwise-operations"><a href="#Bitwise-operations" class="headerlink" title="Bitwise operations"></a>Bitwise operations</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://github.com/jwasham/coding-interview-university/blob/master/extras/cheat%20sheets/bits-cheat-cheet.pdf" target="_blank" rel="noopener">Bits cheat sheet</a> - you should know many of the powers of 2 from (2^1 to 2^16 and 2^32)</li>
<li><input disabled="" type="checkbox"> Get a really good understanding of manipulating bits with: &amp;, |, ^, ~, &gt;&gt;, &lt;&lt;<ul>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Word_(computer_architecture)" target="_blank" rel="noopener">words</a></li>
<li><input disabled="" type="checkbox"> Good intro:<br>  <a href="https://www.youtube.com/watch?v=7jkIUgLC29I" target="_blank" rel="noopener">Bit Manipulation (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=d0AwjSpNXR0" target="_blank" rel="noopener">C Programming Tutorial 2-10: Bitwise Operators (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Bit_manipulation" target="_blank" rel="noopener">Bit Manipulation</a></li>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Bitwise_operation" target="_blank" rel="noopener">Bitwise Operation</a></li>
<li><input disabled="" type="checkbox"> <a href="https://graphics.stanford.edu/~seander/bithacks.html" target="_blank" rel="noopener">Bithacks</a></li>
<li><input disabled="" type="checkbox"> <a href="https://bits.stephan-brumme.com/" target="_blank" rel="noopener">The Bit Twiddler</a></li>
<li><input disabled="" type="checkbox"> <a href="https://bits.stephan-brumme.com/interactive.html" target="_blank" rel="noopener">The Bit Twiddler Interactive</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> 2s and 1s complement<ul>
<li><a href="https://www.youtube.com/watch?v=lKTsv6iVxV4" target="_blank" rel="noopener">Binary: Plusses &amp; Minuses (Why We Use Two’s Complement) (video)</a></li>
<li><a href="https://en.wikipedia.org/wiki/Ones%27_complement" target="_blank" rel="noopener">1s Complement</a></li>
<li><a href="https://en.wikipedia.org/wiki/Two%27s_complement" target="_blank" rel="noopener">2s Complement</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> count set bits<ul>
<li><a href="https://youtu.be/Hzuzo9NJrlc" target="_blank" rel="noopener">4 ways to count bits in a byte (video)</a></li>
<li><a href="https://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetKernighan" target="_blank" rel="noopener">Count Bits</a></li>
<li><a href="http://stackoverflow.com/questions/109023/how-to-count-the-number-of-set-bits-in-a-32-bit-integer" target="_blank" rel="noopener">How To Count The Number Of Set Bits In a 32 Bit Integer</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> swap values:<ul>
<li><a href="https://bits.stephan-brumme.com/swap.html" target="_blank" rel="noopener">Swap</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> absolute value:<ul>
<li><a href="https://bits.stephan-brumme.com/absInteger.html" target="_blank" rel="noopener">Absolute Integer</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Trees"><a href="#Trees" class="headerlink" title="Trees"></a>Trees</h2><ul>
<li><h3 id="Trees-Notes-amp-Background"><a href="#Trees-Notes-amp-Background" class="headerlink" title="Trees - Notes &amp; Background"></a>Trees - Notes &amp; Background</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/ovovP/core-trees" target="_blank" rel="noopener">Series: Core Trees (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/95qda/trees" target="_blank" rel="noopener">Series: Trees (video)</a></li>
<li>basic tree construction</li>
<li>traversal</li>
<li>manipulation algorithms</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=uWL6FJhq5fM" target="_blank" rel="noopener">BFS(breadth-first search) and DFS(depth-first search) (video)</a><ul>
<li>BFS notes:<ul>
<li>level order (BFS, using queue)</li>
<li>time complexity: O(n)</li>
<li>space complexity: best: O(1), worst: O(n/2)=O(n)</li>
</ul>
</li>
<li>DFS notes:<ul>
<li>time complexity: O(n)</li>
<li>space complexity:<br>  best: O(log n) - avg. height of tree<br>  worst: O(n)</li>
<li>inorder (DFS: left, self, right)</li>
<li>postorder (DFS: left, right, self)</li>
<li>preorder (DFS: self, left, right)</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Binary-search-trees-BSTs"><a href="#Binary-search-trees-BSTs" class="headerlink" title="Binary search trees: BSTs"></a>Binary search trees: BSTs</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=x6At0nzX92o&amp;index=1&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6" target="_blank" rel="noopener">Binary Search Tree Review (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/p82sw/core-introduction-to-binary-search-trees" target="_blank" rel="noopener">Series (video)</a><ul>
<li>starts with symbol table and goes through BST applications</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/E7cXP/introduction" target="_blank" rel="noopener">Introduction (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=9Jry5-82I68" target="_blank" rel="noopener">MIT (video)</a></li>
<li>C/C++:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=COZK7NATh4k&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;index=28" target="_blank" rel="noopener">Binary search tree - Implementation in C/C++ (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=hWokyBoo0aI&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;index=29" target="_blank" rel="noopener">BST implementation - memory allocation in stack and heap (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Ut90klNN264&amp;index=30&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" target="_blank" rel="noopener">Find min and max element in a binary search tree (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=_pnqMz5nrRs&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;index=31" target="_blank" rel="noopener">Find height of a binary tree (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=9RHO6jU--GU&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;index=32" target="_blank" rel="noopener">Binary tree traversal - breadth-first and depth-first strategies (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=86g8jAQug04&amp;index=33&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" target="_blank" rel="noopener">Binary tree: Level Order Traversal (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=gm8DUJJhmY4&amp;index=34&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" target="_blank" rel="noopener">Binary tree traversal: Preorder, Inorder, Postorder (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=yEwSGhSsT0U&amp;index=35&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" target="_blank" rel="noopener">Check if a binary tree is binary search tree or not (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=gcULXE7ViZw&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P&amp;index=36" target="_blank" rel="noopener">Delete a node from Binary Search Tree (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=5cPbNCrdotA&amp;index=37&amp;list=PL2_aWCzGMAwI3W_JlcBbtYTwiQSsOTa6P" target="_blank" rel="noopener">Inorder Successor in a binary search tree (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Implement:<ul>
<li><input disabled="" type="checkbox"> insert    // insert value into tree</li>
<li><input disabled="" type="checkbox"> get_node_count // get count of values stored</li>
<li><input disabled="" type="checkbox"> print_values // prints the values in the tree, from min to max</li>
<li><input disabled="" type="checkbox"> delete_tree</li>
<li><input disabled="" type="checkbox"> is_in_tree // returns true if given value exists in the tree</li>
<li><input disabled="" type="checkbox"> get_height // returns the height in nodes (single node’s height is 1)</li>
<li><input disabled="" type="checkbox"> get_min   // returns the minimum value stored in the tree</li>
<li><input disabled="" type="checkbox"> get_max   // returns the maximum value stored in the tree</li>
<li><input disabled="" type="checkbox"> is_binary_search_tree</li>
<li><input disabled="" type="checkbox"> delete_value</li>
<li><input disabled="" type="checkbox"> get_successor // returns next-highest value in tree after given value, -1 if none</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Heap-Priority-Queue-Binary-Heap"><a href="#Heap-Priority-Queue-Binary-Heap" class="headerlink" title="Heap / Priority Queue / Binary Heap"></a>Heap / Priority Queue / Binary Heap</h3><ul>
<li>visualized as a tree, but is usually linear in storage (array, linked list)</li>
<li><input disabled="" type="checkbox"> <a href="https://en.wikipedia.org/wiki/Heap_(data_structure)" target="_blank" rel="noopener">Heap</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/2OpTs/introduction" target="_blank" rel="noopener">Introduction (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/z3l9N/naive-implementations" target="_blank" rel="noopener">Naive Implementations (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/GRV2q/binary-trees" target="_blank" rel="noopener">Binary Trees (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/supplement/S5xxz/tree-height-remark" target="_blank" rel="noopener">Tree Height Remark (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/0g1dl/basic-operations" target="_blank" rel="noopener">Basic Operations (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/gl5Ni/complete-binary-trees" target="_blank" rel="noopener">Complete Binary Trees (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/HxQo9/pseudocode" target="_blank" rel="noopener">Pseudocode (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/odNJmw5TOEE?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;t=3291" target="_blank" rel="noopener">Heap Sort - jumps to start (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/hSzMO/heap-sort" target="_blank" rel="noopener">Heap Sort (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures/lecture/dwrOS/building-a-heap" target="_blank" rel="noopener">Building a heap (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=B7hVxCmfPtM&amp;index=4&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">MIT: Heaps and Heap Sort (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/ucberkeley_webcast_yIUFT6AKBGE" target="_blank" rel="noopener">CS 61B Lecture 24: Priority Queues (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=MiyLo8adrWw" target="_blank" rel="noopener">Linear Time BuildHeap (max-heap)</a></li>
<li><input disabled="" type="checkbox"> Implement a max-heap:<ul>
<li><input disabled="" type="checkbox"> insert</li>
<li><input disabled="" type="checkbox"> sift_up - needed for insert</li>
<li><input disabled="" type="checkbox"> get_max - returns the max item, without removing it</li>
<li><input disabled="" type="checkbox"> get_size() - return number of elements stored</li>
<li><input disabled="" type="checkbox"> is_empty() - returns true if heap contains no elements</li>
<li><input disabled="" type="checkbox"> extract_max - returns the max item, removing it</li>
<li><input disabled="" type="checkbox"> sift_down - needed for extract_max</li>
<li><input disabled="" type="checkbox"> remove(i) - removes item at index x</li>
<li><input disabled="" type="checkbox"> heapify - create a heap from an array of elements, needed for heap_sort</li>
<li><input disabled="" type="checkbox"> heap_sort() - take an unsorted array and turn it into a sorted array in-place using a max heap<ul>
<li>note: using a min heap instead would save operations, but double the space needed (cannot do in-place).</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Sorting"><a href="#Sorting" class="headerlink" title="Sorting"></a>Sorting</h2><ul>
<li><input disabled="" type="checkbox"> <p>Notes:</p>
<ul>
<li>Implement sorts &amp; know best case/worst case, average complexity of each:<ul>
<li>no bubble sort - it’s terrible - O(n^2), except when n &lt;= 16</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> stability in sorting algorithms (“Is Quicksort stable?”)<ul>
<li><a href="https://en.wikipedia.org/wiki/Sorting_algorithm#Stability" target="_blank" rel="noopener">Sorting Algorithm Stability</a></li>
<li><a href="http://stackoverflow.com/questions/1517793/stability-in-sorting-algorithms" target="_blank" rel="noopener">Stability In Sorting Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/stability-in-sorting-algorithms/" target="_blank" rel="noopener">Stability In Sorting Algorithms</a></li>
<li><a href="http://homepages.math.uic.edu/~leon/cs-mcs401-s08/handouts/stability.pdf" target="_blank" rel="noopener">Sorting Algorithms - Stability</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Which algorithms can be used on linked lists? Which on arrays? Which on both?<ul>
<li>I wouldn’t recommend sorting a linked list, but merge sort is doable.</li>
<li><a href="http://www.geeksforgeeks.org/merge-sort-for-linked-list/" target="_blank" rel="noopener">Merge Sort For Linked List</a></li>
</ul>
</li>
</ul>
</li>
<li><p>For heapsort, see Heap data structure above. Heap sort is great, but not stable.</p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.coursera.org/learn/algorithms-part1/home/week/3" target="_blank" rel="noopener">Sedgewick - Mergesort (5 videos)</a></p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part1/lecture/ARWDq/mergesort" target="_blank" rel="noopener">1. Mergesort</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part1/lecture/PWNEl/bottom-up-mergesort" target="_blank" rel="noopener">2. Bottom up Mergesort</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part1/lecture/xAltF/sorting-complexity" target="_blank" rel="noopener">3. Sorting Complexity</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part1/lecture/9FYhS/comparators" target="_blank" rel="noopener">4. Comparators</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part1/lecture/pvvLZ/stability" target="_blank" rel="noopener">5. Stability</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.coursera.org/learn/algorithms-part1/home/week/3" target="_blank" rel="noopener">Sedgewick - Quicksort (4 videos)</a></p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part1/lecture/vjvnC/quicksort" target="_blank" rel="noopener">1. Quicksort</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part1/lecture/UQxFT/selection" target="_blank" rel="noopener">2. Selection</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part1/lecture/XvjPd/duplicate-keys" target="_blank" rel="noopener">3. Duplicate Keys</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part1/lecture/QBNZ7/system-sorts" target="_blank" rel="noopener">4. System Sorts</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>UC Berkeley:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/ucberkeley_webcast_EiUvYS2DT6I" target="_blank" rel="noopener">CS 61B Lecture 29: Sorting I (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/ucberkeley_webcast_2hTY3t80Qsk" target="_blank" rel="noopener">CS 61B Lecture 30: Sorting II (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/ucberkeley_webcast_Y6LOLpxg6Dc" target="_blank" rel="noopener">CS 61B Lecture 32: Sorting III (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/ucberkeley_webcast_qNMQ4ly43p4" target="_blank" rel="noopener">CS 61B Lecture 33: Sorting V (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=P00xJgWzz2c&amp;index=1&amp;list=PL89B61F78B552C1AB" target="_blank" rel="noopener">Bubble Sort (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=ni_zk257Nqo&amp;index=7&amp;list=PL89B61F78B552C1AB" target="_blank" rel="noopener">Analyzing Bubble Sort (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=Kg4bqzAqRBM&amp;index=3&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">Insertion Sort, Merge Sort (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=c4BRHC7kTaQ&amp;index=2&amp;list=PL89B61F78B552C1AB" target="_blank" rel="noopener">Insertion Sort (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=GCae1WNvnZM&amp;index=3&amp;list=PL89B61F78B552C1AB" target="_blank" rel="noopener">Merge Sort (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=y_G9BkAm6B8&amp;index=4&amp;list=PL89B61F78B552C1AB" target="_blank" rel="noopener">Quicksort (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.youtube.com/watch?v=6nDMgr0-Yyo&amp;index=8&amp;list=PL89B61F78B552C1AB" target="_blank" rel="noopener">Selection Sort (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p>Merge sort code:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="http://www.cs.yale.edu/homes/aspnes/classes/223/examples/sorting/mergesort.c" target="_blank" rel="noopener">Using output array (C)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://github.com/jwasham/practice-python/blob/master/merge_sort/merge_sort.py" target="_blank" rel="noopener">Using output array (Python)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://github.com/jwasham/practice-cpp/blob/master/merge_sort/merge_sort.cc" target="_blank" rel="noopener">In-place (C++)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>Quick sort code:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="http://www.cs.yale.edu/homes/aspnes/classes/223/examples/randomization/quick.c" target="_blank" rel="noopener">Implementation (C)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://github.com/jwasham/practice-c/blob/master/quick_sort/quick_sort.c" target="_blank" rel="noopener">Implementation (C)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://github.com/jwasham/practice-python/blob/master/quick_sort/quick_sort.py" target="_blank" rel="noopener">Implementation (Python)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>Implement:</p>
<ul>
<li><input disabled="" type="checkbox"> Mergesort: O(n log n) average and worst case</li>
<li><input disabled="" type="checkbox"> Quicksort O(n log n) average case</li>
<li>Selection sort and insertion sort are both O(n^2) average and worst case</li>
<li>For heapsort, see Heap data structure above.</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>Not required, but I recommended them:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/home/week/3" target="_blank" rel="noopener">Sedgewick - Radix Sorts (6 videos)</a><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/lecture/vGHvb/strings-in-java" target="_blank" rel="noopener">1. Strings in Java</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/lecture/2pi1Z/key-indexed-counting" target="_blank" rel="noopener">2. Key Indexed Counting</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/lecture/c1U7L/lsd-radix-sort" target="_blank" rel="noopener">3. Least Significant Digit First String Radix Sort</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/lecture/gFxwG/msd-radix-sort" target="_blank" rel="noopener">4. Most Significant Digit First String Radix Sort</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/lecture/crkd5/3-way-radix-quicksort" target="_blank" rel="noopener">5. 3 Way Radix Quicksort</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/lecture/TH18W/suffix-arrays" target="_blank" rel="noopener">6. Suffix Arrays</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#radixSort" target="_blank" rel="noopener">Radix Sort</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=xhr26ia4k38" target="_blank" rel="noopener">Radix Sort (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Nz1KZXbghj8&amp;index=7&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">Radix Sort, Counting Sort (linear time given constraints) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=cNB2lADK3_s&amp;index=8&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">Randomization: Matrix Multiply, Quicksort, Freivalds’ algorithm (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=pOKy3RZbSws&amp;list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf&amp;index=14" target="_blank" rel="noopener">Sorting in Linear Time (video)</a></li>
</ul>
</li>
</ul>
<p>As a summary, here is a visual representation of <a href="https://www.youtube.com/watch?v=kPRA0W1kECg" target="_blank" rel="noopener">15 sorting algorithms</a>.<br>If you need more detail on this subject, see “Sorting” section in <a href="#additional-detail-on-some-subjects">Additional Detail on Some Subjects</a></p>
<h2 id="Graphs"><a href="#Graphs" class="headerlink" title="Graphs"></a>Graphs</h2><p>Graphs can be used to represent many problems in computer science, so this section is long, like trees and sorting were.</p>
<ul>
<li><p>Notes:</p>
<ul>
<li>There are 4 basic ways to represent a graph in memory:<ul>
<li>objects and pointers</li>
<li>adjacency matrix</li>
<li>adjacency list</li>
<li>adjacency map</li>
</ul>
</li>
<li>Familiarize yourself with each representation and its pros &amp; cons</li>
<li>BFS and DFS - know their computational complexity, their tradeoffs, and how to implement them in real code</li>
<li>When asked a question, look for a graph-based solution first, then move on if none.</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>MIT(videos):</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=s-CYnVz-uh4&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=13" target="_blank" rel="noopener">Breadth-First Search</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=AfSk24UTFS8&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=14" target="_blank" rel="noopener">Depth-First Search</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>Skiena Lectures - great intro:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=OiXxhDrFruw&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;index=11" target="_blank" rel="noopener">CSE373 2012 - Lecture 11 - Graph Data Structures (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=g5vF8jscteo&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;index=12" target="_blank" rel="noopener">CSE373 2012 - Lecture 12 - Breadth-First Search (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=S23W6eTcqdY&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;index=13" target="_blank" rel="noopener">CSE373 2012 - Lecture 13 - Graph Algorithms (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=WitPBKGV0HY&amp;index=14&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">CSE373 2012 - Lecture 14 - Graph Algorithms (con’t) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ia1L30l7OIg&amp;index=15&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">CSE373 2012 - Lecture 15 - Graph Algorithms (con’t 2) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=jgDOQq6iWy8&amp;index=16&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">CSE373 2012 - Lecture 16 - Graph Algorithms (con’t 3) (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p>Graphs (review and more):</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Aa2sqUhIn-E&amp;index=15&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">6.006 Single-Source Shortest Paths Problem (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=2E7MmKv0Y24&amp;index=16&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">6.006 Dijkstra (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ozsuci5pIso&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=17" target="_blank" rel="noopener">6.006 Bellman-Ford (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=CHvQ3q_gJ7E&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=18" target="_blank" rel="noopener">6.006 Speeding Up Dijkstra (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=i_AQT_XfvD8&amp;index=6&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm" target="_blank" rel="noopener">Aduni: Graph Algorithms I - Topological Sorting, Minimum Spanning Trees, Prim’s Algorithm -  Lecture 6 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ufj5_bppBsA&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=7" target="_blank" rel="noopener">Aduni: Graph Algorithms II - DFS, BFS, Kruskal’s Algorithm, Union Find Data Structure - Lecture 7 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=DiedsPsMKXc&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=8" target="_blank" rel="noopener">Aduni: Graph Algorithms III: Shortest Path - Lecture 8 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=XIAQRlNkJAw&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=9" target="_blank" rel="noopener">Aduni: Graph Alg. IV: Intro to geometric algorithms - Lecture 9 (video)</a></li>
<li><input disabled="" type="checkbox"> <del><a href="https://youtu.be/dgjX4HdMI-Q?list=PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd&amp;t=3489" target="_blank" rel="noopener">CS 61B 2014 (starting at 58:09) (video)</a></del></li>
<li><input disabled="" type="checkbox"> <a href="https://archive.org/details/ucberkeley_webcast_zFbq8vOZ_0k" target="_blank" rel="noopener">CS 61B 2014: Weighted graphs (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=tKwnms5iRBU&amp;index=16&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">Greedy Algorithms: Minimum Spanning Tree (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=RpgcYiky7uw" target="_blank" rel="noopener">Strongly Connected Components Kosaraju’s Algorithm Graph Algorithm (video)</a></li>
</ul>
</li>
<li><p>Full Coursera Course:</p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-on-graphs/home/welcome" target="_blank" rel="noopener">Algorithms on Graphs (video)</a></li>
</ul>
</li>
<li><p>I’ll implement:</p>
<ul>
<li><input disabled="" type="checkbox"> DFS with adjacency list (recursive)</li>
<li><input disabled="" type="checkbox"> DFS with adjacency list (iterative with stack)</li>
<li><input disabled="" type="checkbox"> DFS with adjacency matrix (recursive)</li>
<li><input disabled="" type="checkbox"> DFS with adjacency matrix (iterative with stack)</li>
<li><input disabled="" type="checkbox"> BFS with adjacency list</li>
<li><input disabled="" type="checkbox"> BFS with adjacency matrix</li>
<li><input disabled="" type="checkbox"> single-source shortest path (Dijkstra)</li>
<li><input disabled="" type="checkbox"> minimum spanning tree</li>
<li>DFS-based algorithms (see Aduni videos above):<ul>
<li><input disabled="" type="checkbox"> check for cycle (needed for topological sort, since we’ll check for cycle before starting)</li>
<li><input disabled="" type="checkbox"> topological sort</li>
<li><input disabled="" type="checkbox"> count connected components in a graph</li>
<li><input disabled="" type="checkbox"> list strongly connected components</li>
<li><input disabled="" type="checkbox"> check for bipartite graph</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Even-More-Knowledge"><a href="#Even-More-Knowledge" class="headerlink" title="Even More Knowledge"></a>Even More Knowledge</h2><ul>
<li><h3 id="Recursion"><a href="#Recursion" class="headerlink" title="Recursion"></a>Recursion</h3><ul>
<li><input disabled="" type="checkbox"> Stanford lectures on recursion &amp; backtracking:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=gl3emqCuueQ&amp;list=PLFE6E58F856038C69&amp;index=8" target="_blank" rel="noopener">Lecture 8 | Programming Abstractions (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=uFJhEPrbycQ&amp;list=PLFE6E58F856038C69&amp;index=9" target="_blank" rel="noopener">Lecture 9 | Programming Abstractions (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=NdF1QDTRkck&amp;index=10&amp;list=PLFE6E58F856038C69" target="_blank" rel="noopener">Lecture 10 | Programming Abstractions (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=p-gpaIGRCQI&amp;list=PLFE6E58F856038C69&amp;index=11" target="_blank" rel="noopener">Lecture 11 | Programming Abstractions (video)</a></li>
</ul>
</li>
<li>when it is appropriate to use it</li>
<li>how is tail recursion better than not?<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.quora.com/What-is-tail-recursion-Why-is-it-so-bad" target="_blank" rel="noopener">What Is Tail Recursion Why Is It So Bad?</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=L1jjXGfxozc" target="_blank" rel="noopener">Tail Recursion (video)</a></li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Dynamic-Programming"><a href="#Dynamic-Programming" class="headerlink" title="Dynamic Programming"></a>Dynamic Programming</h3><ul>
<li>You probably won’t see any dynamic programming problems in your interview, but it’s worth being able to recognize a problem as being a candidate for dynamic programming.</li>
<li>This subject can be pretty difficult, as each DP soluble problem must be defined as a recursion relation, and coming up with it can be tricky.</li>
<li>I suggest looking at many examples of DP problems until you have a solid understanding of the pattern involved.</li>
<li><input disabled="" type="checkbox"> Videos:<ul>
<li>the Skiena videos can be hard to follow since he sometimes uses the whiteboard, which is too small to see</li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/Qc2ieXRgR0k?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;t=1718" target="_blank" rel="noopener">Skiena: CSE373 2012 - Lecture 19 - Introduction to Dynamic Programming (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/IsmMhMdyeGY?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;t=2749" target="_blank" rel="noopener">Skiena: CSE373 2012 - Lecture 20 - Edit Distance (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/o0V9eYF4UI8?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;t=406" target="_blank" rel="noopener">Skiena: CSE373 2012 - Lecture 21 - Dynamic Programming Examples (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=dRbMC1Ltl3A&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;index=22" target="_blank" rel="noopener">Skiena: CSE373 2012 - Lecture 22 - Applications of Dynamic Programming (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/J5aJEcOr6Eo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;t=3558" target="_blank" rel="noopener">Simonson: Dynamic Programming 0 (starts at 59:18) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=0EzHjQ_SOeU&amp;index=11&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm" target="_blank" rel="noopener">Simonson: Dynamic Programming I - Lecture 11 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=v1qiRwuJU7g&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=12" target="_blank" rel="noopener">Simonson: Dynamic programming II - Lecture 12 (video)</a></li>
<li><input disabled="" type="checkbox"> List of individual DP problems (each is short):<br>  <a href="https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr" target="_blank" rel="noopener">Dynamic Programming (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Yale Lecture notes:<ul>
<li><input disabled="" type="checkbox"> <a href="http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#dynamicProgramming" target="_blank" rel="noopener">Dynamic Programming</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Coursera:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithmic-thinking-2/lecture/80RrW/the-rna-secondary-structure-problem" target="_blank" rel="noopener">The RNA secondary structure problem (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithmic-thinking-2/lecture/PSonq/a-dynamic-programming-algorithm" target="_blank" rel="noopener">A dynamic programming algorithm (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithmic-thinking-2/lecture/oUEK2/illustrating-the-dp-algorithm" target="_blank" rel="noopener">Illustrating the DP algorithm (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithmic-thinking-2/lecture/nfK2r/running-time-of-the-dp-algorithm" target="_blank" rel="noopener">Running time of the DP algorithm (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithmic-thinking-2/lecture/M999a/dp-vs-recursive-implementation" target="_blank" rel="noopener">DP vs. recursive implementation (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithmic-thinking-2/lecture/UZ7o6/global-pairwise-sequence-alignment" target="_blank" rel="noopener">Global pairwise sequence alignment (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithmic-thinking-2/lecture/WnNau/local-pairwise-sequence-alignment" target="_blank" rel="noopener">Local pairwise sequence alignment (video)</a></li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Object-Oriented-Programming"><a href="#Object-Oriented-Programming" class="headerlink" title="Object-Oriented Programming"></a>Object-Oriented Programming</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=OkC7HKtiZC0&amp;list=PLGLfVvz_LVvQ5G-LdJ8RLqe-ndo7QITYc" target="_blank" rel="noopener">Optional: UML 2.0 Series (video)</a></li>
<li><input disabled="" type="checkbox"> SOLID OOP Principles: <a href="https://www.youtube.com/playlist?list=PL4CE9F710017EA77A" target="_blank" rel="noopener">SOLID Principles (video)</a></li>
</ul>
</li>
<li><h3 id="Design-patterns"><a href="#Design-patterns" class="headerlink" title="Design patterns"></a>Design patterns</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=3cmzqZzwNDM&amp;list=PLGLfVvz_LVvQ5G-LdJ8RLqe-ndo7QITYc&amp;index=3" target="_blank" rel="noopener">Quick UML review (video)</a></li>
<li><input disabled="" type="checkbox"> Learn these patterns:<ul>
<li><input disabled="" type="checkbox"> strategy</li>
<li><input disabled="" type="checkbox"> singleton</li>
<li><input disabled="" type="checkbox"> adapter</li>
<li><input disabled="" type="checkbox"> prototype</li>
<li><input disabled="" type="checkbox"> decorator</li>
<li><input disabled="" type="checkbox"> visitor</li>
<li><input disabled="" type="checkbox"> factory, abstract factory</li>
<li><input disabled="" type="checkbox"> facade</li>
<li><input disabled="" type="checkbox"> observer</li>
<li><input disabled="" type="checkbox"> proxy</li>
<li><input disabled="" type="checkbox"> delegate</li>
<li><input disabled="" type="checkbox"> command</li>
<li><input disabled="" type="checkbox"> state</li>
<li><input disabled="" type="checkbox"> memento</li>
<li><input disabled="" type="checkbox"> iterator</li>
<li><input disabled="" type="checkbox"> composite</li>
<li><input disabled="" type="checkbox"> flyweight</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/LAP2A80Ajrg?list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO&amp;t=3344" target="_blank" rel="noopener">Chapter 6 (Part 1) - Patterns (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=U8-PGsjvZc4&amp;index=12&amp;list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO" target="_blank" rel="noopener">Chapter 6 (Part 2) - Abstraction-Occurrence, General Hierarchy, Player-Role, Singleton, Observer, Delegation (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=7sduBHuex4c&amp;index=13&amp;list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO" target="_blank" rel="noopener">Chapter 6 (Part 3) - Adapter, Facade, Immutable, Read-Only Interface, Proxy (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/playlist?list=PLF206E906175C7E07" target="_blank" rel="noopener">Series of videos (27 videos)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.amazon.com/Head-First-Design-Patterns-Freeman/dp/0596007124" target="_blank" rel="noopener">Head First Design Patterns</a><ul>
<li>I know the canonical book is “Design Patterns: Elements of Reusable Object-Oriented Software”, but Head First is great for beginners to OO.</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://sourcemaking.com/design-patterns-and-tips" target="_blank" rel="noopener">Handy reference: 101 Design Patterns &amp; Tips for Developers</a></li>
<li><input disabled="" type="checkbox"> <a href="https://github.com/kamranahmedse/design-patterns-for-humans#structural-design-patterns" target="_blank" rel="noopener">Design patterns for humans</a></li>
</ul>
</li>
</ul>
<ul>
<li><h3 id="Combinatorics-n-choose-k-amp-Probability"><a href="#Combinatorics-n-choose-k-amp-Probability" class="headerlink" title="Combinatorics (n choose k) &amp; Probability"></a>Combinatorics (n choose k) &amp; Probability</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=8RRo6Ti9d0U" target="_blank" rel="noopener">Math Skills: How to find Factorial, Permutation and Combination (Choose) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=sZkAAk9Wwa4" target="_blank" rel="noopener">Make School: Probability (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=dNaJg-mLobQ" target="_blank" rel="noopener">Make School: More Probability and Markov Chains (video)</a></li>
<li><input disabled="" type="checkbox"> Khan Academy:<ul>
<li>Course layout:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.khanacademy.org/math/probability/probability-and-combinatorics-topic" target="_blank" rel="noopener">Basic Theoretical Probability</a></li>
</ul>
</li>
<li>Just the videos - 41 (each are simple and each are short):<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=uzkc-qNVoOk&amp;list=PLC58778F28211FA19" target="_blank" rel="noopener">Probability Explained (video)</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="NP-NP-Complete-and-Approximation-Algorithms"><a href="#NP-NP-Complete-and-Approximation-Algorithms" class="headerlink" title="NP, NP-Complete and Approximation Algorithms"></a>NP, NP-Complete and Approximation Algorithms</h3><ul>
<li>Know about the most famous classes of NP-complete problems, such as traveling salesman and the knapsack problem,<br>  and be able to recognize them when an interviewer asks you them in disguise.</li>
<li>Know what NP-complete means.</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=moPtwq_cVH8&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=23" target="_blank" rel="noopener">Computational Complexity (video)</a></li>
<li><input disabled="" type="checkbox"> Simonson:<ul>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/qcGnJ47Smlo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;t=2939" target="_blank" rel="noopener">Greedy Algs. II &amp; Intro to NP Completeness (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=e0tGC6ZQdQE&amp;index=16&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm" target="_blank" rel="noopener">NP Completeness II &amp; Reductions (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=fCX1BGT3wjE&amp;index=17&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm" target="_blank" rel="noopener">NP Completeness III (Video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=NKLDp3Rch3M&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=18" target="_blank" rel="noopener">NP Completeness IV (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Skiena:<ul>
<li><input disabled="" type="checkbox"> <a href="https://youtu.be/KiK5TVgXbFg?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;t=1508" target="_blank" rel="noopener">CSE373 2012 - Lecture 23 - Introduction to NP-Completeness (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=27Al52X3hd4&amp;index=24&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">CSE373 2012 - Lecture 24 - NP-Completeness Proofs (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=xCPH4gwIIXM&amp;index=25&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">CSE373 2012 - Lecture 25 - NP-Completeness Challenge (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=eHZifpgyH_4&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=22" target="_blank" rel="noopener">Complexity: P, NP, NP-completeness, Reductions (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=MEz1J9wY2iM&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=24" target="_blank" rel="noopener">Complexity: Approximation Algorithms (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=4q-jmGrmxKs&amp;index=25&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">Complexity: Fixed-Parameter Algorithms (video)</a></li>
<li>Peter Norvig discusses near-optimal solutions to traveling salesman problem:<ul>
<li><a href="http://nbviewer.jupyter.org/url/norvig.com/ipython/TSP.ipynb" target="_blank" rel="noopener">Jupyter Notebook</a></li>
</ul>
</li>
<li>Pages 1048 - 1140 in CLRS if you have it.</li>
</ul>
</li>
<li><h3 id="Caches"><a href="#Caches" class="headerlink" title="Caches"></a>Caches</h3><ul>
<li><input disabled="" type="checkbox"> LRU cache:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=R5ON3iwx78M" target="_blank" rel="noopener">The Magic of LRU Cache (100 Days of Google Dev) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=bq6N7Ym81iI" target="_blank" rel="noopener">Implementing LRU (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=8-FZRAjR7qU" target="_blank" rel="noopener">LeetCode - 146 LRU Cache (C++) (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> CPU cache:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=vjYF_fAZI5E&amp;list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-&amp;index=24" target="_blank" rel="noopener">MIT 6.004 L15: The Memory Hierarchy (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ajgC3-pyGlk&amp;index=25&amp;list=PLrRW1w6CGAcXbMtDFj205vALOGmiRc82-" target="_blank" rel="noopener">MIT 6.004 L16: Cache Issues (video)</a></li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Processes-and-Threads"><a href="#Processes-and-Threads" class="headerlink" title="Processes and Threads"></a>Processes and Threads</h3><ul>
<li><input disabled="" type="checkbox"> Computer Science 162 - Operating Systems (25 videos):<ul>
<li>for processes and threads see videos 1-11</li>
<li><a href="https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iBDyz-ba4yDskqMDY6A1w_c" target="_blank" rel="noopener">Operating Systems and System Programming (video)</a></li>
</ul>
</li>
<li><a href="https://www.quora.com/What-is-the-difference-between-a-process-and-a-thread" target="_blank" rel="noopener">What Is The Difference Between A Process And A Thread?</a></li>
<li>Covers:<ul>
<li>Processes, Threads, Concurrency issues<ul>
<li>difference between processes and threads</li>
<li>processes</li>
<li>threads</li>
<li>locks</li>
<li>mutexes</li>
<li>semaphores</li>
<li>monitors</li>
<li>how they work</li>
<li>deadlock</li>
<li>livelock</li>
</ul>
</li>
<li>CPU activity, interrupts, context switching</li>
<li>Modern concurrency constructs with multicore processors</li>
<li><a href="https://www.youtube.com/watch?v=LKe7xK0bF7o&amp;list=PLCiOXwirraUCBE9i_ukL8_Kfg6XNv7Se8&amp;index=2" target="_blank" rel="noopener">Paging, segmentation and virtual memory (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=uFKi2-J-6II&amp;list=PLCiOXwirraUCBE9i_ukL8_Kfg6XNv7Se8&amp;index=3" target="_blank" rel="noopener">Interrupts (video)</a></li>
<li>Process resource needs (memory: code, static storage, stack, heap, and also file descriptors, i/o)</li>
<li>Thread resource needs (shares above (minus stack) with other threads in the same process but each has its own pc, stack counter, registers, and stack)</li>
<li>Forking is really copy on write (read-only) until the new process writes to memory, then it does a full copy.</li>
<li>Context switching<ul>
<li>How context switching is initiated by the operating system and underlying hardware</li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/playlist?list=PL5jc9xFGsL8E12so1wlMS0r0hTQoJL74M" target="_blank" rel="noopener">threads in C++ (series - 10 videos)</a></li>
<li><input disabled="" type="checkbox"> concurrency in Python (videos):<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/playlist?list=PL1H1sBF1VAKVMONJWJkmUh6_p8g4F2oy1" target="_blank" rel="noopener">Short series on threads</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Bs7vPNbB9JM" target="_blank" rel="noopener">Python Threads</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Obt-vMVdM8s" target="_blank" rel="noopener">Understanding the Python GIL (2010)</a><ul>
<li><a href="http://www.dabeaz.com/GIL" target="_blank" rel="noopener">reference</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=MCs5OvhV9S4" target="_blank" rel="noopener">David Beazley - Python Concurrency From the Ground Up: LIVE! - PyCon 2015</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ZzfHjytDceU" target="_blank" rel="noopener">Keynote David Beazley - Topics of Interest (Python Asyncio)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=0zaPs8OtyKY" target="_blank" rel="noopener">Mutex in Python</a></li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Testing"><a href="#Testing" class="headerlink" title="Testing"></a>Testing</h3><ul>
<li>To cover:<ul>
<li>how unit testing works</li>
<li>what are mock objects</li>
<li>what is integration testing</li>
<li>what is dependency injection</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=SAhJf36_u5U" target="_blank" rel="noopener">Agile Software Testing with James Bach (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=ILkT_HV9DVU" target="_blank" rel="noopener">Open Lecture by James Bach on Software Testing (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://vimeo.com/83960706" target="_blank" rel="noopener">Steve Freeman - Test-Driven Development (that’s not what we meant) (video)</a><ul>
<li><a href="http://gotocon.com/dl/goto-berlin-2013/slides/SteveFreeman_TestDrivenDevelopmentThatsNotWhatWeMeant.pdf" target="_blank" rel="noopener">slides</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Dependency injection:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=IKD2-MAkXyQ" target="_blank" rel="noopener">video</a></li>
<li><input disabled="" type="checkbox"> <a href="http://jasonpolites.github.io/tao-of-testing/ch3-1.1.html" target="_blank" rel="noopener">Tao Of Testing</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://jasonpolites.github.io/tao-of-testing/ch4-1.1.html" target="_blank" rel="noopener">How to write tests</a></li>
</ul>
</li>
<li><h3 id="Scheduling"><a href="#Scheduling" class="headerlink" title="Scheduling"></a>Scheduling</h3><ul>
<li>in an OS, how it works</li>
<li>can be gleaned from Operating System videos</li>
</ul>
</li>
<li><h3 id="String-searching-amp-manipulations"><a href="#String-searching-amp-manipulations" class="headerlink" title="String searching &amp; manipulations"></a>String searching &amp; manipulations</h3><ul>
<li><input disabled="" type="checkbox"> <p><a href="https://www.coursera.org/learn/algorithms-part2/lecture/TH18W/suffix-arrays" target="_blank" rel="noopener">Sedgewick - Suffix Arrays (video)</a></p>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.coursera.org/learn/algorithms-part2/home/week/4" target="_blank" rel="noopener">Sedgewick - Substring Search (videos)</a></p>
<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/lecture/n3ZpG/introduction-to-substring-search" target="_blank" rel="noopener">1. Introduction to Substring Search</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/lecture/2Kn5i/brute-force-substring-search" target="_blank" rel="noopener">2. Brute-Force Substring Search</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/lecture/TAtDr/knuth-morris-pratt" target="_blank" rel="noopener">3. Knuth-Morris Pratt</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/lecture/CYxOT/boyer-moore" target="_blank" rel="noopener">4. Boyer-Moore</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/lecture/3KiqT/rabin-karp" target="_blank" rel="noopener">5. Rabin-Karp</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <p><a href="https://www.coursera.org/learn/data-structures/lecture/tAfHI/search-pattern-in-text" target="_blank" rel="noopener">Search pattern in text (video)</a></p>
<p>If you need more detail on this subject, see “String Matching” section in <a href="#additional-detail-on-some-subjects">Additional Detail on Some Subjects</a></p>
</li>
</ul>
</li>
<li><h3 id="Tries"><a href="#Tries" class="headerlink" title="Tries"></a>Tries</h3><ul>
<li>Note there are different kinds of tries. Some have prefixes, some don’t, and some use string instead of bits<br>  to track the path.</li>
<li>I read through code, but will not implement.</li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/home/week/4" target="_blank" rel="noopener">Sedgewick - Tries (3 videos)</a><ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/lecture/CPVdr/r-way-tries" target="_blank" rel="noopener">1. R Way Tries</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/lecture/yQM8K/ternary-search-tries" target="_blank" rel="noopener">2. Ternary Search Tries</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2/lecture/jwNmV/character-based-operations" target="_blank" rel="noopener">3. Character Based Operations</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Tries" target="_blank" rel="noopener">Notes on Data Structures and Programming Techniques</a></li>
<li><input disabled="" type="checkbox"> Short course videos:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/08Xyf/core-introduction-to-tries" target="_blank" rel="noopener">Introduction To Tries (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/PvlZW/core-performance-of-tries" target="_blank" rel="noopener">Performance Of Tries (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/DFvd3/core-implementing-a-trie" target="_blank" rel="noopener">Implementing A Trie (video)</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.toptal.com/java/the-trie-a-neglected-data-structure" target="_blank" rel="noopener">The Trie: A Neglected Data Structure</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.topcoder.com/community/competitive-programming/tutorials/using-tries/" target="_blank" rel="noopener">TopCoder - Using Tries</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=TJ8SkcUSdbU" target="_blank" rel="noopener">Stanford Lecture (real world use case) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=NinWEPPrkDQ&amp;index=16&amp;list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf" target="_blank" rel="noopener">MIT, Advanced Data Structures, Strings (can get pretty obscure about halfway through) (video)</a></li>
</ul>
</li>
<li><h3 id="Floating-Point-Numbers"><a href="#Floating-Point-Numbers" class="headerlink" title="Floating Point Numbers"></a>Floating Point Numbers</h3><ul>
<li><input disabled="" type="checkbox"> simple 8-bit: <a href="https://www.youtube.com/watch?v=ji3SfClm8TU" target="_blank" rel="noopener">Representation of Floating Point Numbers - 1 (video - there is an error in calculations - see video description)</a></li>
<li><input disabled="" type="checkbox"> 32 bit: <a href="https://www.youtube.com/watch?v=50ZYcZebIec" target="_blank" rel="noopener">IEEE754 32-bit floating point binary (video)</a></li>
</ul>
</li>
<li><h3 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h3><ul>
<li><input disabled="" type="checkbox"> <a href="http://www.joelonsoftware.com/articles/Unicode.html" target="_blank" rel="noopener">The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets</a></li>
<li><input disabled="" type="checkbox"> <a href="http://kunststube.net/encoding/" target="_blank" rel="noopener">What Every Programmer Absolutely, Positively Needs To Know About Encodings And Character Sets To Work With Text</a></li>
</ul>
</li>
<li><h3 id="Endianness"><a href="#Endianness" class="headerlink" title="Endianness"></a>Endianness</h3><ul>
<li><input disabled="" type="checkbox"> <a href="https://web.archive.org/web/20180107141940/http://www.cs.umd.edu:80/class/sum2003/cmsc311/Notes/Data/endian.html" target="_blank" rel="noopener">Big And Little Endian</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=JrNF0KRAlyo" target="_blank" rel="noopener">Big Endian Vs Little Endian (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=oBSuXP-1Tc0" target="_blank" rel="noopener">Big And Little Endian Inside/Out (video)</a><ul>
<li>Very technical talk for kernel devs. Don’t worry if most is over your head.</li>
<li>The first half is enough.</li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Networking"><a href="#Networking" class="headerlink" title="Networking"></a>Networking</h3><ul>
<li><strong>if you have networking experience or want to be a reliability engineer or operations engineer, expect questions</strong></li>
<li>otherwise, this is just good to know</li>
<li><input disabled="" type="checkbox"> <a href="https://www.khanacademy.org/computing/computer-science/internet-intro" target="_blank" rel="noopener">Khan Academy</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Vdc8TCESIg8" target="_blank" rel="noopener">UDP and TCP: Comparison of Transport Protocols (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=e5DEVa9eSN0" target="_blank" rel="noopener">TCP/IP and the OSI Model Explained! (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=nomyRJehhnM" target="_blank" rel="noopener">Packet Transmission across the Internet. Networking &amp; TCP/IP tutorial. (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=WGJrLqtX7As" target="_blank" rel="noopener">HTTP (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=S2iBR2ZlZf0" target="_blank" rel="noopener">SSL and HTTPS (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=Rp3iZUvXWlM" target="_blank" rel="noopener">SSL/TLS (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=E9FxNzv1Tr8" target="_blank" rel="noopener">HTTP 2.0 (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/playlist?list=PLEbnTDJUr_IegfoqO4iPnPYQui46QqT0j" target="_blank" rel="noopener">Video Series (21 videos) (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=t5xYI0jzOf4" target="_blank" rel="noopener">Subnetting Demystified - Part 5 CIDR Notation (video)</a></li>
<li><input disabled="" type="checkbox"> Sockets:<ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=6G_W54zuadg&amp;t=6s" target="_blank" rel="noopener">Java - Sockets - Introduction (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=G75vN2mnJeQ" target="_blank" rel="noopener">Socket Programming (video)</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="System-Design-Scalability-Data-Handling"><a href="#System-Design-Scalability-Data-Handling" class="headerlink" title="System Design, Scalability, Data Handling"></a>System Design, Scalability, Data Handling</h2><p><strong>You can expect system design questions if you have 4+ years of experience.</strong></p>
<ul>
<li>Scalability and System Design are very large topics with many topics and resources, since<pre><code>there is a lot to consider when designing a software/hardware system that can scale.
Expect to spend quite a bit of time on this.</code></pre></li>
<li>Considerations:<ul>
<li>scalability<ul>
<li>Distill large data sets to single values</li>
<li>Transform one data set to another</li>
<li>Handling obscenely large amounts of data</li>
</ul>
</li>
<li>system design<ul>
<li>features sets</li>
<li>interfaces</li>
<li>class hierarchies</li>
<li>designing a system under certain constraints</li>
<li>simplicity and robustness</li>
<li>tradeoffs</li>
<li>performance analysis and optimization</li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <strong>START HERE</strong>: <a href="https://github.com/donnemartin/system-design-primer" target="_blank" rel="noopener">The System Design Primer</a></li>
<li><input disabled="" type="checkbox"> <a href="http://www.hiredintech.com/system-design/" target="_blank" rel="noopener">System Design from HiredInTech</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.quora.com/How-do-I-prepare-to-answer-design-questions-in-a-technical-interview?redirected_qid=1500023" target="_blank" rel="noopener">How Do I Prepare To Answer Design Questions In A Technical Inverview?</a></li>
<li><input disabled="" type="checkbox"> <a href="http://blog.gainlo.co/index.php/2015/10/22/8-things-you-need-to-know-before-system-design-interviews/" target="_blank" rel="noopener">8 Things You Need to Know Before a System Design Interview</a></li>
<li><input disabled="" type="checkbox"> <a href="http://www.hiredintech.com/algorithm-design/" target="_blank" rel="noopener">Algorithm design</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=UrYLYV7WSHM" target="_blank" rel="noopener">Database Normalization - 1NF, 2NF, 3NF and 4NF (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://github.com/checkcheckzz/system-design-interview" target="_blank" rel="noopener">System Design Interview</a> - There are a lot of resources in this one. Look through the articles and examples. I put some of them below.</li>
<li><input disabled="" type="checkbox"> <a href="http://www.palantir.com/2011/10/how-to-rock-a-systems-design-interview/" target="_blank" rel="noopener">How to ace a systems design interview</a></li>
<li><input disabled="" type="checkbox"> <a href="http://everythingisdata.wordpress.com/2009/10/17/numbers-everyone-should-know/" target="_blank" rel="noopener">Numbers Everyone Should Know</a></li>
<li><input disabled="" type="checkbox"> <a href="http://blog.tsunanet.net/2010/11/how-long-does-it-take-to-make-context.html" target="_blank" rel="noopener">How long does it take to make a context switch?</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=srOgpXECblk" target="_blank" rel="noopener">Transactions Across Datacenters (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="http://ksat.me/a-plain-english-introduction-to-cap-theorem/" target="_blank" rel="noopener">A plain English introduction to CAP Theorem</a></li>
<li><input disabled="" type="checkbox"> Consensus Algorithms:<ul>
<li><input disabled="" type="checkbox"> Paxos - <a href="https://www.youtube.com/watch?v=s8JqcZtvnsM" target="_blank" rel="noopener">Paxos Agreement - Computerphile (video)</a></li>
<li><input disabled="" type="checkbox"> Raft - <a href="https://www.youtube.com/watch?v=P9Ydif5_qvE" target="_blank" rel="noopener">An Introduction to the Raft Distributed Consensus Algorithm (video)</a><ul>
<li><input disabled="" type="checkbox"> <a href="https://raft.github.io/" target="_blank" rel="noopener">Easy-to-read paper</a></li>
<li><input disabled="" type="checkbox"> <a href="http://thesecretlivesofdata.com/raft/" target="_blank" rel="noopener">Infographic</a></li>
</ul>
</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://www.tom-e-white.com/2007/11/consistent-hashing.html" target="_blank" rel="noopener">Consistent Hashing</a></li>
<li><input disabled="" type="checkbox"> <a href="http://horicky.blogspot.com/2009/11/nosql-patterns.html" target="_blank" rel="noopener">NoSQL Patterns</a></li>
<li><input disabled="" type="checkbox"> Scalability:<ul>
<li>You don’t need all of these. Just pick a few that interest you.</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=-W9F__D3oY4" target="_blank" rel="noopener">Great overview (video)</a></li>
<li><input disabled="" type="checkbox"> Short series:<ul>
<li><a href="http://www.lecloud.net/post/7295452622/scalability-for-dummies-part-1-clones" target="_blank" rel="noopener">Clones</a></li>
<li><a href="http://www.lecloud.net/post/7994751381/scalability-for-dummies-part-2-database" target="_blank" rel="noopener">Database</a></li>
<li><a href="http://www.lecloud.net/post/9246290032/scalability-for-dummies-part-3-cache" target="_blank" rel="noopener">Cache</a></li>
<li><a href="http://www.lecloud.net/post/9699762917/scalability-for-dummies-part-4-asynchronism" target="_blank" rel="noopener">Asynchronism</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://www.aosabook.org/en/distsys.html" target="_blank" rel="noopener">Scalable Web Architecture and Distributed Systems</a></li>
<li><input disabled="" type="checkbox"> <a href="https://pages.cs.wisc.edu/~zuyu/files/fallacies.pdf" target="_blank" rel="noopener">Fallacies of Distributed Computing Explained</a></li>
<li><input disabled="" type="checkbox"> <a href="http://horicky.blogspot.com/2010/10/scalable-system-design-patterns.html" target="_blank" rel="noopener">Pragmatic Programming Techniques</a><ul>
<li><a href="http://horicky.blogspot.com/2010/07/google-pregel-graph-processing.html" target="_blank" rel="noopener">extra: Google Pregel Graph Processing</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=modXC5IWTJI" target="_blank" rel="noopener">Jeff Dean - Building Software Systems At Google and Lessons Learned (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="http://lethain.com/introduction-to-architecting-systems-for-scale/" target="_blank" rel="noopener">Introduction to Architecting Systems for Scale</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=9nWyWwY2Onc" target="_blank" rel="noopener">Scaling mobile games to a global audience using App Engine and Cloud Datastore (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=H4vMcD7zKM0" target="_blank" rel="noopener">How Google Does Planet-Scale Engineering for Planet-Scale Infra (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.topcoder.com/community/competitive-programming/tutorials/the-importance-of-algorithms/" target="_blank" rel="noopener">The Importance of Algorithms</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2009/8/6/an-unorthodox-approach-to-database-design-the-coming-of-the.html" target="_blank" rel="noopener">Sharding</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=oodS71YtkGU" target="_blank" rel="noopener">Scale at Facebook (2012), “Building for a Billion Users” (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=p0jGmgIrf_M&amp;list=PLRXxvay_m8gqVlExPC5DG3TGWJTaBgqSA&amp;index=4" target="_blank" rel="noopener">Engineering for the Long Game - Astrid Atkinson Keynote(video)</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2012/3/26/7-years-of-youtube-scalability-lessons-in-30-minutes.html" target="_blank" rel="noopener">7 Years Of YouTube Scalability Lessons In 30 Minutes</a><ul>
<li><a href="https://www.youtube.com/watch?v=G-lGCC4KKok" target="_blank" rel="noopener">video</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/8/15/how-paypal-scaled-to-billions-of-transactions-daily-using-ju.html" target="_blank" rel="noopener">How PayPal Scaled To Billions Of Transactions Daily Using Just 8VMs</a></li>
<li><input disabled="" type="checkbox"> <a href="https://blog.clevertap.com/how-to-remove-duplicates-in-large-datasets/" target="_blank" rel="noopener">How to Remove Duplicates in Large Datasets</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=3vV4YiqKm1o" target="_blank" rel="noopener">A look inside Etsy’s scale and engineering culture with Jon Cowie (video)</a></li>
<li><input disabled="" type="checkbox"> <a href="http://thenewstack.io/led-amazon-microservices-architecture/" target="_blank" rel="noopener">What Led Amazon to its Own Microservices Architecture</a></li>
<li><input disabled="" type="checkbox"> <a href="https://eng.uber.com/trip-data-squeeze/" target="_blank" rel="noopener">To Compress Or Not To Compress, That Was Uber’s Question</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/3/3/asyncio-tarantool-queue-get-in-the-queue.html" target="_blank" rel="noopener">Asyncio Tarantool Queue, Get In The Queue</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/2/25/when-should-approximate-query-processing-be-used.html" target="_blank" rel="noopener">When Should Approximate Query Processing Be Used?</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/2/23/googles-transition-from-single-datacenter-to-failover-to-a-n.html" target="_blank" rel="noopener">Google’s Transition From Single Datacenter, To Failover, To A Native Multihomed Architecture</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2012/9/24/google-spanners-most-surprising-revelation-nosql-is-out-and.html" target="_blank" rel="noopener">Spanner</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/7/6/machine-learning-driven-programming-a-new-programming-for-a.html" target="_blank" rel="noopener">Machine Learning Driven Programming: A New Programming For A New World</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/6/15/the-image-optimization-technology-that-serves-millions-of-re.html" target="_blank" rel="noopener">The Image Optimization Technology That Serves Millions Of Requests Per Day</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/2/1/a-patreon-architecture-short.html" target="_blank" rel="noopener">A Patreon Architecture Short</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/1/27/tinder-how-does-one-of-the-largest-recommendation-engines-de.html" target="_blank" rel="noopener">Tinder: How Does One Of The Largest Recommendation Engines Decide Who You’ll See Next?</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/1/25/design-of-a-modern-cache.html" target="_blank" rel="noopener">Design Of A Modern Cache</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/1/13/live-video-streaming-at-facebook-scale.html" target="_blank" rel="noopener">Live Video Streaming At Facebook Scale</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2016/1/11/a-beginners-guide-to-scaling-to-11-million-users-on-amazons.html" target="_blank" rel="noopener">A Beginner’s Guide To Scaling To 11 Million+ Users On Amazon’s AWS</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2015/12/16/how-does-the-use-of-docker-effect-latency.html" target="_blank" rel="noopener">How Does The Use Of Docker Effect Latency?</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2015/11/9/a-360-degree-view-of-the-entire-netflix-stack.html" target="_blank" rel="noopener">A 360 Degree View Of The Entire Netflix Stack</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/latency-everywhere-and-it-costs-you-sales-how-crush-it" target="_blank" rel="noopener">Latency Is Everywhere And It Costs You Sales - How To Crush It</a></li>
<li><input disabled="" type="checkbox"> <a href="http://martinfowler.com/articles/serverless.html" target="_blank" rel="noopener">Serverless (very long, just need the gist)</a></li>
<li><input disabled="" type="checkbox"> <a href="http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances" target="_blank" rel="noopener">What Powers Instagram: Hundreds of Instances, Dozens of Technologies</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html" target="_blank" rel="noopener">Cinchcast Architecture - Producing 1,500 Hours Of Audio Every Day</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2010/3/16/justintvs-live-video-broadcasting-architecture.html" target="_blank" rel="noopener">Justin.Tv’s Live Video Broadcasting Architecture</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2010/9/21/playfishs-social-gaming-architecture-50-million-monthly-user.html" target="_blank" rel="noopener">Playfish’s Social Gaming Architecture - 50 Million Monthly Users And Growing</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2011/6/27/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html" target="_blank" rel="noopener">TripAdvisor Architecture - 40M Visitors, 200M Dynamic Page Views, 30TB Data</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/plentyoffish-architecture" target="_blank" rel="noopener">PlentyOfFish Architecture</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2013/9/23/salesforce-architecture-how-they-handle-13-billion-transacti.html" target="_blank" rel="noopener">Salesforce Architecture - How They Handle 1.3 Billion Transactions A Day</a></li>
<li><input disabled="" type="checkbox"> <a href="http://highscalability.com/blog/2013/11/4/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html" target="_blank" rel="noopener">ESPN’s Architecture At Scale - Operating At 100,000 Duh Nuh Nuhs Per Second</a></li>
<li><input disabled="" type="checkbox"> See “Messaging, Serialization, and Queueing Systems” way below for info on some of the technologies that can glue services together</li>
<li><input disabled="" type="checkbox"> Twitter:<ul>
<li><a href="https://www.youtube.com/watch?v=5cKTP36HVgI" target="_blank" rel="noopener">O’Reilly MySQL CE 2011: Jeremy Cole, “Big and Small Data at @Twitter” (video)</a></li>
<li><a href="https://www.infoq.com/presentations/Twitter-Timeline-Scalability" target="_blank" rel="noopener">Timelines at Scale</a></li>
</ul>
</li>
<li>For even more, see “Mining Massive Datasets” video series in the <a href="#video-series">Video Series</a> section.</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Practicing the system design process: Here are some ideas to try working through on paper, each with some documentation on how it was handled in the real world:<ul>
<li>review: <a href="https://github.com/donnemartin/system-design-primer" target="_blank" rel="noopener">The System Design Primer</a></li>
<li><a href="http://www.hiredintech.com/system-design/" target="_blank" rel="noopener">System Design from HiredInTech</a></li>
<li><a href="https://github.com/jwasham/coding-interview-university/blob/master/extras/cheat%20sheets/system-design.pdf" target="_blank" rel="noopener">cheat sheet</a></li>
<li>flow:<ol>
<li>Understand the problem and scope:<ul>
<li>define the use cases, with interviewer’s help</li>
<li>suggest additional features</li>
<li>remove items that interviewer deems out of scope</li>
<li>assume high availability is required, add as a use case</li>
</ul>
</li>
<li>Think about constraints:<ul>
<li>ask how many requests per month</li>
<li>ask how many requests per second (they may volunteer it or make you do the math)</li>
<li>estimate reads vs. writes percentage</li>
<li>keep 80/20 rule in mind when estimating</li>
<li>how much data written per second</li>
<li>total storage required over 5 years</li>
<li>how much data read per second</li>
</ul>
</li>
<li>Abstract design:<ul>
<li>layers (service, data, caching)</li>
<li>infrastructure: load balancing, messaging</li>
<li>rough overview of any key algorithm that drives the service</li>
<li>consider bottlenecks and determine solutions</li>
</ul>
</li>
</ol>
</li>
<li>Exercises:<ul>
<li><a href="http://repository.cmu.edu/cgi/viewcontent.cgi?article=2112&amp;context=compsci" target="_blank" rel="noopener">Design a CDN network: old article</a></li>
<li><a href="https://blog.twitter.com/2010/announcing-snowflake" target="_blank" rel="noopener">Design a random unique ID generation system</a></li>
<li><a href="http://www.indieflashblog.com/how-to-create-an-asynchronous-multiplayer-game.html" target="_blank" rel="noopener">Design an online multiplayer card game</a></li>
<li><a href="http://www.slideshare.net/dvirsky/introduction-to-redis" target="_blank" rel="noopener">Design a key-value database</a></li>
<li><a href="http://highscalability.com/blog/2011/12/6/instagram-architecture-14-million-users-terabytes-of-photos.html" target="_blank" rel="noopener">Design a picture sharing system</a></li>
<li><a href="http://ijcai13.org/files/tutorial_slides/td3.pdf" target="_blank" rel="noopener">Design a recommendation system</a></li>
<li><a href="http://www.hiredintech.com/system-design/the-system-design-process/" target="_blank" rel="noopener">Design a URL-shortener system: copied from above</a></li>
<li><a href="https://www.adayinthelifeof.nl/2011/02/06/memcache-internals/" target="_blank" rel="noopener">Design a cache system</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="Final-Review"><a href="#Final-Review" class="headerlink" title="Final Review"></a>Final Review</h2><pre><code>This section will have shorter videos that you can watch pretty quickly to review most of the important concepts.
It's nice if you want a refresher often.</code></pre><ul>
<li><input disabled="" type="checkbox"> Series of 2-3 minutes short subject videos (23 videos)<ul>
<li><a href="https://www.youtube.com/watch?v=r4r1DZcx1cM&amp;list=PLmVb1OknmNJuC5POdcDv5oCS7_OUkDgpj&amp;index=22" target="_blank" rel="noopener">Videos</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> Series of 2-5 minutes short subject videos - Michael Sambol (18 videos):<ul>
<li><a href="https://www.youtube.com/channel/UCzDJwLWoYCUQowF_nG3m5OQ" target="_blank" rel="noopener">Videos</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part1" target="_blank" rel="noopener">Sedgewick Videos - Algorithms I</a></li>
<li><input disabled="" type="checkbox"> <a href="https://www.coursera.org/learn/algorithms-part2" target="_blank" rel="noopener">Sedgewick Videos - Algorithms II</a></li>
</ul>
<hr>
<h2 id="Coding-Question-Practice"><a href="#Coding-Question-Practice" class="headerlink" title="Coding Question Practice"></a>Coding Question Practice</h2><p>Now that you know all the computer science topics above, it’s time to practice answering coding problems.</p>
<p><strong>Coding question practice is not about memorizing answers to programming problems.</strong></p>
<p>Why you need to practice doing programming problems:</p>
<ul>
<li>problem recognition, and where the right data structures and algorithms fit in</li>
<li>gathering requirements for the problem</li>
<li>talking your way through the problem like you will in the interview</li>
<li>coding on a whiteboard or paper, not a computer</li>
<li>coming up with time and space complexity for your solutions</li>
<li>testing your solutions</li>
</ul>
<p>There is a great intro for methodical, communicative problem solving in an interview. You’ll get this from the programming<br>interview books, too, but I found this outstanding:<br><a href="http://www.hiredintech.com/algorithm-design/" target="_blank" rel="noopener">Algorithm design canvas</a></p>
<p>No whiteboard at home? That makes sense. I’m a weirdo and have a big whiteboard. Instead of a whiteboard, pick up a<br>large drawing pad from an art store. You can sit on the couch and practice. This is my “sofa whiteboard”.<br>I added the pen in the photo for scale. If you use a pen, you’ll wish you could erase. Gets messy quick. I use a pencil<br>and eraser.</p>
<p><img src="https://d3j2pkmjtin6ou.cloudfront.net/art_board_sm_2.jpg" alt="my sofa whiteboard"></p>
<p>Supplemental:</p>
<ul>
<li><a href="https://www.topcoder.com/community/competitive-programming/tutorials/mathematics-for-topcoders/" target="_blank" rel="noopener">Mathematics for Topcoders</a></li>
<li><a href="https://www.topcoder.com/community/competitive-programming/tutorials/dynamic-programming-from-novice-to-advanced/" target="_blank" rel="noopener">Dynamic Programming – From Novice to Advanced</a></li>
<li><a href="https://web.archive.org/web/20160906124824/http://courses.csail.mit.edu/iap/interview/materials.php" target="_blank" rel="noopener">MIT Interview Materials</a></li>
<li><a href="http://exercism.io/languages" target="_blank" rel="noopener">Exercises for getting better at a given language</a></li>
</ul>
<p><strong>Read and Do Programming Problems (in this order):</strong></p>
<ul>
<li><input disabled="" type="checkbox"> <a href="http://www.wiley.com/WileyCDA/WileyTitle/productCd-047012167X.html" target="_blank" rel="noopener">Programming Interviews Exposed: Secrets to Landing Your Next Job, 2nd Edition</a><ul>
<li>answers in C, C++ and Java</li>
</ul>
</li>
<li><input disabled="" type="checkbox"> <a href="http://www.amazon.com/Cracking-Coding-Interview-6th-Programming/dp/0984782850/" target="_blank" rel="noopener">Cracking the Coding Interview, 6th Edition</a><ul>
<li>answers in Java</li>
</ul>
</li>
</ul>
<p>See <a href="#book-list">Book List above</a></p>
<h2 id="Coding-exercises-challenges"><a href="#Coding-exercises-challenges" class="headerlink" title="Coding exercises/challenges"></a>Coding exercises/challenges</h2><p>Once you’ve learned your brains out, put those brains to work.<br>Take coding challenges every day, as many as you can.</p>
<ul>
<li><a href="https://www.topcoder.com/community/competitive-programming/tutorials/how-to-find-a-solution/" target="_blank" rel="noopener">How to Find a Solution</a></li>
<li><a href="https://www.topcoder.com/community/competitive-programming/tutorials/how-to-dissect-a-topcoder-problem-statement/" target="_blank" rel="noopener">How to Dissect a Topcoder Problem Statement</a></li>
</ul>
<p>Coding Interview Question Videos:</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=NBcqBddFbZw&amp;list=PLamzFoFxwoNjPfxzaWqs7cZGsPYy0x_gI" target="_blank" rel="noopener">IDeserve (88 videos)</a></li>
<li><a href="https://www.youtube.com/user/tusharroy2525/playlists?shelf_id=2&amp;view=50&amp;sort=dd" target="_blank" rel="noopener">Tushar Roy (5 playlists)</a></li>
</ul>
<p>Challenge sites:</p>
<ul>
<li><a href="https://leetcode.com/" target="_blank" rel="noopener">LeetCode</a></li>
<li><a href="https://www.topcoder.com/" target="_blank" rel="noopener">TopCoder</a></li>
<li><a href="https://projecteuler.net/index.php?section=problems" target="_blank" rel="noopener">Project Euler (math-focused)</a></li>
<li><a href="http://www.codewars.com" target="_blank" rel="noopener">Codewars</a></li>
<li><a href="https://www.hackerearth.com/" target="_blank" rel="noopener">HackerEarth</a></li>
<li><a href="https://www.hackerrank.com/" target="_blank" rel="noopener">HackerRank</a></li>
<li><a href="https://codility.com/programmers/" target="_blank" rel="noopener">Codility</a></li>
<li><a href="https://www.interviewcake.com/" target="_blank" rel="noopener">InterviewCake</a></li>
<li><a href="http://www.geeksforgeeks.org/" target="_blank" rel="noopener">Geeks for Geeks</a></li>
<li><a href="https://www.interviewbit.com/invite/icjf" target="_blank" rel="noopener">InterviewBit</a></li>
<li><a href="http://www.spoj.com/" target="_blank" rel="noopener">Sphere Online Judge (spoj)</a></li>
<li><a href="https://www.codechef.com/" target="_blank" rel="noopener">Codechef</a></li>
</ul>
<p>Challenge repos:</p>
<ul>
<li><a href="https://github.com/donnemartin/interactive-coding-challenges" target="_blank" rel="noopener">Interactive Coding Interview Challenges in Python</a></li>
</ul>
<p>Mock Interviews:</p>
<ul>
<li><a href="http://www.gainlo.co/" target="_blank" rel="noopener">Gainlo.co: Mock interviewers from big companies</a> - I used this and it helped me relax for the phone screen and on-site interview.</li>
<li><a href="https://www.pramp.com/" target="_blank" rel="noopener">Pramp: Mock interviews from/with peers</a> - peer-to-peer model of practice interviews</li>
<li><a href="https://refdash.com/" target="_blank" rel="noopener">Refdash: Mock interviews and expedited interviews</a> - also help candidates fast track by skipping multiple interviews with tech companies.</li>
</ul>
<h2 id="Once-you’re-closer-to-the-interview"><a href="#Once-you’re-closer-to-the-interview" class="headerlink" title="Once you’re closer to the interview"></a>Once you’re closer to the interview</h2><ul>
<li>Cracking The Coding Interview Set 2 (videos):<ul>
<li><a href="https://www.youtube.com/watch?v=4NIb9l3imAo" target="_blank" rel="noopener">Cracking The Code Interview</a></li>
<li><a href="https://www.youtube.com/watch?v=Eg5-tdAwclo" target="_blank" rel="noopener">Cracking the Coding Interview - Fullstack Speaker Series</a></li>
</ul>
</li>
</ul>
<h2 id="Your-Resume"><a href="#Your-Resume" class="headerlink" title="Your Resume"></a>Your Resume</h2><ul>
<li>See Resume prep items in Cracking The Coding Interview and back of Programming Interviews Exposed</li>
</ul>
<h2 id="Be-thinking-of-for-when-the-interview-comes"><a href="#Be-thinking-of-for-when-the-interview-comes" class="headerlink" title="Be thinking of for when the interview comes"></a>Be thinking of for when the interview comes</h2><p>Think of about 20 interview questions you’ll get, along with the lines of the items below. Have 2-3 answers for each.<br>Have a story, not just data, about something you accomplished.</p>
<ul>
<li>Why do you want this job?</li>
<li>What’s a tough problem you’ve solved?</li>
<li>Biggest challenges faced?</li>
<li>Best/worst designs seen?</li>
<li>Ideas for improving an existing product.</li>
<li>How do you work best, as an individual and as part of a team?</li>
<li>Which of your skills or experiences would be assets in the role and why?</li>
<li>What did you most enjoy at [job x / project y]?</li>
<li>What was the biggest challenge you faced at [job x / project y]?</li>
<li>What was the hardest bug you faced at [job x / project y]?</li>
<li>What did you learn at [job x / project y]?</li>
<li>What would you have done better at [job x / project y]?</li>
</ul>
<h2 id="Have-questions-for-the-interviewer"><a href="#Have-questions-for-the-interviewer" class="headerlink" title="Have questions for the interviewer"></a>Have questions for the interviewer</h2><pre><code>Some of mine (I already may know answer to but want their opinion or team perspective):</code></pre><ul>
<li>How large is your team?</li>
<li>What does your dev cycle look like? Do you do waterfall/sprints/agile?</li>
<li>Are rushes to deadlines common? Or is there flexibility?</li>
<li>How are decisions made in your team?</li>
<li>How many meetings do you have per week?</li>
<li>Do you feel your work environment helps you concentrate?</li>
<li>What are you working on?</li>
<li>What do you like about it?</li>
<li>What is the work life like?</li>
<li>How is work/life balance?</li>
</ul>
<h2 id="Once-You’ve-Got-The-Job"><a href="#Once-You’ve-Got-The-Job" class="headerlink" title="Once You’ve Got The Job"></a>Once You’ve Got The Job</h2><p>Congratulations!</p>
<p>Keep learning.</p>
<p>You’re never really done.</p>
<hr>
<pre><code>*****************************************************************************************************
*****************************************************************************************************

Everything below this point is optional.
By studying these, you'll get greater exposure to more CS concepts, and will be better prepared for
any software engineering job. You'll be a much more well-rounded software engineer.

*****************************************************************************************************
*****************************************************************************************************</code></pre><hr>
<h2 id="Additional-Books"><a href="#Additional-Books" class="headerlink" title="Additional Books"></a>Additional Books</h2><pre><code>These are here so you can dive into a topic you find interesting.</code></pre><ul>
<li><p><a href="https://www.amazon.com/dp/013937681X" target="_blank" rel="noopener">The Unix Programming Environment</a></p>
<ul>
<li>an oldie but a goodie</li>
</ul>
</li>
<li><p><a href="https://www.amazon.com/dp/1593273894/" target="_blank" rel="noopener">The Linux Command Line: A Complete Introduction</a></p>
<ul>
<li>a modern option</li>
</ul>
</li>
<li><p><a href="https://en.wikipedia.org/wiki/TCP/IP_Illustrated" target="_blank" rel="noopener">TCP/IP Illustrated Series</a></p>
</li>
<li><p><a href="https://www.amazon.com/gp/product/0596007124/" target="_blank" rel="noopener">Head First Design Patterns</a></p>
<ul>
<li>a gentle introduction to design patterns</li>
</ul>
</li>
<li><p><a href="https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612" target="_blank" rel="noopener">Design Patterns: Elements of Reusable Object-Oriente​d Software</a></p>
<ul>
<li>aka the “Gang Of Four” book, or GOF</li>
<li>the canonical design patterns book</li>
</ul>
</li>
<li><p><a href="https://www.amazon.com/UNIX-Linux-System-Administration-Handbook/dp/0134277554/" target="_blank" rel="noopener">UNIX and Linux System Administration Handbook, 5th Edition</a></p>
</li>
<li><p><a href="http://www.amazon.com/Algorithm-Design-Manual-Steven-Skiena/dp/1849967202" target="_blank" rel="noopener">Algorithm Design Manual</a> (Skiena)</p>
<ul>
<li>As a review and problem recognition</li>
<li>The algorithm catalog portion is well beyond the scope of difficulty you’ll get in an interview.</li>
<li>This book has 2 parts:<ul>
<li>class textbook on data structures and algorithms<ul>
<li>pros:<ul>
<li>is a good review as any algorithms textbook would be</li>
<li>nice stories from his experiences solving problems in industry and academia</li>
<li>code examples in C</li>
</ul>
</li>
<li>cons:<ul>
<li>can be as dense or impenetrable as CLRS, and in some cases, CLRS may be a better alternative for some subjects</li>
<li>chapters 7, 8, 9 can be painful to try to follow, as some items are not explained well or require more brain than I have</li>
<li>don’t get me wrong: I like Skiena, his teaching style, and mannerisms, but I may not be Stony Brook material.</li>
</ul>
</li>
</ul>
</li>
<li>algorithm catalog:<ul>
<li>this is the real reason you buy this book.</li>
<li>about to get to this part. Will update here once I’ve made my way through it.</li>
</ul>
</li>
</ul>
</li>
<li>Can rent it on kindle</li>
<li>Answers:<ul>
<li><a href="http://www.algorithm.cs.sunysb.edu/algowiki/index.php/The_Algorithms_Design_Manual_(Second_Edition)" target="_blank" rel="noopener">Solutions</a></li>
<li><a href="http://blog.panictank.net/category/algorithmndesignmanualsolutions/page/2/" target="_blank" rel="noopener">Solutions</a></li>
</ul>
</li>
<li><a href="http://www3.cs.stonybrook.edu/~skiena/algorist/book/errata" target="_blank" rel="noopener">Errata</a></li>
</ul>
</li>
<li><p><a href="https://www.amazon.com/Write-Great-Code-Understanding-Machine/dp/1593270038" target="_blank" rel="noopener">Write Great Code: Volume 1: Understanding the Machine</a></p>
<ul>
<li>The book was published in 2004, and is somewhat outdated, but it’s a terrific resource for understanding a computer in brief.</li>
<li>The author invented <a href="https://en.wikipedia.org/wiki/High_Level_Assembly" target="_blank" rel="noopener">HLA</a>, so take mentions and examples in HLA with a grain of salt. Not widely used, but decent examples of what assembly looks like.</li>
<li>These chapters are worth the read to give you a nice foundation:<ul>
<li>Chapter 2 - Numeric Representation</li>
<li>Chapter 3 - Binary Arithmetic and Bit Operations</li>
<li>Chapter 4 - Floating-Point Representation</li>
<li>Chapter 5 - Character Representation</li>
<li>Chapter 6 - Memory Organization and Access</li>
<li>Chapter 7 - Composite Data Types and Memory Objects</li>
<li>Chapter 9 - CPU Architecture</li>
<li>Chapter 10 - Instruction Set Architecture</li>
<li>Chapter 11 - Memory Architecture and Organization</li>
</ul>
</li>
</ul>
</li>
<li><p><a href="https://www.amazon.com/Introduction-Algorithms-3rd-MIT-Press/dp/0262033844" target="_blank" rel="noopener">Introduction to Algorithms</a></p>
<ul>
<li><strong>Important:</strong> Reading this book will only have limited value. This book is a great review of algorithms and data structures, but won’t teach you how to write good code. You have to be able to code a decent solution efficiently.</li>
<li>aka CLR, sometimes CLRS, because Stein was late to the game</li>
</ul>
</li>
<li><p><a href="https://www.amazon.com/dp/0128119055" target="_blank" rel="noopener">Computer Architecture, Sixth Edition: A Quantitative Approach</a></p>
<ul>
<li>For a richer, more up-to-date (2017), but longer treatment</li>
</ul>
</li>
<li><p><a href="http://www.amazon.com/Programming-Pearls-2nd-Jon-Bentley/dp/0201657880" target="_blank" rel="noopener">Programming Pearls</a></p>
<ul>
<li>The first couple of chapters present clever solutions to programming problems (some very old using data tape) but<br>that is just an intro. This a guidebook on program design and architecture.</li>
</ul>
</li>
</ul>
<h2 id="Additional-Learning"><a href="#Additional-Learning" class="headerlink" title="Additional Learning"></a>Additional Learning</h2><pre><code>I added them to help you become a well-rounded software engineer, and to be aware of certain 
technologies and algorithms, so you'll have a bigger toolbox.</code></pre><ul>
<li><h3 id="Compilers"><a href="#Compilers" class="headerlink" title="Compilers"></a>Compilers</h3><ul>
<li><a href="https://www.youtube.com/watch?v=IhC7sdYe-Jg" target="_blank" rel="noopener">How a Compiler Works in ~1 minute (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=CSZLNYF4Klo" target="_blank" rel="noopener">Harvard CS50 - Compilers (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=twodd1KFfGk" target="_blank" rel="noopener">C++ (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=FnGCDLhaxKU" target="_blank" rel="noopener">Understanding Compiler Optimization (C++) (video)</a></li>
</ul>
</li>
<li><h3 id="Emacs-and-vi-m"><a href="#Emacs-and-vi-m" class="headerlink" title="Emacs and vi(m)"></a>Emacs and vi(m)</h3><ul>
<li>Familiarize yourself with a unix-based code editor</li>
<li>vi(m):<ul>
<li><a href="https://www.youtube.com/watch?v=5givLEMcINQ&amp;index=1&amp;list=PL13bz4SHGmRxlZVmWQ9DvXo1fEg4UdGkr" target="_blank" rel="noopener">Editing With vim 01 - Installation, Setup, and The Modes (video)</a></li>
<li><a href="http://vim-adventures.com/" target="_blank" rel="noopener">VIM Adventures</a></li>
<li>set of 4 videos:<ul>
<li><a href="https://www.youtube.com/watch?v=SI8TeVMX8pk" target="_blank" rel="noopener">The vi/vim editor - Lesson 1</a></li>
<li><a href="https://www.youtube.com/watch?v=F3OO7ZIOaJE" target="_blank" rel="noopener">The vi/vim editor - Lesson 2</a></li>
<li><a href="https://www.youtube.com/watch?v=ZYEccA_nMaI" target="_blank" rel="noopener">The vi/vim editor - Lesson 3</a></li>
<li><a href="https://www.youtube.com/watch?v=1lYD5gwgZIA" target="_blank" rel="noopener">The vi/vim editor - Lesson 4</a></li>
</ul>
</li>
<li><a href="http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Using_Vi_instead_of_Emacs" target="_blank" rel="noopener">Using Vi Instead of Emacs</a></li>
</ul>
</li>
<li>emacs:<ul>
<li><a href="https://www.youtube.com/watch?v=hbmV1bnQ-i0" target="_blank" rel="noopener">Basics Emacs Tutorial (video)</a></li>
<li>set of 3 (videos):<ul>
<li><a href="https://www.youtube.com/watch?v=ujODL7MD04Q" target="_blank" rel="noopener">Emacs Tutorial (Beginners) -Part 1- File commands, cut/copy/paste, cursor commands</a></li>
<li><a href="https://www.youtube.com/watch?v=XWpsRupJ4II" target="_blank" rel="noopener">Emacs Tutorial (Beginners) -Part 2- Buffer management, search, M-x grep and rgrep modes</a></li>
<li><a href="https://www.youtube.com/watch?v=paSgzPso-yc" target="_blank" rel="noopener">Emacs Tutorial (Beginners) -Part 3- Expressions, Statements, ~/.emacs file and packages</a></li>
</ul>
</li>
<li><a href="https://www.youtube.com/watch?v=JWD1Fpdd4Pc" target="_blank" rel="noopener">Evil Mode: Or, How I Learned to Stop Worrying and Love Emacs (video)</a></li>
<li><a href="http://www.cs.yale.edu/homes/aspnes/classes/223/notes.html#Writing_C_programs_with_Emacs" target="_blank" rel="noopener">Writing C Programs With Emacs</a></li>
<li><a href="https://www.youtube.com/watch?v=nsGYet02bEk" target="_blank" rel="noopener">(maybe) Org Mode In Depth: Managing Structure (video)</a></li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Unix-command-line-tools"><a href="#Unix-command-line-tools" class="headerlink" title="Unix command line tools"></a>Unix command line tools</h3><ul>
<li>I filled in the list below from good tools.</li>
<li>bash</li>
<li>cat</li>
<li>grep</li>
<li>sed</li>
<li>awk</li>
<li>curl or wget</li>
<li>sort</li>
<li>tr</li>
<li>uniq</li>
<li><a href="https://en.wikipedia.org/wiki/Strace" target="_blank" rel="noopener">strace</a></li>
<li><a href="https://danielmiessler.com/study/tcpdump/" target="_blank" rel="noopener">tcpdump</a></li>
</ul>
</li>
<li><h3 id="Information-theory-videos"><a href="#Information-theory-videos" class="headerlink" title="Information theory (videos)"></a>Information theory (videos)</h3><ul>
<li><a href="https://www.khanacademy.org/computing/computer-science/informationtheory" target="_blank" rel="noopener">Khan Academy</a></li>
<li>more about Markov processes:<ul>
<li><a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/waxgx/core-markov-text-generation" target="_blank" rel="noopener">Core Markov Text Generation</a></li>
<li><a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/gZhiC/core-implementing-markov-text-generation" target="_blank" rel="noopener">Core Implementing Markov Text Generation</a></li>
<li><a href="https://www.coursera.org/learn/data-structures-optimizing-performance/lecture/EUjrq/project-markov-text-generation-walk-through" target="_blank" rel="noopener">Project = Markov Text Generation Walk Through</a></li>
</ul>
</li>
<li>See more in MIT 6.050J Information and Entropy series below.</li>
</ul>
</li>
<li><h3 id="Parity-amp-Hamming-Code-videos"><a href="#Parity-amp-Hamming-Code-videos" class="headerlink" title="Parity &amp; Hamming Code (videos)"></a>Parity &amp; Hamming Code (videos)</h3><ul>
<li><a href="https://www.youtube.com/watch?v=q-3BctoUpHE" target="_blank" rel="noopener">Intro</a></li>
<li><a href="https://www.youtube.com/watch?v=DdMcAUlxh1M" target="_blank" rel="noopener">Parity</a></li>
<li>Hamming Code:<ul>
<li><a href="https://www.youtube.com/watch?v=1A_NcXxdoCc" target="_blank" rel="noopener">Error detection</a></li>
<li><a href="https://www.youtube.com/watch?v=JAMLuxdHH8o" target="_blank" rel="noopener">Error correction</a></li>
</ul>
</li>
<li><a href="https://www.youtube.com/watch?v=wbH2VxzmoZk" target="_blank" rel="noopener">Error Checking</a></li>
</ul>
</li>
<li><h3 id="Entropy"><a href="#Entropy" class="headerlink" title="Entropy"></a>Entropy</h3><ul>
<li>also see videos below</li>
<li>make sure to watch information theory videos first</li>
<li><a href="https://youtu.be/JnJq3Py0dyM?t=176" target="_blank" rel="noopener">Information Theory, Claude Shannon, Entropy, Redundancy, Data Compression &amp; Bits (video)</a></li>
</ul>
</li>
<li><h3 id="Cryptography"><a href="#Cryptography" class="headerlink" title="Cryptography"></a>Cryptography</h3><ul>
<li>also see videos below</li>
<li>make sure to watch information theory videos first</li>
<li><a href="https://www.khanacademy.org/computing/computer-science/cryptography" target="_blank" rel="noopener">Khan Academy Series</a></li>
<li><a href="https://www.youtube.com/watch?v=KqqOXndnvic&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=30" target="_blank" rel="noopener">Cryptography: Hash Functions</a></li>
<li><a href="https://www.youtube.com/watch?v=9TNI2wHmaeI&amp;index=31&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">Cryptography: Encryption</a></li>
</ul>
</li>
<li><h3 id="Compression"><a href="#Compression" class="headerlink" title="Compression"></a>Compression</h3><ul>
<li>make sure to watch information theory videos first</li>
<li>Computerphile (videos):<ul>
<li><a href="https://www.youtube.com/watch?v=Lto-ajuqW3w" target="_blank" rel="noopener">Compression</a></li>
<li><a href="https://www.youtube.com/watch?v=M5c_RFKVkko" target="_blank" rel="noopener">Entropy in Compression</a></li>
<li><a href="https://www.youtube.com/watch?v=umTbivyJoiI" target="_blank" rel="noopener">Upside Down Trees (Huffman Trees)</a></li>
<li><a href="https://www.youtube.com/watch?v=DV8efuB3h2g" target="_blank" rel="noopener">EXTRA BITS/TRITS - Huffman Trees</a></li>
<li><a href="https://www.youtube.com/watch?v=goOa3DGezUA" target="_blank" rel="noopener">Elegant Compression in Text (The LZ 77 Method)</a></li>
<li><a href="https://www.youtube.com/watch?v=cCDCfoHTsaU" target="_blank" rel="noopener">Text Compression Meets Probabilities</a></li>
</ul>
</li>
<li><a href="https://www.youtube.com/playlist?list=PLOU2XLYxmsIJGErt5rrCqaSGTMyyqNt2H" target="_blank" rel="noopener">Compressor Head videos</a></li>
<li><a href="https://www.youtube.com/watch?v=whGwm0Lky2s" target="_blank" rel="noopener">(optional) Google Developers Live: GZIP is not enough!</a></li>
</ul>
</li>
<li><h3 id="Computer-Security"><a href="#Computer-Security" class="headerlink" title="Computer Security"></a>Computer Security</h3><ul>
<li><a href="https://www.youtube.com/playlist?list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">MIT (23 videos)</a><ul>
<li><a href="https://www.youtube.com/watch?v=GqmQg-cszw4&amp;index=1&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">Introduction, Threat Models</a></li>
<li><a href="https://www.youtube.com/watch?v=6bwzNg5qQ0o&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&amp;index=2" target="_blank" rel="noopener">Control Hijacking Attacks</a></li>
<li><a href="https://www.youtube.com/watch?v=drQyrzRoRiA&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&amp;index=3" target="_blank" rel="noopener">Buffer Overflow Exploits and Defenses</a></li>
<li><a href="https://www.youtube.com/watch?v=6SIJmoE9L9g&amp;index=4&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">Privilege Separation</a></li>
<li><a href="https://www.youtube.com/watch?v=8VqTSY-11F4&amp;index=5&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">Capabilities</a></li>
<li><a href="https://www.youtube.com/watch?v=VEV74hwASeU&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh&amp;index=6" target="_blank" rel="noopener">Sandboxing Native Code</a></li>
<li><a href="https://www.youtube.com/watch?v=chkFBigodIw&amp;index=7&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">Web Security Model</a></li>
<li><a href="https://www.youtube.com/watch?v=EBQIGy1ROLY&amp;index=8&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">Securing Web Applications</a></li>
<li><a href="https://www.youtube.com/watch?v=yRVZPvHYHzw&amp;index=9&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">Symbolic Execution</a></li>
<li><a href="https://www.youtube.com/watch?v=SIEVvk3NVuk&amp;index=11&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">Network Security</a></li>
<li><a href="https://www.youtube.com/watch?v=QOtA76ga_fY&amp;index=12&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">Network Protocols</a></li>
<li><a href="https://www.youtube.com/watch?v=PuVMkSEcPiI&amp;index=15&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">Side-Channel Attacks</a></li>
</ul>
</li>
</ul>
</li>
<li><h3 id="Garbage-collection"><a href="#Garbage-collection" class="headerlink" title="Garbage collection"></a>Garbage collection</h3><ul>
<li><a href="https://www.youtube.com/watch?v=iHVs_HkjdmI" target="_blank" rel="noopener">GC in Python (video)</a></li>
<li><a href="https://www.infoq.com/presentations/garbage-collection-benefits" target="_blank" rel="noopener">Deep Dive Java: Garbage Collection is Good!</a></li>
<li><a href="https://www.youtube.com/watch?v=P-8Z0-MhdQs&amp;list=PLdzf4Clw0VbOEWOS_sLhT_9zaiQDrS5AR&amp;index=3" target="_blank" rel="noopener">Deep Dive Python: Garbage Collection in CPython (video)</a></li>
</ul>
</li>
<li><h3 id="Parallel-Programming"><a href="#Parallel-Programming" class="headerlink" title="Parallel Programming"></a>Parallel Programming</h3><ul>
<li><a href="https://www.coursera.org/learn/parprog1/home/week/1" target="_blank" rel="noopener">Coursera (Scala)</a></li>
<li><a href="https://www.youtube.com/watch?v=uY85GkaYzBk" target="_blank" rel="noopener">Efficient Python for High Performance Parallel Computing (video)</a></li>
</ul>
</li>
<li><h3 id="Messaging-Serialization-and-Queueing-Systems"><a href="#Messaging-Serialization-and-Queueing-Systems" class="headerlink" title="Messaging, Serialization, and Queueing Systems"></a>Messaging, Serialization, and Queueing Systems</h3><ul>
<li><a href="https://thrift.apache.org/" target="_blank" rel="noopener">Thrift</a><ul>
<li><a href="http://thrift-tutorial.readthedocs.io/en/latest/intro.html" target="_blank" rel="noopener">Tutorial</a></li>
</ul>
</li>
<li><a href="https://developers.google.com/protocol-buffers/" target="_blank" rel="noopener">Protocol Buffers</a><ul>
<li><a href="https://developers.google.com/protocol-buffers/docs/tutorials" target="_blank" rel="noopener">Tutorials</a></li>
</ul>
</li>
<li><a href="http://www.grpc.io/" target="_blank" rel="noopener">gRPC</a><ul>
<li><a href="https://www.youtube.com/watch?v=5tmPvSe7xXQ&amp;list=PLcTqM9n_dieN0k1nSeN36Z_ppKnvMJoly&amp;index=1" target="_blank" rel="noopener">gRPC 101 for Java Developers (video)</a></li>
</ul>
</li>
<li><a href="http://redis.io/" target="_blank" rel="noopener">Redis</a><ul>
<li><a href="http://try.redis.io/" target="_blank" rel="noopener">Tutorial</a></li>
</ul>
</li>
<li><a href="https://aws.amazon.com/sqs/" target="_blank" rel="noopener">Amazon SQS (queue)</a></li>
<li><a href="https://aws.amazon.com/sns/" target="_blank" rel="noopener">Amazon SNS (pub-sub)</a></li>
<li><a href="https://www.rabbitmq.com/" target="_blank" rel="noopener">RabbitMQ</a><ul>
<li><a href="https://www.rabbitmq.com/getstarted.html" target="_blank" rel="noopener">Get Started</a></li>
</ul>
</li>
<li><a href="http://www.celeryproject.org/" target="_blank" rel="noopener">Celery</a><ul>
<li><a href="http://docs.celeryproject.org/en/latest/getting-started/first-steps-with-celery.html" target="_blank" rel="noopener">First Steps With Celery</a></li>
</ul>
</li>
<li><a href="http://zeromq.org/" target="_blank" rel="noopener">ZeroMQ</a><ul>
<li><a href="http://zeromq.org/intro:read-the-manual" target="_blank" rel="noopener">Intro - Read The Manual</a></li>
</ul>
</li>
<li><a href="http://activemq.apache.org/" target="_blank" rel="noopener">ActiveMQ</a></li>
<li><a href="http://kafka.apache.org/documentation.html#introduction" target="_blank" rel="noopener">Kafka</a></li>
<li><a href="http://msgpack.org/index.html" target="_blank" rel="noopener">MessagePack</a></li>
<li><a href="https://avro.apache.org/" target="_blank" rel="noopener">Avro</a></li>
</ul>
</li>
<li><h3 id="A"><a href="#A" class="headerlink" title="A*"></a>A*</h3><ul>
<li><a href="https://en.wikipedia.org/wiki/A*_search_algorithm" target="_blank" rel="noopener">A Search Algorithm</a></li>
<li><a href="https://www.youtube.com/watch?v=KNXfSOx4eEE" target="_blank" rel="noopener">A* Pathfinding Tutorial (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=-L-WgKMFuhE" target="_blank" rel="noopener">A* Pathfinding (E01: algorithm explanation) (video)</a></li>
</ul>
</li>
<li><h3 id="Fast-Fourier-Transform"><a href="#Fast-Fourier-Transform" class="headerlink" title="Fast Fourier Transform"></a>Fast Fourier Transform</h3><ul>
<li><a href="https://betterexplained.com/articles/an-interactive-guide-to-the-fourier-transform/" target="_blank" rel="noopener">An Interactive Guide To The Fourier Transform</a></li>
<li><a href="http://www.askamathematician.com/2012/09/q-what-is-a-fourier-transform-what-is-it-used-for/" target="_blank" rel="noopener">What is a Fourier transform? What is it used for?</a></li>
<li><a href="https://www.youtube.com/watch?v=Xxut2PN-V8Q" target="_blank" rel="noopener">What is the Fourier Transform? (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=iTMn0Kt18tg&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=4" target="_blank" rel="noopener">Divide &amp; Conquer: FFT (video)</a></li>
<li><a href="http://jakevdp.github.io/blog/2013/08/28/understanding-the-fft/" target="_blank" rel="noopener">Understanding The FFT</a></li>
</ul>
</li>
<li><h3 id="Bloom-Filter"><a href="#Bloom-Filter" class="headerlink" title="Bloom Filter"></a>Bloom Filter</h3><ul>
<li>Given a Bloom filter with m bits and k hashing functions, both insertion and membership testing are O(k)</li>
<li><a href="https://www.youtube.com/watch?v=-SuTGoFYjZs" target="_blank" rel="noopener">Bloom Filters (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=qBTdukbzc78" target="_blank" rel="noopener">Bloom Filters | Mining of Massive Datasets | Stanford University (video)</a></li>
<li><a href="http://billmill.org/bloomfilter-tutorial/" target="_blank" rel="noopener">Tutorial</a></li>
<li><a href="http://blog.michaelschmatz.com/2016/04/11/how-to-write-a-bloom-filter-cpp/" target="_blank" rel="noopener">How To Write A Bloom Filter App</a></li>
</ul>
</li>
<li><h3 id="HyperLogLog"><a href="#HyperLogLog" class="headerlink" title="HyperLogLog"></a>HyperLogLog</h3><ul>
<li><a href="http://highscalability.com/blog/2012/4/5/big-data-counting-how-to-count-a-billion-distinct-objects-us.html" target="_blank" rel="noopener">How To Count A Billion Distinct Objects Using Only 1.5KB Of Memory</a></li>
</ul>
</li>
<li><h3 id="Locality-Sensitive-Hashing"><a href="#Locality-Sensitive-Hashing" class="headerlink" title="Locality-Sensitive Hashing"></a>Locality-Sensitive Hashing</h3><ul>
<li>used to determine the similarity of documents</li>
<li>the opposite of MD5 or SHA which are used to determine if 2 documents/strings are exactly the same.</li>
<li><a href="http://ferd.ca/simhashing-hopefully-made-simple.html" target="_blank" rel="noopener">Simhashing (hopefully) made simple</a></li>
</ul>
</li>
<li><h3 id="van-Emde-Boas-Trees"><a href="#van-Emde-Boas-Trees" class="headerlink" title="van Emde Boas Trees"></a>van Emde Boas Trees</h3><ul>
<li><a href="https://www.youtube.com/watch?v=hmReJCupbNU&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=6" target="_blank" rel="noopener">Divide &amp; Conquer: van Emde Boas Trees (video)</a></li>
<li><a href="https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2012/lecture-notes/MIT6_046JS12_lec15.pdf" target="_blank" rel="noopener">MIT Lecture Notes</a></li>
</ul>
</li>
<li><h3 id="Augmented-Data-Structures"><a href="#Augmented-Data-Structures" class="headerlink" title="Augmented Data Structures"></a>Augmented Data Structures</h3><ul>
<li><a href="https://archive.org/details/ucberkeley_webcast_zksIj9O8_jc" target="_blank" rel="noopener">CS 61B Lecture 39: Augmenting Data Structures</a></li>
</ul>
</li>
<li><h3 id="Balanced-search-trees"><a href="#Balanced-search-trees" class="headerlink" title="Balanced search trees"></a>Balanced search trees</h3><ul>
<li><p>Know at least one type of balanced binary tree (and know how it’s implemented):</p>
</li>
<li><p>“Among balanced search trees, AVL and 2/3 trees are now passé, and red-black trees seem to be more popular.<br>  A particularly interesting self-organizing data structure is the splay tree, which uses rotations<br>  to move any accessed key to the root.” - Skiena</p>
</li>
<li><p>Of these, I chose to implement a splay tree. From what I’ve read, you won’t implement a<br>  balanced search tree in your interview. But I wanted exposure to coding one up<br>  and let’s face it, splay trees are the bee’s knees. I did read a lot of red-black tree code.</p>
<ul>
<li>splay tree: insert, search, delete functions<br>If you end up implementing red/black tree try just these:</li>
<li>search and insertion functions, skipping delete</li>
</ul>
</li>
<li><p>I want to learn more about B-Tree since it’s used so widely with very large data sets.</p>
</li>
<li><p><a href="https://en.wikipedia.org/wiki/Self-balancing_binary_search_tree" target="_blank" rel="noopener">Self-balancing binary search tree</a></p>
</li>
<li><p><strong>AVL trees</strong></p>
<ul>
<li>In practice:<br>  From what I can tell, these aren’t used much in practice, but I could see where they would be:<br>  The AVL tree is another structure supporting O(log n) search, insertion, and removal. It is more rigidly<br>  balanced than red–black trees, leading to slower insertion and removal but faster retrieval. This makes it<br>  attractive for data structures that may be built once and loaded without reconstruction, such as language<br>  dictionaries (or program dictionaries, such as the opcodes of an assembler or interpreter).</li>
<li><a href="https://www.youtube.com/watch?v=FNeL18KsWPc&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=6" target="_blank" rel="noopener">MIT AVL Trees / AVL Sort (video)</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/Qq5E0/avl-trees" target="_blank" rel="noopener">AVL Trees (video)</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/PKEBC/avl-tree-implementation" target="_blank" rel="noopener">AVL Tree Implementation (video)</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/22BgE/split-and-merge" target="_blank" rel="noopener">Split And Merge</a></li>
</ul>
</li>
<li><p><strong>Splay trees</strong></p>
<ul>
<li>In practice:<br>  Splay trees are typically used in the implementation of caches, memory allocators, routers, garbage collectors,<br>  data compression, ropes (replacement of string used for long text strings), in Windows NT (in the virtual memory,<br>  networking and file system code) etc.</li>
<li><a href="https://archive.org/details/ucberkeley_webcast_G5QIXywcJlY" target="_blank" rel="noopener">CS 61B: Splay Trees (video)</a></li>
<li>MIT Lecture: Splay Trees:<ul>
<li>Gets very mathy, but watch the last 10 minutes for sure.</li>
<li><a href="https://www.youtube.com/watch?v=QnPl_Y6EqMo" target="_blank" rel="noopener">Video</a></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>Red/black trees</strong></p>
<ul>
<li>these are a translation of a 2-3 tree (see below)</li>
<li>In practice:<br>  Red–black trees offer worst-case guarantees for insertion time, deletion time, and search time.<br>  Not only does this make them valuable in time-sensitive applications such as real-time applications,<br>  but it makes them valuable building blocks in other data structures which provide worst-case guarantees;<br>  for example, many data structures used in computational geometry can be based on red–black trees, and<br>  the Completely Fair Scheduler used in current Linux kernels uses red–black trees. In the version 8 of Java,<br>  the Collection HashMap has been modified such that instead of using a LinkedList to store identical elements with poor<br>  hashcodes, a Red-Black tree is used.</li>
<li><a href="https://youtu.be/1W3x0f_RmUo?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;t=3871" target="_blank" rel="noopener">Aduni - Algorithms - Lecture 4 (link jumps to starting point) (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=hm2GHwyKF1o&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=5" target="_blank" rel="noopener">Aduni - Algorithms - Lecture 5 (video)</a></li>
<li><a href="https://en.wikipedia.org/wiki/Red%E2%80%93black_tree" target="_blank" rel="noopener">Red-Black Tree</a></li>
<li><a href="https://www.topcoder.com/community/competitive-programming/tutorials/an-introduction-to-binary-search-and-red-black-trees/" target="_blank" rel="noopener">An Introduction To Binary Search And Red Black Tree</a></li>
</ul>
</li>
<li><p><strong>2-3 search trees</strong></p>
<ul>
<li>In practice:<br>  2-3 trees have faster inserts at the expense of slower searches (since height is more compared to AVL trees).</li>
<li>You would use 2-3 tree very rarely because its implementation involves different types of nodes. Instead, people use Red Black trees.</li>
<li><a href="https://www.youtube.com/watch?v=C3SsdUqasD4&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&amp;index=2" target="_blank" rel="noopener">23-Tree Intuition and Definition (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=iYvBtGKsqSg&amp;index=3&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6" target="_blank" rel="noopener">Binary View of 23-Tree</a></li>
<li><a href="https://www.youtube.com/watch?v=TOb1tuEZ2X4&amp;index=5&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">2-3 Trees (student recitation) (video)</a></li>
</ul>
</li>
<li><p><strong>2-3-4 Trees (aka 2-4 trees)</strong></p>
<ul>
<li>In practice:<br>  For every 2-4 tree, there are corresponding red–black trees with data elements in the same order. The insertion and deletion<br>  operations on 2-4 trees are also equivalent to color-flipping and rotations in red–black trees. This makes 2-4 trees an<br>  important tool for understanding the logic behind red–black trees, and this is why many introductory algorithm texts introduce<br>  2-4 trees just before red–black trees, even though <strong>2-4 trees are not often used in practice</strong>.</li>
<li><a href="https://archive.org/details/ucberkeley_webcast_zqrqYXkth6Q" target="_blank" rel="noopener">CS 61B Lecture 26: Balanced Search Trees (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=DQdMYevEyE4&amp;index=4&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6" target="_blank" rel="noopener">Bottom Up 234-Trees (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=2679VQ26Fp4&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&amp;index=5" target="_blank" rel="noopener">Top Down 234-Trees (video)</a></li>
</ul>
</li>
<li><p><strong>N-ary (K-ary, M-ary) trees</strong></p>
<ul>
<li>note: the N or K is the branching factor (max branches)</li>
<li>binary trees are a 2-ary tree, with branching factor = 2</li>
<li>2-3 trees are 3-ary</li>
<li><a href="https://en.wikipedia.org/wiki/K-ary_tree" target="_blank" rel="noopener">K-Ary Tree</a></li>
</ul>
</li>
<li><p><strong>B-Trees</strong></p>
<ul>
<li>fun fact: it’s a mystery, but the B could stand for Boeing, Balanced, or Bayer (co-inventor)</li>
<li>In Practice:<br>  B-Trees are widely used in databases. Most modern filesystems use B-trees (or Variants). In addition to<br>  its use in databases, the B-tree is also used in filesystems to allow quick random access to an arbitrary<br>  block in a particular file. The basic problem is turning the file block i address into a disk block<br>  (or perhaps to a cylinder-head-sector) address.</li>
<li><a href="https://en.wikipedia.org/wiki/B-tree" target="_blank" rel="noopener">B-Tree</a></li>
<li><a href="http://btechsmartclass.com/data_structures/b-trees.html" target="_blank" rel="noopener">B-Tree Datastructure</a></li>
<li><a href="https://www.youtube.com/watch?v=I22wEC1tTGo&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6&amp;index=6" target="_blank" rel="noopener">Introduction to B-Trees (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=s3bCdZGrgpA&amp;index=7&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6" target="_blank" rel="noopener">B-Tree Definition and Insertion (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=svfnVhJOfMc&amp;index=8&amp;list=PLA5Lqm4uh9Bbq-E0ZnqTIa8LRaL77ica6" target="_blank" rel="noopener">B-Tree Deletion (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=V3omVLzI0WE&amp;index=7&amp;list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf" target="_blank" rel="noopener">MIT 6.851 - Memory Hierarchy Models (video)</a><pre><code>  - covers cache-oblivious B-Trees, very interesting data structures
  - the first 37 minutes are very technical, may be skipped (B is block size, cache line size)</code></pre></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><h3 id="k-D-Trees"><a href="#k-D-Trees" class="headerlink" title="k-D Trees"></a>k-D Trees</h3><ul>
<li>great for finding number of points in a rectangle or higher dimension object</li>
<li>a good fit for k-nearest neighbors</li>
<li><a href="https://www.youtube.com/watch?v=W94M9D_yXKk" target="_blank" rel="noopener">Kd Trees (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=Y4ZgLlDfKDg" target="_blank" rel="noopener">kNN K-d tree algorithm (video)</a></li>
</ul>
</li>
<li><h3 id="Skip-lists"><a href="#Skip-lists" class="headerlink" title="Skip lists"></a>Skip lists</h3><ul>
<li>“These are somewhat of a cult data structure” - Skiena</li>
<li><a href="https://www.youtube.com/watch?v=2g9OSRKJuzM&amp;index=10&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">Randomization: Skip Lists (video)</a></li>
<li><a href="https://en.wikipedia.org/wiki/Skip_list" target="_blank" rel="noopener">For animations and a little more detail</a></li>
</ul>
</li>
<li><h3 id="Network-Flows"><a href="#Network-Flows" class="headerlink" title="Network Flows"></a>Network Flows</h3><ul>
<li><a href="https://www.youtube.com/watch?v=Tl90tNtKvxs" target="_blank" rel="noopener">Ford-Fulkerson in 5 minutes — Step by step example (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=v1VgJmkEJW0" target="_blank" rel="noopener">Ford-Fulkerson Algorithm (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=2vhN4Ice5jI" target="_blank" rel="noopener">Network Flows (video)</a></li>
</ul>
</li>
<li><h3 id="Disjoint-Sets-amp-Union-Find"><a href="#Disjoint-Sets-amp-Union-Find" class="headerlink" title="Disjoint Sets &amp; Union Find"></a>Disjoint Sets &amp; Union Find</h3><ul>
<li><a href="https://archive.org/details/ucberkeley_webcast_MAEGXTwmUsI" target="_blank" rel="noopener">UCB 61B - Disjoint Sets; Sorting &amp; selection (video)</a></li>
<li><a href="https://www.coursera.org/learn/algorithms-part1/home/week/1" target="_blank" rel="noopener">Sedgewick Algorithms - Union-Find (6 videos)</a></li>
</ul>
</li>
<li><h3 id="Math-for-Fast-Processing"><a href="#Math-for-Fast-Processing" class="headerlink" title="Math for Fast Processing"></a>Math for Fast Processing</h3><ul>
<li><a href="https://www.youtube.com/watch?v=eCaXlAaN2uE&amp;index=11&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">Integer Arithmetic, Karatsuba Multiplication (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=ru7mWZJlRQg" target="_blank" rel="noopener">The Chinese Remainder Theorem (used in cryptography) (video)</a></li>
</ul>
</li>
<li><h3 id="Treap"><a href="#Treap" class="headerlink" title="Treap"></a>Treap</h3><ul>
<li>Combination of a binary search tree and a heap</li>
<li><a href="https://en.wikipedia.org/wiki/Treap" target="_blank" rel="noopener">Treap</a></li>
<li><a href="https://www.youtube.com/watch?v=6podLUYinH8" target="_blank" rel="noopener">Data Structures: Treaps explained (video)</a></li>
<li><a href="https://www.cs.cmu.edu/~scandal/papers/treaps-spaa98.pdf" target="_blank" rel="noopener">Applications in set operations</a></li>
</ul>
</li>
<li><h3 id="Linear-Programming-videos"><a href="#Linear-Programming-videos" class="headerlink" title="Linear Programming (videos)"></a>Linear Programming (videos)</h3><ul>
<li><a href="https://www.youtube.com/watch?v=M4K6HYLHREQ" target="_blank" rel="noopener">Linear Programming</a></li>
<li><a href="https://www.youtube.com/watch?v=2ACJ9ewUC6U" target="_blank" rel="noopener">Finding minimum cost</a></li>
<li><a href="https://www.youtube.com/watch?v=8AA_81xI3ik" target="_blank" rel="noopener">Finding maximum value</a></li>
<li><a href="https://www.youtube.com/watch?v=44pAWI7v5Zk" target="_blank" rel="noopener">Solve Linear Equations with Python - Simplex Algorithm</a></li>
</ul>
</li>
<li><h3 id="Geometry-Convex-hull-videos"><a href="#Geometry-Convex-hull-videos" class="headerlink" title="Geometry, Convex hull (videos)"></a>Geometry, Convex hull (videos)</h3><ul>
<li><a href="https://youtu.be/XIAQRlNkJAw?list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;t=3164" target="_blank" rel="noopener">Graph Alg. IV: Intro to geometric algorithms - Lecture 9</a></li>
<li><a href="https://www.youtube.com/watch?v=J5aJEcOr6Eo&amp;index=10&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm" target="_blank" rel="noopener">Geometric Algorithms: Graham &amp; Jarvis - Lecture 10</a></li>
<li><a href="https://www.youtube.com/watch?v=EzeYI7p9MjU&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=2" target="_blank" rel="noopener">Divide &amp; Conquer: Convex Hull, Median Finding</a></li>
</ul>
</li>
<li><h3 id="Discrete-math"><a href="#Discrete-math" class="headerlink" title="Discrete math"></a>Discrete math</h3><ul>
<li>see videos below</li>
</ul>
</li>
<li><h3 id="Machine-Learning"><a href="#Machine-Learning" class="headerlink" title="Machine Learning"></a>Machine Learning</h3><ul>
<li>Why ML?<ul>
<li><a href="https://backchannel.com/how-google-is-remaking-itself-as-a-machine-learning-first-company-ada63defcb70" target="_blank" rel="noopener">How Google Is Remaking Itself As A Machine Learning First Company</a></li>
<li><a href="https://www.youtube.com/watch?v=QSaZGT4-6EY" target="_blank" rel="noopener">Large-Scale Deep Learning for Intelligent Computer Systems (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=X769cyzBNVw" target="_blank" rel="noopener">Deep Learning and Understandability versus Software Engineering and Verification by Peter Norvig</a></li>
</ul>
</li>
<li><a href="https://www.youtube.com/watch?v=Ja2hxBAwG_0" target="_blank" rel="noopener">Google’s Cloud Machine learning tools (video)</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLOU2XLYxmsIIuiBfYad6rFYQU_jL2ryal" target="_blank" rel="noopener">Google Developers’ Machine Learning Recipes (Scikit Learn &amp; Tensorflow) (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=oZikw5k_2FM" target="_blank" rel="noopener">Tensorflow (video)</a></li>
<li><a href="https://www.tensorflow.org/versions/r0.11/tutorials/index.html" target="_blank" rel="noopener">Tensorflow Tutorials</a></li>
<li><a href="http://www.analyticsvidhya.com/blog/2016/04/neural-networks-python-theano/" target="_blank" rel="noopener">Practical Guide to implementing Neural Networks in Python (using Theano)</a></li>
<li>Courses:<ul>
<li><a href="https://www.coursera.org/learn/machine-learning" target="_blank" rel="noopener">Great starter course: Machine Learning</a><pre><code>- [videos only](https://www.youtube.com/playlist?list=PLZ9qNFMHZ-A4rycgrgOYma6zxF4BZGGPW)
- see videos 12-18 for a review of linear algebra (14 and 15 are duplicates)</code></pre></li>
<li><a href="https://www.coursera.org/learn/neural-networks" target="_blank" rel="noopener">Neural Networks for Machine Learning</a></li>
<li><a href="https://www.udacity.com/course/deep-learning--ud730" target="_blank" rel="noopener">Google’s Deep Learning Nanodegree</a></li>
<li><a href="https://www.udacity.com/course/machine-learning-engineer-nanodegree-by-google--nd009" target="_blank" rel="noopener">Google/Kaggle Machine Learning Engineer Nanodegree</a></li>
<li><a href="https://www.udacity.com/drive" target="_blank" rel="noopener">Self-Driving Car Engineer Nanodegree</a></li>
<li><a href="http://www.thisismetis.com/explore-data-science" target="_blank" rel="noopener">Metis Online Course ($99 for 2 months)</a></li>
</ul>
</li>
<li>Resources:<ul>
<li>Books:<ul>
<li><a href="https://www.amazon.com/Python-Machine-Learning-Sebastian-Raschka/dp/1783555130/" target="_blank" rel="noopener">Python Machine Learning</a></li>
<li><a href="https://www.amazon.com/Data-Science-Scratch-Principles-Python/dp/149190142X" target="_blank" rel="noopener">Data Science from Scratch: First Principles with Python</a></li>
<li><a href="https://www.amazon.com/Introduction-Machine-Learning-Python-Scientists/dp/1449369413/" target="_blank" rel="noopener">Introduction to Machine Learning with Python</a></li>
</ul>
</li>
<li><a href="https://github.com/ZuzooVn/machine-learning-for-software-engineers" target="_blank" rel="noopener">Machine Learning for Software Engineers</a></li>
<li>Data School: <a href="http://www.dataschool.io/" target="_blank" rel="noopener">http://www.dataschool.io/</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="Additional-Detail-on-Some-Subjects"><a href="#Additional-Detail-on-Some-Subjects" class="headerlink" title="Additional Detail on Some Subjects"></a>Additional Detail on Some Subjects</h2><pre><code>I added these to reinforce some ideas already presented above, but didn't want to include them
above because it's just too much. It's easy to overdo it on a subject.
You want to get hired in this century, right?</code></pre><ul>
<li><strong>SOLID</strong>   <ul>
<li><input disabled="" type="checkbox"> <a href="https://www.youtube.com/watch?v=TMuno5RZNeE" target="_blank" rel="noopener">Bob Martin SOLID Principles of Object Oriented and Agile Design (video)</a></li>
<li><input disabled="" type="checkbox"> S - <a href="http://www.oodesign.com/single-responsibility-principle.html" target="_blank" rel="noopener">Single Responsibility Principle</a> | <a href="http://www.javacodegeeks.com/2011/11/solid-single-responsibility-principle.html" target="_blank" rel="noopener">Single responsibility to each Object</a><ul>
<li><a href="https://docs.google.com/open?id=0ByOwmqah_nuGNHEtcU5OekdDMkk" target="_blank" rel="noopener">more flavor</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> O - <a href="http://www.oodesign.com/open-close-principle.html" target="_blank" rel="noopener">Open/Closed Principal</a>  | <a href="https://en.wikipedia.org/wiki/Open/closed_principle" target="_blank" rel="noopener">On production level Objects are ready for extension but not for modification</a><ul>
<li><a href="http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgN2M5MTkwM2EtNWFkZC00ZTI3LWFjZTUtNTFhZGZiYmUzODc1&amp;hl=en" target="_blank" rel="noopener">more flavor</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> L - <a href="http://www.oodesign.com/liskov-s-substitution-principle.html" target="_blank" rel="noopener">Liskov Substitution Principal</a> | <a href="http://stackoverflow.com/questions/56860/what-is-the-liskov-substitution-principle" target="_blank" rel="noopener">Base Class and Derived class follow ‘IS A’ principal</a><ul>
<li><a href="http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgNzAzZjA5ZmItNjU3NS00MzQ5LTkwYjMtMDJhNDU5ZTM0MTlh&amp;hl=en" target="_blank" rel="noopener">more flavor</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> I - <a href="http://www.oodesign.com/interface-segregation-principle.html" target="_blank" rel="noopener">Interface segregation principle</a> | clients should not be forced to implement interfaces they don’t use<ul>
<li><a href="https://www.youtube.com/watch?v=3CtAfl7aXAQ" target="_blank" rel="noopener">Interface Segregation Principle in 5 minutes (video)</a></li>
<li><a href="http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgOTViYjJhYzMtMzYxMC00MzFjLWJjMzYtOGJiMDc5N2JkYmJi&amp;hl=en" target="_blank" rel="noopener">more flavor</a></li>
</ul>
</li>
<li><input disabled="" type="checkbox"> D -<a href="http://www.oodesign.com/dependency-inversion-principle.html" target="_blank" rel="noopener">Dependency Inversion principle</a> | Reduce the dependency In composition of objects.<ul>
<li><a href="http://stackoverflow.com/questions/62539/what-is-the-dependency-inversion-principle-and-why-is-it-important" target="_blank" rel="noopener">Why Is The Dependency Inversion Principle And Why Is It Important</a></li>
<li><a href="http://docs.google.com/a/cleancoder.com/viewer?a=v&amp;pid=explorer&amp;chrome=true&amp;srcid=0BwhCYaYDn8EgMjdlMWIzNGUtZTQ0NC00ZjQ5LTkwYzQtZjRhMDRlNTQ3ZGMz&amp;hl=en" target="_blank" rel="noopener">more flavor</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><p><strong>Union-Find</strong></p>
<ul>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/JssSY/overview" target="_blank" rel="noopener">Overview</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/EM5D0/naive-implementations" target="_blank" rel="noopener">Naive Implementation</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/Mxu0w/trees" target="_blank" rel="noopener">Trees</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/qb4c2/union-by-rank" target="_blank" rel="noopener">Union By Rank</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/Q9CVI/path-compression" target="_blank" rel="noopener">Path Compression</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/GQQLN/analysis-optional" target="_blank" rel="noopener">Analysis Options</a></li>
</ul>
</li>
<li><p><strong>More Dynamic Programming</strong> (videos)</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=OQ5jsbhAv_M&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=19" target="_blank" rel="noopener">6.006: Dynamic Programming I: Fibonacci, Shortest Paths</a></li>
<li><a href="https://www.youtube.com/watch?v=ENyox7kNKeY&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=20" target="_blank" rel="noopener">6.006: Dynamic Programming II: Text Justification, Blackjack</a></li>
<li><a href="https://www.youtube.com/watch?v=ocZMDMZwhCY&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=21" target="_blank" rel="noopener">6.006: DP III: Parenthesization, Edit Distance, Knapsack</a></li>
<li><a href="https://www.youtube.com/watch?v=tp4_UXaVyx8&amp;index=22&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb" target="_blank" rel="noopener">6.006: DP IV: Guitar Fingering, Tetris, Super Mario Bros.</a></li>
<li><a href="https://www.youtube.com/watch?v=Tw1k46ywN6E&amp;index=14&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">6.046: Dynamic Programming &amp; Advanced DP</a></li>
<li><a href="https://www.youtube.com/watch?v=NzgFUwOaoIw&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=15" target="_blank" rel="noopener">6.046: Dynamic Programming: All-Pairs Shortest Paths</a></li>
<li><a href="https://www.youtube.com/watch?v=krZI60lKPek&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=12" target="_blank" rel="noopener">6.046: Dynamic Programming (student recitation)</a></li>
</ul>
</li>
<li><p><strong>Advanced Graph Processing</strong> (videos)</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=mUBmcbbJNf4&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=27" target="_blank" rel="noopener">Synchronous Distributed Algorithms: Symmetry-Breaking. Shortest-Paths Spanning Trees</a></li>
<li><a href="https://www.youtube.com/watch?v=kQ-UQAzcnzA&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp&amp;index=28" target="_blank" rel="noopener">Asynchronous Distributed Algorithms: Shortest-Paths Spanning Trees</a></li>
</ul>
</li>
<li><p>MIT <strong>Probability</strong> (mathy, and go slowly, which is good for mathy things) (videos):</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=SmFwFdESMHI&amp;index=18&amp;list=PLB7540DEDD482705B" target="_blank" rel="noopener">MIT 6.042J - Probability Introduction</a></li>
<li><a href="https://www.youtube.com/watch?v=E6FbvM-FGZ8&amp;index=19&amp;list=PLB7540DEDD482705B" target="_blank" rel="noopener">MIT 6.042J - Conditional Probability</a></li>
<li><a href="https://www.youtube.com/watch?v=l1BCv3qqW4A&amp;index=20&amp;list=PLB7540DEDD482705B" target="_blank" rel="noopener">MIT 6.042J - Independence</a></li>
<li><a href="https://www.youtube.com/watch?v=MOfhhFaQdjw&amp;list=PLB7540DEDD482705B&amp;index=21" target="_blank" rel="noopener">MIT 6.042J - Random Variables</a></li>
<li><a href="https://www.youtube.com/watch?v=gGlMSe7uEkA&amp;index=22&amp;list=PLB7540DEDD482705B" target="_blank" rel="noopener">MIT 6.042J - Expectation I</a></li>
<li><a href="https://www.youtube.com/watch?v=oI9fMUqgfxY&amp;index=23&amp;list=PLB7540DEDD482705B" target="_blank" rel="noopener">MIT 6.042J - Expectation II</a></li>
<li><a href="https://www.youtube.com/watch?v=q4mwO2qS2z4&amp;index=24&amp;list=PLB7540DEDD482705B" target="_blank" rel="noopener">MIT 6.042J - Large Deviations</a></li>
<li><a href="https://www.youtube.com/watch?v=56iFMY8QW2k&amp;list=PLB7540DEDD482705B&amp;index=25" target="_blank" rel="noopener">MIT 6.042J - Random Walks</a></li>
</ul>
</li>
<li><p><a href="https://www.youtube.com/watch?v=oDniZCmNmNw&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=19" target="_blank" rel="noopener">Simonson: Approximation Algorithms (video)</a></p>
</li>
<li><p><strong>String Matching</strong></p>
<ul>
<li>Rabin-Karp (videos):<ul>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/c0Qkw/rabin-karps-algorithm" target="_blank" rel="noopener">Rabin Karps Algorithm</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/nYrc8/optimization-precomputation" target="_blank" rel="noopener">Precomputing</a></li>
<li><a href="https://www.coursera.org/learn/data-structures/lecture/h4ZLc/optimization-implementation-and-analysis" target="_blank" rel="noopener">Optimization: Implementation and Analysis</a></li>
<li><a href="https://www.youtube.com/watch?v=BRO7mVIFt08&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=9" target="_blank" rel="noopener">Table Doubling, Karp-Rabin</a></li>
<li><a href="https://www.youtube.com/watch?v=w6nuXg0BISo&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;index=32" target="_blank" rel="noopener">Rolling Hashes, Amortized Analysis</a></li>
</ul>
</li>
<li>Knuth-Morris-Pratt (KMP):<ul>
<li><a href="https://www.youtube.com/watch?v=5i7oKodCRJo" target="_blank" rel="noopener">TThe Knuth-Morris-Pratt (KMP) String Matching Algorithm</a></li>
</ul>
</li>
<li>Boyer–Moore string search algorithm<ul>
<li><a href="https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string_search_algorithm" target="_blank" rel="noopener">Boyer-Moore String Search Algorithm</a></li>
<li><a href="https://www.youtube.com/watch?v=QDZpzctPf10" target="_blank" rel="noopener">Advanced String Searching Boyer-Moore-Horspool Algorithms (video)</a></li>
</ul>
</li>
<li><a href="https://www.coursera.org/learn/algorithms-on-strings/home/week/1" target="_blank" rel="noopener">Coursera: Algorithms on Strings</a><ul>
<li>starts off great, but by the time it gets past KMP it gets more complicated than it needs to be</li>
<li>nice explanation of tries</li>
<li>can be skipped</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>Sorting</strong></p>
<ul>
<li>Stanford lectures on sorting:<ul>
<li><a href="https://www.youtube.com/watch?v=ENp00xylP7c&amp;index=15&amp;list=PLFE6E58F856038C69" target="_blank" rel="noopener">Lecture 15 | Programming Abstractions (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=y4M9IVgrVKo&amp;index=16&amp;list=PLFE6E58F856038C69" target="_blank" rel="noopener">Lecture 16 | Programming Abstractions (video)</a></li>
</ul>
</li>
<li>Shai Simonson, <a href="http://www.aduni.org/" target="_blank" rel="noopener">Aduni.org</a>:<ul>
<li><a href="https://www.youtube.com/watch?v=odNJmw5TOEE&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=2" target="_blank" rel="noopener">Algorithms - Sorting - Lecture 2 (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=hj8YKFTFKEE&amp;list=PLFDnELG9dpVxQCxuD-9BSy2E7BWY3t5Sm&amp;index=3" target="_blank" rel="noopener">Algorithms - Sorting II - Lecture 3 (video)</a></li>
</ul>
</li>
<li>Steven Skiena lectures on sorting:<ul>
<li><a href="https://youtu.be/ute-pmMkyuk?list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;t=1600" target="_blank" rel="noopener">lecture begins at 26:46 (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=yLvp-pB8mak&amp;index=8&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">lecture begins at 27:40 (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=q7K9otnzlfE&amp;index=9&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b" target="_blank" rel="noopener">lecture begins at 35:00 (video)</a></li>
<li><a href="https://www.youtube.com/watch?v=TvqIGu9Iupw&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;index=10" target="_blank" rel="noopener">lecture begins at 23:50 (video)</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="Video-Series"><a href="#Video-Series" class="headerlink" title="Video Series"></a>Video Series</h2><p>Sit back and enjoy. “Netflix and skill” :P</p>
<ul>
<li><p><a href="https://www.youtube.com/playlist?list=PLrmLmBdmIlpsHaNTPP_jHHDx_os9ItYXr" target="_blank" rel="noopener">List of individual Dynamic Programming problems (each is short)</a></p>
</li>
<li><p><a href="https://www.youtube.com/playlist?list=PL038BE01D3BAEFDB0" target="_blank" rel="noopener">x86 Architecture, Assembly, Applications (11 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/playlist?list=PLE7DDD91010BC51F8" target="_blank" rel="noopener">MIT 18.06 Linear Algebra, Spring 2005 (35 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/playlist?list=PL3B08AE665AB9002A" target="_blank" rel="noopener">Excellent - MIT Calculus Revisited: Single Variable Calculus</a></p>
</li>
<li><p><a href="http://www.infocobuild.com/education/audio-video-courses/computer-science/cs70-spring2015-berkeley.html" target="_blank" rel="noopener">Computer Science 70, 001 - Spring 2015 - Discrete Mathematics and Probability Theory</a></p>
</li>
<li><p><a href="https://www.youtube.com/playlist?list=PL3o9D4Dl2FJ9q0_gtFXPh_H4POI5dK0yG" target="_blank" rel="noopener">Discrete Mathematics by Shai Simonson (19 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/playlist?list=PLGxuz-nmYlQPOc4w1Kp2MZrdqOOm4Jxeo" target="_blank" rel="noopener">Discrete Mathematics Part 1 by Sarada Herke (5 videos)</a></p>
</li>
<li><p>CSE373 - Analysis of Algorithms (25 videos)</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=ZFjhkohHdAA&amp;list=PLOtl7M3yp-DV69F32zdK7YJcNXpTunF2b&amp;index=1" target="_blank" rel="noopener">Skiena lectures from Algorithm Design Manual</a></li>
</ul>
</li>
<li><p><a href="https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iAlnI-BQr9hjqADPBtujFJd" target="_blank" rel="noopener">UC Berkeley 61B (Spring 2014): Data Structures (25 videos)</a></p>
</li>
<li><p><a href="https://archive.org/details/ucberkeley-webcast-PL4BBB74C7D2A1049C" target="_blank" rel="noopener">UC Berkeley 61B (Fall 2006): Data Structures (39 videos)</a></p>
</li>
<li><p><a href="https://archive.org/details/ucberkeley-webcast-PL-XXv-cvA_iCl2-D-FS5mk0jFF6cYSJs_" target="_blank" rel="noopener">UC Berkeley 61C: Machine Structures (26 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/playlist?list=PLJ9pm_Rc9HesnkwKlal_buSIHA-jTZMpO" target="_blank" rel="noopener">OOSE: Software Dev Using UML and Java (21 videos)</a></p>
</li>
<li><p><del><a href="https://www.youtube.com/watch?v=UH0QYvtP7Rk&amp;index=20&amp;list=PLkFD6_40KJIwEiwQx1dACXwh-2Fuo32qr" target="_blank" rel="noopener">UC Berkeley CS 152: Computer Architecture and Engineering (20 videos)</a></del></p>
</li>
<li><p><a href="https://www.youtube.com/playlist?list=PLDSlqjcPpoL64CJdF0Qee5oWqGS6we_Yu" target="_blank" rel="noopener">MIT 6.004: Computation Structures (49 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/playlist?list=PL5PHm2jkkXmi5CxxI7b3JCL1TWybTDtKq" target="_blank" rel="noopener">Carnegie Mellon - Computer Architecture Lectures (39 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/watch?v=HtSuA80QTyo&amp;list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb&amp;nohtml5=False" target="_blank" rel="noopener">MIT 6.006: Intro to Algorithms (47 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/watch?v=zm2VP0kHl1M&amp;list=PL6535748F59DCA484" target="_blank" rel="noopener">MIT 6.033: Computer System Engineering (22 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/playlist?list=PLUl4u3cNGP63gFHB6xb-kVBiQHYe_4hSi" target="_blank" rel="noopener">MIT 6.034 Artificial Intelligence, Fall 2010 (30 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/watch?v=L3LMbpZIKhQ&amp;list=PLB7540DEDD482705B" target="_blank" rel="noopener">MIT 6.042J: Mathematics for Computer Science, Fall 2010 (25 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/watch?v=2P-yW7LQr08&amp;list=PLUl4u3cNGP6317WaSNfmCvGym2ucw3oGp" target="_blank" rel="noopener">MIT 6.046: Design and Analysis of Algorithms (34 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/watch?v=phxsQrZQupo&amp;list=PL_2Bwul6T-A7OldmhGODImZL8KEVE38X7" target="_blank" rel="noopener">MIT 6.050J: Information and Entropy, Spring 2008 (19 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/watch?v=T0yzrZL1py0&amp;list=PLUl4u3cNGP61hsJNdULdudlRL493b-XZf&amp;index=1" target="_blank" rel="noopener">MIT 6.851: Advanced Data Structures (22 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/playlist?list=PL6ogFv-ieghdoGKGg2Bik3Gl1glBTEu8c" target="_blank" rel="noopener">MIT 6.854: Advanced Algorithms, Spring 2016 (24 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/playlist?list=PL2SOU6wwxB0uP4rJgf5ayhHWgw7akUWSf" target="_blank" rel="noopener">Harvard COMPSCI 224: Advanced Algorithms (25 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/watch?v=GqmQg-cszw4&amp;index=1&amp;list=PLUl4u3cNGP62K2DjQLRxDNRi0z2IRWnNh" target="_blank" rel="noopener">MIT 6.858 Computer Systems Security, Fall 2014</a></p>
</li>
<li><p><a href="https://www.youtube.com/view_play_list?p=9D558D49CA734A02" target="_blank" rel="noopener">Stanford: Programming Paradigms (27 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/playlist?list=PL6N5qY2nvvJE8X75VkXglSrVhLv1tVcfy" target="_blank" rel="noopener">Introduction to Cryptography by Christof Paar</a></p>
<ul>
<li><a href="http://www.crypto-textbook.com/" target="_blank" rel="noopener">Course Website along with Slides and Problem Sets</a></li>
</ul>
</li>
<li><p><a href="https://www.youtube.com/playlist?list=PLLssT5z_DsK9JDLcT8T62VtzwyW9LNepV" target="_blank" rel="noopener">Mining Massive Datasets - Stanford University (94 videos)</a></p>
</li>
<li><p><a href="https://www.youtube.com/user/DrSaradaHerke/playlists?shelf_id=5&amp;view=50&amp;sort=dd" target="_blank" rel="noopener">Graph Theory by Sarada Herke (67 videos)</a></p>
</li>
</ul>
<h2 id="Computer-Science-Courses"><a href="#Computer-Science-Courses" class="headerlink" title="Computer Science Courses"></a>Computer Science Courses</h2><ul>
<li><a href="https://github.com/open-source-society/computer-science" target="_blank" rel="noopener">Directory of Online CS Courses</a></li>
<li><a href="https://github.com/prakhar1989/awesome-courses" target="_blank" rel="noopener">Directory of CS Courses (many with online lectures)</a></li>
</ul>
<h2 id="Papers"><a href="#Papers" class="headerlink" title="Papers"></a>Papers</h2><ul>
<li><a href="https://www.cs.cmu.edu/~crary/819-f09/" target="_blank" rel="noopener">Love classic papers?</a></li>
<li><a href="http://spinroot.com/courses/summer/Papers/hoare_1978.pdf" target="_blank" rel="noopener">1978: Communicating Sequential Processes</a><ul>
<li><a href="https://godoc.org/github.com/thomas11/csp" target="_blank" rel="noopener">implemented in Go</a></li>
</ul>
</li>
<li><a href="http://static.googleusercontent.com/media/research.google.com/en//archive/gfs-sosp2003.pdf" target="_blank" rel="noopener">2003: The Google File System</a><ul>
<li>replaced by Colossus in 2012</li>
</ul>
</li>
<li><a href="http://static.googleusercontent.com/media/research.google.com/en//archive/mapreduce-osdi04.pdf" target="_blank" rel="noopener">2004: MapReduce: Simplified Data Processing on Large Clusters</a><ul>
<li>mostly replaced by Cloud Dataflow?</li>
</ul>
</li>
<li><a href="https://static.googleusercontent.com/media/research.google.com/en//archive/bigtable-osdi06.pdf" target="_blank" rel="noopener">2006: Bigtable: A Distributed Storage System for Structured Data</a><ul>
<li><a href="https://cloud.google.com/files/BigQueryTechnicalWP.pdf" target="_blank" rel="noopener">An Inside Look at Google BigQuery</a></li>
</ul>
</li>
<li><a href="https://research.google.com/archive/chubby-osdi06.pdf" target="_blank" rel="noopener">2006: The Chubby Lock Service for Loosely-Coupled Distributed Systems</a></li>
<li><a href="http://s3.amazonaws.com/AllThingsDistributed/sosp/amazon-dynamo-sosp2007.pdf" target="_blank" rel="noopener">2007: Dynamo: Amazon’s Highly Available Key-value Store</a><ul>
<li>The Dynamo paper kicked off the NoSQL revolution</li>
</ul>
</li>
<li><a href="https://www.akkadia.org/drepper/cpumemory.pdf" target="_blank" rel="noopener">2007: What Every Programmer Should Know About Memory (very long, and the author encourages skipping of some sections)</a></li>
<li><a href="https://research.google.com/pubs/archive/36356.pdf" target="_blank" rel="noopener">2010: Dapper, a Large-Scale Distributed Systems Tracing Infrastructure</a></li>
<li><a href="https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/36632.pdf" target="_blank" rel="noopener">2010: Dremel: Interactive Analysis of Web-Scale Datasets</a></li>
<li><a href="https://www.wired.com/2012/07/google-colossus/" target="_blank" rel="noopener">2012: Google’s Colossus</a><ul>
<li>paper not available</li>
</ul>
</li>
<li>2012: AddressSanitizer: A Fast Address Sanity Checker:<ul>
<li><a href="http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/37752.pdf" target="_blank" rel="noopener">paper</a></li>
<li><a href="https://www.usenix.org/conference/atc12/technical-sessions/presentation/serebryany" target="_blank" rel="noopener">video</a></li>
</ul>
</li>
<li>2013: Spanner: Google’s Globally-Distributed Database:<ul>
<li><a href="http://static.googleusercontent.com/media/research.google.com/en//archive/spanner-osdi2012.pdf" target="_blank" rel="noopener">paper</a></li>
<li><a href="https://www.usenix.org/node/170855" target="_blank" rel="noopener">video</a></li>
</ul>
</li>
<li><a href="http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43146.pdf" target="_blank" rel="noopener">2014: Machine Learning: The High-Interest Credit Card of Technical Debt</a></li>
<li><a href="http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43790.pdf" target="_blank" rel="noopener">2015: Continuous Pipelines at Google</a></li>
<li><a href="https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/44686.pdf" target="_blank" rel="noopener">2015: High-Availability at Massive Scale: Building Google’s Data Infrastructure for Ads</a></li>
<li><a href="http://download.tensorflow.org/paper/whitepaper2015.pdf" target="_blank" rel="noopener">2015: TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems</a></li>
<li><a href="http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43835.pdf" target="_blank" rel="noopener">2015: How Developers Search for Code: A Case Study</a></li>
<li><a href="http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/44843.pdf" target="_blank" rel="noopener">2016: Borg, Omega, and Kubernetes</a></li>
</ul>
<h2 id="LICENSE"><a href="#LICENSE" class="headerlink" title="LICENSE"></a>LICENSE</h2><p><a href="./LICENSE.txt">CC-BY-SA-4.0</a></p>
]]></content>
      <categories>
        <category>study</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>开发一个软件需要考虑的事及解决方案</title>
    <url>/2020/01/16/2020-01-16-%E5%BC%80%E5%8F%91%E4%B8%80%E4%B8%AA%E8%BD%AF%E4%BB%B6%E9%9C%80%E8%A6%81%E8%80%83%E8%99%91%E7%9A%84%E7%9A%84%E4%BA%8B%E6%83%85%E6%94%B6%E9%9B%86/</url>
    <content><![CDATA[<h1 id="第一节-配置"><a href="#第一节-配置" class="headerlink" title="第一节 配置"></a>第一节 配置</h1><h2 id="1-1-应用首次进入都要询问后台自己需要做啥-？"><a href="#1-1-应用首次进入都要询问后台自己需要做啥-？" class="headerlink" title="1.1 应用首次进入都要询问后台自己需要做啥 ？"></a>1.1 应用首次进入都要询问后台自己需要做啥 ？</h2><p>那软件一般进入首页要干嘛呢？ 当然不只是我们看到的页面加载和显示。因为这是软件的入口，不经过仔细架构设计的软件，往往会多快好省的把大部份<font color="red"> 初始化，配置展示，信息同步</font>等一些比较重的逻辑放在这个入口。</p>
<p>当然这个会带来一些问题：</p>
<ol>
<li>随着软件维护升级，首页的逻辑会越来越复杂，极难维护。</li>
<li>过重的网络访问会在网络不稳定的情况出现各种异常，显示和交互极不友好，在没有建立强依赖的情况下，一次素养邋遢的状态，就会结束软件和用户缘分。</li>
<li>频繁的CPU操作，往往会出现软件加载慢，响应迟钝，白屏的问题。</li>
</ol>
<p>案例分析一：内涵段子，被下架</p>
<p>内涵段子被下架从软件设计角度来说，没有进行版本升级，在被下架后直接弹框提示用户，禁止用户进入软件使用。可以说产品经理也是牛这种极其特殊的场景都考虑到了。</p>
<p><strong>解决方案：</strong></p>
<p>软件设计上可以通过<font color="red">动态路由表 + 网页跳转</font>来轻松解决这些比较变态的需求。通过路由表设置一个网页为首页，禁止后续跳转逻辑。如果没有这种的架构设计，你会被各种需求和问题磨去那原本刚毅的体格变成一个木讷的程序员小哥。</p>
<p>案例分析二：首页弹框地狱</p>
<p>首页有啥弹框呢？ 升级提示，新手任务，签到，优惠活动，新手指引，消息通知….随着业务的增多这种首页弹框应该能把我们搞晕。看着是几个弹框而已，但是每个弹框都是一个请求，弹框和弹框之间的显示优先级该怎么处理，我们不小心把软件升级的优先级降低，甚至不出现，这会是直接炒鱿鱼的节奏。</p>
<p><strong>解决方案：</strong></p>
<p>软件设计上可以通过，<font color="red">统一配置定时更新,后台无更新使用本地缓存逻辑</font>来处理首页弹框配置类的逻辑。 我们可以叫它 <font color="red">配置中心接口</font> 后台使用 阿里开源的<font color="red">nacos</font>进行动态配置，前端软件通过定时的同步，无更新就不处理的逻辑，能解决软件设计中很多傻瓜式的更新和访问。</p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>收集</tag>
        <tag>软件开发经验</tag>
      </tags>
  </entry>
  <entry>
    <title>Android原生常用配置总结</title>
    <url>/2020/01/14/2020-01-14-Android%E5%8E%9F%E7%94%9F%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="第1节-Dialog-对话框"><a href="#第1节-Dialog-对话框" class="headerlink" title="第1节 Dialog 对话框"></a>第1节 Dialog 对话框</h1><h2 id="1-1-Dialog布局设置"><a href="#1-1-Dialog布局设置" class="headerlink" title="1.1 Dialog布局设置"></a>1.1 Dialog布局设置</h2><p>Dialog 常用Style设置</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialog<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:style/Theme.Holo.Dialog<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!-- 是否有边框 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:windowFrame<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@null<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!--是否在悬浮Activity之上  --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:windowIsFloating<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!--标题  --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:windowNoTitle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!--阴影  --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:windowIsTranslucent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!--透明背景--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:background<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@android:color/transparent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!--窗口背景透明--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:windowBackground<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@android:color/transparent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!--弹窗背景是否变暗--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:backgroundDimEnabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>补充:</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 是否全屏 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:windowFullscreen<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>Java代码设置</p>
<pre class="line-numbers language-java"><code class="language-java">   <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment" spellcheck="true">//设置属性</span>
        <span class="token function">setStyle</span><span class="token punctuation">(</span>DialogFragment<span class="token punctuation">.</span>STYLE_NO_FRAME<span class="token punctuation">,</span> R<span class="token punctuation">.</span>style<span class="token punctuation">.</span>dialog<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

   <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Window window <span class="token operator">=</span> <span class="token function">getDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        View decorView <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getDecorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        decorView<span class="token punctuation">.</span><span class="token function">measure</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        window<span class="token punctuation">.</span><span class="token function">setGravity</span><span class="token punctuation">(</span>Gravity<span class="token punctuation">.</span>BOTTOM<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment" spellcheck="true">//设置动画</span>
        window<span class="token punctuation">.</span><span class="token function">setWindowAnimations</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>style<span class="token punctuation">.</span>dialog_bottom_to_top_style<span class="token punctuation">)</span><span class="token punctuation">;</span>
        WindowManager<span class="token punctuation">.</span>LayoutParams params <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        params<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        params<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">20</span><span class="token punctuation">;</span>
        params<span class="token punctuation">.</span>height <span class="token operator">=</span> WindowManager<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>MATCH_PARENT<span class="token punctuation">;</span>
        params<span class="token punctuation">.</span>height <span class="token operator">=</span> WindowManager<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">;</span>
        window<span class="token punctuation">.</span><span class="token function">setAttributes</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCanceledOnTouchOutside</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>重点： <font color="red">window.setDimAmount(0);  去掉dialog外部灰色背景</font></li>
</ul>
<h2 id="1-2-动画设置"><a href="#1-2-动画设置" class="headerlink" title="1.2 动画设置"></a>1.2 动画设置</h2><p>style</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--控制dialog进出动画--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dialog_animation<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:Animation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:windowEnterAnimation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@anim/dialog_enter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
        <span class="token comment" spellcheck="true">&lt;!-- 进入时的动画 --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:windowExitAnimation<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@anim/dialog_exit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
        <span class="token comment" spellcheck="true">&lt;!-- 退出时的动画 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>增加动画</p>
<pre class="line-numbers language-java"><code class="language-java">dialog<span class="token punctuation">.</span><span class="token function">getWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setWindowAnimations</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>style<span class="token punctuation">.</span>dialog_animation<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 添加动画</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="第2节-动画xml属性"><a href="#第2节-动画xml属性" class="headerlink" title="第2节 动画xml属性"></a>第2节 动画xml属性</h1><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>translate</span>
        <span class="token attr-name"><span class="token namespace">android:</span>duration</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>800<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>fromYDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>115%<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>interpolator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:interpolator/accelerate_cubic<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>toYDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>translate</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alpha</span>
        <span class="token attr-name"><span class="token namespace">android:</span>duration</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:integer/config_mediumAnimTime<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>fromAlpha</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.0<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>toAlpha</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>注意: 没有指定，默认是以自己为相对参照物</p>
</blockquote>
<ul>
<li>fromYDelta 属性为动画起始时 Y坐标上的位置</li>
<li>toYDelta 属性为动画结束时 Y坐标上的位置   </li>
<li>%和%p: %自己的位置开始, p父层View为参照的<ul>
<li>android:toXDelta=”100%”,表示自身的100%,也就是从View自己的位置开始。</li>
<li>android:toXDelta=”80%p”,表示父层View的80%,是以它父层View为参照的。</li>
</ul>
</li>
</ul>
<h2 id="2-1-进入-退出-案例"><a href="#2-1-进入-退出-案例" class="headerlink" title="2.1 进入/退出 案例"></a>2.1 进入/退出 案例</h2><p>dialog_enter.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span>  <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!--顶部 进入--></span>
    <span class="token comment" spellcheck="true">&lt;!--&lt;translate--></span>
        <span class="token comment" spellcheck="true">&lt;!--android:duration="1000"--></span>
        <span class="token comment" spellcheck="true">&lt;!--android:fromYDelta="-100%p"--></span>
        <span class="token comment" spellcheck="true">&lt;!--android:toYDelta="0%p"--></span>
        <span class="token comment" spellcheck="true">&lt;!--/>--></span>
    <span class="token comment" spellcheck="true">&lt;!--底部 进入--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>translate</span>
        <span class="token attr-name"><span class="token namespace">android:</span>duration</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1000<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>fromYDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%p<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>toYDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0%p<span class="token punctuation">"</span></span>
        <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>dialog_exit.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>

    <span class="token comment" spellcheck="true">&lt;!--顶部 退出--></span>
    <span class="token comment" spellcheck="true">&lt;!--&lt;translate--></span>
        <span class="token comment" spellcheck="true">&lt;!--android:duration="1000"--></span>
        <span class="token comment" spellcheck="true">&lt;!--android:fromYDelta="0%p"--></span>
        <span class="token comment" spellcheck="true">&lt;!--android:toYDelta="-100%p"--></span>
        <span class="token comment" spellcheck="true">&lt;!--/>--></span>

    <span class="token comment" spellcheck="true">&lt;!--底部 退出--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>translate</span>
        <span class="token attr-name"><span class="token namespace">android:</span>duration</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1000<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>fromYDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0%p<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>toYDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%p<span class="token punctuation">"</span></span>
        <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker flutter镜像自动部署实践，踩坑记录</title>
    <url>/2020/01/06/2020-01-06-Docker-flutter-%E9%95%9C%E5%83%8F%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<ul>
<li><a href="#%E5%89%8D%E8%A8%80">前言</a></li>
<li><a href="#%E6%9C%80%E7%AE%80%E5%8D%95%E5%AE%9E%E8%B7%B5%E6%A1%88%E4%BE%8B">最简单实践案例</a><ul>
<li><a href="#%E6%8C%87%E5%AE%9Asdk%E7%89%88%E6%9C%AC">指定SDK版本</a></li>
<li><a href="#%E6%8C%87%E5%AE%9Aflutter%E7%89%88%E6%9C%AC">指定flutter版本</a></li>
<li><a href="#%E6%B5%8B%E8%AF%95">测试</a></li>
</ul>
</li>
<li><a href="#%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98">出现的问题</a><ul>
<li><a href="#%E9%97%AE%E9%A2%98%E4%B8%80%E6%9C%AC%E5%9C%B0%E6%AD%A3%E5%B8%B8%E8%B7%91%E4%BD%86%E6%98%AF%E9%95%9C%E5%83%8F%E4%B8%AD%E5%BE%88%E5%A4%9A%E4%BE%9D%E8%B5%96%E4%B8%8B%E8%BD%BD%E4%B8%8D%E4%B8%8B%E6%9D%A5">问题一：本地正常跑，但是镜像中很多依赖下载不下来</a></li>
<li><a href="#%E9%97%AE%E9%A2%98%E4%BA%8C-flutter-build-apk-%E7%BC%93%E6%85%A2">问题二： flutter build apk 缓慢</a><ul>
<li><a href="#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E4%B8%80">解决方案一</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>  本项目主要参考<a href="https://github.com/cirruslabs" target="_blank" rel="noopener">cirruslabs</a>的两个Docker脚本</p>
<ul>
<li><p><strong><a href="https://github.com/cirruslabs/docker-images-flutter" target="_blank" rel="noopener">docker-images-flutter</a></strong></p>
</li>
<li><p><strong><a href="https://github.com/cirruslabs/docker-images-android" target="_blank" rel="noopener">docker-images-android</a></strong></p>
<p>本笔记主要是简化和增加一些实际过程中一些经验总结</p>
</li>
</ul>
<h1 id="最简单实践案例"><a href="#最简单实践案例" class="headerlink" title="最简单实践案例"></a>最简单实践案例</h1><h2 id="指定SDK版本"><a href="#指定SDK版本" class="headerlink" title="指定SDK版本"></a>指定SDK版本</h2><p>  Dockerfile</p>
<pre class="line-numbers language-dockerfile"><code class="language-dockerfile">  FROM cirrusci/android-sdk:tools

  ENV ANDROID_PLATFORM_VERSION 29
  ENV ANDROID_BUILD_TOOLS_VERSION 29.0.2

  RUN yes | sdkmanager \
      "platforms;android-$ANDROID_PLATFORM_VERSION" \
      "build-tools;$ANDROID_BUILD_TOOLS_VERSION"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>  编译镜像，和上面Dockerfile同级目录执行</p>
<pre class="line-numbers language-shell"><code class="language-shell">  docker build -t "image_name" . <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li>-t 指定镜像名称；</li>
<li><code>.</code> 当前目录找Dockerfile 编译文件</li>
</ul>
<p>  如果需要多个SDK的话，可以在上次编译镜像的基础上叠一层，修改Dockfile</p>
<p>  <font color="red">建议不要叠太多SDK，否则最终的镜像会很大，而且正式环境是不需要多个SDK的</font></p>
<p>  Dockerfile</p>
<pre class="line-numbers language-dockerfile"><code class="language-dockerfile">  FROM <上次编译的镜像名称或者ID>

  ENV ANDROID_PLATFORM_VERSION 29
  ENV ANDROID_BUILD_TOOLS_VERSION 29.0.2

  RUN yes | sdkmanager \
      "platforms;android-$ANDROID_PLATFORM_VERSION" \
      "build-tools;$ANDROID_BUILD_TOOLS_VERSION"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p> 备注： 这里提供自己编译好的SDK版本，本人比较懒提供常用编译好的SDK</p>
<p><code>dockerlinz/android-sdk:29</code></p>
<p><code>dockerlinz/android-sdk:28</code></p>
<p> <code>dockerlinz/android-sdk:27</code></p>
</blockquote>
<h2 id="指定flutter版本"><a href="#指定flutter版本" class="headerlink" title="指定flutter版本"></a>指定flutter版本</h2><p>  Dockerfile</p>
<pre class="line-numbers language-dockerfile"><code class="language-dockerfile">  FROM dockerlinz/android-sdk:27

  ARG flutter_version

  ENV FLUTTER_HOME=${HOME}/sdks/flutter \
      FLUTTER_ROOT=$FLUTTER_HOME \
      FLUTTER_VERSION=$flutter_version \
      PUB_HOSTED_URL=https://pub.flutter-io.cn \
      FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn

  RUN mkdir -p ${FLUTTER_HOME}

  ENV PATH ${PATH}:${FLUTTER_HOME}/bin:${FLUTTER_HOME}/bin/cache/dart-sdk/bin

  RUN git clone --branch ${FLUTTER_VERSION} https://github.com/flutter/flutter.git ${FLUTTER_HOME} && \
      flutter doctor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>  这里我们使用<code>v1.9.1-hotfixes</code>分支</p>
<pre class="line-numbers language-shell"><code class="language-shell">  docker build --tag --build-arg flutter_version=v1.9.1-hotfixes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>  进入flutter工程所在目录</p>
<pre class="line-numbers language-shell"><code class="language-shell">  docker run --rm -it -v ${PWD}:/build --workdir /build dockerlinz/flutter:stable flutter build apk <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>可以加入 -v ~/.gradle:/home/cirrus/.gradle –env GRADLE_USER_HOME=/home/cirrus/.gradle，挂在本地缓存到镜像中</p>
</blockquote>
<p>  <font color="red"> 注意：过来人经验，此处没有把握的话还是进入容器里面测试会更省事</font></p>
<pre class="line-numbers language-shell"><code class="language-shell">  docker run --rm -it -v ${PWD}:/build --workdir /build dockerlinz/flutter:stable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>  进入后需要重新生成<code>.packages</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">  fluter clean 
  flutter packages get <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>  最好进入android或mac目录执行以下原生编译脚本，查看编译环境</p>
<pre class="line-numbers language-shell"><code class="language-shell">  ./gradlew build -d <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>  最后才是flutter编译</p>
<pre class="line-numbers language-shell"><code class="language-shell">  flutter build apk <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="出现的问题"><a href="#出现的问题" class="headerlink" title="出现的问题"></a>出现的问题</h1><h2 id="问题一：本地正常跑，但是镜像中很多依赖下载不下来"><a href="#问题一：本地正常跑，但是镜像中很多依赖下载不下来" class="headerlink" title="问题一：本地正常跑，但是镜像中很多依赖下载不下来"></a>问题一：本地正常跑，但是镜像中很多依赖下载不下来</h2><ul>
<li><p><font color="red"> android studio Could not download guava.jar</font></p>
</li>
<li><p><font color="red"> Could not download kotlin-gradle-plugin.jar</font></p>
</li>
<li><p><font color="red">flutter Build file ‘/build/android/app/build.gradle’ line: 25</font></p>
</li>
<li><p><font color="red">Could not download kotlin-reflect.jar org.jetbrains.kotlin:kotlin-reflect:1.2.0</font></p>
<p>解决：方案</p>
</li>
</ul>
<ol>
<li><p>在gradle中增加阿里云国内镜像</p>
<pre class="line-numbers language-groovy"><code class="language-groovy">buildscript <span class="token punctuation">{</span>
    repositories <span class="token punctuation">{</span>
        maven <span class="token punctuation">{</span> url <span class="token string">'http://maven.aliyun.com/nexus/content/groups/public/'</span> <span class="token punctuation">}</span>
        <span class="token function">google</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">jcenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    dependencies <span class="token punctuation">{</span>
        classpath <span class="token string">'com.android.tools.build:gradle:3.3.1'</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

allprojects <span class="token punctuation">{</span>
    repositories <span class="token punctuation">{</span>
        maven <span class="token punctuation">{</span> url <span class="token string">'http://maven.aliyun.com/nexus/content/groups/public/'</span> <span class="token punctuation">}</span>
        <span class="token function">google</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token function">jcenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>挂载本地gradle 缓存到镜像中</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker run --rm -it -v ${PWD}:/build --workdir /build  -v ~/.gradle:/home/cirrus/.gradle --env GRADLE_USER_HOME=/home/cirrus/.gradle  dockerlinz/flutter:stable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ol>
<h2 id="问题二：-flutter-build-apk-缓慢"><a href="#问题二：-flutter-build-apk-缓慢" class="headerlink" title="问题二： flutter build apk 缓慢"></a>问题二： flutter build apk 缓慢</h2><blockquote>
<p>每次都下载gradle版本，导致每次重新下载gradle版本</p>
</blockquote>
<h3 id="解决方案一"><a href="#解决方案一" class="headerlink" title="解决方案一"></a>解决方案一</h3><p>  挂在本地缓存到镜像中</p>
<pre class="line-numbers language-shell"><code class="language-shell">   -v ~/.gradle:/home/cirrus/.gradle --env GRADLE_USER_HOME=/home/cirrus/.gradle<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="解决方案二"><a href="#解决方案二" class="headerlink" title="解决方案二"></a>解决方案二</h3><ol>
<li><p>挂在.gradle 缓存目录，不用每次编译的时候重新下载依赖</p>
<pre class="line-numbers language-shell"><code class="language-shell">-v ~/.gradle2:/home/cirrus/.gradle<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>在叠一层gradle环境</p>
<pre class="line-numbers language-dockerfile"><code class="language-dockerfile">#https://github.com/frekele/docker-gradle/blob/master/Dockerfile
FROM dockerlinz/flutter:1.9.1-hotfixes

# Change to tmp folder
ENV GRADLE_VERSION=4.10.2
ENV GRADLE_HOME=/opt/gradle
ENV GRADLE_FOLDER=/root/.gradle

# Change to tmp folder
WORKDIR /tmp

# Download and extract gradle to opt folder
RUN wget --no-check-certificate --no-cookies https://downloads.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip \
    && sudo unzip gradle-${GRADLE_VERSION}-bin.zip -d /opt \
    && sudo ln -s /opt/gradle-${GRADLE_VERSION} /opt/gradle \
    && sudo rm -f gradle-${GRADLE_VERSION}-bin.zip

# Add executables to path
RUN sudo update-alternatives --install "/usr/bin/gradle" "gradle" "/opt/gradle/bin/gradle" 1 && \
    sudo update-alternatives --set "gradle" "/opt/gradle/bin/gradle"

# Create .gradle folder
RUN sudo mkdir -p $GRADLE_FOLDER

# Mark as volume
VOLUME  $GRADLE_FOLDER

# Add the files
#ADD rootfs /

# Change to root folder
WORKDIR /home/cirrus/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Flutter 中Android工程指定本地gradle编译，不是取下载，文件目录<code>&lt;android_project&gt;</code>/.idea/gradle.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>GradleSettings<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>linkedExternalProjectsSettings<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GradleProjectSettings</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>compositeConfiguration</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>compositeBuild</span> <span class="token attr-name">compositeDefinitionSource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SCRIPT<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>compositeConfiguration</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>distributionType<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>LOCAL<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>externalProjectPath<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$PROJECT_DIR$<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gradleHome<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$USER_HOME$/.gradle/wrapper/dists/gradle-4.4-all/9br9xq1tocpiv8o6njlyu5op1/gradle-4.4/bin<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>resolveModulePerSourceSet<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>testRunner<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>PLATFORM<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>GradleProjectSettings</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>component</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>distributionType 改为<code>LOCAL</code></li>
<li>gradleHome 指向<code>gradle_home/bin</code></li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>完美简单解决git和svn共用混用，或用git维护svn的问题</title>
    <url>/2019/12/28/2019-12-28-git%E5%92%8Csvn%E5%85%B1%E7%94%A8%E6%B7%B7%E7%94%A8/</url>
    <content><![CDATA[<ul>
<li><a href="#%E5%89%8D%E8%A8%80%E5%BA%9F%E8%AF%9D%E8%AF%B4%E5%9C%A8%E5%89%8D">前言（废话说在前）</a></li>
<li><a href="#%E4%B8%A4%E4%B8%AA%E5%91%BD%E4%BB%A4%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98">两个命令解决问题</a><ul>
<li><a href="#svn-%E5%AE%8C%E7%BE%8E%E8%BD%AC-git">SVN 完美转 GIT</a></li>
<li><a href="#git-%E5%90%8C%E6%AD%A5%E5%88%B0svn">GIT 同步到SVN</a></li>
<li><a href="#%E8%BF%9B%E4%BB%B7">进价</a></li>
</ul>
</li>
</ul>
<h1 id="前言（废话说在前）"><a href="#前言（废话说在前）" class="headerlink" title="前言（废话说在前）"></a>前言（废话说在前）</h1><p>记得第一份编程工作公司用的就是SVN，无法本地提交，文件多的情况下载奇慢，切分支各种繁琐操作，多个版本协同更是进入版本控制的地狱模式，特别是团队多人同时开发，解决冲突的时候。现在，在我看来SVN就是过时的工具，但偏偏在Git的洪流下还有一些公司出于各种原因不用Git，还坚持着那份低效看似稳妥的方案。<br><img src="http://cdn.linz.tech/git-vs-svn.png" alt="在这里插入图片描述"><br>你叫我们这习惯本地提交，各种切分支删分支的与时俱进的程序员情何以堪。从此饭也不香，敲代码提不起精神，看老板都有点尴尬O(∩_∩)O哈哈~…..<br><img src="http://cdn.linz.tech/%E6%88%91%E7%9A%84%E5%A4%A9%E9%82%A3.gif" alt="在这里插入图片描述"></p>
<h1 id="两个命令解决问题"><a href="#两个命令解决问题" class="headerlink" title="两个命令解决问题"></a>两个命令解决问题</h1><h2 id="SVN-完美转-GIT"><a href="#SVN-完美转-GIT" class="headerlink" title="SVN 完美转 GIT"></a>SVN 完美转 GIT</h2><p>首先解决Svn转Git进行版本控制，<b><font color="red">提交日志也会同步</font></b></p>
<blockquote>
<p>当初尝试搜索svn和git混用网上的解决方式</p>
</blockquote>
<pre class="line-numbers language-shell"><code class="language-shell">git svn clone [svn_url] <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="GIT-同步到SVN"><a href="#GIT-同步到SVN" class="headerlink" title="GIT 同步到SVN"></a>GIT 同步到SVN</h2><p><b><font color="red">提交日志也会同步</font></b></p>
<pre class="line-numbers language-shell"><code class="language-shell">git svn dcommit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果是Android Studio 会看到，如下一个同步的图标<br><img src="http://cdn.linz.tech/git2svn_android_studio.png" alt="在这里插入图片描述"></p>
<h2 id="进价"><a href="#进价" class="headerlink" title="进价"></a>进价</h2><blockquote>
<p>哈哈，你以为我还会进价，上面的两个命令解决了90%的问题，还是洗洗，多出去嗨吧！！</p>
</blockquote>
<p><img src="http://cdn.linz.tech/hahaxixi.gif" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>程序员怎么高效做笔记</title>
    <url>/2019/12/25/2018-9-20-method-for-note/</url>
    <content><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul>
<li><a href="#前言">前言</a></li>
<li><a href="#25分搞定-markdown">25分搞定 Markdown</a><ul>
<li><a href="#怎么快速入门markdown">怎么快速入门Markdown</a></li>
<li><a href="#markdown的进阶玩法">Markdown的进阶玩法</a></li>
<li><a href="#markdown-管理api或者项目说明文档">Markdown 管理API或者项目说明文档</a></li>
</ul>
</li>
<li><a href="#巧用evernote，做网页笔记">巧用EverNote，做网页笔记</a></li>
<li><a href="#用gist-记录经典和常用的代码块">用Gist 记录经典和常用的代码块</a></li>
<li><a href="#用编程常用studio做笔记工具">用编程常用Studio做笔记工具</a><ul>
<li><a href="#模仿android-studio的todo的样式">模仿Android studio的todo的样式</a></li>
</ul>
</li>
<li><a href="#工具推荐">工具推荐</a> </li>
<li><a href="#参考">参考</a></li>
</ul>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p align="center"><img src="http://cdn.linz.tech/android_note.jpg" alt="logo"></p>
<p align="center">告诉你一个秘密<br>我刚知道程序员怎么高效做笔记</p>
# 25分搞定 Markdown 
[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-4WAfdnsD-1574090733242)(http://cdn.linz.tech/2018-09-19-22-33-07-Markdown.png)]

<p>作为程序员不知道Markdown那你真的是Out了，用Markdow语法写博客笔记几个<code>##</code>就能把你的文章，用清晰的分级标题理清楚，不再是没有重点一团乱麻，轻松的解决代码块插入无格式的老大难问题，加上各种插件，轻松打造美观的文章。Markdown支持转换为常见的文件格式如：HTML,doc,PDF等；</p>
<h2 id="怎么快速入门Markdown"><a href="#怎么快速入门Markdown" class="headerlink" title="怎么快速入门Markdown"></a>怎么快速入门Markdown</h2><p>其实Markdown常用的语法就几个，最快速的方法是用支持Markdown语法的编辑器试一次UI中提供各种语法，15分基本能搞定，1分钟回顾一下，任何用到的时候忘记了在看一下案例。<br>推荐资源有：</p>
<ul>
<li><a href="https://pandao.github.io/editor.md/examples/simple.html" target="_blank" rel="noopener">pandao 提供的在线案例如上图</a></li>
<li>使用有道笔记本，新建Markdown笔记；</li>
</ul>
<h2 id="Markdown的进阶玩法"><a href="#Markdown的进阶玩法" class="headerlink" title="Markdown的进阶玩法"></a>Markdown的进阶玩法</h2><ul>
<li>目前大部分的博客网站都支持Markdown语法，如CSDN，掘金，简书等可以注册，尝试一下进入Markdown的世界；</li>
<li>Gitbook 把你的Markdown弄成书<ul>
<li><a href="https://blog.csdn.net/feosun/article/details/72806825" target="_blank" rel="noopener">Gitbook安装与使用教程</a> </li>
<li>国外最流行的相关网站<a href="https://www.gitbook.com/" target="_blank" rel="noopener">www.gitbook.com</a>，能找到用gitbook写的各种书籍；</li>
</ul>
</li>
<li><a href="https://github.com/geekcompany/DeerResume" target="_blank" rel="noopener">MarkDown在线简历工具，可在线预览、编辑和生成PDF</a></li>
<li><a href="http://xianbai.me/learn-md/article/convert/html.html" target="_blank" rel="noopener">Markdown 转换成Work，HTML，PDF格式</a></li>
<li><a href="https://hexo.io/" target="_blank" rel="noopener">使用Hexo搭建自己的博客</a> 如果一切顺利半天就能搭好博客，遇到一些问题已天就能搞定；</li>
</ul>
<blockquote>
<p>注意： </p>
<ol>
<li>虽然很多网站都支持Markdown，但是很多网站对Markdown做了深度定制，这会导致不同编辑器之间出现显示偏差，如包有道的Markdown文件拷贝到Hexo博客上经常出现格式混乱的问题；<font color="red">注意，不同编辑器检查一下文章格式</font></li>
<li>图片尽量放在自己的云服务器上，以便以后迁移不会丢失，这里推荐七牛云为个人提供10G的免费储存；</li>
</ol>
</blockquote>
<h2 id="Markdown-管理API或者项目说明文档"><a href="#Markdown-管理API或者项目说明文档" class="headerlink" title="Markdown 管理API或者项目说明文档"></a>Markdown 管理API或者项目说明文档</h2><p>下面的工具都是使用Markdown语法，看自己喜欢什么样式直接安装</p>
<ul>
<li><a href="https://www.mkdocs.org/" target="_blank" rel="noopener">MkDocs</a></li>
<li><a href="https://docusaurus.io/docs/en/installation" target="_blank" rel="noopener">Docusaurus</a></li>
<li><a href="https://docsify.js.org/#/?id=docsify" target="_blank" rel="noopener">Docsify</a></li>
<li><a href="http://docpress.github.io/#support" target="_blank" rel="noopener">docpress</a></li>
</ul>
<h1 id="巧用EverNote，做网页笔记"><a href="#巧用EverNote，做网页笔记" class="headerlink" title="巧用EverNote，做网页笔记"></a>巧用EverNote，做网页笔记</h1><p>相信现在很多人经常上网浏览网页，但是遇到一些一下子无法消化的内容，<font color="red">需要重复浏览和做笔记怎么办?</font> </p>
<p><strong>Chrome 的Evernote插件很好的解决了这个痛点</strong>，如下：<br>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传<img src="https://imgconvert.csdnimg.cn/aHR0cDovL2Nkbi5saW56LnRlY2gvMjAxOC0wOS0xOV8yMy0zOC0yNi1ldmVybm90ZS5naWY" alt=""></p>
<p>做好的网页笔记，不仅能在电脑端的客户端打开，而且还能进一步编辑，上传音视频文件：<br>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传<img src="https://imgconvert.csdnimg.cn/aHR0cDovL2Nkbi5saW56LnRlY2gvMjAxOC0wOS0xOV8yMy00MS0xOC1ldmVybm90ZTIucG5n?x-oss-process=image/format,png" alt=""></p>
<h1 id="用Gist-记录经典和常用的代码块"><a href="#用Gist-记录经典和常用的代码块" class="headerlink" title="用Gist 记录经典和常用的代码块"></a>用Gist 记录经典和常用的代码块</h1><ul>
<li>场景1：看源码的时候，我靠这段代码太经典/常用了我怎么保存他呢？</li>
<li>场景2：这个功能的代码我看过，在哪个项目来着？</li>
<li>场景3：关于文件操作的代码我看了好多，怎么集合在一起？</li>
</ul>
<p>上面的场景都是代码片段的保存需求，github上早就提供了代码片段管理Gist功能，只是国内需要翻墙使用比较麻烦，而没有普及开来；</p>
<p>其他软件没用过，推荐我一直用很好用的Lepton软件：<br><a href="https://github.com/hackjutsu/Lepton" target="_blank" rel="noopener"><img src="https://imgconvert.csdnimg.cn/aHR0cDovL3d3MS5zaW5haW1nLmNuL2xhcmdlLzY1NjFmZWVlancxZmNkMmN2ZnpodGoyMXRzMWQ0dG4xLmpwZw?x-oss-process=image/format,png" alt="Lepton"></a><br>推荐原因：</p>
<ul>
<li>跨平台Window，Mac，Linux都支持；</li>
<li>UI设计简洁，操作简单；</li>
<li>基本能解决国内无法访问问题，<font color="red">注意：但是有时候还是会登录不上</font></li>
</ul>
<h1 id="用编程常用Studio做笔记工具"><a href="#用编程常用Studio做笔记工具" class="headerlink" title="用编程常用Studio做笔记工具"></a>用编程常用Studio做笔记工具</h1><p>程序员每天都跟Studio打交道，对自己语言的Studio自然比其他软件更熟悉，各种快捷键手到擒来，当然用Studio最笔记自然无形中提高了效率，我自己就用Android studio 中的markdown插件写hexo博客</p>
<h2 id="模仿Android-studio的todo的样式"><a href="#模仿Android-studio的todo的样式" class="headerlink" title="模仿Android studio的todo的样式"></a>模仿Android studio的todo的样式</h2><p><strong>想要达到的效果</strong><br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzEzMjE1MTItZGIzZjE1YTc0MjI0NzI5MC5qcGc?x-oss-process=image/format,png" alt="颜色，背景样式可设置"></p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzEzMjE1MTItZjRlY2I1N2FlYWM5Njg2Mi5qcGc?x-oss-process=image/format,png" alt="TODO中可以随意查看"></p>
<p><strong>设置步骤</strong><br><img src="https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzEzMjE1MTItNjYwZjc4ZGU5NDc4OWE0Ny5qcGc?x-oss-process=image/format,png" alt="复制todo的Live Template"> </p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cDovL3VwbG9hZC1pbWFnZXMuamlhbnNodS5pby91cGxvYWRfaW1hZ2VzLzEzMjE1MTItM2JlMGEyM2E4ODE2MDA5MS5qcGc?x-oss-process=image/format,png" alt="设置喜欢的样式"></p>
<h1 id="工具推荐"><a href="#工具推荐" class="headerlink" title="工具推荐"></a>工具推荐</h1><h2 id="typora"><a href="#typora" class="headerlink" title="typora"></a><a href="https://www.typora.io" target="_blank" rel="noopener">typora</a></h2><blockquote>
<p> 目前遇到最好用的Markdown编辑工具</p>
</blockquote>
<p>推荐原因</p>
<ol>
<li>可以自动生成预留目录；</li>
<li>可以在当前目录下搜索Markdown内部文件，能快速导航到想找的文件；</li>
<li>提供很多优雅的主题，我比较喜欢 GitHub主题<h2 id="markdown-toc"><a href="#markdown-toc" class="headerlink" title="markdown-toc"></a>markdown-toc</h2><blockquote>
<p>有些 网页不支持 [TOC] 命令，只能手动生成一个</p>
</blockquote>
</li>
</ol>
<p>安装</p>
<pre class="line-numbers language-js"><code class="language-js">npm install <span class="token operator">--</span>save markdown<span class="token operator">-</span>toc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>全局安装</p>
<pre><code>npm install -g --save markdown-toc</code></pre><p>假设你需要为README.md生成目录,使用</p>
<pre class="line-numbers language-js"><code class="language-js">npx markdown<span class="token operator">-</span>toc README<span class="token punctuation">.</span>md<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>把输出的内容拷贝到md文件即可</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.zhihu.com/question/21438053" target="_blank" rel="noopener">知乎：学习编程用什么做笔记比较好？</a> 基本都试过，只有<a href="https://www.notion.so" target="_blank" rel="noopener">notion</a>惊艳到我了</li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>设计相关</title>
    <url>/2019/12/25/2018-4-15-designer/</url>
    <content><![CDATA[<h1 id="相关开源库"><a href="#相关开源库" class="headerlink" title="相关开源库"></a>相关开源库</h1><h2 id="Lottie"><a href="#Lottie" class="headerlink" title="Lottie"></a>Lottie</h2><blockquote>
<p>官方全平台使用说明： <a href="https://airbnb.io/lottie/" target="_blank" rel="noopener">https://airbnb.io/lottie/</a></p>
</blockquote>
<ul>
<li><a href="https://github.com/airbnb/lottie-android" target="_blank" rel="noopener">AE动画设计 + lottie-android</a> 【简易的惊艳动画.必看】</li>
<li><a href="https://github.com/airbnb/lottie-web" target="_blank" rel="noopener">lottie-web</a><br><img src="https://raw.githubusercontent.com/airbnb/lottie-android/master/gifs/Example1.gif" alt=""></li>
</ul>
<p><em>效果预览</em></p>
<ul>
<li><a href="https://www.lottiefiles.com/" target="_blank" rel="noopener">lottiefiles</a> 在线data.json 预览效果</li>
<li><a href="https://codepen.io/collection/nVYWZR/" target="_blank" rel="noopener">bodymovin</a> web 效果预览</li>
</ul>
<p><em>环境配置</em></p>
<ul>
<li><p><a href="https://github.com/bigxixi/bodymovin_cn" target="_blank" rel="noopener">bodymovie插件下载地址</a> 汉化版本地址</p>
</li>
<li><p><a href="https://bodymovin-editor.firebaseapp.com/" target="_blank" rel="noopener">在线编辑工具</a></p>
</li>
</ul>
<p><em>参考博文</em></p>
<ul>
<li><a href="https://www.jianshu.com/p/a37b3e4d9ccd" target="_blank" rel="noopener">Android开发之Lottie动画解析库</a>  AE的简单实用和Lottie的简单实用</li>
</ul>
<p><em>附录</em></p>
<ul>
<li><a href="https://codepen.io/airnan/project/editor/ZeNONO" target="_blank" rel="noopener">web 最简单Demo</a></li>
<li><a href="https://cdnjs.com/libraries/bodymovin" target="_blank" rel="noopener">bodymovin web javaScript libs</a>  <code>lottie.js</code> <code>lottie_light.js</code></li>
</ul>
<h2 id="fack-rebound-弹性动画-有网页Demo"><a href="#fack-rebound-弹性动画-有网页Demo" class="headerlink" title="fack-rebound 弹性动画 有网页Demo"></a><a href="http://facebook.github.io/rebound/" target="_blank" rel="noopener">fack-rebound 弹性动画</a> 有网页Demo</h2><blockquote>
<p>能大大的提高用户体验</p>
</blockquote>
<h1 id="代码开源库"><a href="#代码开源库" class="headerlink" title="代码开源库"></a>代码开源库</h1><h2 id="控件"><a href="#控件" class="headerlink" title="控件"></a>控件</h2><ul>
<li><a href="https://github.com/qiujuer/Genius-Android" target="_blank" rel="noopener">Genius-Android</a><br><img src="https://raw.githubusercontent.com/qiujuer/Genius-Android/master/caprice/release/pic_ui.png" alt=""></li>
</ul>
<h1 id="Sketch"><a href="#Sketch" class="headerlink" title="Sketch"></a>Sketch</h1><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><ul>
<li><a href="https://design.webkul.com/renamer/?utm_source=androidweekly.io&amp;utm_medium=website" target="_blank" rel="noopener">Renamer</a> 多图层重命名工具</li>
<li><a href="https://github.com/mascardoso/sketch-export" target="_blank" rel="noopener">sketch-export</a> Export Artboards in sketch to markdown or json</li>
</ul>
<h1 id="免费图片资源"><a href="#免费图片资源" class="headerlink" title="免费图片资源"></a>免费图片资源</h1><ul>
<li><a href="https://iconsvg.xyz" target="_blank" rel="noopener">https://iconsvg.xyz</a></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>UI</tag>
        <tag>design</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里巴巴arouter组件化总结</title>
    <url>/2019/12/25/2019-12-25-%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4arouter%E7%BB%84%E4%BB%B6%E5%8C%96%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<ul>
<li><a href="#%E7%AC%AC1%E8%8A%82-%E7%BB%84%E4%BB%B6%E5%8C%96%E5%8E%9F%E5%9B%A0">第1节 组件化原因</a></li>
<li><a href="#%E7%AC%AC2%E8%8A%82-%E7%BB%84%E4%BB%B6%E5%8C%96%E9%A1%BB%E8%80%83%E8%99%91%E7%9A%84%E9%97%AE%E9%A2%98">第2节 组件化须考虑的问题</a></li>
<li><a href="#%E7%AC%AC3%E8%8A%82-arouter%E4%BD%BF%E7%94%A8">第3节 ARouter使用</a><ul>
<li><a href="#31-%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AE">3.1 初始化配置</a></li>
<li><a href="#32-%E9%AB%98%E9%98%B6%E4%BD%BF%E7%94%A8">3.2 高阶使用</a><ul>
<li><a href="#1-%E6%A8%A1%E5%9D%97%E9%97%B4%E8%B0%83%E7%94%A8">1. 模块间调用</a></li>
<li><a href="#2-%E5%85%A8%E5%B1%80%E5%88%86%E7%BB%84%E6%8B%A6%E6%88%AA">2. 全局分组拦截</a></li>
<li><a href="#3-%E9%99%8D%E7%BA%A7%E5%A4%84%E7%90%86">3. 降级处理</a></li>
<li><a href="#4-%E8%B7%AF%E5%BE%84%E6%9B%BF%E6%8D%A2">4. 路径替换</a></li>
<li><a href="#5-%E9%BB%98%E8%AE%A4javabean%E5%BA%8F%E5%88%97%E5%8C%96%E6%8E%A7%E5%88%B6%E7%B1%BB">5. 默认JavaBean序列化控制类</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#%E7%AC%AC4%E8%8A%82-arouter%E9%87%87%E5%9D%91%E8%AE%B0%E5%BD%95">第4节 Arouter采坑记录</a><ul>
<li><a href="#%E5%89%8D%E8%A8%80">前言</a></li>
<li><a href="#41-autowrite">4.1 AutoWrite</a></li>
<li><a href="#42-navigation">4.2 navigation</a></li>
<li><a href="#43--finish-%E6%97%B6%E6%9C%BA%E4%B8%8D%E5%AF%B9%E4%BA%A7%E7%94%9F%E7%99%BD%E5%B1%8F">4.3 finish 时机不对产生白屏</a></li>
</ul>
</li>
<li><a href="#%E7%AC%AC5%E8%8A%82-%E5%AE%9E%E6%88%98%E6%80%BB%E7%BB%93-arouter%E5%B0%81%E8%A3%85%E7%B1%BB">第5节 实战总结 ARouter封装类</a><ul>
<li><a href="#postcard-%E7%9A%84%E5%8C%85%E8%A3%85%E7%B1%BB">Postcard 的包装类</a></li>
<li><a href="#arouterhelper-%E5%B8%AE%E5%8A%A9%E7%B1%BB">ArouterHelper 帮助类</a></li>
</ul>
</li>
<li><a href="#%E9%99%84%E5%BD%95">附录</a></li>
</ul>
<h1 id="第1节-组件化原因"><a href="#第1节-组件化原因" class="headerlink" title="第1节 组件化原因"></a>第1节 组件化原因</h1><ol>
<li><strong>抽离出常用的公共模块</strong>，如公司内部封装的工具库，网络访问库，公共资源等。各公共模块单独维护，逐渐完善。工作多年深刻感觉到公共模块代码对一个公司的重要性：<ol>
<li>抽离出公共模块，通过共同维护和使用能明显提高公司内部项目开发效率，减少内部消耗。</li>
<li>抽离出公共模块，能达到强调的效果，通过逐步的版本迭代，达到公司内部技术积累的目的。</li>
<li>把功能模块放入内部版本仓库，使代码更简洁，各版本修改bug追踪有日志可查，使代码更健壮。</li>
</ol>
</li>
<li><strong>各业务模块间解耦</strong><ol>
<li>能达到各模块组合快速完成一个App，现实开发场景中，一个公司很多项目并行开发，其实很多业务模块是可以共用的。</li>
<li>能动态替换某一模块；</li>
</ol>
</li>
<li><strong>页面跳转，服务调用URL化</strong>，更切合hybird和多端开发的场景，如<ol>
<li>由于路径化Web和原生界面相互跳转会很方便；</li>
<li>Web调用Android\IOS原生页面统一化提高开发效率;</li>
<li>通过动态加载路由，能实现动态化路由这种黑科技；</li>
</ol>
</li>
<li>路由跳转监听和拦截<ol>
<li>通过路由拦截的功能，可以在很轻松的实现权限分组，权限细分及权限动态配置；</li>
<li>通过路由监听可以把一些埋点统一放到jiant</li>
</ol>
</li>
<li>路由降级寻址 <ol>
<li>处理寻址异常降级寻址的问题；</li>
<li>在原生页面崩溃异常时，可以通过动态路由表，<font color="red">拦截原生路由跳转到H5</font>;</li>
</ol>
</li>
</ol>
<h1 id="第2节-组件化须考虑的问题"><a href="#第2节-组件化须考虑的问题" class="headerlink" title="第2节 组件化须考虑的问题"></a>第2节 组件化须考虑的问题</h1><ol>
<li><p>组件化之间的通信；</p>
</li>
<li><p>组件生命周期管理(模块能处理Application的生命周期)；</p>
</li>
<li><p>混合开发，网页端跳转到Android 和IOS统一跳转参数；</p>
<blockquote>
<p><font color="red"> 注意：实践心得体会，统一参数必须用String类型</font></p>
<p>举个栗子：</p>
<p>用Html 传递json格式的5.0参数{“key”:5.0}， JavaScript语法会自动把5.0变成5也就是， double 变成 int，如果Android 和IOS有做类型区分就会传参失败,Android经典场景如下：</p>
<pre class="line-numbers language-java"><code class="language-java">intent<span class="token punctuation">.</span><span class="token function">getIntExtra</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
intent<span class="token punctuation">.</span><span class="token function">getDoubleExtra</span><span class="token punctuation">(</span><span class="token punctuation">)</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>然后本来是逻辑走double的没有走。</p>
<p>第二栗子：<br><font color="red">json数据中false 和true 专递也最好用”1”和”0”代替</font><br>跟IOS同事讨论了很久，IOS Oject-C 处理true和false的机制和Android 不同<br><strong>故为了防止不同编程语言中处理方式不同尽量使用字符会少很多麻烦</strong></p>
</blockquote>
</li>
<li><p>统一各模块依赖版本库</p>
</li>
<li><p>混淆文件管理</p>
</li>
</ol>
<h1 id="第3节-ARouter使用"><a href="#第3节-ARouter使用" class="headerlink" title="第3节 ARouter使用"></a>第3节 ARouter使用</h1><h2 id="3-1-初始化配置"><a href="#3-1-初始化配置" class="headerlink" title="3.1 初始化配置"></a>3.1 初始化配置</h2><p>第一步：build.gradle(project) 设置 使用gradle插件自动化注册</p>
<pre class="line-numbers language-gradle"><code class="language-gradle"> classpath "com.alibaba:arouter-register:$arouter_register_version" //1.0.2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>gradle.properties</p>
<pre class="line-numbers language-groovy"><code class="language-groovy">arouter_register_version<span class="token operator">=</span><span class="token number">1.0</span><span class="token operator">.</span><span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>第二步：新建lib_base 模块存放各子模块公用类，如路由表</p>
<p><code>libs_base</code> build.gradle 配置</p>
<pre class="line-numbers language-groovy"><code class="language-groovy">apply plugin<span class="token punctuation">:</span> <span class="token string">'com.alibaba.arouter'</span>

android <span class="token punctuation">{</span>
   defaultConfig <span class="token punctuation">{</span>
          javaCompileOptions <span class="token punctuation">{</span>
            annotationProcessorOptions <span class="token punctuation">{</span>
                arguments <span class="token operator">=</span> <span class="token punctuation">[</span>AROUTER_MODULE_NAME<span class="token punctuation">:</span> project<span class="token operator">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    compileOptions <span class="token punctuation">{</span>
        sourceCompatibility <span class="token operator">=</span> <span class="token string">'1.8'</span>
        targetCompatibility <span class="token operator">=</span> <span class="token string">'1.8'</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

dependencies <span class="token punctuation">{</span>
    implementation <span class="token function">fileTree</span><span class="token punctuation">(</span>dir<span class="token punctuation">:</span> <span class="token string">'libs'</span><span class="token punctuation">,</span> include<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'*.jar'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">//可以定义一个公共资源模块，用于各模块资源共享</span>
    implementation <span class="token function">project</span><span class="token punctuation">(</span><span class="token string">':lib_resource'</span><span class="token punctuation">)</span>
    <span class="token function">api</span> <span class="token punctuation">(</span><span class="token string">'com.alibaba:arouter-api:1.4.1'</span><span class="token punctuation">)</span>
    annotationProcessor <span class="token string">'com.alibaba:arouter-compiler:1.2.2'</span>

    <span class="token comment" spellcheck="true">//json解析框架</span>
    api <span class="token string">'com.google.code.gson:gson:2.8.2'</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第三步： 子模块build.gradle 配置</p>
<pre class="line-numbers language-groovy"><code class="language-groovy">apply plugin<span class="token punctuation">:</span> <span class="token string">'com.alibaba.arouter'</span> <span class="token comment" spellcheck="true">//ARouter 路径注册优化</span>
android <span class="token punctuation">{</span>
   defaultConfig <span class="token punctuation">{</span>
          javaCompileOptions <span class="token punctuation">{</span>
            annotationProcessorOptions <span class="token punctuation">{</span>
                arguments <span class="token operator">=</span> <span class="token punctuation">[</span>AROUTER_MODULE_NAME<span class="token punctuation">:</span> project<span class="token operator">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
            <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    compileOptions <span class="token punctuation">{</span>
        sourceCompatibility <span class="token operator">=</span> <span class="token string">'1.8'</span>
        targetCompatibility <span class="token operator">=</span> <span class="token string">'1.8'</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
dependencies<span class="token punctuation">{</span>
  <span class="token comment" spellcheck="true">//必须使用注解，自动生成路由</span>
  annotationProcessor <span class="token string">'com.alibaba:arouter-compiler:1.2.2'</span>
  <span class="token comment" spellcheck="true">//引用父模块，用于共享类存放</span>
  implementation <span class="token function">project</span><span class="token punctuation">(</span><span class="token string">':lib_base'</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第三步：让组件自动运行</p>
<p>Build.gradle </p>
<pre class="line-numbers language-groovy"><code class="language-groovy"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isNeedMeModule<span class="token operator">.</span><span class="token function">toBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    apply plugin<span class="token punctuation">:</span> <span class="token string">'com.android.application'</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    apply plugin<span class="token punctuation">:</span> <span class="token string">'com.android.library'</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>gradle.properties</code></p>
<pre class="line-numbers language-java"><code class="language-java">isNeedMeModule<span class="token operator">=</span><span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>第四步：壳工程配置</p>
<pre class="line-numbers language-groovy"><code class="language-groovy"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isNeedMeModule<span class="token operator">.</span><span class="token function">toBoolean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  compile <span class="token function">project</span><span class="token punctuation">(</span><span class="token string">":module_home"</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>第五步： 初始化</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">if</span> <span class="token punctuation">(</span>BuildConfig<span class="token punctuation">.</span>DEBUG<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ARouter<span class="token punctuation">.</span><span class="token function">openDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      ARouter<span class="token punctuation">.</span><span class="token function">openLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
  ARouter<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>子模块引用<code>gradle.properties</code></p>
<pre class="line-numbers language-groovy"><code class="language-groovy">isNeedMeModule<span class="token operator">=</span><span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="3-2-高阶使用"><a href="#3-2-高阶使用" class="headerlink" title="3.2 高阶使用"></a>3.2 高阶使用</h2><h3 id="1-模块间调用"><a href="#1-模块间调用" class="headerlink" title="1. 模块间调用"></a>1. 模块间调用</h3><p>第一步： lib_base 模块定义接口</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IHelloModuleService</span> <span class="token keyword">extends</span> <span class="token class-name">IProvider</span> <span class="token punctuation">{</span>
    String <span class="token function">getUserName</span><span class="token punctuation">(</span>String usrID<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>第二步：子模块实现接口</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Route</span><span class="token punctuation">(</span>path <span class="token operator">=</span> Router<span class="token punctuation">.</span>SERVICE_HELLO<span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string">"测试服务"</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">IHelloModuleService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> String <span class="token function">getUserName</span><span class="token punctuation">(</span>String usrID<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">"Test provider"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第三步：调用其他模块提供的接口</p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getUserName</span><span class="token punctuation">(</span>String userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        IHelloModuleService chatModuleService <span class="token operator">=</span> ARouterHelper<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigation</span><span class="token punctuation">(</span>IHelloModuleService<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>chatModuleService <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> chatModuleService<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="2-全局分组拦截"><a href="#2-全局分组拦截" class="headerlink" title="2. 全局分组拦截"></a>2. 全局分组拦截</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Interceptor</span><span class="token punctuation">(</span>priority <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string">"全局分组拦截"</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalDefaultInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">IInterceptor</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">process</span><span class="token punctuation">(</span>Postcard postcard<span class="token punctuation">,</span> InterceptorCallback callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment" spellcheck="true">//        获取当前组</span>
<span class="token comment" spellcheck="true">//        postcard.getGroup()</span>
<span class="token comment" spellcheck="true">//        直接执行</span>
<span class="token comment" spellcheck="true">//        callback.onContinue(postcard);</span>
<span class="token comment" spellcheck="true">//        onLost</span>
<span class="token comment" spellcheck="true">//        callback.onInterrupt(null);</span>
        callback<span class="token punctuation">.</span><span class="token function">onContinue</span><span class="token punctuation">(</span>postcard<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="3-降级处理"><a href="#3-降级处理" class="headerlink" title="3. 降级处理"></a>3. 降级处理</h3><blockquote>
<p>注意： path 必须有值否则，安装Arouter的架构无法实例化<code>GlobalDegradeServiceImpl</code></p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Route</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">"/root/degrade_service"</span><span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string">"全局降级策略"</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalDegradeServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">DegradeService</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> String TAG <span class="token operator">=</span> <span class="token string">"GlobalDegradeServiceImp"</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onLost</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Postcard postcard<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Degrade path %s"</span><span class="token punctuation">,</span> postcard<span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="4-路径替换"><a href="#4-路径替换" class="headerlink" title="4. 路径替换"></a>4. 路径替换</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Route</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">"/root/path_replace"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 必须标明注解</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PathReplaceServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">PathReplaceService</span> <span class="token punctuation">{</span>

    <span class="token comment" spellcheck="true">/**
     * 重写路径
     * @param path raw path
     * @return new path
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> String <span class="token function">forString</span><span class="token punctuation">(</span>String path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> path<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 按照一定的规则处理之后返回处理后的结果</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> Uri <span class="token function">forUri</span><span class="token punctuation">(</span>Uri uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> uri<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="5-默认JavaBean序列化控制类"><a href="#5-默认JavaBean序列化控制类" class="headerlink" title="5. 默认JavaBean序列化控制类"></a>5. 默认JavaBean序列化控制类</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Route</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">"/root/serialization_service"</span><span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string">"默认JavaBean序列化控制类"</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">SerializationService</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> Gson gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> T <span class="token function">json2Object</span><span class="token punctuation">(</span>String input<span class="token punctuation">,</span> Class<span class="token operator">&lt;</span>T<span class="token operator">></span> clazz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> String <span class="token function">object2Json</span><span class="token punctuation">(</span>Object instance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> gson<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> T <span class="token function">parseObject</span><span class="token punctuation">(</span>String input<span class="token punctuation">,</span> Type clazz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="第4节-Arouter采坑记录"><a href="#第4节-Arouter采坑记录" class="headerlink" title="第4节 Arouter采坑记录"></a>第4节 Arouter采坑记录</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><font color="red" size="22">开源库遇到问题到issue里找</font></p>
<p><font color="green" size="22">开源库遇到问题到issue里找</font> </p>
<p><font size="22" color="grey">开源库遇到问题到issue里找</font></p>
<h2 id="4-1-AutoWrite"><a href="#4-1-AutoWrite" class="headerlink" title="4.1 AutoWrite"></a>4.1 AutoWrite</h2><p>错误写法</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Autowired</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> type <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p><span class="github-emoji" style="display:inline;vertical-align:middle"><span>❓</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2753.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>原因： 自动注入是不能用<code>private</code>关键字的</p>
</blockquote>
<h2 id="4-2-navigation"><a href="#4-2-navigation" class="headerlink" title="4.2 navigation"></a>4.2 navigation</h2><pre><code>navigation() vs navigation(Context)</code></pre><p>使用过ARouter的同学，有知道区别的吗？当然我也是被坑才知道，之前也扫了一遍源码，还是没有get关键点</p>
<h2 id="4-3-finish-时机不对产生白屏"><a href="#4-3-finish-时机不对产生白屏" class="headerlink" title="4.3  finish 时机不对产生白屏"></a>4.3  finish 时机不对产生白屏</h2><h1 id="第5节-实战总结-ARouter封装类"><a href="#第5节-实战总结-ARouter封装类" class="headerlink" title="第5节 实战总结 ARouter封装类"></a>第5节 实战总结 ARouter封装类</h1><h2 id="Postcard-的包装类"><a href="#Postcard-的包装类" class="headerlink" title="Postcard 的包装类"></a>Postcard 的包装类</h2><blockquote>
<p>因为Postcard 是区分类型的在改造的时候用</p>
<ul>
<li>Java的多态的言语特性能简化很多工作量</li>
<li>可以在后期全局修改添加属性</li>
</ul>
</blockquote>
<p>PostcardWrapper.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PostcardWrapper</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> Postcard mPostcard<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">PostcardWrapper</span><span class="token punctuation">(</span>Uri uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard <span class="token operator">=</span> ARouter<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> Postcard <span class="token function">getPostcard</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mPostcard<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> Bundle <span class="token function">getOptionsBundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mPostcard<span class="token punctuation">.</span><span class="token function">getOptionsBundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getEnterAnim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mPostcard<span class="token punctuation">.</span><span class="token function">getEnterAnim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getExitAnim</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mPostcard<span class="token punctuation">.</span><span class="token function">getExitAnim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> IProvider <span class="token function">getProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mPostcard<span class="token punctuation">.</span><span class="token function">getProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">setProvider</span><span class="token punctuation">(</span>IProvider provider<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">setProvider</span><span class="token punctuation">(</span>provider<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">PostcardWrapper</span><span class="token punctuation">(</span>String path<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>mPostcard <span class="token operator">=</span> ARouter<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">PostcardWrapper</span><span class="token punctuation">(</span>String path<span class="token punctuation">,</span> String group<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Postcard</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> group<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token function">PostcardWrapper</span><span class="token punctuation">(</span>String path<span class="token punctuation">,</span> String group<span class="token punctuation">,</span> Uri uri<span class="token punctuation">,</span> Bundle bundle<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Postcard</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> group<span class="token punctuation">,</span> uri<span class="token punctuation">,</span> bundle<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isGreenChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> mPostcard<span class="token punctuation">.</span><span class="token function">isGreenChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> Object <span class="token function">getTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> mPostcard<span class="token punctuation">.</span><span class="token function">getTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">setTag</span><span class="token punctuation">(</span>Object tag<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">setTag</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> mPostcard<span class="token punctuation">.</span><span class="token function">getTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">int</span> timeout<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> Uri <span class="token function">getUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> mPostcard<span class="token punctuation">.</span><span class="token function">getUri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">setUri</span><span class="token punctuation">(</span>Uri uri<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">setUri</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">greenChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">greenChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> Object <span class="token function">navigation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">navigation</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> Object <span class="token function">navigation</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">navigation</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> Object <span class="token function">navigation</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> NavigationCallback callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> ARouter<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigation</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> mPostcard<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">navigation</span><span class="token punctuation">(</span>Activity mContext<span class="token punctuation">,</span> <span class="token keyword">int</span> requestCode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">navigation</span><span class="token punctuation">(</span>mContext<span class="token punctuation">,</span> requestCode<span class="token punctuation">,</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">navigation</span><span class="token punctuation">(</span>Activity mContext<span class="token punctuation">,</span> <span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> NavigationCallback callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ARouter<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigation</span><span class="token punctuation">(</span>mContext<span class="token punctuation">,</span> mPostcard<span class="token punctuation">,</span> requestCode<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span>Bundle bundle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>bundle<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">withFlags</span><span class="token punctuation">(</span><span class="token keyword">int</span> flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withFlags</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">addFlags</span><span class="token punctuation">(</span><span class="token keyword">int</span> flags<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>mPostcard<span class="token punctuation">.</span><span class="token function">addFlags</span><span class="token punctuation">(</span>flags<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mPostcard<span class="token punctuation">.</span><span class="token function">getFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> Object value<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withObject</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> String value<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withString</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token keyword">boolean</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withBoolean</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token keyword">short</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withShort</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token keyword">int</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withInt</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token keyword">long</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withLong</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token keyword">double</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withDouble</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token keyword">char</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withChar</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token keyword">float</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withFloat</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> CharSequence value<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withCharSequence</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> Parcelable value<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withParcelable</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> Parcelable<span class="token punctuation">[</span><span class="token punctuation">]</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withParcelableArray</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> SparseArray<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Parcelable</span><span class="token operator">></span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withSparseParcelableArray</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> Serializable value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withSerializable</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withByteArray</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token keyword">short</span><span class="token punctuation">[</span><span class="token punctuation">]</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withShortArray</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withCharArray</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withFloatArray</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> CharSequence<span class="token punctuation">[</span><span class="token punctuation">]</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withCharSequenceArray</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> Bundle value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withBundle</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 设置动画效果
     * @param enterAnim 进入动画
     * @param exitAnim 退出动画
     * @return
     */</span>
    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token keyword">int</span> enterAnim<span class="token punctuation">,</span> <span class="token keyword">int</span> exitAnim<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withTransition</span><span class="token punctuation">(</span>enterAnim<span class="token punctuation">,</span> exitAnim<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">withTransition</span><span class="token punctuation">(</span><span class="token keyword">int</span> enterAnim<span class="token punctuation">,</span> <span class="token keyword">int</span> exitAnim<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withTransition</span><span class="token punctuation">(</span>enterAnim<span class="token punctuation">,</span> exitAnim<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 默认转换动画效果
     * @return
     */</span>
    <span class="token keyword">public</span> PostcardWrapper <span class="token function">withDefaultTrans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withTransition</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>anim<span class="token punctuation">.</span>anim_activity_slide_in_right<span class="token punctuation">,</span> R<span class="token punctuation">.</span>anim<span class="token punctuation">.</span>anim_activity_slide_out_left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@RequiresApi</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> PostcardWrapper <span class="token function">withOptionsCompat</span><span class="token punctuation">(</span>ActivityOptionsCompat compat<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withOptionsCompat</span><span class="token punctuation">(</span>compat<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * Set options compat
     *
     * @param compat compat
     * @return this
     */</span>
    <span class="token annotation punctuation">@RequiresApi</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span>ActivityOptionsCompat compat<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withOptionsCompat</span><span class="token punctuation">(</span>compat<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">"PostcardWrapper ==> s\ns"</span> <span class="token operator">+</span> mPostcard<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> mPostcard<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">withAction</span><span class="token punctuation">(</span>String action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withAction</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span>String action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mPostcard<span class="token punctuation">.</span><span class="token function">withAction</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">with</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> String key<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> ArrayList value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> value<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Object o <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                mPostcard<span class="token punctuation">.</span><span class="token function">withStringArrayList</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">CharSequence</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mPostcard<span class="token punctuation">.</span><span class="token function">withCharSequenceArrayList</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                mPostcard<span class="token punctuation">.</span><span class="token function">withIntegerArrayList</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">Parcelable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mPostcard<span class="token punctuation">.</span><span class="token function">withParcelableArrayList</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="ArouterHelper-帮助类"><a href="#ArouterHelper-帮助类" class="headerlink" title="ArouterHelper 帮助类"></a>ArouterHelper 帮助类</h2><p>ARouterHelper.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ARouterHelper</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token function">ARouterHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">InstanceHolder</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// static 只执行一次，并严格保证按照顺序执行</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> ARouterHelper instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ARouterHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> ARouterHelper <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> InstanceHolder<span class="token punctuation">.</span>instance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>Application application<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>BuildConfig<span class="token punctuation">.</span>DEBUG<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ARouter<span class="token punctuation">.</span><span class="token function">openDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            ARouter<span class="token punctuation">.</span><span class="token function">openLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            ARouter<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        ARouter<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>application<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">inject</span><span class="token punctuation">(</span>Object thiz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ARouter<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inject</span><span class="token punctuation">(</span>thiz<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * CMUBaseActivity CMUBaseFragment 两个base类重写 startActivity 默认跳转动画
     * @param path
     * @return
     */</span>
    <span class="token keyword">public</span> PostcardWrapper <span class="token function">build</span><span class="token punctuation">(</span>String path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">build</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * @param path
     * @param useDefaultTransition 使用 CMUBaseActivity CMUBaseFragment 配置的跳转方式
     * @return
     */</span>
    <span class="token keyword">public</span> PostcardWrapper <span class="token function">build</span><span class="token punctuation">(</span>String path<span class="token punctuation">,</span> <span class="token keyword">boolean</span> useDefaultTransition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        PostcardWrapper postcardWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PostcardWrapper</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>useDefaultTransition<span class="token punctuation">)</span><span class="token punctuation">{</span>
            postcardWrapper<span class="token punctuation">.</span><span class="token function">withDefaultTrans</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> postcardWrapper<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 使用主题默认跳转动画
     * @param path
     * @return
     */</span>
    <span class="token keyword">public</span> PostcardWrapper <span class="token function">buildWithThemeAnim</span><span class="token punctuation">(</span>String path<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PostcardWrapper</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token comment" spellcheck="true">/**
     * 无动画转换
     * @param path
     * @return
     */</span>
    <span class="token keyword">public</span> PostcardWrapper <span class="token function">buildWithoutAnim</span><span class="token punctuation">(</span>String path<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PostcardWrapper</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">withTransition</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> PostcardWrapper <span class="token function">build</span><span class="token punctuation">(</span>Uri uri<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PostcardWrapper</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> T <span class="token function">navigation</span><span class="token punctuation">(</span>Class<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">T</span><span class="token operator">></span> service<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> ARouter<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigation</span><span class="token punctuation">(</span>service<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> Object <span class="token function">navigation</span><span class="token punctuation">(</span>Context mContext<span class="token punctuation">,</span> PostcardWrapper postcard<span class="token punctuation">,</span> <span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> NavigationCallback callback<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> ARouter<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">navigation</span><span class="token punctuation">(</span>mContext<span class="token punctuation">,</span> postcard<span class="token punctuation">.</span><span class="token function">getPostcard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> requestCode<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://blog.csdn.net/huangxiaoguo1/article/details/78753555" target="_blank" rel="noopener">使用阿里ARouter路由实现组件化（模块化）开发流程</a></li>
<li><a href="https://www.jianshu.com/p/d0f5cf304fa4" target="_blank" rel="noopener">Android组件化开发实践（一）：为什么要进行组件化开发？</a></li>
<li><a href="https://www.jianshu.com/p/5c109c51d7ba" target="_blank" rel="noopener">组件化知识梳理(1) - Arouter 的基本使用</a></li>
</ul>
<h2 id="学到知识点"><a href="#学到知识点" class="headerlink" title="学到知识点"></a>学到知识点</h2><p><a href="https://www.jianshu.com/p/8962d6ba936e" target="_blank" rel="noopener">api与implementation的区别</a></p>
<p>implementation   不分享自己的依赖，只有在runtime是其他模块的依赖才可见<br>api 分享自己的依赖，但是在其变化时，其他依赖需重新编译</p>
<p> <a href="https://www.cnblogs.com/bluestorm/p/8747860.html" target="_blank" rel="noopener">Android Studio添加文件注释头模板？</a></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
 *    @Author  linz
 *    @Date    $date$ $time$
 *    @Description   
 *    @Version: 1.0
 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Arouter 源码</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
 * Provide degrade service for router, you can do something when route has lost.
 *
 * @author Alex &lt;a href="mailto:zhilong.liu@aliyun.com">Contact me.&lt;/a>
 * @version 1.0
 * @since 2016/9/22 14:51
 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Tutorial再整理</title>
    <url>/2019/12/22/2016-12-03-hexo-tutorial/</url>
    <content><![CDATA[<h2 id="Hexo入门"><a href="#Hexo入门" class="headerlink" title="Hexo入门"></a>Hexo入门</h2><h3 id="Hexo环境配置"><a href="#Hexo环境配置" class="headerlink" title="Hexo环境配置"></a>Hexo环境配置</h3><ul>
<li>Git / <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>  <a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">hexo官方教程</a></li>
</ul>
<h3 id="Hexo-使用"><a href="#Hexo-使用" class="headerlink" title="Hexo 使用"></a>Hexo 使用</h3><pre><code> hexo init</code></pre><ul>
<li>类似git init 需要新建目录保存博文信息；</li>
<li>执行命令会在当前目录下生产如下文件：<pre><code>├── _config.yml #全局配置文件
├── node_modules #Hexo插件（Node.js 插件默认安装目录）
├── package.json #Node 工程的依赖和基本信息
├── scaffolds  #模板
├── source #博客正文源文件
└── themes</code></pre>【重点】<font color="red">如果你有配置，会覆盖你原来的配置；</font></li>
</ul>
<p>安装package.json 下面的依赖包</p>
<pre><code>npm install</code></pre><p> 测试hexo是否正确安装</p>
<pre class="line-numbers language-shell"><code class="language-shell"> hexo init <folder>
 cd folder
 npm install
 npm install hexo-server --save
 hexo server
# 访问是否正常显示 http://localhost:4000/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Mac-快速配置"><a href="#Mac-快速配置" class="headerlink" title="Mac 快速配置"></a>Mac 快速配置</h3><pre class="line-numbers language-shell"><code class="language-shell">#node install //brew uninstall nodejs
brew install -g node
#hexo 全局安装
npm install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>github 关联</p>
<ol>
<li>ssh key 生成<pre class="line-numbers language-shell"><code class="language-shell">ssh-keygen -t rsa -C "zhi.designer@hotmail.com"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li>把<code>id_rsa.pub</code> 复制到 <a href="https://github.com/settings/keys" target="_blank" rel="noopener">github.com</a><pre class="line-numbers language-shell"><code class="language-shell">github.com -> Settings -> SSH and GPG keys  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ol>
<h2 id="hexo-配置"><a href="#hexo-配置" class="headerlink" title="hexo 配置"></a>hexo 配置</h2><h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><p><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">hexo-theme-next</a>主题的配置<br> 最强主题基本上所有的配置信息都能满足,优雅,文档齐全</p>
<ul>
<li><p><a href="http://theme-next.iissnan.com/getting-started.html#select-language" target="_blank" rel="noopener">安装 Next主题 基本和教程走一边,就可以得到一个很牛的网站了</a></p>
</li>
<li><p>三种主题样式的选择： <code>hexo/themes/next/_config.xml 搜索 scheme</code></p>
</li>
<li><p>网站logo设置</p>
<blockquote>
<p>通过网站favicon在线制作制作favicon图片，logo最好设置32*32。<br>next主题：将图片放在next主题source/images目录下<br>在next主题配置文件中添加：favicon: images/favicon.ico</p>
</blockquote>
</li>
<li><p>设置首页是否为摘录（不显示所有内容）<code>{your-hexo-dir}/themes/next/_config.yml</code> auto_excerpt true</p>
<h3 id="注册云存储存储图片"><a href="#注册云存储存储图片" class="headerlink" title="注册云存储存储图片"></a>注册云存储存储图片</h3><p>防止图片链接失效,和在博客迁移过程中导致的图片获取异常,丢失. 统一管理文章中的图片</p>
<ul>
<li><a href="http://www.qiniu.com/" target="_blank" rel="noopener">七牛</a></li>
</ul>
</li>
</ul>
<h3 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h3><ul>
<li>设置域名的指向的地址</li>
<li>在源文件中增加github page 的设置文件 <code>source/CNAME</code> 并增加你的域名,不带www的,例如:’taobao.com’</li>
</ul>
<h3 id="Hexo-显示访问次数"><a href="#Hexo-显示访问次数" class="headerlink" title="Hexo 显示访问次数"></a>Hexo 显示访问次数</h3><p><a href="https://www.jianshu.com/p/c311d31265e0" target="_blank" rel="noopener">hexo页脚添加访客人数和总访问量</a></p>
<h3 id="代码高亮-hexo-prism-plugin"><a href="#代码高亮-hexo-prism-plugin" class="headerlink" title="代码高亮 hexo-prism-plugin"></a>代码高亮 <a href="https://github.com/ele828/hexo-prism-plugin" target="_blank" rel="noopener">hexo-prism-plugin</a></h3><p>$hexo_dir/_config.yml</p>
<h2 id="常用的方法"><a href="#常用的方法" class="headerlink" title="常用的方法"></a>常用的方法</h2><h3 id="命令简写"><a href="#命令简写" class="headerlink" title="命令简写"></a>命令简写</h3><pre><code>hexo n == hexo new
hexo g == hexo generate
hexo s == hexo server
hexo d == hexo deploy</code></pre><h3 id="一般的发布步骤"><a href="#一般的发布步骤" class="headerlink" title="一般的发布步骤"></a>一般的发布步骤</h3><pre><code>hexo clean #删除产生的文件和缓存
hexo (g)generate # 生成静太文件
hexo (d)deploy # 发布网页</code></pre><h3 id="日常维护命令"><a href="#日常维护命令" class="headerlink" title="日常维护命令"></a>日常维护命令</h3><pre><code>npm update -g hexo #hexo 更新
cd /{you-blog-dir}/theme/next git pull #更新主题代码
npm update # 更新插件</code></pre><h2 id="高级玩法"><a href="#高级玩法" class="headerlink" title="高级玩法"></a>高级玩法</h2><h3 id="添加网易云音乐"><a href="#添加网易云音乐" class="headerlink" title="添加网易云音乐"></a>添加网易云音乐</h3><p>由于markdown支持HTML, 打开网页版网易云音乐–&gt; 点击<code>生成外链播放器</code> –&gt; 直接粘贴网易云音乐的外链接iframe代码</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=28391133&amp;auto=1&amp;height=66"></iframe>
### 添加high一下

<p>效果整个页面渐进式摇摆,摇摆</p>
<ul>
<li>复制<a href="https://gist.github.com/Orange168/f0915d1b2db02569f4a78686b5db4d98" target="_blank" rel="noopener">header.swig</a>的代码到<br>{your-hexo-dir}/themes/next/layout/_custom/header.swig</li>
<li>本地刷新在菜单栏附近出现<code>High一下</code> 点击查看效果</li>
</ul>
<h2 id="问题解决及记录"><a href="#问题解决及记录" class="headerlink" title="问题解决及记录"></a>问题解决及记录</h2><blockquote>
<p>记录一下日常解决的问题</p>
</blockquote>
<ul>
<li>ERROR Plugin load failed: hexo-server 解决: <code>npm install hexo-server</code></li>
<li>ERROR Deployer not found: Git 解决： <code>npm install hexo-deployer-git –save</code></li>
<li>Cannot GET  解决 <code>npm install</code></li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="http://blog.csdn.net/yuan3065/article/details/51594454" target="_blank" rel="noopener">GitHub Pages 绑定来自阿里云的域名</a></li>
<li><a href="http://www.jianshu.com/p/701b1095da11" target="_blank" rel="noopener">手把手教你建github技术博客</a></li>
<li><a href="https://www.zhihu.com/question/33324071/answer/58775540?group_id=654307162210365440#comment-106092511" target="_blank" rel="noopener">hexo下新建页面下如何放多个文章？</a></li>
<li><a href="https://segmentfault.com/a/1190000002436096" target="_blank" rel="noopener">博客推广——提交搜索引擎</a></li>
<li><a href="http://www.arao.me/2015/hexo-next-theme-optimize-seo/" target="_blank" rel="noopener">动动手指，不限于NexT主题的Hexo优化（SEO篇）</a></li>
</ul>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="官方资源"><a href="#官方资源" class="headerlink" title="官方资源"></a>官方资源</h3><p> <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo 官网 主页</a></p>
<blockquote>
<p>文档 API 插件 主题 可以在官网找</p>
<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
</blockquote>
<h4 id="快速直达"><a href="#快速直达" class="headerlink" title="快速直达"></a>快速直达</h4><p><a href="https://hexo.io/docs/" target="_blank" rel="noopener">文档</a></p>
<p><a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">Troubleshooting</a></p>
<h3 id="命令解析"><a href="#命令解析" class="headerlink" title="命令解析"></a>命令解析</h3><p> Create a new post</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<p>Run server</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<p>Generate static files</p>
<pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<p>Deploy to remote sites<br>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
<pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>coder</category>
      </categories>
      <tags>
        <tag>实践</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 原生UI笔记汇总</title>
    <url>/2019/11/23/2019-11-23-android-%E5%8E%9F%E7%94%9FUI%E7%AC%94%E8%AE%B0%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<h1 id="第1节-原生控件的用法"><a href="#第1节-原生控件的用法" class="headerlink" title="第1节 原生控件的用法"></a>第1节 原生控件的用法</h1><h2 id="1-1-View的基本属性"><a href="#1-1-View的基本属性" class="headerlink" title="1.1 View的基本属性"></a>1.1 View的基本属性</h2><ul>
<li><a href="http://developer.android.com/reference/android/widget/AbsListView.html#attr_android:choiceMode" target="_blank" rel="noopener">android:choiceMode</a><br><a href="https://gist.github.com/Orange168/8f74eab9f7635fe3918d#file-checkablelinearlayout-java" target="_blank" rel="noopener"><strong>CheckableLinearLayout.java</strong></a><br><a href="http://developer.android.com/reference/android/widget/AbsListView.html#attr_android:choiceMode" target="_blank" rel="noopener">android:choiceMode</a>none/singleChoice/multipleChoice<br>multipleChoiceModal<a href="http://developer.android.com/reference/android/widget/AbsListView.html#setMultiChoiceModeListener(android.widget.AbsListView.MultiChoiceModeListener)" target="_blank" rel="noopener">setMultiChoiceModeListener(AbsListView.MultiChoiceModeListener)</a></li>
</ul>
<p><a href="https://blog.csdn.net/u010121512/article/details/97234938" target="_blank" rel="noopener">Android View 属性大全</a></p>
<h2 id="1-2-基本控件"><a href="#1-2-基本控件" class="headerlink" title="1.2 基本控件"></a>1.2 基本控件</h2><h3 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a>TextView</h3><ol>
<li><p>字体颜色设置select<br>drawable/selector.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>selector</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token comment" spellcheck="true">&lt;!--点击变红色--></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>state_pressed</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffff0000<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
 <span class="token comment" spellcheck="true">&lt;!--获得焦点蓝色--></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>state_focused</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>  <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ff0000ff<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
 <span class="token comment" spellcheck="true">&lt;!--默认黑色--></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ff000000<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>selector</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>设置属性<code>android:textColor="@drawable/selector"</code></p>
<ol start="2">
<li><p>文字控制</p>
<ul>
<li><p>首行缩进2个字符（中午有效）</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"\u3000\u3000"</span><span class="token operator">+</span>xxxxx<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>间距控制</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token number">1</span>、android<span class="token operator">:</span>lineSpacingExtra
设置行间距，如”8dp”。
<span class="token number">2</span>、android<span class="token operator">:</span>lineSpacingMultiplier
设置行间距的倍数，如”<span class="token number">1.5</span>″。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
</li>
</ol>
</li>
</ol>
<h3 id="ImageView"><a href="#ImageView" class="headerlink" title="ImageView"></a>ImageView</h3><ul>
<li>ScaleType<pre><code>MATRIX、FIT_XY、FIT_START、FIT_CENTER、FIT_END、CENTER、CENTER_CROP、CENTER_INSIDE</code></pre><img src="http://cdn.linz.tech/image_view_scale_type.png" alt=""></li>
</ul>
<h3 id="LinearLayout"><a href="#LinearLayout" class="headerlink" title="LinearLayout"></a>LinearLayout</h3><p>LinearLayout 子控件间divider</p>
<pre class="line-numbers language-xml"><code class="language-xml">android:divider="?android:dividerVertical"
android:dividerPadding="8dp"
android:showDividers="middle"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="ScrollView"><a href="#ScrollView" class="headerlink" title="ScrollView"></a>ScrollView</h3><ul>
<li><a href="http://developer.android.com/reference/android/widget/ScrollView.html#attr_android:fillViewport" target="_blank" rel="noopener">android:fillViewport</a> 当ScrollView里的元素想填满ScrollView时，使用”fill_parent”是不管用的，必需为ScrollView设置：android:fillViewport=”true”。<a href="http://blog.sina.com.cn/s/blog_6cf2ea6a0102v61f.html" target="_blank" rel="noopener">参考资料</a></li>
</ul>
<h3 id="ListView"><a href="#ListView" class="headerlink" title="ListView"></a>ListView</h3><ul>
<li>scrollbarStyle </li>
</ul>
<pre class="line-numbers language-xml"><code class="language-xml">**insideOverlay：**默认值，表示在padding区域内并且覆盖在view上
**insideInset**：表示在padding区域内并且插入在view后面
**outsideOverlay：**表示在padding区域外并且覆盖在view上，推荐这个
**outsideInset：**表示在padding区域外并且插入在view后面<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a>EditText</h3><ul>
<li><p>android:imeOptions<br>条件一</p>
<pre class="line-numbers language-xml"><code class="language-xml">android:singleLine="true"
或
android:maxLines="1"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>监听处理</p>
<pre class="line-numbers language-java"><code class="language-java">etPw<span class="token punctuation">.</span><span class="token function">setOnEditorActionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TextView<span class="token punctuation">.</span>OnEditorActionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">onEditorAction</span><span class="token punctuation">(</span>TextView v<span class="token punctuation">,</span> <span class="token keyword">int</span> actionId<span class="token punctuation">,</span> KeyEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>actionId <span class="token operator">==</span> EditorInfo<span class="token punctuation">.</span>IME_ACTION_GO<span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
          <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h2 id="1-3-Activity"><a href="#1-3-Activity" class="headerlink" title="1.3 Activity"></a>1.3 Activity</h2><ul>
<li><a href="https://inthecheesefactory.com/blog/fragment-state-saving-best-practices/en" target="_blank" rel="noopener">The Real Best Practices to Save/Restore Activity’s and Fragment’s state. </a></li>
</ul>
<h2 id="1-4-Fragment"><a href="#1-4-Fragment" class="headerlink" title="1.4 Fragment"></a>1.4 Fragment</h2><h4 id="最小案例分析"><a href="#最小案例分析" class="headerlink" title="最小案例分析"></a>最小案例分析</h4><pre class="line-numbers language-java"><code class="language-java">Fragment newFragment <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ExampleFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
FragmentTransaction transaction <span class="token operator">=</span> <span class="token function">getFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
transaction<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>fragment_container<span class="token punctuation">,</span> newFragment<span class="token punctuation">)</span><span class="token punctuation">;</span>
transaction<span class="token punctuation">.</span><span class="token function">addToBackStack</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>
transaction<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>显示：add() replace() show() attach()　　</li>
<li>隐藏：remove() hide() detach()</li>
<li>调用<code>commit()</code>并不立刻执行事务，相反，而是采取预约方式，一旦activity的界面线程（主线程）准备好便可运行起来。然而，如果有必要的话，你可以从界面线程调用<code>executePendingTransations()</code>立即执行由commit()提交的事务。</li>
<li>只能在activity保存状态（当用户离开activity时）之前用commit()提交事务。如果你尝试在那时之后提交，会抛出一个异常。这是因为如果activity需要被恢复，提交后的状态会被丢失。对于这类丢失提交的情况，可使用<code>commitAllowingStateLoss()</code></li>
<li><code>addToBackStack()</code>   调用commit()之前的所有应用的变更被作为一个单独的事务添加到后台栈中，并且BACK键可以将它们一起回退。</li>
<li>使用<code>popBackStack()</code>（模仿用户的BACK命令）从后台栈弹出fragment</li>
<li>使用<code>addOnBackStackChangedListener()</code>注册一个监听后台栈变化的监听器。</li>
<li>setCustomAnimations(R.anim.slide_right_in,R.anim.slide_left_out) 设置动画</li>
<li>transaction addSharedElement 设置共享share view</li>
</ul>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://www.jianshu.com/p/d9143a92ad94" target="_blank" rel="noopener">Fragment全解析系列（一）：那些年踩过的坑</a></li>
</ul>
<h3 id="1-4-1-FragmentPagerAdapter更新问题"><a href="#1-4-1-FragmentPagerAdapter更新问题" class="headerlink" title="1.4.1 FragmentPagerAdapter更新问题"></a>1.4.1 FragmentPagerAdapter更新问题</h3><blockquote>
<p>问题描述： Activity 嵌入FragmentPagerAdapter管理Fragment，当数据更新时，想同时更新的fragment，发现fragment没有更新</p>
</blockquote>
<p><a href="https://blog.csdn.net/u012762986/article/details/79778727" target="_blank" rel="noopener">CSDN 文章FragmentPagerAdapter刷新</a></p>
<pre class="line-numbers language-java"><code class="language-java">FragmentPagerAdapter mAdapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FragmentPagerAdapter</span><span class="token punctuation">(</span><span class="token function">getFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> Fragment <span class="token function">getItem</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mCategoryfragments<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

          <span class="token comment" spellcheck="true">/**
          *判断当前position里Fragment是否存在，如果存在，则不会创建亦不会更新
          **/</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">long</span> <span class="token function">getItemId</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mCategoryfragments<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
            <span class="token comment" spellcheck="true">/**
            *通知刷新位置变化
            **/</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getItemPosition</span><span class="token punctuation">(</span>Object object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> POSITION_NONE<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> mCategoryfragments <span class="token operator">==</span> null <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> mCategoryfragments<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> CharSequence <span class="token function">getPageTitle</span><span class="token punctuation">(</span><span class="token keyword">int</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> titles<span class="token punctuation">[</span>position<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroyItem</span><span class="token punctuation">(</span>ViewGroup container<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">,</span> Object object<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//如果注释这行，那么不管怎么切换，page都不会被销毁</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">destroyItem</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> position<span class="token punctuation">,</span> object<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="第2节-基础的布局知识"><a href="#第2节-基础的布局知识" class="headerlink" title="第2节 基础的布局知识"></a>第2节 基础的布局知识</h1><h2 id="2-1-颜色"><a href="#2-1-颜色" class="headerlink" title="2.1 颜色"></a>2.1 颜色</h2><h3 id="颜色透明度参照表"><a href="#颜色透明度参照表" class="headerlink" title="颜色透明度参照表"></a>颜色透明度参照表</h3><table>
<thead>
<tr>
<th>不透明度</th>
<th>16进制表示</th>
</tr>
</thead>
<tbody><tr>
<td>00%</td>
<td>FF（不透明）</td>
</tr>
<tr>
<td>5%</td>
<td>F2</td>
</tr>
<tr>
<td>10%</td>
<td>E5</td>
</tr>
<tr>
<td>15%</td>
<td>D8</td>
</tr>
<tr>
<td>20%</td>
<td>CC</td>
</tr>
<tr>
<td>25%</td>
<td>BF</td>
</tr>
<tr>
<td>30%</td>
<td>B2</td>
</tr>
<tr>
<td>35%</td>
<td>A5</td>
</tr>
<tr>
<td>40%</td>
<td>99</td>
</tr>
<tr>
<td>45%</td>
<td>8c</td>
</tr>
<tr>
<td>50%</td>
<td>7F</td>
</tr>
<tr>
<td>55%</td>
<td>72</td>
</tr>
<tr>
<td>60%</td>
<td>66</td>
</tr>
<tr>
<td>65%</td>
<td>59</td>
</tr>
<tr>
<td>70%</td>
<td>4c</td>
</tr>
<tr>
<td>75%</td>
<td>3F</td>
</tr>
<tr>
<td>80%</td>
<td>33</td>
</tr>
<tr>
<td>85%</td>
<td>21</td>
</tr>
<tr>
<td>90%</td>
<td>19</td>
</tr>
<tr>
<td>95%</td>
<td>0c</td>
</tr>
<tr>
<td>100%</td>
<td>00（全透明）</td>
</tr>
</tbody></table>
<p>算法 </p>
<pre><code>30%不透明度也就是255*30%=76.5，四舍五入77，然后利用计算器转为16进制为4D</code></pre><p>代码</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">float</span> temp <span class="token operator">=</span> <span class="token number">255</span> <span class="token operator">*</span> i <span class="token operator">*</span> <span class="token number">1.0f</span> <span class="token operator">/</span> <span class="token number">100f</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> alpha <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            String hexStr <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>alpha<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>hexStr<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span>
                hexStr <span class="token operator">=</span> <span class="token string">"0"</span> <span class="token operator">+</span> hexStr<span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">"%, "</span> <span class="token operator">+</span> hexStr<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="第3节-drawbable-bitmap-shape-等常用的绘图类"><a href="#第3节-drawbable-bitmap-shape-等常用的绘图类" class="headerlink" title="第3节 drawbable bitmap shape 等常用的绘图类"></a>第3节 drawbable bitmap shape 等常用的绘图类</h1><h2 id="3-1-drawable"><a href="#3-1-drawable" class="headerlink" title="3.1 drawable"></a>3.1 drawable</h2><p>常用的子类分类</p>
<pre class="line-numbers language-java"><code class="language-java">Bitmap<span class="token operator">:</span>最简单的Drawable，一个PNG或JPEG图像。
Nine Patch<span class="token operator">:</span>是对PNG格式的扩展允许它指定如何对其进行拉伸和放置的信息
Vector<span class="token operator">:</span>向量：在XML文件中定义的可绘制的一组点，线和曲线以及相关的颜色信息。 这种类型的绘图可以缩放而不会损失显示质量。
Shape<span class="token operator">:</span>形状：包含简单的绘图命令而不是原始位图，允许在某些情况下调整更好。
Layers<span class="token operator">:</span>图层：一个可绘制的复合物，它在彼此顶部绘制多个底层可绘图。
States<span class="token operator">:</span>状态，一个复合drawable，根据其状态选择一组drawable中的一个。
Levels：级别：一个复合drawable，根据其级别从一组drawable中选择一个。
Scale<span class="token operator">:</span>比例尺：一个可绘制的单个子组合可绘制的组合，其整体大小根据当前级别进行修改。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="第4节-动画相关"><a href="#第4节-动画相关" class="headerlink" title="第4节 动画相关"></a>第4节 动画相关</h1><h2 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h2><ul>
<li><a href="https://pspdfkit.com/blog/2016/android-animations-powered-by-rx-java/" target="_blank" rel="noopener">Android animations powered by RxJava</a></li>
<li><a href="http://easings.net/zh-cn" target="_blank" rel="noopener">动画曲线库</a></li>
<li><a href="http://inloop.github.io/interpolator/" target="_blank" rel="noopener">自然动画的模拟演示</a></li>
<li>facebook 令人惊艳的按键效果 <strong><a href="https://github.com/facebook/rebound" target="_blank" rel="noopener">rebound</a></strong></li>
<li><a href="https://github.com/airbnb/lottie-android" target="_blank" rel="noopener">Lottie-android</a> Render After Effects animations natively on Android and iOS 全平台支持， 动态动画更新；<ul>
<li><a href="http://www.jianshu.com/p/81be1bf9600c" target="_blank" rel="noopener">从json文件到炫酷动画-Lottie实现思路和源码分析</a></li>
<li><a href="http://www.lottiefiles.com/" target="_blank" rel="noopener">LottieFiles</a> 对应的动画json文件下载</li>
<li><a href="https://www.jianshu.com/p/b3e25ccd6252" target="_blank" rel="noopener">Lottie 入门与实践</a></li>
<li><a href="https://editor.lottiefiles.com/" target="_blank" rel="noopener">lottie 文件编辑</a></li>
</ul>
</li>
</ul>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h3 id="渐变实现"><a href="#渐变实现" class="headerlink" title="渐变实现"></a>渐变实现</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shape</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>gradient</span>
        <span class="token attr-name"><span class="token namespace">android:</span>angle</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>135<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>endColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#34e89e<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>startColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#0f3443<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shape</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>animation-list</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
        <span class="token attr-name"><span class="token namespace">android:</span>drawable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/gradient_blue<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>duration</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5000<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>animation-list</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java">LinearLayout linearLayout <span class="token operator">=</span> <span class="token punctuation">(</span>LinearLayout<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>linear_layout<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 布局background设置是上面的xml</span>

AnimationDrawable animationDrawable <span class="token operator">=</span> <span class="token punctuation">(</span>AnimationDrawable<span class="token punctuation">)</span> linearLayout<span class="token punctuation">.</span><span class="token function">getBackground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

animationDrawable<span class="token punctuation">.</span><span class="token function">setEnterFadeDuration</span><span class="token punctuation">(</span><span class="token number">2500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
animationDrawable<span class="token punctuation">.</span><span class="token function">setExitFadeDuration</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

animationDrawable<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h1><h2 id="阅读过的博文"><a href="#阅读过的博文" class="headerlink" title="阅读过的博文"></a><strong>阅读过的博文</strong></h2><ul>
<li><a href="http://blog.csdn.net/lvxiangan/article/details/19971509" target="_blank" rel="noopener">android坐标</a></li>
<li><a href="http://bbs.csdn.net/topics/390358020" target="_blank" rel="noopener">贝塞尔曲线</a></li>
<li><a href="http://blog.csdn.net/tianjian4592/article/details/45652257" target="_blank" rel="noopener">Path相关方法讲解(一)</a></li>
<li><a href="http://droidyue.com/blog/2014/07/12/check-main-thread-in-android-chinese-edition/" target="_blank" rel="noopener">Android中检测当前是否为主线程</a>。 最可靠的解决方案：<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isInMainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Looper<span class="token punctuation">.</span><span class="token function">myLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> Looper<span class="token punctuation">.</span><span class="token function">getMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<p>```</p>
<ul>
<li><a href="http://www.race604.com/tint-drawable/" target="_blank" rel="noopener">Drawable 着色的后向兼容方案</a></li>
<li><a href="http://www.07net01.com/2016/01/1118674.html" target="_blank" rel="noopener">VectorDrawable 和 AnimatedVectorDrawable 的兼容性问题</a> 印象有备份</li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzI1NjEwMTM4OA==&amp;mid=2651232105&amp;idx=1&amp;sn=fcc4fa956f329f839f2a04793e7dd3b9&amp;scene=0#rd" target="_blank" rel="noopener">Android动态布局入门及NinePatchChunk解密</a> 有备份</li>
</ul>
<h2 id="重点博文"><a href="#重点博文" class="headerlink" title="重点博文"></a><strong>重点博文</strong></h2><ul>
<li><a href="http://blog.csdn.net/column/details/androidcustomview.html" target="_blank" rel="noopener">Android自定义控件其实很简单</a></li>
<li><a href="http://www.jianshu.com/p/0acc12c29c1b#" target="_blank" rel="noopener">Android开发：Translucent System Bar 的最佳实践</a></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 常用命令小结</title>
    <url>/2019/11/14/2019-11-14-Android-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<h2 id="第1节-keytool"><a href="#第1节-keytool" class="headerlink" title="第1节 keytool"></a>第1节 keytool</h2><h3 id="1-1-查看签名文件指纹"><a href="#1-1-查看签名文件指纹" class="headerlink" title="1.1 查看签名文件指纹"></a>1.1 查看签名文件指纹</h3><pre class="line-numbers language-shell"><code class="language-shell">keytool --list -v -keystore key_release.jks<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Debug Bridge (ADB) 使用总结</title>
    <url>/2019/11/12/2019-11-12-Android_Debug_Bridge/</url>
    <content><![CDATA[<h2 id="第1节-最常用案例"><a href="#第1节-最常用案例" class="headerlink" title="第1节 最常用案例"></a>第1节 最常用案例</h2><blockquote>
<p>注意： 应用包名默认为 <code>com.example.app</code></p>
</blockquote>
<h3 id="1-1-启动应用主界面"><a href="#1-1-启动应用主界面" class="headerlink" title="1.1 启动应用主界面"></a>1.1 启动应用主界面</h3><pre class="line-numbers language-shell"><code class="language-shell">adb shell am start -n "com.example.app/com.example.app.ui.basic.activity.LoginActivity" -a android.intent.action.MAIN -c android.intent.category.LAUNCHER<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>注解：</p>
<ul>
<li><code>com.example.app.ui.basic.activity.LoginActivity</code> 为配有 <code>action.MAIN</code> 和 <code>category.LAUNCHER</code>的Activity 即应用启动页面；</li>
</ul>
<h3 id="1-2-获取当前显示Activity"><a href="#1-2-获取当前显示Activity" class="headerlink" title="1.2 获取当前显示Activity"></a>1.2 获取当前显示Activity</h3><pre class="line-numbers language-shell"><code class="language-shell">adb shell dumpsys activity activities | grep 'ActivityRecord' | grep 'com.example.app'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>结果：</p>
<pre class="line-numbers language-java"><code class="language-java">      Activities<span class="token operator">=</span><span class="token punctuation">[</span>ActivityRecord<span class="token punctuation">{</span>4df0741 u0 com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token operator">/</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span>client<span class="token punctuation">.</span>MainActivity t17<span class="token punctuation">}</span><span class="token punctuation">,</span> ActivityRecord<span class="token punctuation">{</span>45c40f u0 com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token operator">/</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span>client<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>InformationUnreadActivity t17<span class="token punctuation">}</span><span class="token punctuation">]</span>
      <span class="token operator">*</span> Hist #<span class="token number">1</span><span class="token operator">:</span> ActivityRecord<span class="token punctuation">{</span>45c40f u0 com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token operator">/</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span>client<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>InformationUnreadActivity t17<span class="token punctuation">}</span>
      <span class="token operator">*</span> Hist #<span class="token number">0</span><span class="token operator">:</span> ActivityRecord<span class="token punctuation">{</span>4df0741 u0 com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token operator">/</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span>client<span class="token punctuation">.</span>MainActivity t17<span class="token punctuation">}</span>
        Run #<span class="token number">1</span><span class="token operator">:</span> ActivityRecord<span class="token punctuation">{</span>45c40f u0 com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token operator">/</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span>client<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>InformationUnreadActivity t17<span class="token punctuation">}</span>
        Run #<span class="token number">0</span><span class="token operator">:</span> ActivityRecord<span class="token punctuation">{</span>4df0741 u0 com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token operator">/</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span>client<span class="token punctuation">.</span>MainActivity t17<span class="token punctuation">}</span>
    mResumedActivity<span class="token operator">:</span> ActivityRecord<span class="token punctuation">{</span>45c40f u0 com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token operator">/</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span>client<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>InformationUnreadActivity t17<span class="token punctuation">}</span>
    mLastPausedActivity<span class="token operator">:</span> ActivityRecord<span class="token punctuation">{</span>4df0741 u0 com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token operator">/</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span>client<span class="token punctuation">.</span>MainActivity t17<span class="token punctuation">}</span>
  ResumedActivity<span class="token operator">:</span> ActivityRecord<span class="token punctuation">{</span>45c40f u0 com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token operator">/</span><span class="token punctuation">.</span>ui<span class="token punctuation">.</span>client<span class="token punctuation">.</span>activity<span class="token punctuation">.</span>InformationUnreadActivity t17<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>分析关键字：</p>
<ul>
<li><code>mResumedActivity</code>: 当前显示activity为<code>InformationUnreadActivity</code></li>
<li><code>mLastPausedActivity</code> 最近停止显示的Activity为 <code>mLastPausedActivity</code></li>
</ul>
<h3 id="1-3-获取屏幕分辨率"><a href="#1-3-获取屏幕分辨率" class="headerlink" title="1.3 获取屏幕分辨率"></a>1.3 获取屏幕分辨率</h3><pre class="line-numbers language-shell"><code class="language-shell">adb shell dumpsys window displays<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>输出(省略)：</p>
<pre class="line-numbers language-txt"><code class="language-txt">WINDOW MANAGER DISPLAY CONTENTS (dumpsys window displays)
  Display: mDisplayId=0
    init=1080x1920 420dpi cur=1080x1920 app=1080x1794 rng=1080x1017-1794x1731
    deferred=false mLayoutNeeded=false mTouchExcludeRegion=SkRegion((0,0,1080,1920))
  mLayoutSeq=500
  ....<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注解：</p>
<ul>
<li><code>cur=1080x1920</code> 机器为1080 X 1920 分辨率的机器</li>
</ul>
<h3 id="1-4-获取App-冷热启动时间"><a href="#1-4-获取App-冷热启动时间" class="headerlink" title="1.4 获取App 冷热启动时间"></a>1.4 获取App 冷热启动时间</h3><blockquote>
<p>注解： 冷启动指App 从0到完全加载的过程，热启动指：app从后台进入前台，重新显示的过程</p>
</blockquote>
<p>假设：<code>com.example.app</code> 为测试应用包名，注意启动的Activity必须在清单文件<code>AndroidManifest.xml</code>中设置 Activity 属性<code>exported=true</code></p>
<p><strong>冷启动</strong></p>
<ol>
<li><p>模拟冷启动，强行停止应用<code>com.example.app</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">adb shell am force-stop com.example.app<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>获取启动时间</p>
<pre class="line-numbers language-shell"><code class="language-shell">adb shell am start -W com.example.app/.ui.client.MainActivity<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>输出结果</p>
<pre class="line-numbers language-shell"><code class="language-shell">Status: ok
Activity: com.example.app/.ui.client.MainActivity
ThisTime: 7198  该activity启动耗时
TotalTime: 7198 应用自身启动耗时=ThisTime+应用application等资源启动时间
WaitTime: 7346 系统启动应用耗时=TotalTime+系统资源启动时间
Complete<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<p><strong>热启动</strong></p>
<ol>
<li><p>模拟按Home键</p>
<pre class="line-numbers language-shell"><code class="language-shell">adb shell input keyevent 3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>同上</p>
</li>
</ol>
<h3 id="1-5-清除App缓存"><a href="#1-5-清除App缓存" class="headerlink" title="1.5 清除App缓存"></a>1.5 清除App缓存</h3><ol>
<li><p>模糊查找包名</p>
<pre class="line-numbers language-shell"><code class="language-shell">adb shell pm list packages | grep com.example<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>清除所有与该包名相关的数据，<code>deletes all data associated with a package.</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">adb shell pm clear com.example.app<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="1-6-动态查看跳转，快速找到当前页面-【巨有用】"><a href="#1-6-动态查看跳转，快速找到当前页面-【巨有用】" class="headerlink" title="1.6 动态查看跳转，快速找到当前页面 【巨有用】"></a>1.6 动态查看跳转，快速找到当前页面 【巨有用】</h3><p><img src="http://cdn.linz.tech/android_adb_logcat.GIF" alt=""></p>
</li>
</ol>
<pre class="line-numbers language-shell"><code class="language-shell">adb logcat -v time | grep ActivityManager<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="1-7-模拟器无法关闭（用命令行关闭）"><a href="#1-7-模拟器无法关闭（用命令行关闭）" class="headerlink" title="1.7 模拟器无法关闭（用命令行关闭）"></a>1.7 模拟器无法关闭（用命令行关闭）</h3><p>原理</p>
<pre class="line-numbers language-shell"><code class="language-shell">#adb 模拟器内置命令关闭模拟器
adb -s emulator-5554 emu kill
#杀掉模拟器线程
kill -9 PID<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>具体操作</p>
<ol>
<li><p>emu kill</p>
<pre class="line-numbers language-shell"><code class="language-shell">adb devices | grep emulator | cut -f1 | while read line; do adb -s $line emu kill; done<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>Kill -9 PID </p>
<pre class="line-numbers language-shell"><code class="language-shell">ps -ax | grep emulator 
#-----output ----
 6617 ??         9:05.54 /Users/nav/Library/Android/sdk/emulator/qemu/darwin-x86_64/qemu-system-x86_64 -netdelay none -netspeed full -avd Nexus_One_API_29
 6619 ??         0:06.10 /Users/nav/Library/Android/sdk/emulator/emulator64-crash-service -pipe com.google.AndroidEmulator.CrashService.6617 -ppid 6617 -data-dir /tmp/android-nav/
 6658 ??         0:07.93 
 #-----then -----
 kill -9 6617<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h2 id="第2节-应用安装"><a href="#第2节-应用安装" class="headerlink" title="第2节 应用安装"></a>第2节 应用安装</h2><h3 id="2-1-基本的安装与卸载"><a href="#2-1-基本的安装与卸载" class="headerlink" title="2.1 基本的安装与卸载"></a>2.1 基本的安装与卸载</h3><pre class="line-numbers language-shell"><code class="language-shell">adb install [options]  sample.apk
[-r] replace existing application
[-s] install application on sdcard
adb uninstall [options]  sample.apk
[-k] means keep the data and cache directories<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="2-2-强行停止"><a href="#2-2-强行停止" class="headerlink" title="2.2 强行停止"></a>2.2 强行停止</h3><pre class="line-numbers language-shell"><code class="language-shell">adb shell am force-stop  [options]  <app package name ><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="第3节-查看内存使用情况"><a href="#第3节-查看内存使用情况" class="headerlink" title="第3节 查看内存使用情况"></a>第3节 查看内存使用情况</h2><blockquote>
<p>adb shell dumpsys meminfo [pid or 空]</p>
</blockquote>
<ul>
<li><p><code>adb shell dumpsys meminfo</code> 显示手机每个应用内存使用情况 </p>
<pre class="line-numbers language-shelll"><code class="language-shelll">Applications Memory Usage (in Kilobytes):                                            
Uptime: 69236415 Realtime: 69236415                                                  

Total PSS by process:                                                                
    121,950K: com.example.app:pushcore (pid 29262)                                 
     88,714K: system (pid 1882)                                                      
     68,646K: com.exinetian.app (pid 28829 / activities)                             
     63,149K: com.google.android.googlequicksearchbox:search (pid 2527)              
     48,624K: com.google.android.gms.persistent (pid 2533)                           
     45,421K: com.google.android.gms (pid 2691)                                      
     45,059K: com.google.android.apps.nexuslauncher (pid 2545 / activities)          
     44,975K: com.android.systemui (pid 2000)                                        
     29,179K: com.android.vending (pid 26823)                                        
     25,800K: com.google.android.inputmethod.latin (pid 1991)                        
     16,701K: com.android.phone (pid 2126)                                           
     12,922K: audioserver (pid 1634)                                                 
     10,259K: com.google.android.googlequicksearchbox:interactor (pid 2416)          <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>adb shell dumpsys meminfo &lt;pid&gt;</code></p>
</li>
</ul>
<pre class="line-numbers language-shell"><code class="language-shell"> #得到pid
 adb shell ps  -ef | grep com.example.app
 # 查看进程28829 内存使用情况
 adb shell dumpsys meminfo 28829<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>输出：</p>
<pre class="line-numbers language-shell"><code class="language-shell">** MEMINFO in pid 28829 [com.exinetian.app] **
                   Pss  Private  Private  SwapPss     Heap     Heap     Heap
                 Total    Dirty    Clean    Dirty     Size    Alloc     Free
                ------   ------   ------   ------   ------   ------   ------
  Native Heap    17072    17004        0        0    27264    23545     3718
  Dalvik Heap     5870     5800        0        0     7523     3762     3761
 Dalvik Other     2653     2652        0        0
        Stack      140      140        0        0
       Ashmem        5        0        0        0
    Other dev       24        0       24        0
     .so mmap     5388      160     2148        0
    .apk mmap     3434     1856      356        0
    .ttf mmap      256        0      216        0
    .dex mmap    18456    13340     1244        0
    .oat mmap      228        0       80        0
    .art mmap     7737     7052      240        0
   Other mmap     5642        4     4360        0
      Unknown     1433     1416        0        0
        TOTAL    68338    49424     8668        0    34787    27307     7479<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>解析：</p>
<ul>
<li><a href="https://blog.csdn.net/c_z_w/article/details/85336283" target="_blank" rel="noopener">adb shell dumpsys meminfo 内存测试指标解析</a></li>
</ul>
<h2 id="第4节-启动原生组件（Component）"><a href="#第4节-启动原生组件（Component）" class="headerlink" title="第4节 启动原生组件（Component）"></a>第4节 启动原生组件（Component）</h2><blockquote>
<p>参见 <a href="http://developer.android.com/tools/help/adb.html#am" target="_blank" rel="noopener">http://developer.android.com/tools/help/adb.html#am</a></p>
</blockquote>
<h3 id="4-1-Activity"><a href="#4-1-Activity" class="headerlink" title="4.1 Activity"></a>4.1 Activity</h3><pre class="line-numbers language-shell"><code class="language-shell">adb shell am start [options]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-shell"><code class="language-shell">举例：adb shell am start -a android.intent.action.MAIN
举例：adb shell am start -n com.example.app.android.emop/.activity.login.LoginActivity<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="4-2-service"><a href="#4-2-service" class="headerlink" title="4.2 service"></a>4.2 service</h3><pre class="line-numbers language-shell"><code class="language-shell">adb shell am startservice [options]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>举例：</p>
<pre class="line-numbers language-shell"><code class="language-shell">举例：adb shell am startservice -a com.lt.test.action.ONESERVICE
举例：adb shell am startservice -n com.example.app.android.emop/.MyService<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>实战笔记</p>
<pre class="line-numbers language-java"><code class="language-java">adb shell am startservice <span class="token operator">-</span>a com<span class="token punctuation">.</span>exmaple<span class="token punctuation">.</span>test <span class="token operator">-</span>n com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token operator">/</span><span class="token punctuation">.</span>service<span class="token punctuation">.</span>MyService<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="4-2-broadcast"><a href="#4-2-broadcast" class="headerlink" title="4.2 broadcast"></a>4.2 broadcast</h3><pre class="line-numbers language-shell"><code class="language-shell">adb shell am broadcast [options]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>举例：</p>
<pre class="line-numbers language-shell"><code class="language-shell">举例：adb shell am broadcast -a EMOP_OFF_LINE_ASSIGN_TASK  //when the permission 
         <receiver android:permission="com.example.permission.EMOP_SERVICE_RECEIVER" >
                  <intent-filter>
                        <action android:name="EMOP_OFF_LINE_ASSIGN_TASK"/>
                 </intent-filter >
        </receiver>
举例：adb shell am broadcast -a "action_finish"（发送一个广播去关闭一个activity）
举例：adb shell am broadcast -a android.intent.action.MASTER_CLEAR（恢复出厂设置的方法，会清除内存所有内容）
举例：adb shell am broadcast -n com.lt.test/.MyBroadcast<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="4-3-传入Intent参数"><a href="#4-3-传入Intent参数" class="headerlink" title="4.3 传入Intent参数"></a>4.3 传入Intent参数</h3><pre class="line-numbers language-shell"><code class="language-shell"> <INTENT> specifications include these flags:
        [-a <ACTION>] 
        [-d <DATA_URI>] 
        [-t <MIME_TYPE>]
        [-c <CATEGORY> [-c <CATEGORY>] ...]
        [-e|--es <EXTRA_KEY> <EXTRA_STRING_VALUE> ...]
        [--ez <EXTRA_KEY> <EXTRA_BOOLEAN_VALUE> ...]
        [-e|--ei <EXTRA_KEY> <EXTRA_INT_VALUE> ...]
        [-n <COMPONENT>] 
        [-f <FLAGS>] 
        [<URI>]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>案例1：</p>
<pre class="line-numbers language-shell"><code class="language-shell">am start -a android.intent.action.VIEW -d http://www.baidu.com
am start -a android.intent.action.CALL -d tel:12345  
am start -a android.intent.action.VIEW -d file:///sdcard/video.3gp -t video/*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>案例2：</p>
<p>目的传入</p>
<pre class="line-numbers language-shell"><code class="language-shell">pid 整数，值为10
str 字符串，值为"hello, world"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-shell"><code class="language-shell">am start -a android.intent.action.MAIN -n \
net.yurushao.demo/net.yurushao.demo.ExampleActivity  --ei pid 10 --es str "hello, world"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="4-4-应用场景"><a href="#4-4-应用场景" class="headerlink" title="4.4 应用场景"></a>4.4 应用场景</h3><ol>
<li>嵌入一个DebugActivity用于存放一下Debug代码，adb 直接启动，开发测试过程中不用每次都启动app找到自己埋下的测试点；</li>
<li>动态测试组件，用adb动态传参，测试不同参数下组件的处理逻辑；</li>
<li>App中埋入隐藏的控制点，可以在不改变代码的情况下，控制App内部逻辑走向</li>
</ol>
<h2 id="第5节-Logcat的使用"><a href="#第5节-Logcat的使用" class="headerlink" title="第5节 Logcat的使用"></a>第5节 Logcat的使用</h2><pre class="line-numbers language-shell"><code class="language-shell">// 查看Activity跳转 【重点】
adb logcat -v time | grep ActivityManager

// 查看崩溃信息
adb logcat -v time | grep AndroidRuntime

// 查看Dalvik信息，比如GC
adb logcat -v time | grep "D/Dalvik"

// 查看art信息，比如GC
adb logcat -v time | grep "I/art"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-shell"><code class="language-shell">adb logcat -s System.out  ## 只查看System.out 的输出
-v
 adb logcat -v time *** ## 能查看logcat缓存的日志，定位之前发生的异常信息
 adb logcat -v brief 
adb logcat -v process  ##优先级 (进程ID) : 日志信息
adb logcat -v tag ##优先级 / 标签 : 日志信息
adb logcat -v thread  ##优先级 ( 进程ID : 线程ID) 标签 : 日志内容
adb logcat -v raw ##只输出日志信息
adb logcat -v time   ##日期 时间 优先级 / 标签 (进程ID) : 进程名称 : 日志信息
adb logcat -v long  ##[日期 时间 进程ID : 线程ID 优先级 / 标签] 日志信息 **

adb logcat -b main/events/system
adb logcat -g 
adb logcat *:E | grep "example"   ## 搜索指定的错误信息<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="第6节-Android中常用的Linux命令"><a href="#第6节-Android中常用的Linux命令" class="headerlink" title="第6节 Android中常用的Linux命令"></a>第6节 Android中常用的Linux命令</h2><pre class="line-numbers language-shell"><code class="language-shell">adb shell ps -t 
USER     PID   PPID  VSIZE  RSS     WCHAN    PC         NAME
root      1     0     268    180   c009b74c 0000875c S /init
cat /proc/34/status #进程状态
adb -s 20080411  shell cat /system/build.prop  //设备信息
adb shell top  // 查看设备cpu和内存占用情况
adb shell top -m 6 // 查看占用内存前6的app
adb shell top -n 1 // 刷新一次内存信息，然后返回
adb shell procrank // 查询各进程内存使用情况
adb shell kill [pid] // 杀死一个进程
adb shell ps // 查看进程列表 
adb shell ps -x [PID] // 查看指定进程状态
adb shell service list // 查看后台services信息
adb shell cat /proc/meminfo // 查看当前内存占用
adb shell cat /proc/iomem // 查看IO内存分区
adb shell  cat /sys/class/net/wlan0/address  // 获取mac地址
adb shell cat /proc/cpuinfo  // 获取cpu序列号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><strong>Screencap</strong> </p>
<pre class="line-numbers language-shell"><code class="language-shell">adb shell screencap -p /sdcard/screen.png
adb pull /sdcard/screen.png
adb shell rm /sdcard/screen.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><strong>input</strong> </p>
<pre class="line-numbers language-shell"><code class="language-shell">input keyevent 82 # 菜单事件（MENU） 
input keyevent 4 # 回退事件 （BACK） 
input text “i_love_beijing” # 输入文字<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><strong>ime</strong>  输入法管理</p>
<pre class="line-numbers language-shell"><code class="language-shell">usage: ime list [-a] [-s] 
ime enable ID 
ime disable ID 
ime set ID
ime list  
ime set  com.baidu.input_huawei/.ImeService<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Android具有prop属性系统，使用getprop和setprop </p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="http://developer.android.com/tools/help/adb.html" target="_blank" rel="noopener">http://developer.android.com/tools/help/adb.html</a></li>
<li><a href="https://github.com/mzlogin/awesome-adb" target="_blank" rel="noopener"><strong>awesome-adb</strong></a></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 菜鸟私房菜知识架构</title>
    <url>/2019/09/16/2019-3-23-linux-note/</url>
    <content><![CDATA[<h1 id="第五章、Linux-的文件权限与目录配置"><a href="#第五章、Linux-的文件权限与目录配置" class="headerlink" title="第五章、Linux  的文件权限与目录配置"></a>第五章、Linux  的文件权限与目录配置</h1><h2 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h2><pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# groupadd project        <==增加新的群组 
[root@study ~]# useradd -G project alex <==建立 alex 账号，且支持 project 
[root@study ~]# useradd -G project arod <==建立 arod 账号，且支持 project 
[root@study ~]# id alex                 <==查阅 alex 账号的属性 
uid=1001(alex) gid=1002(alex) groups=1002(alex),1001(project) <==确实有支持！ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="man-page"><a href="#man-page" class="headerlink" title="man page"></a>man page</h2><table>
<thead>
<tr>
<th align="center">按键</th>
<th align="center">header 2</th>
</tr>
</thead>
<tbody><tr>
<td align="center">空格</td>
<td align="center">下翻一页</td>
</tr>
<tr>
<td align="center">home</td>
<td align="center">去到第一页</td>
</tr>
<tr>
<td align="center">End</td>
<td align="center">去到最后一页</td>
</tr>
<tr>
<td align="center">/？string</td>
<td align="center">向下/上搜索</td>
</tr>
</tbody></table>
<h2 id="文件权限与配置"><a href="#文件权限与配置" class="headerlink" title="文件权限与配置"></a>文件权限与配置</h2><pre class="line-numbers language-shell"><code class="language-shell">chgrp ：改变文件所属群组 
chown ：改变文件拥有者 
chmod ：改变文件的权限, SUID, SGID, SBIT 等等的特性 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-shell"><code class="language-shell"> #将file_new的拥有者与群组改回为 chown user:group file
 chown root:root file_new <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>chmod </p>
<pre class="line-numbers language-shell"><code class="language-shell">        u 
        g      +(加入)  r:4
chmod   o      -(除去)  w:2    file
        a      =(设定)  x:1

 chmod  u=rwx,go=rx  .bashrc 
 #拿掉全部人的可执行权限
  chmod  a-x  .bashrc <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="文件与目录管理"><a href="#文件与目录管理" class="headerlink" title="文件与目录管理"></a>文件与目录管理</h2><h3 id="cp-mv"><a href="#cp-mv" class="headerlink" title="cp,mv"></a>cp,mv</h3><ul>
<li>cp (复制文件或目录) </li>
</ul>
<pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# cp [options] source1 source2 source3 .... directory 
选项与参数： 
-a  ：相当于 -dr --preserve=all 的意思，至于 dr 请参考下列说明；(常用) 
-d  ：若来源文件为链接文件的属性(link file)，则复制链接文件属性而非文件本身； 
-f  ：为强制(force)的意思，若目标文件已经存在且无法开启，则移除后再尝试一次； 
-i  ：若目标文件(destination)已经存在时，在覆盖时会先询问动作的进行(常用) 
-l  ：进行硬式连结(hard link)的连结档建立，而非复制文件本身； 
-p  ：连同文件的属性(权限、用户、时间)一起复制过去，而非使用默认属性(备份常用)； 
-r  ：递归持续复制，用于目录的复制行为；(常用) 
-s  ：复制成为符号链接文件 (symbolic link)，亦即『快捷方式』文件； 
-u  ：destination 比 source 旧才更新 destination，或 destination 不存在的情况下才复制。 
--preserve=all ：除了 -p 的权限相关参数外，还加入 SELinux 的属性, links, xattr 等也复制了。 
最后需要注意的，如果来源档有两个以上，则最后一个目的文件一定要是『目录』才行！ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><p>mv </p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# mv [-fiu] source destination 
选项与参数： 
-f  ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖； 
-i  ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！ 
-u  ：若目标文件已经存在，且 source 比较新，才会更新 (update) <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="文件名与目录名称"><a href="#文件名与目录名称" class="headerlink" title="文件名与目录名称"></a>文件名与目录名称</h3><pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# basename /etc/sysconfig/network 
network         <== 很简单！就取得最后的档名～ 
[root@study ~]# dirname /etc/sysconfig/network 
/etc/sysconfig  <== 取得的变成目录名了！ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="文件内容查阅"><a href="#文件内容查阅" class="headerlink" title="文件内容查阅"></a>文件内容查阅</h3><ul>
<li><p>cat [-AbEnTv]  / tac（反向显示）</p>
<pre class="line-numbers language-shell"><code class="language-shell">选项与参数： 
-A  ：相当于 -vET 的整合选项，可列出一些特殊字符而不是空白而已； 
-b  ：列出行号，仅针对非空白行做行号显示，空白行不标行号！ 
-E  ：将结尾的断行字符 $ 显示出来； 
-n  ：打印出行号，连同空白行也会有行号，与 -b 的选项不同； 
-T  ：将 [tab] 按键以 ^I 显示出来； 
-v  ：列出一些看不出来的特殊字符 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>nl (添加行号打印) z</p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# nl [-bnw] 文件 
选项与参数： 
-b  ：指定行号指定的方式，主要有两种： 
      -b a ：表示不论是否为空行，也同样列出行号(类似 cat -n)； 
      -b t ：如果有空行，空的那一行不要列出行号(默认值)； 
-n  ：列出行号表示的方法，主要有三种： 
      -n ln ：行号在屏幕的最左方显示； 
      -n rn ：行号在自己字段的最右方显示，且不加 0 ； 
      -n rz ：行号在自己字段的最右方显示，且加 0 ； 
-w  ：行号字段的占用的字符数。 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="文件预设权限：umask"><a href="#文件预设权限：umask" class="headerlink" title="文件预设权限：umask"></a>文件预设权限：umask</h3><pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# umask 
0022             <==与一般权限有关的是后面三个数字！ 
[root@study ~]# umask -S 
u=rwx,g=rx,o=rx <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="文件隐藏属性"><a href="#文件隐藏属性" class="headerlink" title="文件隐藏属性"></a>文件隐藏属性</h3><h4 id="chattr"><a href="#chattr" class="headerlink" title="chattr"></a>chattr</h4><pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# chattr [+-=][ASacdistu] 文件或目录名称 
选项与参数： 
+   ：增加某一个特殊参数，其他原本存在参数则不动。 
-   ：移除某一个特殊参数，其他原本存在参数则不动。 
=   ：设定一定，且仅有后面接的参数 

A  ：当设定了 A 这个属性时，若你有存取此文件(或目录)时，他的访问时间 atime 将不会被修改， 
     可避免 I/O 较慢的机器过度的存取磁盘。(目前建议使用文件系统挂载参数处理这个项目) 
S  ：一般文件是异步写入磁盘的(原理请参考前一章 sync 的说明)，如果加上 S 这个属性时， 
     当你进行任何文件的修改，该更动会『同步』写入磁盘中。 
a  ：当设定 a 之后，这个文件将只能增加数据，而不能删除也不能修改数据，只有 root 才能设定这属性 
c  ：这个属性设定之后，将会自动的将此文件『压缩』，在读取的时候将会自动解压缩， 
     但是在储存的时候，将会先进行压缩后再储存(看来对于大文件似乎蛮有用的！) 
d  ：当 dump 程序被执行的时候，设定 d 属性将可使该文件(或目录)不会被 dump 备份 
i  ：这个 i 可就很厉害了！他可以让一个文件『不能被删除、改名、设定连结也无法写入或新增数据！』 
     对于系统安全性有相当大的帮助！只有 root 能设定此属性 
s  ：当文件设定了 s 属性时，如果这个文件被删除，他将会被完全的移除出这个硬盘空间， 
     所以如果误删了，完全无法救回来了喔！ 
u  ：与 s 相反的，当使用 u 来配置文件案时，如果该文件被删除了，则数据内容其实还存在磁盘中， 
     可以使用来救援该文件喔！ 
注意 1：属性设定常见的是 a 与 i 的设定值，而且很多设定值必须要身为 root 才能设定 
注意 2：xfs 文件系统仅支援 AadiS 而已 
范例：请尝试到/tmp 底下建立文件，并加入 i 的参数，尝试删除看看。 

[root@study ~]# cd /tmp 
[root@study tmp]# touch attrtest     <==建立一个空文件 
[root@study tmp]# chattr +i attrtest <==给予 i 的属性 
[root@study tmp]# rm attrtest        <==尝试删除看看 
rm: remove regular empty file `attrtest'? y 
rm: cannot remove `attrtest': Operation not permitted 
# 看到了吗？呼呼！连 root 也没有办法将这个文件删除呢！赶紧解除设定！ 

范例：请将该文件的 i 属性取消！ 
[root@study tmp]# chattr -i attrtest <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="lsattr-显示文件隐藏属性"><a href="#lsattr-显示文件隐藏属性" class="headerlink" title="lsattr (显示文件隐藏属性)"></a>lsattr (显示文件隐藏属性)</h4><pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# lsattr [-adR] 文件或目录 
选项与参数： 
-a ：将隐藏文件的属性也秀出来； 
-d ：如果接的是目录，仅列出目录本身的属性而非目录内的文件名； 
-R ：连同子目录的数据也一并列出来！  

[root@study tmp]# chattr +aiS attrtest 
[root@study tmp]# lsattr attrtest 
--S-ia---------- attrtest <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="文件特殊权限："><a href="#文件特殊权限：" class="headerlink" title="文件特殊权限："></a>文件特殊权限：</h3><p><code>-rwsr-xr-x</code> Set UID </p>
<ul>
<li>二进制可执行</li>
<li>运行拥有owner权限</li>
</ul>
<blockquote>
<p>SUID  仅可用在 binary program  上，  不能够用在  shell script  上面！</p>
</blockquote>
<p><code>-rwx--s--x.</code> Set GID </p>
<ul>
<li>二进制可执行</li>
<li>运行拥有Group权限</li>
</ul>
<p><code>drwxrwxrwt</code>  Sticky Bit 目录有效，文件无效</p>
<ul>
<li>用户具有w,x</li>
<li>当用户在该目录下建立文件或目录时，仅有自己与  root  才有权力删除该文件</li>
</ul>
<pre class="line-numbers language-shell"><code class="language-shell">4  为  SUID 
2  为  SGID 
1  为  SBIT 
file 设置 -rwsr-xr-x ==> chmod 4755 filename (4 + 755) <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-shell"><code class="language-shell">[root@study tmp]# chmod 6755 test; ls -l test <==加入具有 SUID/SGID 的权限 
-rwsr-sr-x 1 root root 0 Jun 16 02:53 test 
[root@study tmp]# chmod 1755 test; ls -l test <==加入 SBIT 的功能！ 
-rwxr-xr-t 1 root root 0 Jun 16 02:53 test 
[root@study tmp]# chmod 7666 test; ls -l test <==具有空的 SUID/SGID 权限 
-rwSrwSrwT 1 root root 0 Jun 16 02:53 test 

SUID  为  u+s  ，而  SGID  为  g+s  ，SBIT 则是  o+t 

# 设定权限成为 -rws--x--x 的模样： 
[root@study tmp]# chmod u=rwxs,go=x test; ls -l test 
-rws--x--x 1 root root 0 Jun 16 02:53 test 

# 承上，加上 SGID 与 SBIT 在上述的文件权限中！ 
[root@study tmp]# chmod g+s,o+t test; ls -l test 
-rws--s--t 1 root root 0 Jun 16 02:53 test <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="脚本文件名的搜寻"><a href="#脚本文件名的搜寻" class="headerlink" title="脚本文件名的搜寻"></a>脚本文件名的搜寻</h2><h3 id="which-寻找『执行档』"><a href="#which-寻找『执行档』" class="headerlink" title="which (寻找『执行档』)"></a>which (寻找『执行档』)</h3><pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# which [-a] command 
选项或参数： 
-a ：将所有由 PATH 目录中可以找到的指令均列出，而不止第一个被找到的指令名称 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="whereis-由一些特定的目录中寻找文件文件名"><a href="#whereis-由一些特定的目录中寻找文件文件名" class="headerlink" title="whereis (由一些特定的目录中寻找文件文件名)"></a>whereis (由一些特定的目录中寻找文件文件名)</h3><blockquote>
<p>只找系统中某些特定目录底下的文件</p>
</blockquote>
<pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# whereis [-bmsu] 文件或目录名 
选项与参数： 
-l    :可以列出 whereis 会去查询的几个主要目录而已 
-b    :只找 binary 格式的文件 
-m    :只找在说明文件 manual 路径下的文件 
-s    :只找 source 来源文件 
-u    :搜寻不在上述三个项目当中的其他特殊文件 

范例一：请找出 ifconfig 这个档名 
[root@study ~]# whereis ifconfig  
ifconfig: /sbin/ifconfig /usr/share/man/man8/ifconfig.8.gz 

范例二：只找出跟 passwd 有关的『说明文件』档名(man page) 
[root@study ~]# whereis passwd     # 全部的档名通通列出来！ 
passwd: /usr/bin/passwd /etc/passwd /usr/share/man/man1/passwd.1.gz 
/usr/share/man/man5/passwd.5.gz 
[root@study ~]# whereis -m passwd  # 只有在 man 里面的档名才抓出来！ 
passwd: /usr/share/man/man1/passwd.1.gz /usr/share/man/man5/passwd.5.gz <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="locate-updatedb"><a href="#locate-updatedb" class="headerlink" title="locate / updatedb"></a>locate / updatedb</h3><blockquote>
<p>是利用数据库来搜寻文件名,『已建立的数据库  /var/lib/mlocate/</p>
</blockquote>
<pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# locate [-ir] keyword 
选项与参数： 
-i  ：忽略大小写的差异； 
-c  ：不输出档名，仅计算找到的文件数量 
-l  ：仅输出几行的意思，例如输出五行则是 -l 5 
-S  ：输出 locate 所使用的数据库文件的相关信息，包括该数据库纪录的文件/目录数量等 
-r  ：后面可接正规表示法的显示方式 

范例一：找出系统中所有与 passwd 相关的档名，且只列出 5 个 
[root@study ~]# locate -l 5 passwd 
/etc/passwd 
/etc/passwd- 
/etc/pam.d/passwd 
/etc/security/opasswd 
/usr/bin/gpasswd 

范例二：列出 locate 查询所使用的数据库文件之文件名与各数据数量 
[root@study ~]# locate -S 
Database /var/lib/mlocate/mlocate.db: 
        8,086 directories     # 总纪录目录数 
        109,605 files         # 总纪录文件数 
        5,190,295 bytes in file names 
        2,349,150 bytes used to store database <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>updatedb   更新数据库， updatedb  指令会去读取  /etc/updatedb.conf  这个配置文件的设定</p>
<h3 id="find"><a href="#find" class="headerlink" title="find"></a>find</h3><ul>
<li><p>时间相关</p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# find [PATH] [option] [action] 
选项与参数： 
1. 与时间有关的选项：共有 -atime, -ctime 与 -mtime ，以 -mtime 说明 
   -mtime  n ：n 为数字，意义为在 n 天之前的『一天之内』被更动过内容的文件； 
   -mtime +n ：列出在 n 天之前(不含 n 天本身)被更动过内容的文件档名； 
   -mtime -n ：列出在 n 天之内(含 n 天本身)被更动过内容的文件档名。 
   -newer file ：file 为一个存在的文件，列出比 file 还要新的文件档名 

范例一：将过去系统上面 24 小时内有更动过内容 (mtime) 的文件列出 
[root@study ~]# find / -mtime 0 
# 那个 0 是重点！0 代表目前的时间，所以，从现在开始到 24 小时前， 
# 有变动过内容的文件都会被列出来！那如果是三天前的 24 小时内？ 
# find / -mtime 3 有变动过的文件都被列出的意思！ 

范例二：寻找 /etc 底下的文件，如果文件日期比 /etc/passwd 新就列出 
[root@study ~]# find /etc -newer /etc/passwd 
# -newer 用在分辨两个文件之间的新旧关系是很有用的！ 

范例三：
  4 则是代表 4-5 那一天的文件档名：ex> find /var -mtime 4 
  -4 代表小于等于 4 天内的文件档名：ex> find /var -mtime -4 
  +4 代表大于等于 5 天前的檔名：ex> find /var -mtime +4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>用户相关</p>
<pre class="line-numbers language-shell"><code class="language-shell">选项与参数： 
2. 与使用者或组名有关的参数： 
   -uid n ：n 为数字，这个数字是用户的账号 ID，亦即 UID ，这个 UID 是记录在 
            /etc/passwd 里面与账号名称对应的数字。这方面我们会在第四篇介绍。 
   -gid n ：n 为数字，这个数字是组名的 ID，亦即 GID，这个 GID 记录在 
            /etc/group，相关的介绍我们会第四篇说明～ 
   -user name ：name 为使用者账号名称喔！例如 dmtsai  
   -group name：name 为组名喔，例如 users ； 
   -nouser    ：寻找文件的拥有者不存在 /etc/passwd 的人！ 
   -nogroup   ：寻找文件的拥有群组不存在于 /etc/group 的文件！ 
                当你自行安装软件时，很可能该软件的属性当中并没有文件拥有者， 
                这是可能的！在这个时候，就可以使用 -nouser 与 -nogroup 搜寻。 

范例三：搜寻 /home 底下属于 dmtsai 的文件 
[root@study ~]# find /home -user dmtsai 
# 这个东西也很有用的～当我们要找出任何一个用户在系统当中的所有文件时， 
# 就可以利用这个指令将属于某个使用者的所有文件都找出来喔！ 

范例四：搜寻系统中不属于任何人的文件 
[root@study ~]# find / -nouser 
# 透过这个指令，可以轻易的就找出那些不太正常的文件。如果有找到不属于系统任何人的文件时， 
# 不要太紧张，那有时候是正常的～尤其是你曾经以原始码自行编译软件时。 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>文件类型</p>
<pre class="line-numbers language-shell"><code class="language-shell">3. 与文件权限及名称有关的参数： 
   -name filename：搜寻文件名为 filename 的文件； 
   -size [+-]SIZE：搜寻比 SIZE 还要大(+)或小(-)的文件。这个 SIZE 的规格有： 
                   c: 代表 byte， k: 代表 1024bytes。所以，要找比 50KB 
                   还要大的文件，就是『 -size +50k 』 
   -type TYPE    ：搜寻文件的类型为 TYPE 的，类型主要有：一般正规文件 (f), 装置文件 (b, c), 
                   目录 (d), 连结档 (l), socket (s), 及 FIFO (p) 等属性。 
   -perm mode  ：搜寻文件权限『刚好等于』 mode 的文件，这个 mode 为类似 chmod 
                 的属性值，举例来说， -rwsr-xr-x 的属性为 4755 ！ 
   -perm -mode ：搜寻文件权限『必须要全部囊括 mode 的权限』的文件，举例来说，                  我们要搜寻 -rwxr--r-- ，亦即 0744 的文件，使用 -perm -0744， 
                 当一个文件的权限为 -rwsr-xr-x ，亦即 4755 时，也会被列出来， 
                 因为 -rwsr-xr-x 的属性已经囊括了 -rwxr--r-- 的属性了。 
   -perm /mode ：搜寻文件权限『包含任一 mode 的权限』的文件，举例来说，我们搜寻 
                 -rwxr-xr-x ，亦即 -perm /755 时，但一个文件属性为 -rw------- 
                 也会被列出来，因为他有 -rw.... 的属性存在！ 

范例五：找出档名为 passwd 这个文件 
[root@study ~]# find / -name passwd 

范例五-1：找出文件名包含了 passwd 这个关键词的文件 
[root@study ~]# find / -name "*passwd*" 
# 利用这个 -name 可以搜寻档名啊！默认是完整文件名，如果想要找关键词， 
# 可以使用类似 * 的任意字符来处理 

范例六：找出 /run 目录下，文件类型为 Socket 的檔名有哪些？ 
[root@study ~]# find /run -type s 
# 这个 -type 的属性也很有帮助喔！尤其是要找出那些怪异的文件， 
# 例如 socket 与 FIFO 文件，可以用 find /run -type p 或 -type s 来找！ 

范例七：搜寻文件当中含有 SGID 或 SUID 或 SBIT 的属性 
[root@study ~]# find / -perm /7000  
# 所谓的 7000 就是 ---s--s--t ，那么只要含有 s 或 t 的就列出，所以当然要使用 /7000， 
# 使用 -7000 表示要同时含有 ---s--s--t 的所有三个权限。而只需要任意一个，就是 /7000 ～瞭乎？ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>额~外可进行的动作：</p>
<pre class="line-numbers language-shell"><code class="language-shell">4. 额外可进行的动作： 
   -exec command ：command 为其他指令，-exec 后面可再接额外的指令来处理搜寻到的结果。 
   -print        ：将结果打印到屏幕上，这个动作是预设动作！ 

范例八：将上个范例找到的文件使用 ls -l 列出来～ 
[root@study ~]# find /usr/bin /usr/sbin -perm /7000 -exec ls -l {} \; 
# 注意到，那个 -exec 后面的 ls -l 就是额外的指令，指令不支持命令别名， 
# 所以仅能使用 ls -l 不可以使用 ll 喔！注意注意！ 

范例九：找出系统中，大于 1MB 的文件 
[root@study ~]# find / -size +1M <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h1 id="第七章、Linux磁盘与文件系统"><a href="#第七章、Linux磁盘与文件系统" class="headerlink" title="第七章、Linux磁盘与文件系统"></a>第七章、Linux磁盘与文件系统</h1><h2 id="EXT2-inode"><a href="#EXT2-inode" class="headerlink" title="EXT2 inode"></a>EXT2 inode</h2><ul>
<li><p>dumpe2fs：  查询  Ext  家族  superblock  信息的指令 </p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# dumpe2fs [-bh] 装置文件名 
选项与参数： 
-b ：列出保留为坏轨的部分(一般用不到吧！？) 
-h ：仅列出 superblock 的数据，不会列出其他的区段内容！ 

范例：鸟哥的一块 1GB ext4 文件系统内容 
[root@study ~]# blkid   <==这个指令可以叫出目前系统有被格式化的装置 

/dev/vda3: UUID="12y99K-bv2A-y7RY-jhEW-rIWf-PcH5-SaiApN" TYPE="LVM2_member" 
/dev/vda5: UUID="e20d65d9-20d4-472f-9f91-cdcfb30219d6" TYPE="ext4"  <==看到 ext4 了！ 

[root@study ~]# dumpe2fs /dev/vda5 
dumpe2fs 1.42.9 (28-Dec-2013) 
Filesystem volume name:   <none>           # 文件系统的名称(不一定会有) 
Last mounted on:          <not available>  # 上一次挂载的目录位置 
Filesystem UUID:          e20d65d9-20d4-472f-9f91-cdcfb30219d6 
Filesystem magic number:  0xEF53           # 上方的 UUID 为 Linux 对装置的定义码 
Filesystem revision #:    1 (dynamic)      # 下方的 features 为文件系统的特征数据 
Filesystem features:      has_journal ext_attr resize_inode dir_index filetype extent 64bit  
 flex_bg sparse_super large_file huge_file uninit_bg dir_nlink extra_isize 
Filesystem flags:         signed_directory_hash 
Default mount options:    user_xattr acl   # 预设在挂载时会主动加上的挂载参数 
Filesystem state:         clean            # 这块文件系统的状态为何，clean 是没问题 
Errors behavior:          Continue 
Filesystem OS type:       Linux 
Inode count:              65536            # inode 的总数 
Block count:              262144           # block 的总数 
Reserved block count:     13107            # 保留的 block 总数 
Free blocks:              249189           # 还有多少的 block 可用数量 
Free inodes:              65525            # 还有多少的 inode 可用数量 
First block:              0 
Block size:               4096             # 单个 block 的容量大小 
Fragment size:            4096 
Group descriptor size:    64 
....(中间省略).... 
Inode size:               256              # inode 的容量大小！已经是 256 了喔！ 
....(中间省略).... 
Journal inode:            8 
Default directory hash:   half_md4 
Directory Hash Seed:      3c2568b4-1a7e-44cf-95a2-c8867fb19fbc 
Journal backup:           inode blocks 
Journal features:         (none) 
Journal size:             32M              # Journal 日志式数据的可供纪录总容量 
Journal length:           8192 
Journal sequence:         0x00000001 
Journal start:            0 

Group 0: (Blocks 0-32767)                  # 第一块 block group 位置 
  Checksum 0x13be, unused inodes 8181 
  Primary superblock at 0, Group descriptors at 1-1   # 主要 superblock 的所在喔！ 

 Reserved GDT blocks at 2-128 
  Block bitmap at 129 (+129), Inode bitmap at 145 (+145) 
  Inode table at 161-672 (+161)                       # inode table 的所在喔！ 
  28521 free blocks, 8181 free inodes, 2 directories, 8181 unused inodes 
  Free blocks: 142-144, 153-160, 4258-32767           # 底下两行说明剩余的容量有多少 
  Free inodes: 12-8192 
Group 1: (Blocks 32768-65535) [INODE_UNINIT]          # 后续为更多其他的 block group 喔！ 
....(底下省略).... 
# 由于数据量非常的庞大，因此鸟哥将一些信息省略输出了！上表与你的屏幕会有点差异。 
# 前半部在秀出 supberblock 的内容，包括标头名称(Label)以及 inode/block 的相关信息 
# 后面则是每个 block group 的个别信息了！您可以看到各区段数据所在的号码！ 
# 也就是说，基本上所有的数据还是与 block 的号码有关就是了！很重要！ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h2 id="文件系统的简单操作"><a href="#文件系统的简单操作" class="headerlink" title="文件系统的简单操作"></a>文件系统的简单操作</h2><ul>
<li><p>df：列出文件系统的整体磁盘使用量</p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# df [-ahikHTm] [目录或文件名] 
选项与参数： 
-a  ：列出所有的文件系统，包括系统特有的 /proc 等文件系统； 
-k  ：以 KBytes 的容量显示各文件系统； 
-m  ：以 MBytes 的容量显示各文件系统； 
-h  ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示； 
-H  ：以 M=1000K 取代 M=1024K 的进位方式； 
-T  ：连同该 partition 的 filesystem 名称 (例如 xfs) 也列出； 
-i  ：不用磁盘容量，而以 inode 的数量来显示 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>案例：</p>
<pre class="line-numbers language-shell"><code class="language-shell">范例一：将系统内所有的 filesystem 列出来！
[root@study ~]# df 
Filesystem              1K-blocks    Used Available Use% Mounted on 
/dev/mapper/centos-root  10475520 3409408   7066112  33% / 
devtmpfs                   627700       0    627700   0% /dev 
tmpfs                      637568      80    637488   1% /dev/shm 
范例二：将系统内的所有特殊文件格式及名称都列出来 
[root@study ~]# df -aT 
Filesystem              Type        1K-blocks    Used Available Use% Mounted on 
rootfs                  rootfs       10475520 3409368   7066152  33% / 
proc                    proc                0       0         0    - /proc 
sysfs                   sysfs               0       0         0    - /sys 
devtmpfs                devtmpfs       627700       0    627700   0% /dev <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>du：评估文件系统的磁盘使用量</p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# du [-ahskm] 文件或目录名称 
选项与参数： 
-a  ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。 
-h  ：以人们较易读的容量格式 (G/M) 显示； 
-s  ：列出总量而已，而不列出每个各别的目录占用容量； 
-S  ：不包括子目录下的总计，与 -s 有点差别。 
-k  ：以 KBytes 列出容量显示； 
-m  ：以 MBytes 列出容量显示； <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>案例：</p>
<pre class="line-numbers language-shell"><code class="language-shell">范例一：列出目前目录下的所有文件容量 
[root@study ~]# du 
4       ./.cache/dconf  <==每个目录都会列出来 
4       ./.cache/abrt 
8       ./.cache 
....(中间省略).... 
0       ./test4 
4       ./.ssh          <==包括隐藏文件的目录 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h2 id="磁盘的分区、格式化、检验"><a href="#磁盘的分区、格式化、检验" class="headerlink" title="磁盘的分区、格式化、检验"></a>磁盘的分区、格式化、检验</h2><blockquote>
<p>使用逻辑： 你应该要透过  lsblk  或  blkid  先找到磁盘，再用  parted /dev/xxx print  来找出内部的分区表类型，之<br>后才用  gdisk  或  fdisk  来操作系统</p>
</blockquote>
<ul>
<li><p>lsblk  列出系统上的所有磁盘列表 </p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# lsblk [-dfimpt] [device] 
选项与参数： 
-d  ：仅列出磁盘本身，并不会列出该磁盘的分区数据 
-f  ：同时列出该磁盘内的文件系统名称 
-i  ：使用 ASCII 的线段输出，不要使用复杂的编码 (再某些环境下很有用) 
-m  ：同时输出该装置在 /dev 底下的权限数据 (rwx 的数据) 
-p  ：列出该装置的完整文件名！而不是仅列出最后的名字而已。 
-t  ：列出该磁盘装置的详细数据，包括磁盘队列机制、预读写的数据量大小等 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>blkid  列出装置的  UUID  等参数 </p>
</li>
<li><p>parted  列出磁盘的分区表类型与分区信息 </p>
<pre class="line-numbers language-shell"><code class="language-shell">范例一：列出 /dev/vda 磁盘的相关数据 
[root@study ~]# parted /dev/vda print 
Model: Virtio Block Device (virtblk)        # 磁盘的模块名称(厂商) 
Disk /dev/vda: 42.9GB                       # 磁盘的总容量 
Sector size (logical/physical): 512B/512B   # 磁盘的每个逻辑/物理扇区容量 
Partition Table: gpt                        # 分区表的格式 (MBR/GPT) 
Disk Flags: pmbr_boot 

Number  Start   End     Size    File system  Name  Flags      # 底下才是分区数据 
 1      1049kB  3146kB  2097kB                     bios_grub 
 2      3146kB  1077MB  1074MB  xfs 
 3      1077MB  33.3GB  32.2GB                     lvm <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="gdisk"><a href="#gdisk" class="headerlink" title="gdisk"></a>gdisk</h3><p>实践最简单Demo</p>
<pre class="line-numbers language-shell"><code class="language-shell">范例：由前一小节的 lsblk 输出，我们知道系统有个 /dev/vda，请观察该磁盘的分区与相关数据 
[root@study ~]# gdisk /dev/vda  <==仔细看，不要加上数字喔！ 
GPT fdisk (gdisk) version 0.8.6 

Partition table scan: 
  MBR: protective 
  BSD: not present 
  APM: not present 
  GPT: present 

Found valid GPT with protective MBR; using GPT.  <==找到了 GPT 的分区表！ 

Command (? for help):     <==这里可以让你输入指令动作，可以按问号 (?) 来查看可用指令 
Command (? for help): ? 
b       back up GPT data to a file 
c       change a partition's name 
d       delete a partition           # 删除一个分区 
i       show detailed information on a partition 
l       list known partition types 
n       add a new partition          # 增加一个分区 
o       create a new empty GUID partition table (GPT) 
p       print the partition table    # 印出分区表 (常用) 
q       quit without saving changes  # 不储存分区就直接离开 gdisk 
r       recovery and transformation options (experts only) 
s       sort partitions 
t       change a partition's type code 
v       verify disk 
w       write table to disk and exit # 储存分区操作后离开 gdisk 
x       extra functionality (experts only) 
?       print this menu 
Command (? for help):   

Command (? for help): p  <== 这里可以输出目前磁盘的状态 
Disk /dev/vda: 83886080 sectors, 40.0 GiB                     # 磁盘文件名/扇区数与总容量 
Logical sector size: 512 bytes                                # 单一扇区大小为 512 bytes  
Disk identifier (GUID): A4C3C813-62AF-4BFE-BAC9-112EBD87A483  # 磁盘的 GPT 标识符 
Partition table holds up to 128 entries 
First usable sector is 34, last usable sector is 83886046 
Partitions will be aligned on 2048-sector boundaries 
Total free space is 18862013 sectors (9.0 GiB) 

Number  Start (sector)    End (sector)  Size       Code  Name # 底下为完整的分区信息了！ 
   1            2048            6143   2.0 MiB     EF02       # 第一个分区槽数据 
   2            6144         2103295   1024.0 MiB  0700 
   3         2103296        65026047   30.0 GiB    8E00 
# 分区编号 开始扇区号码  结束扇区号码  容量大小 
Command (? for help): q 
# 想要不储存离开吗？按下 q 就对了！不要随便按 w 啊！ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="第十二章、-学习Shell-Scripts"><a href="#第十二章、-学习Shell-Scripts" class="headerlink" title="第十二章、 学习Shell Scripts"></a>第十二章、 学习Shell Scripts</h1><h2 id="12-1-常用命令解析"><a href="#12-1-常用命令解析" class="headerlink" title="12.1 常用命令解析"></a>12.1 常用命令解析</h2><pre class="line-numbers language-shell"><code class="language-shell">sudo lsb_release -a　// look ubuntu version
uname -r  //kernal version

netstat –tln //查看服务监听端口
netstat      //查看进程号
ps –aux     //查看进程号
ps –aux | more //全部查看
ps –ef | grep mysql //查看mysql的进程
kill -9 3306 //强制杀掉进程号3306

# 查看80端口占用
netstat -luntp | grep 80
# 查看对应程序是否启动
netstat -luntp | grep mysql

diff -ruNa dir1  dir2 > s12.diff

#几种快速清空文件内容的方法
echo "" > fileName
echo /dev/null > fileName
echo > fileName
cat /dev/null > fileName<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>ln</strong></p>
<pre class="line-numbers language-shell"><code class="language-shell">ln -fs Target_file/Target_dir #在当前目录下新建一个同名链接
ln -fs Target_file/Target_dir  link_rename #指定链接名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><strong>tar</strong> 加压解压</p>
<pre class="line-numbers language-shell"><code class="language-shell"># bz2
压包：tar  -jcf  target.tar.bz2   target
解压：tar  -jxf  target.tar.bz2
# gz
压包：tar  -zcf  target.tar.gz   target
解压：tar  -zxf  target.tar.gz
# 解压或压包到指定目录： -C
tar  -zxf  target.tar.gz –C /home/dream123/Desktop/(目录)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>命令详解</p>
<pre class="line-numbers language-shell"><code class="language-shell">-x 解压
-t 查看内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><strong>grep</strong>  </p>
<ul>
<li><a href="https://www.cnblogs.com/ggjucheng/archive/2013/01/13/2856896.html" target="_blank" rel="noopener">linux grep命令详解</a> </li>
</ul>
<p>*<em>awk *</em></p>
<p><strong>sed</strong><br> <a href="http://blog.itpub.net/519536/viewspace-558364/" target="_blank" rel="noopener">【Shell】sed使用心得</a><br>%s/.*/# &amp;/g 在整个文件的首行插入#<br>2,10s/Type/type/g #第2至第10行替换Type为type</p>
<p><strong>date</strong></p>
<pre class="line-numbers language-shell"><code class="language-shell">date +%F #2017-01-29
date "+%Y-%m-%d %H:%M:%S" #2017-01-29 10:57:02<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>应用场景</p>
<pre class="line-numbers language-shell"><code class="language-shell">tar zcvf etc-$(date +%F).tar.gz /etc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>进行简单运算</p>
<pre class="line-numbers language-shell"><code class="language-shell">date +%F -d "-1day" #减一天
date +%F -d "+1day" #加一天
date +%F -d "+2hour"#加2hour
date -d -1month +%Y%m%d #减1个月<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>别名</p>
<pre class="line-numbers language-shell"><code class="language-shell">#列出别名信息
alias
#设置
alias rgrep='ps -ef| grep redis'
//删除
unalias rgrep<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="性能监控"><a href="#性能监控" class="headerlink" title="性能监控"></a>性能监控</h3><ul>
<li><p>uptime </p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@www ~]# uptime 
 15:47:19 up 69 days, 20:24,  1 user,  load average: 0.06, 0.08, 0.11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ul>
<li>15:47:19 系统时间</li>
<li>69 days, 20:24 运行时间</li>
<li><code>1 user</code> 一个终端连接（终端Terminal连接数）</li>
<li><code>0.06, 0.08, 0.11</code> 在过去1,5,15分钟内的系统平均负载（运行队列中的平均进程数）</li>
</ul>
</li>
<li><p>top</p>
<pre class="line-numbers language-sh"><code class="language-sh">top - 17:19:17 up 69 days, 21:55,  3 users,  load average: 0.02, 0.12, 0.13
Tasks: 259 total,   2 running, 257 sleeping,   0 stopped,   0 zombie
%Cpu(s):  10.0/4.6    15[|||||||                                              ]
KiB Mem :  5971944 total,  2069108 free,  1897640 used,  2005196 buff/cache
KiB Swap:  3998716 total,  3998716 free,        0 used.  3270516 avail Mem 

  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND     
 2383 joel      20   0 2311856 286256 168372 S  18.6  4.8  10:48.61 chromium-b+ 
 1916 joel      20   0 1520768 130752  73584 R  11.0  2.2   3:32.51 compiz      
  908 root      20   0  359740  46208  33532 S  10.3  0.8   3:37.90 Xorg        
 2542 joel      20   0 1346212 323796  99516 S  10.0  5.4   4:51.57 chromium-b+ 
 2039 joel       9 -11  507632  11780   8812 S   3.7  0.2   0:45.57 pulseaudio  
 2796 joel      20   0 1215292 157504  87592 S   3.7  2.6   0:53.10 chromium-b+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li><p>top第一行命令, 如上uptime</p>
</li>
<li><p>top第二行命令介绍(进程信息)</p>
<pre class="line-numbers language-shell"><code class="language-shell">Tasks: 259 total(进程总数) 2 running(正在运行的进程数) 257 sleeping(睡眠的进程数) 0 stopped(停止的进程数) 0 zombie(僵尸进程数)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>第三行命令介绍(CPU信息)</p>
<pre class="line-numbers language-shell"><code class="language-shell">%Cpu(s): 9.6 us－－>用户空间占用CPU百分比 4.5 sy－－>内核空间占用CPU百分比 0.0 ni－－>用户进程空间内改变过优先级的进程占用CPU百分比 85.7 id－－>空闲CPU百分比 0.3 wa－－>等待输入输出的CPU时间百分比 0.0 hi－－> 0.0 si－－> 0.0 st－－><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>第四、五行命令介绍(内存信息)</p>
<pre class="line-numbers language-shell"><code class="language-shell">KiB Mem : 5971944 total－－>物理内存总量 2114336 free－－>空闲内存总量 1833032 used－－>使用的物理内存总量 2024576 buff/cache－－>用作内核缓存的内存量 
KiB Swap: 3998716 total－－>交换区总量, 3998716 free－－>空闲交换区总量, 0 used－－>使用的交换区总量. 3327816 avail Mem－－><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>进程信息</p>
<pre class="line-numbers language-shell"><code class="language-shell">PID－－>进程ＩＤ 
USER－－>用户 
PR－－>优先级 
NI－－>nice值。负值表示高优先级，正值表示低优先级 
VIRT－－>进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES 
RES－－>进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA 
SHR－－>共享内存大小，单位kb 
S－－>进程状态。 D=不可中断的睡眠状态R=运行 S=睡眠T=跟踪/停止Z=僵尸进程 
%CPU－－>上次更新到现在的CPU时间占用百分比 
%MEM－－>进程使用的物理内存百分比 
TIME+－－>进程使用的CPU时间总计，单位1/100秒 
COMMAND－－>命令名/命令行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
</li>
<li><p>vmstat  - Report virtual memory statistics<br><img src="https://img-blog.csdn.net/20180611104357519?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NkMTk5MzA1MDg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt="vmstat结果"></p>
<blockquote>
<p>vmstat 1 4 每一秒采集一次，共采集四次</p>
</blockquote>
</li>
</ul>
<h2 id="12-2-常用应用场景解析"><a href="#12-2-常用应用场景解析" class="headerlink" title="12.2 常用应用场景解析"></a>12.2 常用应用场景解析</h2><h3 id="12-2-1-变量相关"><a href="#12-2-1-变量相关" class="headerlink" title="12.2.1 变量相关"></a>12.2.1 变量相关</h3><p>1、变量获取，截取，替换，（没设置、空值、非空值） </p>
<ul>
<li><a href="https://blog.csdn.net/shmilyringpull/article/details/7631106" target="_blank" rel="noopener">shell中的${}，##和%%的使用</a></li>
</ul>
<p>2、Shell特殊变量：Shell $0, $#, $*, $@, $?, $和命令行参数  <a href="http://www.jb51.net/article/48686.htm" target="_blank" rel="noopener">bash shell命令行选项与修传入参数处理</a></p>
<table>
<thead>
<tr>
<th>变量</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>$n</td>
<td>$1 the first parameter,$2 the second…</td>
</tr>
<tr>
<td>$#</td>
<td>The number of command-line parameters.</td>
</tr>
<tr>
<td>$0</td>
<td>The name of current program.</td>
</tr>
<tr>
<td>$?</td>
<td>Last command or function’s return value.</td>
</tr>
<tr>
<td>$$</td>
<td>The program’s PID.</td>
</tr>
<tr>
<td>$!</td>
<td>Last program’s PID.</td>
</tr>
<tr>
<td>$@</td>
<td>Save all the parameters.</td>
</tr>
</tbody></table>
<p>3、shell 脚本中批量导入指定配置 <code>envsubst</code></p>
<p>比如手上有个配置文件<code>redis.conf</code>，需要动态修改其参数，如下：</p>
<pre class="line-numbers language-shell"><code class="language-shell">THREAD_NUM:${thread_num}
GPU_ID:${gpu_id}
bind ${ip} ${port}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>解决方案一：<code>envsubst</code></p>
<p>a) 安装</p>
<pre class="line-numbers language-shell"><code class="language-shell">yum install gettext -y<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>b) 使用</p>
<pre class="line-numbers language-shell"><code class="language-shell">export thread_num=24
export gpu_id=2
export ip=192.168.1.168
export port=6379
envsubst <redis.conf> redis_6379.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意：如果有n个export想死的心都有哈哈，解决方案，统一丢到一个文件里面，如<code>config.conf</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">export thread_num=24
export gpu_id=2
export ip=192.168.1.168
export port=6379<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>使其批量生效 <code>source config.conf</code>,一句命令应用就好了</p>
<pre class="line-numbers language-shell"><code class="language-shell">envsubst <redis.conf> redis_6379.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="12-3-条件判断"><a href="#12-3-条件判断" class="headerlink" title="12.3 条件判断"></a>12.3 条件判断</h2><h3 id="12-3-1-if-条件"><a href="#12-3-1-if-条件" class="headerlink" title="12.3.1 if 条件"></a>12.3.1 if 条件</h3><ul>
<li><a href="https://www.cnblogs.com/wangkongming/p/4221503.html" target="_blank" rel="noopener">shell比较两个字符串是否相等</a></li>
<li>文档比较运算符  </li>
<li>if 命令参数说明</li>
</ul>
<pre class="line-numbers language-shell"><code class="language-shell">[ -a FILE ]  如果 FILE 存在则为真。  
[ -b FILE ]  如果 FILE 存在且是一个块特殊文件则为真。  
[ -c FILE ]  如果 FILE 存在且是一个字特殊文件则为真。  
[ -d FILE ]  如果 FILE 存在且是一个目录则为真。  
[ -e FILE ]  如果 FILE 存在则为真。  
[ -f FILE ]  如果 FILE 存在且是一个普通文件则为真。  
[ -g FILE ] 如果 FILE 存在且已经设置了SGID则为真。 [ -h FILE ]  如果 FILE 存在且是一个符号连接则为真。  
[ -k FILE ]  如果 FILE 存在且已经设置了粘制位则为真。  
[ -p FILE ]  如果 FILE 存在且是一个名字管道(F如果O)则为真。  
[ -r FILE ]  如果 FILE 存在且是可读的则为真。  
[ -s FILE ]  如果 FILE 存在且大小不为0则为真。  
[ -t FD ]  如果文件描述符 FD 打开且指向一个终端则为真。  
[ -u FILE ]  如果 FILE 存在且设置了SUID (set user ID)则为真。  
[ -w FILE ]  如果 FILE 如果 FILE 存在且是可写的则为真。  
[ -x FILE ]  如果 FILE 存在且是可执行的则为真。  
[ -O FILE ]  如果 FILE 存在且属有效用户ID则为真。  
[ -G FILE ]  如果 FILE 存在且属有效用户组则为真。  
[ -L FILE ]  如果 FILE 存在且是一个符号连接则为真。  
[ -N FILE ]  如果 FILE 存在 and has been mod如果ied since it was last read则为真。  
[ -S FILE ]  如果 FILE 存在且是一个套接字则为真。  
[ FILE1 -nt FILE2 ]  如果 FILE1 has been changed more recently than FILE2, or 如果 FILE1 exists and FILE2 does not则为真。  
[ FILE1 -ot FILE2 ]  如果 FILE1 比 FILE2 要老, 或者 FILE2 存在且 FILE1 不存在则为真。  
[ FILE1 -ef FILE2 ]  如果 FILE1 和 FILE2 指向相同的设备和节点号则为真。  
[ -o OPTIONNAME ]  如果 shell选项 “OPTIONNAME” 开启则为真。  
[ -z STRING ]  “STRING” 的长度为零则为真。  
[ -n STRING ] or [ STRING ]  “STRING” 的长度为非零 non-zero则为真。  
[ STRING1 == STRING2 ]  如果2个字符串相同。 “=” may be used instead of “==” for strict POSIX compliance则为真。  
[ STRING1 != STRING2 ]  如果字符串不相等则为真。 
[ STRING1 < STRING2 ]  如果 “STRING1” sorts before “STRING2” lexicographically in the current locale则为真。  
[ STRING1 > STRING2 ]  如果 “STRING1” sorts after “STRING2” lexicographically in the current locale则为真。  
[ ARG1 OP ARG2 ] “OP” is one of -eq, -ne, -lt, -le, -gt or -ge. These arithmetic binary operators return true if “ARG1” is equal to, not equal to, less than, less than or equal to, greater than, or greater than or equal to “ARG2”, respectively. “ARG1” and “ARG2” are integers.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="12-3-2-while"><a href="#12-3-2-while" class="headerlink" title="12.3.2 while"></a>12.3.2 while</h3><pre class="line-numbers language-shell"><code class="language-shell">#!/bin/sh

time = 7006
while[[ "$time" gt 7000 ]]
do
    echo "$time"
    time = $(($time -1 ))
done<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="12-4-三剑客详解及案例"><a href="#12-4-三剑客详解及案例" class="headerlink" title="12.4 三剑客详解及案例"></a>12.4 三剑客详解及案例</h2><h3 id="12-4-1-grep"><a href="#12-4-1-grep" class="headerlink" title="12.4.1 grep"></a>12.4.1 grep</h3><h4 id="1）支持正则"><a href="#1）支持正则" class="headerlink" title="1）支持正则"></a>1）支持正则</h4><pre class="line-numbers language-shell"><code class="language-shell">-E，--extended-regexp 模式是扩展正则表达式（ERE）
-P，--perl-regexp 模式是 Perl 正则表达式
-e，--regexp=PATTERN 使用模式匹配，可指定多个模式匹
-f，--file=FILE 从文件每一行获取匹配模式
-i，--ignore-case 忽略大小写
-w，--word-regexp 模式匹配整个单词
-x，--line-regexp 模式匹配整行
-v，--invert-match 打印不匹配的行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>1、正则过滤</p>
<p>a. 去除空格 http.conf 文件空行或开头#号的行</p>
<pre class="line-numbers language-shell"><code class="language-shell">grep -E -v "^$|^#" /etc/httpd/conf/httpd.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li><code>grep -n 'de$'</code> 匹配 de 字符结尾</li>
<li><code>echo "a bc de" |xargs -n1 |grep '^b'</code> -&gt; 匹配 b 字符开头的行</li>
</ul>
<p>b. 不区分大小写</p>
<pre class="line-numbers language-shell"><code class="language-shell">echo "A a b c" |xargs -n1 |grep -i a
echo "A a b c" |xargs -n1 |grep '[Aa]'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>2、参数匹配功能</p>
<pre class="line-numbers language-shell"><code class="language-shell">echo "a bc de" |xargs -n1 |grep -e 'a' -e 'bc
#output 
a
bc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>3、对比功能</p>
<p>输出 b 文件中在 a文件相同的行</p>
<pre class="line-numbers language-shell"><code class="language-shell">grep -f a b<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>不同行</p>
<pre class="line-numbers language-shell"><code class="language-shell">grep -f -v a b<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="2-输入输出控制"><a href="#2-输入输出控制" class="headerlink" title="2) 输入输出控制"></a>2) 输入输出控制</h4><pre class="line-numbers language-shell"><code class="language-shell">-m，--max-count=NUM 输出匹配的结果 num 数
-n，--line-number 打印行号
-H，--with-filename 打印每个匹配的文件名
-h，--no-filename 不输出文件名
-q，--quiet 不输出正常信息
-s, --no-messages 不输出错误信息
-r，--recursive 递归目录
-c，--count 只打印每个文件匹配的行数
-o，--only-matching 只打印匹配的内容
--include=FILE_PATTERN   只检索匹配的文件
--exclude=FILE_PATTERN   跳过匹配的文件
--exclude-from=FILE       跳过匹配的文件，来自文件模式
--exclude-dir=PATTERN     跳过匹配的目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>1、过滤功能</p>
<pre class="line-numbers language-shell"><code class="language-shell">#包含*.conf
grep -r '192.167.1.1' /etc --include *.conf
#排除*.bak
grep -r '192.167.1.1' /etc --exclude *.bak
#排除指定文件
grep -r '192.167.1.1' /opt --exclude-from <file_name><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>2、匹配的前五个结果</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 1 20 |grep -m 5 -E '[0-9]{2}'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>3、统计匹配两位数的有多少行</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 1 20 |grep -c -E '[0-9]{2}'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="3-内容行控制"><a href="#3-内容行控制" class="headerlink" title="3) 内容行控制"></a>3) 内容行控制</h4><pre class="line-numbers language-shell"><code class="language-shell">-B，--before-context=NUM 打印匹配的前几行
-A，--after-context=NUM 打印匹配的后几行
-C，--context=NUM 打印匹配的前后几行
--color[=WHEN], 匹配的字体颜色
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>1、我是一个案例</p>
<pre class="line-numbers language-shell"><code class="language-shell">#匹配结果及后 3 行
seq 1 10 |grep 5 -A 3
#匹配结果及前 3 行
seq 1 10 |grep 5 -B 3
#匹配结果及前后 3 行
seq 1 10 |grep 5 -C 3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="12-4-2-sed"><a href="#12-4-2-sed" class="headerlink" title="12.4.2 sed"></a>12.4.2 sed</h3><blockquote>
<p>sed 命令将当前处理的行读入模式空间进行处理，处理完把结果输出，并清空模式空间。然后再将下一行读入模式空间进行处理输出，以此类推，直到最后一行。还有一个空间叫保持空间，又称暂存空间，可以暂时存放一些处理的数据，但不能直接输出，只能放到模式空间输出。</p>
</blockquote>
<h4 id="1）命令详解"><a href="#1）命令详解" class="headerlink" title="1）命令详解"></a>1）命令详解</h4><pre class="line-numbers language-shell"><code class="language-shell">-n 不打印模式空间
-e 执行脚本、表达式来处理
-f 执行动作从文件读取执行
-i 修改原文件
-r 使用扩展正则表达式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>命令描述</p>
<pre class="line-numbers language-shell"><code class="language-shell">s/regexp/replacement/ 替换字符串

p 打印当前模式空间
P 打印模式空间的第一行

d 删除模式空间，开始下一个循环
D 删除模式空间的第一行，开始下一个循环

= 打印当前行号

a \text 当前行追加文本

i \text 当前行上面插入文本

c \text 所选行替换新文本

q 立即退出 sed 脚本

r 追加文本来自文件

: label label 为 b 和 t 命令

b label 分支到脚本中带有标签的位置，如果分支不存在则分支到脚本的末尾

t label 如果 s///是一个成功的替换，才跳转到标签

h H 复制/追加模式空间到保持空间

g G 复制/追加保持空间到模式空间

x 交换模式空间和保持空间内容

l 打印模式空间的行，并显示控制字符$

n N 读取/追加下一行输入到模式空间

w filename 写入当前模式空间到文件
! 取反、否定<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>1、地址匹配</p>
<ul>
<li>first~step 步长，每 step 行，从第 first 开始</li>
<li>addr1， add2  -&gt; 定址 addr1， add2 决定用于对哪些行进行编辑</li>
<li>addr1， +N -&gt; 从 addr1 这行到往下 N 行匹配，总共匹配 N+1 行</li>
</ul>
<p>案例1：打印从第 5 行开始第一个以 northeast 开头的行之间的所有行</p>
<pre class="line-numbers language-shell"><code class="language-shell">sed -n '5,/northeast/p' ceshi.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>2、<code>s</code>分隔符替换</p>
<pre class="line-numbers language-shell"><code class="language-shell">#在查找替换有 / 或者其他特殊字符时有用
tail /etc/services | sed -r 's#([0-9]+/udp)#test#g'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>紧跟在 s 命令后的字符就是查找串和替换串之间的分隔符。分隔符默认默认为正斜杠，但可以改变。无论什么字符（换行符，反斜线除外），只要紧跟在 s 命令</p>
</blockquote>
<h4 id="2）打印匹配"><a href="#2）打印匹配" class="headerlink" title="2）打印匹配"></a>2）打印匹配</h4><pre class="line-numbers language-shell"><code class="language-shell">#打印匹配 blp5 开头的行
tail /etc/services |sed -n '/^blp5/p'
#打印第行1
tail /etc/services |sed -n '1p'
#打印奇数行
seq 10 |sed -n '1~2p'
#打印最后一行
tail /etc/services |sed -n '$p'
#不打印最后一行
tail /etc/services |sed -n '$!p'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><p>增加匹配范围</p>
<pre class="line-numbers language-shell"><code class="language-shell">#匹配blp5,com 开头
tail /etc/services |sed -n '/^blp5/,/^com/p'
#匹配blp5开头行到最后一行
tail /etc/services |sed -n '/blp5/,$p'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<p>2、使用环境变量</p>
<pre class="line-numbers language-shell"><code class="language-shell"> a=1
 tail /etc/services |sed -n ''$a',3p'
 tail /etc/services |sed -n "$a,3p"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>3、匹配删除</p>
<pre class="line-numbers language-shell"><code class="language-shell">#删除匹配blp5
tail /etc/services |sed '/blp5/d'
#删除第一行
tail /etc/services |sed '1d'
tail /etc/services |sed '1~2d'
tail /etc/services |sed '1,3d'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="3）替换"><a href="#3）替换" class="headerlink" title="3）替换"></a>3）替换</h4><p>1、简单替换</p>
<pre class="line-numbers language-shell"><code class="language-shell">#替换 blp5 字符串为 test --> 每行替换首个
tail /etc/services |sed 's/blp5/test/'
#+ g全部替换
tail /etc/services |sed 's/blp5/test/g'
#替换开头是 blp5 的字符串并打印
tail /etc/services |sed -n 's/^blp5/test/p'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>2、匹配引用 <code>&amp;</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">tail /etc/services | sed 's/udp/&.hao/g'
#单引号转双引号
echo '10.10.10.1 10.10.10.2 10.10.10.3' |sed -r 's/[^ ]+/"&"/g'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>3、过滤</p>
<p>案例1：对 1-4 行的 blp5 进行替换</p>
<pre class="line-numbers language-shell"><code class="language-shell">#对 1-4 行的 blp5 进行替换
tail /etc/services | sed '1,4s/blp5/test/'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>案例2：指定匹配条件替换</p>
<pre class="line-numbers language-shell"><code class="language-shell">#指定存在 48129/tcp 的内容，替换blp5为test
tail /etc/services | sed '/48129\/tcp/s/blp5/test/'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>案例3：注释匹配行后的多少行</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 10 |sed '/5/,+3s/^/#/'
#output
1
2
3
4
#5
#6
#7
#8
9
10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>案例4：指定替换</p>
<pre class="line-numbers language-shell"><code class="language-shell"> seq 5 |sed -r 's/^3|^4/#&/'
 seq 5 |sed -r '/^3|^4/s/^/#/'
 seq 5 |sed -r 's/^3|^4/#\0/' 
 # 以上三种表达式效果一样，
 1
 2
 #3
 #4
 5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>4、连续替换</p>
<pre class="line-numbers language-shell"><code class="language-shell">tail /etc/services |sed 's/blp5/test/;s/3g/4g/'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>5、正则分组精确替换</p>
<p>字符如： <code>3gpp-cbsp 48049/tcp # 3GPP Cell Broadcast Service</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">tail /etc/services |sed -r 's/(.*) (.*)(#.*)/\1\2test \3/'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>注解： 可以对\1, \2, \3 进行删减，添加指定的内容</p>
<ul>
<li>\1 -&gt; 3gpp-cbsp</li>
<li>\2 -&gt; 48049/tcp</li>
<li>\3 -&gt; # 3GPP Cell Broadcast Service</li>
</ul>
<p>案例2: 协议和端口互换</p>
<pre class="line-numbers language-shell"><code class="language-shell">tail /etc/services |sed -r 's/(.*)(\<[0-9]+\>)\/(tcp|udp)(.*)/\1\3\/\2\4/'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>案例3：位置替换 -&gt;替换 x 字符为大写：</p>
<pre class="line-numbers language-shell"><code class="language-shell">echo "abc cde xyz" |sed -r 's/(.*)x/\1X/'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>案例4：位置替换-&gt; 456 与 cde 调换</p>
<pre class="line-numbers language-shell"><code class="language-shell"> echo "abc:cde;123:456" |sed -r 's/([^:]+)(;.*:)([^:]+$)/\3\2\1/'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>案例5：去除开头和结尾空格或制表符</p>
<pre class="line-numbers language-shell"><code class="language-shell"> echo " 1 2 3 " |sed 's/^[ \t]*//;s/[ \t]*$//'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="4-多重编辑与添加"><a href="#4-多重编辑与添加" class="headerlink" title="4) 多重编辑与添加"></a>4) 多重编辑与添加</h4><p>案例1：删除1,2行，并替换</p>
<pre class="line-numbers language-shell"><code class="language-shell">tail /etc/services |sed -e '1,2d' -e 's/blp5/test/'
#可以用；隔开
tail /etc/services |sed '1,2d;s/blp5/test/'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>案例2：<strong>添加新内容（a、i 和 c）</strong></p>
<pre class="line-numbers language-shell"><code class="language-shell">#在 blp5 上一行添加 test
tail /etc/services |sed '/blp5/i \test'
#在 blp5 下一行添加 test
tail /etc/services |sed '/blp5/a \test'
#blp5所在行整行替换
tail /etc/services |sed '/blp5/c \test'
#指定行下一行添加内容
tail /etc/services |sed '2a \test'
# 在指定行前面和后面添加一行
seq 5 |sed '3s/.*/txt\n&/'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>案例3：读取文件并追加到匹配行后（r）</p>
<pre class="line-numbers language-shell"><code class="language-shell">tail /etc/services |sed '/blp5/r a.txt'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>案例3：将匹配行写到文件（w）</p>
<pre class="line-numbers language-shell"><code class="language-shell">tail /etc/services |sed '/blp5/w b.txt'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="5）读取下一行（n-和-N）"><a href="#5）读取下一行（n-和-N）" class="headerlink" title="5）读取下一行（n 和 N）"></a>5）读取下一行（n 和 N）</h4><ul>
<li><p>n 读取下一行到模式空间。</p>
</li>
<li><p>N <code>追加</code>下一行内容到模式空间，并以换行符\n 分隔。</p>
</li>
</ul>
<p>1、 打印匹配的下一行</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 5 |sed -n '/3/{n;p}'
#output
4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>2、打印偶数</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 6 |sed -n 'n;p'
#output
2
4
6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>sed 先读取第一行 1，执行 n 命令，获取下一行 2，此时模式空间是 2，执行 p 命令，打印模式空</p>
<p>间。 现在模式空间是 2，sed 再读取 3，执行 n 命令，获取下一行 4，此时模式空间为 4，执行 p 命</p>
<p>令，以此类推。</p>
</blockquote>
<p>习题：打印奇数</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 6 |sed 'n;d'
#output
1
3
5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>sed 先读取第一行 1，此时模式空间是 1，并打印模式空间 1，执行 n 命令，获取下一行 2，执行 d</p>
<p>命令，删除模式空间的 2，sed 再读取 3，此时模式空间是 3，并打印模式空间，再执行 n 命令，获</p>
<p>取下一行 4，执行 d 命令，删除模式空间的 3，以此类推。</p>
</blockquote>
<p>3、每三行执行一次 p 命令</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 6 | sed 'n;n;p'
1
2
3
3
4
5
6
6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意：</p>
<ul>
<li>sed 先读取1行</li>
<li>n 读取下一行</li>
</ul>
<blockquote>
<p>sed 先读取第一行 1，并打印模式空间 1，执行 n 命令，获取下一行 2，并打印模式空间 2，再执行 n</p>
<p>命令，获取下一行 3，执行 p 命令，打印模式空间 3。sed 读取下一行 3，并打印模式空间 3,以此类</p>
<p>推。</p>
</blockquote>
<p>4、每三行替换一次</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 6 |sed 'n;n;s/^/=/;s/$/=/'
seq 6 |sed '3~3{s/^/=/;s/$/=/}'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p> N 命令的相关功能</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 6 |sed 'N;q'
#合并两行
seq 6 |sed 'N;s/\n//'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>1、奇数行数读取问题</p>
<pre class="line-numbers language-shell"><code class="language-shell"># seq 5 |sed -n N;p
1
2
3
4
# seq 6 |sed -n 'N;p'
1
2
3
4
5
6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>为什么第一个不打印 5 呢？</p>
<p>因为 N 命令是读取下一行追加到 sed 读取的当前行，当 N 读取下一行没有内容时，则退出，也不会</p>
<p>执行 p 命令打印当前行。</p>
<p>当行数为偶数时，N 始终就能读到下一行，所以也会执行 p 命令。</p>
</blockquote>
<p>处理方案：打印奇数行数时的最后一行</p>
<pre class="line-numbers language-shell"><code class="language-shell"> seq 5 |sed -n '$!N;p'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>sed 执行到最后一行时，用感叹号不去执行 N 命令</p>
<h4 id="6-打印和删除模式空间第一行（P-和-D）"><a href="#6-打印和删除模式空间第一行（P-和-D）" class="headerlink" title="6) 打印和删除模式空间第一行（P 和 D）"></a>6) 打印和删除模式空间第一行（P 和 D）</h4><ul>
<li><p>P 打印模式空间的第一行。</p>
</li>
<li><p>D 删除模式空间的第一行。</p>
</li>
</ul>
<p>1、 打印奇数</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 6 |sed -n 'N;P'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>2、保留最后一行</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 6 |sed 'N;D'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>读取第一行 1，执行 N 命令读取下一行并追加到模式空间，此时模式空间是 1\n2，执行 D 命令删除</p>
<p>模式空间第一行 1，剩余 2。</p>
<p>读取第二行，执行 N 命令，此时模式空间是 3\n4，执行 D 命令删除模式空间第一行 3，剩余 4。</p>
<p>以此类推，读取最后一行打印时，而 N 获取不到下一行则退出，不再执行 D，因此模式空间只剩余 6</p>
<p>就打印。</p>
</blockquote>
<h4 id="7-保持空间操作（h-与-H、g-与-G-和-x）"><a href="#7-保持空间操作（h-与-H、g-与-G-和-x）" class="headerlink" title="7) 保持空间操作（h 与 H、g 与 G 和 x）"></a>7) 保持空间操作（h 与 H、g 与 G 和 x）</h4><ul>
<li><p>h 复制模式空间内容到保持空间（覆盖）。</p>
</li>
<li><p>H 复制模式空间内容追加到保持空间。</p>
</li>
<li><p>g 复制保持空间内容到模式空间（覆盖）。</p>
</li>
<li><p>G 复制保持空间内容追加到模式空间。</p>
</li>
</ul>
<p>1、 匹配内容的暂存和输出</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 6 |sed -e '/3/{h;d}' -e '/5/g'
#output
1
2
4
3
6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>2、将匹配的内容放到最后</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 6 |sed -e '/3/{h;d}' -e '$G'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>3、交换模式空间和保持空间</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 6 |sed -e '/3/{h;d}' -e '/5/x' -e '$G'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>解读</p>
<blockquote>
<p>看后面命令，在模式空间匹配 5 并将保持空间的 3 与 5 交换，5 就变成了 3,。最后把保持空间的 5</p>
<p>追加到模式空间的。</p>
</blockquote>
<p>4、倒叙输出 【难点】</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 5 |sed '1!G;h;$!d'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>分析： 1!G 第一行不执行把保持空间内容追加到模式空间，因为现在保持空间还没有数据。</p>
<p>h 将模式空间放到保持空间暂存。</p>
<p>$!d 最后一行不执行删除模式空间的内容。</p>
<p>读取第一行 1 时，跳过 G 命令，执行 h 命令将模式空间 1 复制到保持空间，执行 d 命令删除模式空</p>
<p>间的 1。</p>
<p>读取第二行 2 时，模式空间是 2，执行 G 命令，将保持空间 1 追加到模式空间，此时模式空间是</p>
<p>2\n1，执行 h 命令将 2\n1 覆盖到保持空间，d 删除模式空间。</p>
<p>读取第三行 3 时，模式空间是 3，执行 G 命令，将保持空间 2\n1 追加到模式空间，此时模式空间是</p>
<p>3\n2\n1，执行 h 命令将模式空间内容复制到保持空间，d 删除模式空间。</p>
<p>以此类推读到第 行时模式空间是 执行 命令将保持空间的 追加模式空间</p>
<p>以此类推，读到第 5 行时，模式空间是 5，执行 G 命令，将保持空间的 4\n3\n2\n1 追加模式空间，</p>
<p>然后复制到模式空间，5\n4\n3\n2\n1，不执行 d，模式空间保留，输出。</p>
<p>由此可见，每次读取的行先放到模式空间，再复制到保持空间，d 命令删除模式空间内容，防止输</p>
<p>出，再追加到模式空间，因为追加到模式空间，会追加到新读取的一行的后面，循环这样操作， 就</p>
<p>把所有行一行行追加到新读取行的后面，就形成了倒叙。</p>
</blockquote>
<p>5、 每行后面添加新空行</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 10 |sed G<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>6、打印匹配行的上一行内容</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 5 |sed -n '/3/{x;p};h'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>解析：</p>
<p>读取第一行 1，没有匹配到 3，不执行{x;p}，执行 h 命令将模式空间内容 1 覆盖到保持空间。</p>
<p>读取第二行 2，没有匹配到 3，不执行{x;p}，执行 h 命令将模式空间内容 2 覆盖到保持空间。</p>
<p>读取第三行 3，匹配到 3，执行 x 命令把模式空间 3 与保持空间 2 交换，再执行 p 打印模式空间 2.</p>
<p>以此类推。</p>
</blockquote>
<ul>
<li>注意 <code>/3/{x;p}</code> <code>h</code> 是并行的</li>
</ul>
<h4 id="8-标签（-、b-和-t）"><a href="#8-标签（-、b-和-t）" class="headerlink" title="8) 标签（:、b 和 t）"></a>8) 标签（:、b 和 t）</h4><p>标签可以控制流，实现分支判断。</p>
<p>: lable name 定义标签</p>
<ul>
<li>b lable 跳转到指定标签，如果没有标签则到脚本末尾</li>
<li>t lable 跳转到指定标签，前提是 s///命令执行成功</li>
</ul>
<p>案例1：将换行符替换成逗号</p>
<p>方法一：</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 6 |sed ':a;N;s/\n/,/;b a'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>行 1，N 命令读取下行 2，此时模式空间是 1\n2$，执行替换，此时模式空间是</p>
<p>1,2$，执行 b 命令再跳转到标签 a 位置继续执行 N 命令，读取下一行 3 追加到模式空间，此时模式</p>
<p>空间是 1,2\n3$，再替换，以此类推，不断追加替换，直到最后一行 N 读不到下一行内容退出。</p>
</blockquote>
<p>方法二</p>
<pre class="line-numbers language-shell"><code class="language-shell">seq 6 |sed ':a;N;$!b a;s/\n/,/g'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>先将每行读入到模式空间，最后再执行全局替换。$!是如果是最后一行，则不执行 b a 跳转，最后</p>
<p>执行全局替换。</p>
</blockquote>
<p>案例2： 每三个数字加个一个逗号</p>
<pre class="line-numbers language-shell"><code class="language-shell">echo "123456789" | sed -r ':a;s/([0-9]{3})([0-9]{3})/\1,\2/;t a'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>案例3 忽略大小写</p>
<h4 id="9-y-指定转化"><a href="#9-y-指定转化" class="headerlink" title="9) y 指定转化"></a>9) y 指定转化</h4><blockquote>
</blockquote>
<pre class="line-numbers language-shell"><code class="language-shell">echo "northwest" | sed 'y/north/cARTc/'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="12-4-3-awk"><a href="#12-4-3-awk" class="headerlink" title="12.4.3 awk"></a>12.4.3 awk</h3><blockquote>
<p>是一个处理文本的编程语言工具，能用简短的程序处理标准输入或文件、数据排序、计算以及</p>
<p>生成报表等等</p>
</blockquote>
<h3 id="12-4-5-综合案例"><a href="#12-4-5-综合案例" class="headerlink" title="12.4.5 综合案例"></a>12.4.5 综合案例</h3><p>1、循环替换端口号</p>
<pre class="line-numbers language-shell"><code class="language-shell">port=7006
while [[ "$port" -gt 7000 ]]
do
        mkdir -p /var/redis/"$port"
        cp ./6379.conf ./"$port".conf
        sed -i ``s/__port__/"$port"/g`` `grep __port__ -rl ./$port.conf`
        echo "port = $port"
        port=$(($port -1 ))
done<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="12-5-远程"><a href="#12-5-远程" class="headerlink" title="12. 5 远程"></a>12. 5 远程</h2><h3 id="12-5-1-远程拷贝"><a href="#12-5-1-远程拷贝" class="headerlink" title="12.5.1 远程拷贝"></a>12.5.1 远程拷贝</h3><p>1、拷贝远程机器<code>文件夹</code>到本地</p>
<pre class="line-numbers language-shell"><code class="language-shell">scp -r jiangzhaowei@211.154.138.107:/kk/ ./
scp  jiangzhaowei@211.154.138.107:/kk/my.sql  ./<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="http://www.cnblogs.com/peida/tag/%E6%AF%8F%E6%97%A5%E4%B8%80linux%E5%91%BD%E4%BB%A4/default.html?page=1" target="_blank" rel="noopener">每日一linux命令</a></li>
</ul>
<h1 id="第十五章、例行性工作排程（crontab）"><a href="#第十五章、例行性工作排程（crontab）" class="headerlink" title="第十五章、例行性工作排程（crontab）"></a>第十五章、例行性工作排程（crontab）</h1><h2 id="仅执行一次的工作排程"><a href="#仅执行一次的工作排程" class="headerlink" title="仅执行一次的工作排程"></a>仅执行一次的工作排程</h2><h2 id="循环执行的例行性工作排程"><a href="#循环执行的例行性工作排程" class="headerlink" title="循环执行的例行性工作排程"></a>循环执行的例行性工作排程</h2><h2 id="可唤醒停机间工作的排程"><a href="#可唤醒停机间工作的排程" class="headerlink" title="可唤醒停机间工作的排程"></a>可唤醒停机间工作的排程</h2><h1 id="第二十章、基础系统设定与备份策略"><a href="#第二十章、基础系统设定与备份策略" class="headerlink" title="第二十章、基础系统设定与备份策略"></a>第二十章、基础系统设定与备份策略</h1><h2 id="20-1-系统基本设定"><a href="#20-1-系统基本设定" class="headerlink" title="20.1 系统基本设定"></a>20.1 系统基本设定</h2><h3 id="20-1-1-网络设置"><a href="#20-1-1-网络设置" class="headerlink" title="20.1.1 网络设置"></a>20.1.1 网络设置</h3><h4 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h4><pre class="line-numbers language-shell"><code class="language-shell">#hosts地址
/etc/hosts<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="nmcli"><a href="#nmcli" class="headerlink" title="nmcli"></a>nmcli</h4><blockquote>
<p>全称是”NetworkManage CommandLine Interface”</p>
</blockquote>
<pre class="line-numbers language-shell"><code class="language-shell">#1. nmcli device show 查看网络配置简写
nmcli d show 
#2. nmcli connection show 查看网络状态的简写
nmcli con show
# 3 查看网络设备状态
nmcli dev status 
# 4. 查看网络状态
nmcli dev status
# 5.快速修改连接配置
nmcli con mod “eth0” connection.autoconnect no
nmcli con mod “eth0” ipv4.dns 172.16.0.1
nmcli con mod “eth0” +ipv4.dns 8.8.8.8
nmcli con mod “eth0” -ipv4.dns 8.8.8.8
nmcli con mod “eth0” ipv4.addresses “172.25.X.10/24 172.25.X.254”
nmcli con mod “eth0” +ipv4.addresses 10.10.10.10/16
# 5.1 生效
nmcli con reload
#6 激活和禁用网卡
nmcli con down “system eth0” 可被自动激活
nmcli con up “system eth0”
nmcli dev dis eth0 禁用网卡，访止被自动激活<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意：如果出现<code>Error: NetworkManager is not running.</code> 重启network service <code>sudo /etc/init.d/network-manager restart</code>  修改完成后禁止NetworkMananger <code>systemctl disable NetworkManager</code></p>
<p>1） <strong>手动设定 IP 网络参数</strong></p>
<ol>
<li><p>查看指定网卡状态 <code>nmcli con show eth0</code>, 重要参数</p>
<pre class="line-numbers language-shell"><code class="language-shell">connection.autoconnect [yes|no]  ：是否于开机时启动这个联机，预设通常是  yes  才对！
ipv4.method [auto|manual]  ：自动还是手动设定网络参数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre><code></code></pre></li>
<li><p>设置网络参数 <code>nmcli con modify eth0</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">[root@study ~]# nmcli con modify eth0 \ 
>  connection.autoconnect yes \ 
>  ipv4.method manual \ 
>  ipv4.addresses 172.16.1.1/16 \ 
>  ipv4.gateway 172.16.200.254 \ 
>  ipv4.dns 172.16.200.254 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>生效 <code>nmcli con up eth0</code></p>
</li>
<li><p>验证是否生效 <code>nmcli con show eth0</code> </p>
</li>
</ol>
<p><strong>网络会话配置快速实现IP地址等网络配置的变更</strong></p>
<ol>
<li><p>新增网络会话,<code>ens192</code>为 <code>nmcli con show</code>  name 栏目下的硬件，设置<code>interface-name</code>网络接口</p>
<pre class="line-numbers language-shell"><code class="language-shell">nmcli con add con-name datacenter-daxing \
ifname ens192 autoconnect no type ethernet \
ip4 172.16.60.100/16 \
gw4 172.16.0.1\
ipv4.dns 202.101.172.35<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>开启会话 <code>nmcli con up datacenter-daxing</code></p>
</li>
<li><p>删除会话 <code>nmcli con del datacenter-daxing</code></p>
</li>
</ol>
<hr>
<h1 id="第二十一、章-软件安装"><a href="#第二十一、章-软件安装" class="headerlink" title="第二十一、章 软件安装"></a>第二十一、章 软件安装</h1><h2 id="常用软件安装"><a href="#常用软件安装" class="headerlink" title="常用软件安装"></a>常用软件安装</h2><ul>
<li><p>软件管理工具</p>
<p><a href="https://github.com/Linuxbrew/brew" target="_blank" rel="noopener">Homebrew for linux </a></p>
</li>
<li><p>编译工具</p>
<ul>
<li><p><a href="https://github.com/astaxie/build-web-application-with-golang/blob/master/zh/01.1.md" target="_blank" rel="noopener">go 系统安装说明</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">tar -C /usr/local -xzf go1.11.5.linux-amd64.tar.gz
export PATH=$PATH:/usr/local/go/bin
source $HOME/.profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
</li>
<li><p><a href="https://blog.csdn.net/laomd/article/details/80710451" target="_blank" rel="noopener">Ubuntu使用snap安装常用软件</a></p>
</li>
</ul>
<h3 id="VPN（翻墙）"><a href="#VPN（翻墙）" class="headerlink" title="VPN（翻墙）"></a>VPN（翻墙）</h3><h4 id="影梭"><a href="#影梭" class="headerlink" title="影梭"></a><strong>影梭</strong></h4><p><a href="http://shadowsocks.org/en/index.html" target="_blank" rel="noopener">Shadowsocks官网 有Client和Server下载，常用配置</a></p>
<p>Chrome插件：<a href="http://okzhjyy82.bkt.clouddn.com/SwitchyOptions.bak" target="_blank" rel="noopener">SwitchyOptions.bak下载</a><br><strong>Ubuntu直接安装</strong></p>
<pre class="line-numbers language-shell"><code class="language-shell">sudo add-apt-repository ppa:hzwhuang/ss-qt5
sudo apt-get update
sudo apt-get install shadowsocks-qt5
ss-qt5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="软件配置及使用"><a href="#软件配置及使用" class="headerlink" title="软件配置及使用"></a>软件配置及使用</h2><h3 id="常用配置-1"><a href="#常用配置-1" class="headerlink" title="常用配置"></a>常用配置</h3><ol>
<li><a href="http://www.linuxidc.com/Linux/2014-02/97349.htm" target="_blank" rel="noopener">Ubuntu下配置支持Windows访问的Samba共享</a></li>
</ol>
<h3 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h3><ul>
<li><p>～/.vimrc</p>
<ul>
<li>hi Comment ctermfg =blue #蓝色注释</li>
<li>git config –global core.editor vim</li>
<li>中文乱码  set fencs=utf-8,GB18030,ucs-bom,default,latin1</li>
<li>设置TAB<pre class="line-numbers language-shell"><code class="language-shell">set ts=4  (注：ts是tabstop的缩写，设TAB宽4个空格)
set expandtab
对于已保存的文件，可以使用下面的方法进行空格和TAB的替换：
TAB替换为空格：
:set ts=4
:set expandtab
:%retab!
空格替换为TAB：
:set ts=4
:set noexpandtab
:%retab!
加!是用于处理非空白字符之后的TAB，即所有的TAB，若不加!，则只处理行首的TAB。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
</li>
<li><p>常用命令</p>
<blockquote>
<p>vim  FileName  +LineNumber == vim + LineNumber Filename</p>
</blockquote>
</li>
</ul>
<h2 id="问题解决记录"><a href="#问题解决记录" class="headerlink" title="问题解决记录"></a>问题解决记录</h2><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><ol>
<li>使用：<code>sudo apt-get install openvswitch-switch</code> 报错</li>
</ol>
<pre class="line-numbers language-shell"><code class="language-shell">E: Could not get lock /var/lib/dpkg/lock - open (11: Resource temporarily unavailable)
E: Unable to lock the administration directory (/var/lib/dpkg/), is another process using it?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>解决：</p>
<pre class="line-numbers language-shell"><code class="language-shell">sudo rm /var/cache/apt/archives/lock
sudo rm /var/lib/dpkg/lock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol start="2">
<li><p>ubuntu adb 安装<br>问题：adb devices: ?????? no permissions解决办法</p>
<p><strong>lsusb</strong> ： 查看USB的连接状态</p>
<pre class="line-numbers language-shell"><code class="language-shell">Bus 001 Device 003: ID 04f2:b5a7 Chicony Electronics Co., Ltd 
Bus 001 Device 006: ID 05c6:9091 Qualcomm, Inc. 
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 002 Device 003: ID 0e0f:0002 VMware, Inc. Virtual USB Hub
Bus 002 Device 002: ID 0e0f:0003 VMware, Inc. Virtual Mouse
Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>设置USB</p>
<pre class="line-numbers language-shell"><code class="language-shell"># 编辑
sudo echo '"SUBSYSTEM=="usb", ATTR{idVendor}=="05c6", MODE="0666", GROUP="plugdev""' >>  /etc/udev/rules.d/70-android.rules
# 重启
sudo chmod a+rx /etc/udev/rules.d/70-android.rules
sudo service udev restart
# adb 重启
adb kill-server
adb devices<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>以上没有下过的都无效果，查看硬件手动重启USB调试是否正常<br>参考： <a href="https://www.jianshu.com/p/82fcb8dd8486" target="_blank" rel="noopener">adb devices: ?????? no permissions解决办法</a></p>
</li>
</ol>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><ul>
<li><a href="https://blog.csdn.net/sxhong/article/details/78355341" target="_blank" rel="noopener">Centos国内下载源</a></li>
<li><a href="https://blog.csdn.net/CSDN1887/article/details/81540311" target="_blank" rel="noopener">CentOS国内镜像-YUM源更新</a></li>
</ul>
<h2 id="日常解决问题"><a href="#日常解决问题" class="headerlink" title="日常解决问题"></a>日常解决问题</h2><ul>
<li><p>设置影梭代理</p>
<pre class="line-numbers language-shell"><code class="language-shell">#1.临时方案
export ALL_PROXY=socks5://127.0.0.1:1080
#永久方案
echo export ALL_PROXY=socks5://127.0.0.1:1080 >> ~/.bash_profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>ubuntu 下 su: Authentication failure</p>
<pre class="line-numbers language-shell"><code class="language-shell">sudo passwd root
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p><strong>Linux termial shortcut</strong> 终端操作快捷键</p>
<table>
<thead>
<tr>
<th align="center">cmd</th>
<th align="center">function</th>
</tr>
</thead>
<tbody><tr>
<td align="center">ctrl + a /&lt;-</td>
<td align="center">move to line head</td>
</tr>
<tr>
<td align="center">ctrl + e/-&gt;</td>
<td align="center">move to line tail</td>
</tr>
<tr>
<td align="center">ctrl + b /f</td>
<td align="center">move back/front  a char</td>
</tr>
<tr>
<td align="center">alt + b</td>
<td align="center">move back a word</td>
</tr>
<tr>
<td align="center">ctrl+w</td>
<td align="center">delete a word before cursor</td>
</tr>
<tr>
<td align="center">alt + d</td>
<td align="center">delete a word after cursor</td>
</tr>
<tr>
<td align="center">ctrl +k</td>
<td align="center">delete all word after cursor</td>
</tr>
</tbody></table>
<h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><h3 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h3><ul>
<li><a href="http://www.cnblogs.com/stephen-liu74/archive/2011/12/20/2285454.html" target="_blank" rel="noopener"> </a><a href="http://www.cnblogs.com/stephen-liu74/archive/2011/12/20/2285454.html" target="_blank" rel="noopener">Linux shell 常用技巧系列教程</a> </li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>设计循环队列-LeetCode</title>
    <url>/2019/09/16/2019-9-16-circle-queue-LeetCode/</url>
    <content><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="英文"><a href="#英文" class="headerlink" title="英文"></a>英文</h2><p>Design your implementation of the circular queue. The circular queue is a linear data structure in which the operations are performed based on FIFO (First In First Out) principle and the last position is connected back to the first position to make a circle. It is also called “Ring Buffer”.</p>
<p>One of the benefits of the circular queue is that we can make use of the spaces in front of the queue. In a normal queue, once the queue becomes full, we cannot insert the next element even if there is a space in front of the queue. But using the circular queue, we can use the space to store new values.</p>
<p>Your implementation should support following operations:</p>
<ul>
<li><code>MyCircularQueue(k)</code>: Constructor, set the size of the queue to be k.</li>
<li><code>Front</code>: Get the front item from the queue. If the queue is empty, return -1.</li>
<li><code>Rear</code>: Get the last item from the queue. If the queue is empty, return -1.</li>
<li><code>enQueue(value)</code>: Insert an element into the circular queue. Return true if the operation is successful.</li>
<li><code>deQueue()</code>: Delete an element from the circular queue. Return true if the operation is successful.</li>
<li><code>isEmpty()</code>: Checks whether the circular queue is empty or not.</li>
<li><code>isFull()</code>: Checks whether the circular queue is full or not.</li>
</ul>
<h2 id="中文"><a href="#中文" class="headerlink" title="中文"></a>中文</h2><p>设计你的循环队列实现。 循环队列是一种线性数据结构，其操作表现基于 FIFO（先进先出）原则并且队尾被连接在队首之后以形成一个循环。它也被称为“环形缓冲器”。</p>
<p>循环队列的一个好处是我们可以利用这个队列之前用过的空间。在一个普通队列里，一旦一个队列满了，我们就不能插入下一个元素，即使在队列前面仍有空间。但是使用循环队列，我们能使用这些空间去存储新的值。</p>
<p>你的实现应该支持如下操作：</p>
<p>MyCircularQueue(k): 构造器，设置队列长度为 k 。<br>Front: 从队首获取元素。如果队列为空，返回 -1 。<br>Rear: 获取队尾元素。如果队列为空，返回 -1 。<br>enQueue(value): 向循环队列插入一个元素。如果成功插入则返回真。<br>deQueue(): 从循环队列中删除一个元素。如果成功删除则返回真。<br>isEmpty(): 检查循环队列是否为空。<br>isFull(): 检查循环队列是否已满。</p>
<h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><h2 id="官方解法-更符合题意"><a href="#官方解法-更符合题意" class="headerlink" title="官方解法-更符合题意"></a>官方解法-更符合题意</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">MyCircularQueue</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> queue<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span>front<span class="token punctuation">,</span>rear<span class="token punctuation">;</span>

  <span class="token comment" spellcheck="true">/** Initialize your data structure here. Set the size of the queue to be k. */</span>
  <span class="token keyword">public</span> <span class="token function">MyCircularQueue</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/** Insert an element into the circular queue. Return true if the operation is successful. */</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">enQueue</span><span class="token punctuation">(</span><span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>  <span class="token boolean">false</span><span class="token punctuation">;</span>
    queue<span class="token punctuation">[</span>rear<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    rear <span class="token operator">=</span> <span class="token punctuation">(</span>rear <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    count <span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/** Delete an element from the circular queue. Return true if the operation is successful. */</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">deQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>  <span class="token boolean">false</span><span class="token punctuation">;</span>
    front <span class="token operator">=</span> <span class="token punctuation">(</span>front <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    count <span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/** Get the front item from the queue. */</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">Front</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> queue<span class="token punctuation">[</span>front<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/** Get the last item from the queue. */</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">Rear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>  <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> rear <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> queue<span class="token punctuation">[</span>queue<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">:</span> queue<span class="token punctuation">[</span>rear <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/** Checks whether the circular queue is empty or not. */</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/** Checks whether the circular queue is full or not. */</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isFull</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> count <span class="token operator">==</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="解法二：利用数组长度和计数降低难度"><a href="#解法二：利用数组长度和计数降低难度" class="headerlink" title="解法二：利用数组长度和计数降低难度"></a>解法二：利用数组长度和计数降低难度</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">MyCircularQueue</span> <span class="token punctuation">{</span>

  <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> queue<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span>front<span class="token punctuation">,</span>rear<span class="token punctuation">;</span>

  <span class="token comment" spellcheck="true">/** Initialize your data structure here. Set the size of the queue to be k. */</span>
  <span class="token keyword">public</span> <span class="token function">MyCircularQueue</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/** Insert an element into the circular queue. Return true if the operation is successful. */</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">enQueue</span><span class="token punctuation">(</span><span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>  <span class="token boolean">false</span><span class="token punctuation">;</span>
    queue<span class="token punctuation">[</span>rear<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    rear <span class="token operator">=</span> <span class="token punctuation">(</span>rear <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    count <span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/** Delete an element from the circular queue. Return true if the operation is successful. */</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">deQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>  <span class="token boolean">false</span><span class="token punctuation">;</span>
    front <span class="token operator">=</span> <span class="token punctuation">(</span>front <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    count <span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/** Get the front item from the queue. */</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">Front</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> queue<span class="token punctuation">[</span>front<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/** Get the last item from the queue. */</span>
  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">Rear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>  <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> rear <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> queue<span class="token punctuation">[</span>queue<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">:</span> queue<span class="token punctuation">[</span>rear <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/** Checks whether the circular queue is empty or not. */</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/** Checks whether the circular queue is full or not. */</span>
  <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isFull</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> count <span class="token operator">==</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>leetcode</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义View知识架构体系</title>
    <url>/2019/09/15/2019-9-15-custom_view_note/</url>
    <content><![CDATA[<h1 id="第一章-入门基本类熟悉"><a href="#第一章-入门基本类熟悉" class="headerlink" title="第一章 入门基本类熟悉"></a>第一章 入门基本类熟悉</h1><h2 id="第1节-Canvas"><a href="#第1节-Canvas" class="headerlink" title="第1节 Canvas"></a>第1节 Canvas</h2><h3 id="Canvas-使用方法概述"><a href="#Canvas-使用方法概述" class="headerlink" title="Canvas 使用方法概述"></a>Canvas 使用方法概述</h3><ul>
<li>drawXXX() -&gt; 绘制基本图形类方法： </li>
<li><strong>clipRect</strong>()  -&gt; 类似于现实中的A4画纸裁剪</li>
<li>save(), restore(), rotate() translate() -&gt; 可以联想现实中把画纸移动、旋转找的合适的下笔位置，在回复位置</li>
</ul>
<h3 id="方法举例"><a href="#方法举例" class="headerlink" title="方法举例"></a>方法举例</h3><p>drawRoundRect(float left, float top, float right, float bottom, float rx, float ry, Paint paint)  画圆角矩形</p>
<p>drawArc(float left, float top, float right, float bottom, float startAngle, float sweepAngle, boolean useCenter, Paint paint) 绘制弧形或扇形</p>
<ul>
<li><code>startAngle</code> 是弧形的起始角度（x 轴的正向，即正右的方向，是 0 度的位置；顺时针为正角度，逆时针为负角度）</li>
<li><code>useCenter</code> 表示是否连接到圆心，如果不连接到圆心，就是弧形，如果连接到圆心，就是扇形。</li>
</ul>
<ol>
<li><h4 id="Canvas-scale-float-sx-float-sy-float-px-float-py-放缩"><a href="#Canvas-scale-float-sx-float-sy-float-px-float-py-放缩" class="headerlink" title="Canvas.scale(float sx, float sy, float px, float py) 放缩"></a>Canvas.scale(float sx, float sy, float px, float py) 放缩</h4></li>
<li><h4 id="skew-float-sx-float-sy-错切"><a href="#skew-float-sx-float-sy-错切" class="headerlink" title="skew(float sx, float sy) 错切"></a>skew(float sx, float sy) 错切</h4></li>
<li><h4 id="Matrix-来做自定义变换"><a href="#Matrix-来做自定义变换" class="headerlink" title="Matrix 来做自定义变换"></a>Matrix 来做自定义变换</h4><pre class="line-numbers language-java"><code class="language-java">Matrix matrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Matrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token keyword">float</span> pointsSrc <span class="token operator">=</span> <span class="token punctuation">{</span>left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> right<span class="token punctuation">,</span> top<span class="token punctuation">,</span> left<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> right<span class="token punctuation">,</span> bottom<span class="token punctuation">}</span><span class="token punctuation">;</span>  
<span class="token keyword">float</span> pointsDst <span class="token operator">=</span> <span class="token punctuation">{</span>left <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">,</span> top <span class="token operator">+</span> <span class="token number">50</span><span class="token punctuation">,</span> right <span class="token operator">+</span> <span class="token number">120</span><span class="token punctuation">,</span> top <span class="token operator">-</span> <span class="token number">90</span><span class="token punctuation">,</span> left <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">,</span> bottom <span class="token operator">+</span> <span class="token number">30</span><span class="token punctuation">,</span> right <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">,</span> bottom <span class="token operator">+</span> <span class="token number">60</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

matrix<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
matrix<span class="token punctuation">.</span><span class="token function">setPolyToPoly</span><span class="token punctuation">(</span>pointsSrc<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> pointsDst<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
canvas<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span><span class="token punctuation">;</span>  
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>  
canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="Canvas图层的概念"><a href="#Canvas图层的概念" class="headerlink" title="Canvas图层的概念"></a>Canvas图层的概念</h3><p>主要方法</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//新建图层</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">saveLayer</span><span class="token punctuation">(</span><span class="token keyword">float</span> left<span class="token punctuation">,</span> <span class="token keyword">float</span> top<span class="token punctuation">,</span> <span class="token keyword">float</span> right<span class="token punctuation">,</span> <span class="token keyword">float</span> bottom<span class="token punctuation">,</span> Paint paint<span class="token punctuation">,</span> <span class="token keyword">int</span> saveFlags<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//切换到指定图层的上一级图层</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">restoreToCount</span><span class="token punctuation">(</span><span class="token keyword">int</span> saveCount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment" spellcheck="true">//获取图层数量</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getSaveCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>drawBitmapMesh(Bitmap bitmap, int meshWidth, int meshHeight, float[] verts, int vertOffset, int[] colors, int colorOffset, Paint paint)  </p>
<p><strong>第二是以clipXXX为主的裁剪方法</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token function">clipPath</span><span class="token punctuation">(</span>Path path<span class="token punctuation">,</span> Region<span class="token punctuation">.</span>Op op<span class="token punctuation">)</span>  
<span class="token function">clipRect</span><span class="token punctuation">(</span>Rect rect<span class="token punctuation">,</span> Region<span class="token punctuation">.</span>Op op<span class="token punctuation">)</span>  
<span class="token function">clipRect</span><span class="token punctuation">(</span>RectF rect<span class="token punctuation">,</span> Region<span class="token punctuation">.</span>Op op<span class="token punctuation">)</span>  
<span class="token function">clipRect</span><span class="token punctuation">(</span><span class="token keyword">float</span> left<span class="token punctuation">,</span> <span class="token keyword">float</span> top<span class="token punctuation">,</span> <span class="token keyword">float</span> right<span class="token punctuation">,</span> <span class="token keyword">float</span> bottom<span class="token punctuation">,</span> Region<span class="token punctuation">.</span>Op op<span class="token punctuation">)</span>  
<span class="token function">clipRegion</span><span class="token punctuation">(</span>Region region<span class="token punctuation">,</span> Region<span class="token punctuation">.</span>Op op<span class="token punctuation">)</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>Region.Op参数<br><img src="http://upload-images.jianshu.io/upload_images/1321512-6afab7adc9d61dde.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>与图片的混合模式一样</li>
<li>Region和Rect有什么区别<ul>
<li>Region表示的是一个区域，而Rect表示的是一个矩形</li>
<li>Region有个很特别的地方是它不受Canvas的变换影响，Canvas的local不会直接影响到Region自身。</li>
</ul>
</li>
</ul>
<p><strong>第三是以scale、skew、translate和rotate组成的Canvas变换方法</strong></p>
<ul>
<li><strong>translate(float dx, float dy) 会改变画布的原点坐标</strong> </li>
<li>scale(float sx, float sy, float centerX, float centerY)</li>
</ul>
<p><strong>最后一类则是以saveXXX和restoreXXX构成的画布锁定和还原</strong></p>
<ul>
<li>saveLayer<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">int</span> sc <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">saveLayer</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> screenW<span class="token punctuation">,</span> screenH<span class="token punctuation">,</span> null<span class="token punctuation">,</span> Canvas<span class="token punctuation">.</span>ALL_SAVE_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span>   将绘制操作保存到新的图层
canvas<span class="token punctuation">.</span><span class="token function">restoreToCount</span><span class="token punctuation">(</span>sc<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li>canvas.saveLayerAlpha(0, 0, canvas.getWidth(), canvas.getHeight(), 75, Canvas.ALL_SAVE_FLAG); // 锁定画布并设置画布透明度为75%  </li>
<li>restoreToCount(int saveCount)方法来指定在还原的时候还原哪一个保存操作.</li>
<li>Canvas中有六个常量值：<br><img src="http://upload-images.jianshu.io/upload_images/1321512-e8de6903504eec1c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><ul>
<li>有LAYER单词的只能saveLayerXX方法使用，其他通用。</li>
<li>ALL_SAVE_FLAG 保持所有/CLIP_SAVE_FLAG保持剪裁/MATRIX_SAVE_FLAG 保持变换</li>
<li>CLIP_TO_LAYER_SAVE_FLAG 当前图层执行裁剪操作需要对齐图层边界</li>
<li>FULL_COLOR_LAYER_SAVE_FLAG  当前图层的色彩模式至少需要是8位色</li>
<li>HAS_ALPHA_LAYER_SAVE_FLAG 当前图层中将需要使用逐像素Alpha混合模式 <a href="http://blog.csdn.net/aigestudio/article/details/42677973" target="_blank" rel="noopener">色彩深度和Alpha混合 wiki</a></li>
</ul>
</li>
<li>save和saveLayerXXX方法<blockquote>
<p>save和saveLayerXXX方法有着本质的区别，saveLayerXXX方法会将所有操作在一个新的Bitmap中进行，而save则是依靠stack栈来进行</p>
</blockquote>
</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span>  
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDraw</span><span class="token punctuation">(</span>Canvas canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token comment" spellcheck="true">/* 
     * 保存并裁剪画布填充绿色 
     */</span>  
    <span class="token keyword">int</span> saveID1 <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>Canvas<span class="token punctuation">.</span>CLIP_SAVE_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    canvas<span class="token punctuation">.</span><span class="token function">clipRect</span><span class="token punctuation">(</span>mViewWidth <span class="token operator">/</span> <span class="token number">2F</span> <span class="token operator">-</span> <span class="token number">300</span><span class="token punctuation">,</span> mViewHeight <span class="token operator">/</span> <span class="token number">2F</span> <span class="token operator">-</span> <span class="token number">300</span><span class="token punctuation">,</span> mViewWidth <span class="token operator">/</span> <span class="token number">2F</span> <span class="token operator">+</span> <span class="token number">300</span><span class="token punctuation">,</span> mViewHeight <span class="token operator">/</span> <span class="token number">2F</span> <span class="token operator">+</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    canvas<span class="token punctuation">.</span><span class="token function">drawColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>YELLOW<span class="token punctuation">)</span><span class="token punctuation">;</span>  

    <span class="token comment" spellcheck="true">/* 
     * 保存并裁剪画布填充绿色 
     */</span>  
    <span class="token keyword">int</span> saveID2 <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>Canvas<span class="token punctuation">.</span>CLIP_SAVE_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    canvas<span class="token punctuation">.</span><span class="token function">clipRect</span><span class="token punctuation">(</span>mViewWidth <span class="token operator">/</span> <span class="token number">2F</span> <span class="token operator">-</span> <span class="token number">200</span><span class="token punctuation">,</span> mViewHeight <span class="token operator">/</span> <span class="token number">2F</span> <span class="token operator">-</span> <span class="token number">200</span><span class="token punctuation">,</span> mViewWidth <span class="token operator">/</span> <span class="token number">2F</span> <span class="token operator">+</span> <span class="token number">200</span><span class="token punctuation">,</span> mViewHeight <span class="token operator">/</span> <span class="token number">2F</span> <span class="token operator">+</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    canvas<span class="token punctuation">.</span><span class="token function">drawColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>GREEN<span class="token punctuation">)</span><span class="token punctuation">;</span>  

    <span class="token comment" spellcheck="true">/* 
     * 保存画布并旋转后绘制一个蓝色的矩形 
     */</span>  
    <span class="token keyword">int</span> saveID3 <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>Canvas<span class="token punctuation">.</span>MATRIX_SAVE_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    canvas<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    mPaint<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>BLUE<span class="token punctuation">)</span><span class="token punctuation">;</span>  
    canvas<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span>mViewWidth <span class="token operator">/</span> <span class="token number">2F</span> <span class="token operator">-</span> <span class="token number">100</span><span class="token punctuation">,</span> mViewHeight <span class="token operator">/</span> <span class="token number">2F</span> <span class="token operator">-</span> <span class="token number">100</span><span class="token punctuation">,</span> mViewWidth <span class="token operator">/</span> <span class="token number">2F</span> <span class="token operator">+</span> <span class="token number">100</span><span class="token punctuation">,</span> mViewHeight <span class="token operator">/</span> <span class="token number">2F</span> <span class="token operator">+</span> <span class="token number">100</span><span class="token punctuation">,</span> mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>以上的代码产生<br><img src="http://upload-images.jianshu.io/upload_images/1321512-d7c318273bf16c36.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Canvas内部Stack"></p>
<ol>
<li>没有restore前saveID3,saveID2,saveID1,Default Stack ID相互影响。</li>
<li>restoreToCount(int saveCount) 还原特定Stack空间。</li>
<li>getSaveCount() 查询当前栈中有多少save的空间</li>
</ol>
<h2 id="第2节-Paint"><a href="#第2节-Paint" class="headerlink" title="第2节 Paint"></a>第2节 Paint</h2><h3 id="初始化类"><a href="#初始化类" class="headerlink" title="初始化类"></a>初始化类</h3><ul>
<li><h3 id="reset-相当于重新-new-一个，不过性能当然高一些啦"><a href="#reset-相当于重新-new-一个，不过性能当然高一些啦" class="headerlink" title="reset() 相当于重新 new 一个，不过性能当然高一些啦"></a>reset() 相当于重新 <code>new</code> 一个，不过性能当然高一些啦</h3></li>
<li><h3 id="set-Paint-src-属性全部复制过来"><a href="#set-Paint-src-属性全部复制过来" class="headerlink" title="set(Paint src) 属性全部复制过来"></a>set(Paint src) 属性全部复制过来</h3></li>
<li><h3 id="setFlags-int-flags"><a href="#setFlags-int-flags" class="headerlink" title="setFlags(int flags)"></a>setFlags(int flags)</h3><pre class="line-numbers language-java"><code class="language-java">paint<span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>ANTI_ALIAS_FLAG <span class="token operator">|</span> Paint<span class="token punctuation">.</span>DITHER_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">//等价于</span>
paint<span class="token punctuation">.</span><span class="token function">setAntiAlias</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
paint<span class="token punctuation">.</span><span class="token function">setDither</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="笔头属性"><a href="#笔头属性" class="headerlink" title="笔头属性"></a>笔头属性</h3><ol>
<li><h5 id="Paint-setStyle-Paint-Style-style"><a href="#Paint-setStyle-Paint-Style-style" class="headerlink" title="Paint.setStyle(Paint.Style style)"></a>Paint.setStyle(Paint.Style style)</h5><ol>
<li><code>FILL</code> 是填充模式 （默认）</li>
<li><code>STROKE</code> 是画线模式（即勾边模式）</li>
<li><code>FILL_AND_STROKE</code> 是两种模式一并使用</li>
</ol>
</li>
<li><h5 id="Paint-setStrokeWidth-float-width-非填充模式下下，设置笔头（线条）粗细"><a href="#Paint-setStrokeWidth-float-width-非填充模式下下，设置笔头（线条）粗细" class="headerlink" title="Paint.setStrokeWidth(float width) 非填充模式下下，设置笔头（线条）粗细"></a>Paint.setStrokeWidth(float width) 非填充模式下下，设置笔头（线条）粗细</h5></li>
<li><p>setDither(boolean dither);   设定是否使用图像抖动处理，会使绘制出来的图片颜色更加平滑和饱满，图像更加清晰 </p>
</li>
<li><h5 id="抗锯齿"><a href="#抗锯齿" class="headerlink" title="抗锯齿"></a>抗锯齿</h5><pre class="line-numbers language-java"><code class="language-java">Paint paint <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>ANTI_ALIAS_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment" spellcheck="true">//或</span>
Paint<span class="token punctuation">.</span><span class="token function">setAntiAlias</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> aa<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>原理：修改图形边缘处的像素颜色，从而<strong>让图形在肉眼看来具有更加平滑的感觉</strong></p>
<p><img src="http://cdn.linz.tech/ANTI_ALIAS_FLAG.jpg" alt=""></p>
</li>
</ol>
<h3 id="笔锋属性及线条"><a href="#笔锋属性及线条" class="headerlink" title="笔锋属性及线条"></a>笔锋属性及线条</h3><pre class="line-numbers language-java"><code class="language-java">mPaint<span class="token punctuation">.</span><span class="token function">setStrokeCap</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>Cap<span class="token punctuation">.</span>ROUND<span class="token punctuation">)</span><span class="token punctuation">;</span>
mPaint<span class="token punctuation">.</span><span class="token function">setStrokeJoin</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>Join<span class="token punctuation">.</span>BEVEL<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><img src="http://cdn.linz.tech/android_cap_join_2019-09-14_15-13-37.png" alt=""></p>
<h4 id="PathEffect"><a href="#PathEffect" class="headerlink" title="PathEffect"></a>PathEffect</h4><p>setPathEffect(PathEffect effect)</p>
<p><a href="https://hencoder.com/ui-1-2/" target="_blank" rel="noopener">https://hencoder.com/ui-1-2/</a></p>
<blockquote>
<p>使用 <code>PathEffect</code> 来给图形的轮廓设置效果。对 <code>Canvas</code> 所有的图形绘制有效，也就是 <code>drawLine()</code> <code>drawCircle()</code> <code>drawPath()</code> 这些方法。</p>
</blockquote>
<ul>
<li><h4 id="CornerPathEffect-拐角变成圆角-可以将路径的转角变得圆滑"><a href="#CornerPathEffect-拐角变成圆角-可以将路径的转角变得圆滑" class="headerlink" title="CornerPathEffect 拐角变成圆角 可以将路径的转角变得圆滑"></a>CornerPathEffect 拐角变成圆角 可以将路径的转角变得圆滑</h4></li>
<li><h4 id="DiscretePathEffect-把线条进行随机的偏离"><a href="#DiscretePathEffect-把线条进行随机的偏离" class="headerlink" title="DiscretePathEffect 把线条进行随机的偏离"></a>DiscretePathEffect 把线条进行随机的偏离</h4></li>
<li><h4 id="DashPathEffect-虚线来绘制线条"><a href="#DashPathEffect-虚线来绘制线条" class="headerlink" title="DashPathEffect 虚线来绘制线条"></a>DashPathEffect 虚线来绘制线条</h4></li>
<li><h4 id="PathDashPathEffect-用一个-Path-来绘制「虚线」"><a href="#PathDashPathEffect-用一个-Path-来绘制「虚线」" class="headerlink" title="PathDashPathEffect 用一个 Path 来绘制「虚线」"></a>PathDashPathEffect 用一个 <code>Path</code> 来绘制「虚线」</h4></li>
<li><h4 id="SumPathEffect-分别单独绘制"><a href="#SumPathEffect-分别单独绘制" class="headerlink" title="SumPathEffect 分别单独绘制"></a>SumPathEffect 分别单独绘制</h4></li>
<li><h4 id="ComposePathEffect-叠加绘制"><a href="#ComposePathEffect-叠加绘制" class="headerlink" title="ComposePathEffect 叠加绘制"></a>ComposePathEffect 叠加绘制</h4></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-a81268e6753051a6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="PathEffect六个子类"><br>对应的效果<br><img src="http://upload-images.jianshu.io/upload_images/1321512-ca3f53229a8b133d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h4 id="StrokeMiter"><a href="#StrokeMiter" class="headerlink" title="StrokeMiter"></a>StrokeMiter</h4><blockquote>
<p>setStrokeMiter(float miter) 是对setStrokeJoin 的补充</p>
</blockquote>
<ol>
<li>作用</li>
</ol>
<p><img src="http://cdn.linz.tech/android_blog_paint_Miter.jpg" alt=""></p>
<ol start="2">
<li>怎么计算miter合理的值<br><img src="http://cdn.linz.tech/android_blog_paint_Miter_value.jpg" alt=""></li>
</ol>
<p>知道角度<code>1 / sin ( θ / 2 )</code></p>
<h3 id="文本绘制属性"><a href="#文本绘制属性" class="headerlink" title="文本绘制属性"></a>文本绘制属性</h3><pre class="line-numbers language-java"><code class="language-java">paint<span class="token punctuation">.</span><span class="token function">setTextSize</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
mPaint<span class="token punctuation">.</span><span class="token function">setTextAlign</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>Align<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">drawText</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol>
<li>setTypeface(Typeface typeface) 字体样式</li>
<li>setUnderlineText(boolean underlineText) 下划线</li>
<li>setStrikeThruText(boolean strikeThruText) 删除线</li>
<li>setFakeBoldText(boolean fakeBoldText) 粗体</li>
<li>setTextScaleX(float scaleX) 缩放因子，默认值为1</li>
<li>setTextSkewX(float skewX) 文本在水平方向上的倾斜，默认值为0，推荐的值为-0.25</li>
<li>setLetterSpacing(float letterSpacing) 设置行的间距，默认值是0，负值行间距会收缩</li>
<li>getFontSpacing() 返回字符行间距</li>
<li>measureForwards 向前还是向后/ maxWidth给定最大距离能测几个字符<br>应用场景：文本阅读器的翻页效果，我们需要在翻页的时候动态折断或生成一行字符串</li>
</ol>
<h4 id="FontMetrics"><a href="#FontMetrics" class="headerlink" title="FontMetrics"></a>FontMetrics</h4><p>mFontMetrics = mPaint.getFontMetrics();<br><img src="http://upload-images.jianshu.io/upload_images/1321512-a310e93aeb2e116e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/1321512-4bfa331febf3c829.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-cdfbd2bc9b21ffbc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>【注】：字符上方或者下方有可能有特殊字符，op的意思其实就是除了Baseline到字符顶端的距离外还应该包含这些符号的高度，bottom的意思也是一样。 通常情况下很少用到，所以忽略，但是Android依然会在绘制文本的时候在文本外层留出一定的边距，这就是为什么top和bottom总会比ascent和descent大一点的原因。</p>
<ul>
<li>ascent()/descent()</li>
</ul>
<h3 id="笔头着色属性"><a href="#笔头着色属性" class="headerlink" title="笔头着色属性"></a>笔头着色属性</h3><pre class="line-numbers language-java"><code class="language-java">paint<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token function">parseColor</span><span class="token punctuation">(</span><span class="token string">"#009688"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
paint<span class="token punctuation">.</span><span class="token function">setARGB</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ul>
<li>setDither(boolean dither) <ol>
<li>用在纯色的绘制</li>
<li>避免出现大片的色带与色块</li>
</ol>
</li>
<li>setShadowLayer(float radius, float dx, float dy, int shadowColor)<ul>
<li><code>radius</code> 是阴影的模糊范围； <code>dx</code> <code>dy</code> 是阴影的偏移量</li>
<li>清除阴影层，使用 <code>clearShadowLayer()</code></li>
<li>在硬件加速开启的情况下， <code>setShadowLayer()</code> 只支持文字的绘制，文字之外的绘制必须关闭硬件加速才能正常绘制阴影</li>
<li>阴影的透明度就使用 <code>paint</code> 的透明度</li>
</ul>
</li>
</ul>
<h4 id="setShader-Shader-shader"><a href="#setShader-Shader-shader" class="headerlink" title="setShader(Shader shader)"></a>setShader(Shader shader)</h4><ol>
<li><h5 id="BitmapShader-用-Bitmap-的像素来作为图形或文字的填充"><a href="#BitmapShader-用-Bitmap-的像素来作为图形或文字的填充" class="headerlink" title="BitmapShader 用 Bitmap 的像素来作为图形或文字的填充"></a>BitmapShader 用 <code>Bitmap</code> 的像素来作为图形或文字的填充</h5></li>
<li><h5 id="LinearGradient-线性渐变"><a href="#LinearGradient-线性渐变" class="headerlink" title="LinearGradient 线性渐变"></a>LinearGradient 线性渐变</h5></li>
<li><h5 id="RadialGradient-辐射渐变"><a href="#RadialGradient-辐射渐变" class="headerlink" title="RadialGradient 辐射渐变"></a>RadialGradient 辐射渐变</h5></li>
<li><h5 id="SweepGradient-扫描渐变"><a href="#SweepGradient-扫描渐变" class="headerlink" title="SweepGradient 扫描渐变"></a>SweepGradient 扫描渐变</h5></li>
<li><p>ComposeShader 混合着色器 两个 <code>Shader</code> 一起使用</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 第一个 Shader：头像的 Bitmap</span>
Bitmap bitmap1 <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>batman<span class="token punctuation">)</span><span class="token punctuation">;</span>  
Shader shader1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BitmapShader</span><span class="token punctuation">(</span>bitmap1<span class="token punctuation">,</span> Shader<span class="token punctuation">.</span>TileMode<span class="token punctuation">.</span>CLAMP<span class="token punctuation">,</span> Shader<span class="token punctuation">.</span>TileMode<span class="token punctuation">.</span>CLAMP<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">// 第二个 Shader：从上到下的线性渐变（由透明到黑色）</span>
Bitmap bitmap2 <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>batman_logo<span class="token punctuation">)</span><span class="token punctuation">;</span>  
Shader shader2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BitmapShader</span><span class="token punctuation">(</span>bitmap2<span class="token punctuation">,</span> Shader<span class="token punctuation">.</span>TileMode<span class="token punctuation">.</span>CLAMP<span class="token punctuation">,</span> Shader<span class="token punctuation">.</span>TileMode<span class="token punctuation">.</span>CLAMP<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">// ComposeShader：结合两个 Shader</span>
Shader shader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComposeShader</span><span class="token punctuation">(</span>shader1<span class="token punctuation">,</span> shader2<span class="token punctuation">,</span> PorterDuff<span class="token punctuation">.</span>Mode<span class="token punctuation">.</span>SRC_OVER<span class="token punctuation">)</span><span class="token punctuation">;</span>  
paint<span class="token punctuation">.</span><span class="token function">setShader</span><span class="token punctuation">(</span>shader<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>其中PorterDuff.Mode 有<br><img src="http://cdn.linz.tech/PorterDuff_2019-09-14_21-36-30.png" alt=""></p>
</li>
</ol>
<h4 id="setColorFilter-ColorFilter-colorFilter"><a href="#setColorFilter-ColorFilter-colorFilter" class="headerlink" title="setColorFilter(ColorFilter colorFilter)"></a>setColorFilter(ColorFilter colorFilter)</h4><ul>
<li><p>LightingColorFilter(int mul, int add) 模拟简单的光照效果, 算法</p>
<pre><code>R' = R * mul.R / 0xff + add.R  
G' = G * mul.G / 0xff + add.G  
B' = B * mul.B / 0xff + add.B  </code></pre></li>
<li><h4 id="PorterDuffColorFilter-int-color-PorterDuff-Mode-mode-使用一个指定的颜色和一种指定的-PorterDuff-Mode-来与绘制对象进行合成"><a href="#PorterDuffColorFilter-int-color-PorterDuff-Mode-mode-使用一个指定的颜色和一种指定的-PorterDuff-Mode-来与绘制对象进行合成" class="headerlink" title="PorterDuffColorFilter (int color, PorterDuff.Mode mode) 使用一个指定的颜色和一种指定的 PorterDuff.Mode 来与绘制对象进行合成"></a>PorterDuffColorFilter (int color, PorterDuff.Mode mode) 使用一个指定的颜色和一种指定的 <code>PorterDuff.Mode</code> 来与绘制对象进行合成</h4></li>
<li><h4 id="ColorMatrixColorFilter"><a href="#ColorMatrixColorFilter" class="headerlink" title="ColorMatrixColorFilter"></a>ColorMatrixColorFilter</h4><p>参考附录一<a href="https://github.com/chengdazhi/StyleImageView" target="_blank" rel="noopener">StyleImageView</a> </p>
</li>
</ul>
<h3 id="合成-Xfermode"><a href="#合成-Xfermode" class="headerlink" title="合成 Xfermode"></a>合成 Xfermode</h3><blockquote>
<p>使用 <code>setXfermode()</code> 正常绘制，必须使用离屏缓存 (Off-screen Buffer) 把内容绘制在额外的层上，再把绘制好的内容贴回 View 中</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 可以做短时的离屏缓冲</span>
<span class="token keyword">int</span> saved <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">saveLayer</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> null<span class="token punctuation">,</span> Canvas<span class="token punctuation">.</span>ALL_SAVE_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span>
Xfermode xfermode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PorterDuffXfermode</span><span class="token punctuation">(</span>PorterDuff<span class="token punctuation">.</span>Mode<span class="token punctuation">.</span>DST_IN<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>rectBitmap<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 画方  </span>
paint<span class="token punctuation">.</span><span class="token function">setXfermode</span><span class="token punctuation">(</span>xfermode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 设置 Xfermode  </span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>circleBitmap<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 画圆  </span>
paint<span class="token punctuation">.</span><span class="token function">setXfermode</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 用完及时清除 Xfermode  </span>
canvas<span class="token punctuation">.</span><span class="token function">restoreToCount</span><span class="token punctuation">(</span>saved<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="setMaskFilter"><a href="#setMaskFilter" class="headerlink" title="setMaskFilter"></a>setMaskFilter</h4><p>基于整个画面来进行过滤</p>
<ol>
<li><h4 id="BlurMaskFilter"><a href="#BlurMaskFilter" class="headerlink" title="BlurMaskFilter"></a>BlurMaskFilter</h4><pre class="line-numbers language-java"><code class="language-java">paint<span class="token punctuation">.</span><span class="token function">setMaskFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BlurMaskFilter</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> BlurMaskFilter<span class="token punctuation">.</span>Blur<span class="token punctuation">.</span>NORMAL<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><strong>另一种思维实现模糊</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 获取位图的Alpha通道图  </span>
     shadowBitmap <span class="token operator">=</span> srcBitmap<span class="token punctuation">.</span><span class="token function">extractAlpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">// 先绘制阴影  </span>
     canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>shadowBitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> shadowPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>  
     <span class="token comment" spellcheck="true">// 再绘制位图  </span>
     canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>srcBitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><h4 id="EmbossMaskFilter-浮雕效果"><a href="#EmbossMaskFilter-浮雕效果" class="headerlink" title="EmbossMaskFilter 浮雕效果"></a>EmbossMaskFilter 浮雕效果</h4></li>
</ol>
<h2 id="第3节-Path"><a href="#第3节-Path" class="headerlink" title="第3节 Path"></a>第3节 Path</h2><ul>
<li>quadTo(float x1, float y1, float x2, float y2)<br><img src="http://upload-images.jianshu.io/upload_images/1321512-6cfc0b62238227a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/1321512-ef369f4f26f04e5a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 实例化路径  </span>
mPath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">// 移动点至[100,100]  </span>
mPath<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">// 连接路径到点  </span>
mPath<span class="token punctuation">.</span><span class="token function">quadTo</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>cubicTo(float x1, float y1, float x2, float y2, float x3, float y3)<br><img src="http://upload-images.jianshu.io/upload_images/1321512-046df21da3e17477.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 实例化路径  </span>
mPath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">// 移动点至[100,100]  </span>
mPath<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">// 连接路径到点  </span>
mPath<span class="token punctuation">.</span><span class="token function">cubicTo</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>arcTo (RectF oval, float startAngle, float sweepAngle)<br><img src="http://upload-images.jianshu.io/upload_images/1321512-66679606910e82c8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 实例化路径  </span>
mPath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">// 移动点至[100,100]  </span>
mPath<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">// 连接路径到点  </span>
RectF oval <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RectF</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
mPath<span class="token punctuation">.</span><span class="token function">arcTo</span><span class="token punctuation">(</span>oval<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>arcTo (RectF oval, float startAngle, float sweepAngle, boolean forceMoveTo)<br><img src="http://upload-images.jianshu.io/upload_images/1321512-a37b819668c0aebb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mPath.arcTo(oval, 0, 90, true); "></li>
<li>rXXXTo方法,坐标相对于当前点，而不是画布原点。<pre class="line-numbers language-java"><code class="language-java"><span class="token function">rCubicTo</span><span class="token punctuation">(</span><span class="token keyword">float</span> x1<span class="token punctuation">,</span> <span class="token keyword">float</span> y1<span class="token punctuation">,</span> <span class="token keyword">float</span> x2<span class="token punctuation">,</span> <span class="token keyword">float</span> y2<span class="token punctuation">,</span> <span class="token keyword">float</span> x3<span class="token punctuation">,</span> <span class="token keyword">float</span> y3<span class="token punctuation">)</span>  
<span class="token function">rLineTo</span><span class="token punctuation">(</span><span class="token keyword">float</span> dx<span class="token punctuation">,</span> <span class="token keyword">float</span> dy<span class="token punctuation">)</span>  
<span class="token function">rMoveTo</span><span class="token punctuation">(</span><span class="token keyword">float</span> dx<span class="token punctuation">,</span> <span class="token keyword">float</span> dy<span class="token punctuation">)</span>  
<span class="token function">rQuadTo</span><span class="token punctuation">(</span><span class="token keyword">float</span> dx1<span class="token punctuation">,</span> <span class="token keyword">float</span> dy1<span class="token punctuation">,</span> <span class="token keyword">float</span> dx2<span class="token punctuation">,</span> <span class="token keyword">float</span> dy2<span class="token punctuation">)</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>addXXX方法<pre class="line-numbers language-java"><code class="language-java"><span class="token function">addCircle</span><span class="token punctuation">(</span><span class="token keyword">float</span> x<span class="token punctuation">,</span> <span class="token keyword">float</span> y<span class="token punctuation">,</span> <span class="token keyword">float</span> radius<span class="token punctuation">,</span> Path<span class="token punctuation">.</span>Direction dir<span class="token punctuation">)</span>  
<span class="token function">addOval</span><span class="token punctuation">(</span><span class="token keyword">float</span> left<span class="token punctuation">,</span> <span class="token keyword">float</span> top<span class="token punctuation">,</span> <span class="token keyword">float</span> right<span class="token punctuation">,</span> <span class="token keyword">float</span> bottom<span class="token punctuation">,</span> Path<span class="token punctuation">.</span>Direction dir<span class="token punctuation">)</span>  
<span class="token function">addRect</span><span class="token punctuation">(</span><span class="token keyword">float</span> left<span class="token punctuation">,</span> <span class="token keyword">float</span> top<span class="token punctuation">,</span> <span class="token keyword">float</span> right<span class="token punctuation">,</span> <span class="token keyword">float</span> bottom<span class="token punctuation">,</span> Path<span class="token punctuation">.</span>Direction dir<span class="token punctuation">)</span>  
<span class="token function">addRoundRect</span><span class="token punctuation">(</span><span class="token keyword">float</span> left<span class="token punctuation">,</span> <span class="token keyword">float</span> top<span class="token punctuation">,</span> <span class="token keyword">float</span> right<span class="token punctuation">,</span> <span class="token keyword">float</span> bottom<span class="token punctuation">,</span> <span class="token keyword">float</span> rx<span class="token punctuation">,</span> <span class="token keyword">float</span> ry<span class="token punctuation">,</span> Path<span class="token punctuation">.</span>Direction dir<span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>addOval Sample 弧线并没与线段连接<pre class="line-numbers language-java"><code class="language-java">mPath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">// 移动点至[100,100]  </span>
mPath<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">// 连接路径到点  </span>
mPath<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">// 添加一条弧线到Path中  </span>
RectF oval <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RectF</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
mPath<span class="token punctuation">.</span><span class="token function">addArc</span><span class="token punctuation">(</span>oval<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="http://upload-images.jianshu.io/upload_images/1321512-d43de1a91d8aa955.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li>Path.Direction.CCW<br><img src="http://upload-images.jianshu.io/upload_images/1321512-19a364da5ab1d0ed.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li>Path.Direction.CW<br><img src="http://upload-images.jianshu.io/upload_images/1321512-aec59eb38640c0f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
</li>
<li>computeBounds() <pre class="line-numbers language-java"><code class="language-java">mComputeRect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RectF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
mEndPath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
mEndPath<span class="token punctuation">.</span><span class="token function">addCircle</span><span class="token punctuation">(</span><span class="token number">380</span><span class="token punctuation">,</span> <span class="token number">380</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> Direction<span class="token punctuation">.</span>CW<span class="token punctuation">)</span><span class="token punctuation">;</span>  
mEndPath<span class="token punctuation">.</span><span class="token function">addRect</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RectF</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Direction<span class="token punctuation">.</span>CW<span class="token punctuation">)</span><span class="token punctuation">;</span>  
mEndPath<span class="token punctuation">.</span><span class="token function">computeBounds</span><span class="token punctuation">(</span>mComputeRect<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//图片如下，返回结果为： （200,230,530,530）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="http://upload-images.jianshu.io/upload_images/1321512-4385d6a94519b1ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
<h2 id="第4节-Camera-【了解】"><a href="#第4节-Camera-【了解】" class="headerlink" title="第4节 Camera 【了解】"></a>第4节 Camera 【了解】</h2><p><a href="https://hencoder.com/ui-1-4/" target="_blank" rel="noopener">https://hencoder.com/ui-1-4/</a></p>
<blockquote>
<p><code>Camera</code> 的三维变换有三类：旋转、平移、移动相机</p>
</blockquote>
<h3 id="Camera-rotate-三维旋转"><a href="#Camera-rotate-三维旋转" class="headerlink" title="Camera.rotate*() 三维旋转"></a>Camera.rotate*() 三维旋转</h3><pre class="line-numbers language-java"><code class="language-java">canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

camera<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 保存 Camera 的状态  </span>
camera<span class="token punctuation">.</span><span class="token function">rotateX</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 旋转 Camera 的三维空间  </span>
camera<span class="token punctuation">.</span><span class="token function">applyToCanvas</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 把旋转投影到 Canvas  </span>
camera<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 恢复 Camera 的状态</span>

canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span> point1<span class="token punctuation">.</span>x<span class="token punctuation">,</span> point1<span class="token punctuation">.</span>y<span class="token punctuation">,</span> paint<span class="token punctuation">)</span><span class="token punctuation">;</span>  
canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Camera-translate-float-x-float-y-float-z-移动"><a href="#Camera-translate-float-x-float-y-float-z-移动" class="headerlink" title="Camera.translate(float x, float y, float z) 移动"></a>Camera.translate(float x, float y, float z) 移动</h3><h3 id="Camera-setLocation-x-y-z-设置虚拟相机的位置"><a href="#Camera-setLocation-x-y-z-设置虚拟相机的位置" class="headerlink" title="Camera.setLocation(x, y, z) 设置虚拟相机的位置"></a>Camera.setLocation(x, y, z) 设置虚拟相机的位置</h3><blockquote>
<p> 单位不是像素，而是 inch</p>
</blockquote>
<p>  在 <code>Camera</code> 中，相机的默认位置是 (0, 0, -8)（英寸）。8 x 72 = 576，所以它的默认位置是 (0, 0, -576)（像素）</p>
<h2 id="View绘制流程"><a href="#View绘制流程" class="headerlink" title="View绘制流程"></a>View绘制流程</h2><p><img src="http://cdn.linz.tech/android_ondraw_2019-09-14_15-13-37.png" alt=""></p>
<ol>
<li>在 <code>ViewGroup</code> 的子类中重写除 <code>dispatchDraw()</code> 以外的绘制方法时，可能需要调用 <code>setWillNotDraw(false)</code>；</li>
<li>在重写的方法有多个选择时，优先选择 <code>onDraw()</code></li>
</ol>
<h1 id="第二章-初学易犯错误"><a href="#第二章-初学易犯错误" class="headerlink" title="第二章 初学易犯错误"></a>第二章 初学易犯错误</h1><h2 id="构造方法缺失"><a href="#构造方法缺失" class="headerlink" title="构造方法缺失"></a>构造方法缺失</h2><blockquote>
<p>原因：把自定义View放在Xml布局文件加载，没有实现带属性的构造方法</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SampleCustomView</span> <span class="token keyword">extends</span> <span class="token class-name">View</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token function">SampleCustomView</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span> <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDraw</span><span class="token punctuation">(</span>Canvas canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDraw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>
    canvas<span class="token punctuation">.</span><span class="token function">drawColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>LTGRAY<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>异常如下：</p>
<pre class="line-numbers language-xml"><code class="language-xml"> Caused by: java.lang.NoSuchMethodException: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init</span><span class="token punctuation">></span></span> [class android.content.Context, interface android.util.AttributeSet]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>原因：布局在inflate SampleCustomView 的时候要把解析完成的属性专递给自定义View</p>
<h2 id="属性继承"><a href="#属性继承" class="headerlink" title="属性继承"></a>属性继承</h2><p>CustomView 代码</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomView</span> <span class="token keyword">extends</span> <span class="token class-name">View</span> <span class="token punctuation">{</span>   
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>attrs.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>declare-styleable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>CustomView<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>reference|color<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>background<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>declare-styleable</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>系统异常提示：</p>
<pre class="line-numbers language-log"><code class="language-log">app\build\intermediates\incremental\mergeDebugResources\merged.dir\values\values.xml:2552: error: duplicate value for resource 'attr/background' with config ''.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果是继承不是系统的View，异常</p>
<pre><code>src\main\res\values\attrs.xml: Error: Found item Attr/radius more than one time</code></pre><p>可以看出Android 在编译的时候会把View 和CustomView 的属性进行合并，也就是说<code>自定义属性具有继承性</code>, 即：</p>
<ol>
<li>自定义View的属性不能和父View同名；</li>
<li>子View继承父View的所有属性；</li>
</ol>
<h2 id="drawText-坐标错误"><a href="#drawText-坐标错误" class="headerlink" title="drawText 坐标错误"></a>drawText 坐标错误</h2><ul>
<li><h3 id="drawText-String-text-float-x-float-y-Paint-paint-（x-y）指如下："><a href="#drawText-String-text-float-x-float-y-Paint-paint-（x-y）指如下：" class="headerlink" title="drawText(String text, float x, float y, Paint paint) ,（x, y）指如下："></a>drawText(String text, float x, float y, Paint paint) ,（x, y）指如下：</h3></li>
</ul>
<p><img src="http://cdn.linz.tech/android_blog_drawText.jpg" alt=""></p>
<h2 id="不知道不会用硬件加速"><a href="#不知道不会用硬件加速" class="headerlink" title="不知道不会用硬件加速"></a>不知道不会用硬件加速</h2><h3 id="什么是硬件加速"><a href="#什么是硬件加速" class="headerlink" title="什么是硬件加速"></a>什么是硬件加速</h3><blockquote>
<h2 id="一句话：用GPU绘制View"><a href="#一句话：用GPU绘制View" class="headerlink" title="一句话：用GPU绘制View"></a>一句话：用GPU绘制View</h2><h3 id="理解：现在很多主流手机机型都会有GPU，甚至比一些电脑的配置都高。手机和电脑硬件架构基本类似，不开启和开启硬件加速，就像集显和有1G显卡的不同，程序员应该秒懂。"><a href="#理解：现在很多主流手机机型都会有GPU，甚至比一些电脑的配置都高。手机和电脑硬件架构基本类似，不开启和开启硬件加速，就像集显和有1G显卡的不同，程序员应该秒懂。" class="headerlink" title="理解：现在很多主流手机机型都会有GPU，甚至比一些电脑的配置都高。手机和电脑硬件架构基本类似，不开启和开启硬件加速，就像集显和有1G显卡的不同，程序员应该秒懂。"></a>理解：现在很多主流手机机型都会有GPU，甚至比一些电脑的配置都高。手机和电脑硬件架构基本类似，不开启和开启硬件加速，就像集显和有1G显卡的不同，程序员应该秒懂。</h3></blockquote>
<p>具体的优化效果是</p>
<ol>
<li>绘制块；</li>
<li>刷新频率提高；</li>
</ol>
<h3 id="怎么开启"><a href="#怎么开启" class="headerlink" title="怎么开启"></a>怎么开启</h3><p>ObjectAnimator</p>
<pre class="line-numbers language-java"><code class="language-java">view<span class="token punctuation">.</span><span class="token function">setLayerType</span><span class="token punctuation">(</span>LAYER_TYPE_HARDWARE<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>  
ObjectAnimator animator <span class="token operator">=</span> ObjectAnimator<span class="token punctuation">.</span><span class="token function">ofFloat</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> <span class="token string">"rotationY"</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

animator<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnimatorListenerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAnimationEnd</span><span class="token punctuation">(</span>Animator animation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        view<span class="token punctuation">.</span><span class="token function">setLayerType</span><span class="token punctuation">(</span>LAYER_TYPE_NONE<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

animator<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>ViewPropertyAnimator</p>
<pre class="line-numbers language-java"><code class="language-java">view<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">rotationY</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">withLayer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// withLayer() 可以自动完成上面这段代码的复杂操作</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="使用条件"><a href="#使用条件" class="headerlink" title="使用条件"></a>使用条件</h3><ol>
<li><p>受到 GPU 绘制方式的限制，<code>Canvas</code> 的有些方法在硬件加速开启式会失效或无法正常工作，如下图</p>
<p><img src="http://ws2.sinaimg.cn/large/006tKfTcly1fjn0huxdm5j30lr0q0n25.jpg" alt=""></p>
<blockquote>
<h2 id="Canvas-调用以上方法需要检测系统API"><a href="#Canvas-调用以上方法需要检测系统API" class="headerlink" title="Canvas` 调用以上方法需要检测系统API"></a>Canvas` 调用以上方法需要检测系统API</h2></blockquote>
</li>
<li><p>只有你在对 translationX translationY rotation alpha 等无需调用 invalidate() 的属性做动画的时候，这种方法才适用 ，故结论是 </p>
<blockquote>
<h2 id="这种方式不适用于基于自定义属性绘制的动画"><a href="#这种方式不适用于基于自定义属性绘制的动画" class="headerlink" title="　这种方式不适用于基于自定义属性绘制的动画"></a>　<strong>这种方式不适用于基于自定义属性绘制的动画</strong></h2></blockquote>
</li>
<li><p>View 在初次绘制时以及每次 <code>invalidate()</code> 后重绘时，需要进行两次的绘制工作（一次绘制到 Layer，一次从 Layer 绘制到显示屏），所以其实它的每次绘制的效率是被降低了的</p>
</li>
</ol>
<h1 id="第三章-怎么向自定义View传参"><a href="#第三章-怎么向自定义View传参" class="headerlink" title="第三章 怎么向自定义View传参"></a>第三章 怎么向自定义View传参</h1><blockquote>
<p> 通过Android自定义属性可以向自定义View传入特定参数</p>
</blockquote>
<h2 id="第1节-最简单案例"><a href="#第1节-最简单案例" class="headerlink" title="第1节 最简单案例"></a>第1节 最简单案例</h2><p>第一步：申明属性，一般存放在<code>value/attrs.xml</code>文件下</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>declare-styleable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>CustomView<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dimension<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radius<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>declare-styleable</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>注意：申明属性的名称最好和自定义View名称一样， 如上面自定义属性，自定义View名称是<code>CustomView</code></p>
<p>第二步：在布局文件xml中使用自定义属性</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>android.support.constraint.ConstraintLayout</span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>iview</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>
    <span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.iview.easyview.CustomView</span>
      <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200dp<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200dp<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">android:</span>layout_marginStart</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>16dp<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">iview:</span>radius</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30dp<span class="token punctuation">"</span></span>
      <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintBottom_toBottomOf</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>
      <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>android.support.constraint.ConstraintLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>解析： </p>
<ul>
<li><code>xmlns:app</code> ,<code>xmlns:iview</code> 虽然指向同一个命名空间（xmlns）<code>http://schemas.android.com/apk/res-auto</code>,但是用不同的名称，意图是让阅读者清楚区分不同的自定义属性归属。 <code>xmlns:app</code> 指向 <code>ConstraintLayout</code> ，<code>xmlns:iview</code> 指向<code>CustomView</code></li>
</ul>
<p>第三步：在自定义View中获取自定义属性，进行动态配置</p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">public</span> <span class="token function">CustomView</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> AttributeSet attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>
    TypedArray ta <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">obtainStyledAttributes</span><span class="token punctuation">(</span>attrs<span class="token punctuation">,</span> R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>CustomView<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mRadius <span class="token operator">=</span> ta<span class="token punctuation">.</span><span class="token function">getDimensionPixelSize</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>CustomView_radius<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ta<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="第2节-8种基本类型传参（format）"><a href="#第2节-8种基本类型传参（format）" class="headerlink" title="第2节 8种基本类型传参（format）"></a>第2节 8种基本类型传参（format）</h2><pre class="line-numbers language-xml"><code class="language-xml">&lt;declare-styleable name = "View">
     &lt;attr name = "background" format = "xxx" />
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>declare-styleable</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>其中xxx可为如下：</p>
<ol>
<li><strong>reference：参考某一资源ID</strong></li>
<li><strong>color：颜色值</strong></li>
<li><strong>boolean：布尔值</strong></li>
<li><strong>dimension：尺寸值</strong></li>
<li><strong>float：浮点值</strong></li>
<li><strong>integer：整型值</strong></li>
<li><strong>string：字符串</strong></li>
<li><strong>fraction：百分数</strong> 如 “200%”</li>
</ol>
<h2 id="第3节-单选，多选混合传参"><a href="#第3节-单选，多选混合传参" class="headerlink" title="第3节 单选，多选混合传参"></a>第3节 单选，多选混合传参</h2><p>单选，<strong>enum：枚举值</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml">   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dimension<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>layout_height<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enum</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill_parent<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enum</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enum</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attr</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>多选，<strong>flag：位或运算</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gravity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flag</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x30<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flag</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x50<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flag</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x03<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flag</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x05<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flag</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x10<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attr</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>混合，<strong>混合类型：</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>reference|color<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>background<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>综合应该像这样</p>
<pre class="line-numbers language-xml"><code class="language-xml">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>declare-styleable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>CustomView<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dimension<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radius<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token comment" spellcheck="true">&lt;!--单选--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dimension<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>layout_height<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enum</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill_parent<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enum</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enum</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>wrap_content<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attr</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!--多选--></span>
    <span class="token comment" spellcheck="true">&lt;!--android:gravity="bottom|left"/>--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gravity2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flag</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x30<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flag</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x50<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flag</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x03<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flag</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x05<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flag</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center_vertical<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0x10<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>attr</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!--混合--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>reference|color<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>background<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>declare-styleable</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="第四章-控件默认Style从那来的？Theme原理"><a href="#第四章-控件默认Style从那来的？Theme原理" class="headerlink" title="第四章 控件默认Style从那来的？Theme原理"></a>第四章 控件默认Style从那来的？Theme原理</h1><p>相信很多初学者甚至一些做了几年Android的人对style，对theme都有一种超级复杂的感觉，不想触碰，遇到问题百度一下，解决就算了。但是作为前端UI style的架构逻辑不清楚，真的是一个致命伤的，相信我这个过来人说的话!</p>
<p>我原来也觉得太复杂了，但是研究<img src="http://cdn.linz.tech/0A7EBEC3.jpg" alt="img"> 真的很简单。</p>
<h2 id="Theme原理"><a href="#Theme原理" class="headerlink" title="Theme原理"></a>Theme原理</h2><p><img src="http://cdn.linz.tech/android_theme_base_ui.png" alt=""></p>
<p>如上图是从Android  studio 直接用拖出来的原生控件，学习了自定义属性后，自然会有如下疑问：</p>
<ol>
<li>上面的属性是那来的；</li>
<li>修改主题为什么对应的控件也会出现变化；</li>
</ol>
<p>参考TextView的源代码</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token function">TextView</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> AttributeSet attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> com<span class="token punctuation">.</span>android<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>R<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>textViewStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>白话翻译：当xml布局没有该属性时，读取属性<code>R.attr.textViewStyle</code>指定的属性。</p>
<p>是否这里一脸懵逼，听不懂，怎么用，抓狂呢？具体设置如下：</p>
<p>第一步：增加自定义属性，如下属性<code>StyleInTheme</code>属性；</p>
<p>attr.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!--自定义属性--></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>declare-styleable</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>CustomView<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>string<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mview_1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>string<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mview_2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>string<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mview_3<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>declare-styleable</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!--定义CustomView默认的style--></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>attr</span> <span class="token attr-name">format</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>reference<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>StyleInTheme<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第二步：Theme中设置上面的属性指向一个Style：</p>
<pre class="line-numbers language-xml"><code class="language-xml">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>AppTheme<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Theme.AppCompat.Light.DarkActionBar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!-- Customize your theme here. --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorPrimary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/colorPrimary<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorPrimaryDark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/colorPrimaryDark<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>colorAccent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@color/colorAccent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
      <span class="token comment" spellcheck="true">&lt;!--自定style--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>StyleInTheme<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@style/StyleForTheme<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>StyleForTheme<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">
    &lt;item name=<span class="token string">"mview_1"</span>>declare in theme by style&lt;/item>
    &lt;item name=<span class="token string">"mview_2"</span>>declare in theme by style&lt;/item>
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第三步：在自定义View中指定</p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">public</span> <span class="token function">CustomView</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> AttributeSet attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//R.attr.StyleInTheme 必须和Theme中的属性对应</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span>R<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>StyleInTheme<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token function">CustomView</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> AttributeSet attrs<span class="token punctuation">,</span> <span class="token keyword">int</span> defStyleAttr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> defStyleAttr<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token comment" spellcheck="true">// 可以获取StyleForTheme中设置的属性</span>
    TypedArray a <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">obtainStyledAttributes</span><span class="token punctuation">(</span>attrs<span class="token punctuation">,</span> R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>CustomView<span class="token punctuation">,</span>defStyleAttr<span class="token punctuation">,</span>R<span class="token punctuation">.</span>style<span class="token punctuation">.</span>DefaultStyleRes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    mRadius <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">getDimensionPixelSize</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>CustomView_mview_1<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="设置属性的5等级"><a href="#设置属性的5等级" class="headerlink" title="设置属性的5等级"></a>设置属性的5等级</h2><blockquote>
<p> 明白可设置属性的5等级，style和theme都是浮云</p>
</blockquote>
<p>如上所有的属性解析都指向</p>
<pre class="line-numbers language-java"><code class="language-java">context<span class="token punctuation">.</span><span class="token function">obtainStyledAttributes</span><span class="token punctuation">(</span>attrs<span class="token punctuation">,</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>CustomView<span class="token punctuation">,</span>defStyleAttr<span class="token punctuation">,</span>R<span class="token punctuation">.</span>style<span class="token punctuation">.</span>DefaultStyleRes<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>源码指向Resources#obtainStyledAttributes，如下重点注释</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
* 上面省略...
* &lt;ol>
*     &lt;li> Any attribute values in the given AttributeSet.
*     &lt;li> The style resource specified in the AttributeSet (named
*     "style").
*     &lt;li> The default style specified by &lt;var>defStyleAttr&lt;/var> and
*     &lt;var>defStyleRes&lt;/var>
*     &lt;li> The base values in this theme.
* &lt;/ol>
* ....
**/</span>
<span class="token keyword">public</span> TypedArray <span class="token function">obtainStyledAttributes</span><span class="token punctuation">(</span>AttributeSet set<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> attrs<span class="token punctuation">,</span> <span class="token keyword">int</span> defStyleAttr<span class="token punctuation">,</span> <span class="token keyword">int</span> defStyleRes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> mThemeImpl<span class="token punctuation">.</span><span class="token function">obtainStyledAttributes</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> set<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> defStyleAttr<span class="token punctuation">,</span> defStyleRes<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注释意思是： 定义了一个获取属性的优先级，当两个以上级别同时存在时优先选择级别高的。</p>
<p>如图数字越小优先级越高：</p>
<p><img src="http://cdn.linz.tech/android_attr_level2019-09-14_10-23-21.png" alt="数字越小优先级越高"></p>
<p>根据<code>obtainStyledAttributes</code> 和上图理解Android style 和 Theme的架构体系，So Easy！！</p>
<h2 id="获取Style常用方法"><a href="#获取Style常用方法" class="headerlink" title="获取Style常用方法"></a>获取Style常用方法</h2><pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">final</span> TypedArray a <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">obtainStyledAttributes</span><span class="token punctuation">(</span>
                attrs<span class="token punctuation">,</span> R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>PopupWindow<span class="token punctuation">,</span> defStyleAttr<span class="token punctuation">,</span> defStyleRes<span class="token punctuation">)</span><span class="token punctuation">;</span>
ColorStateList backgroundColor <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">getColorStateList</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>CardView_cardBackgroundColor<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">hasValueOrEmpty</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>PopupWindow_popupAnimationStyle<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">final</span> <span class="token keyword">int</span> animStyle <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">getResourceId</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>styleable<span class="token punctuation">.</span>PopupWindow_popupAnimationStyle<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
a<span class="token punctuation">.</span><span class="token function">recycle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="第五章-View-动画（属性的修改）"><a href="#第五章-View-动画（属性的修改）" class="headerlink" title="第五章 View 动画（属性的修改）"></a>第五章 View 动画（属性的修改）</h1><blockquote>
<h2 id="View-动画的本质是一定时间段内动态的改变View的一个或多个属性，以达到动画的效果"><a href="#View-动画的本质是一定时间段内动态的改变View的一个或多个属性，以达到动画的效果" class="headerlink" title="View 动画的本质是一定时间段内动态的改变View的一个或多个属性，以达到动画的效果"></a>View 动画的本质是一定时间段内动态的改变View的一个或多个属性，以达到动画的效果</h2><h3 id="三个关键要素"><a href="#三个关键要素" class="headerlink" title="三个关键要素"></a>三个关键要素</h3><ol>
<li>起始时间</li>
<li>改变的属性</li>
<li>改变的方式</li>
</ol>
</blockquote>
<h2 id="第1节-改变属性"><a href="#第1节-改变属性" class="headerlink" title="第1节 改变属性"></a>第1节 改变属性</h2><h3 id="最小案例"><a href="#最小案例" class="headerlink" title="最小案例"></a>最小案例</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// imageView1: 500 毫秒</span>
imageView1<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">translationX</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">setDuration</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ObjectAnimator animator <span class="token operator">=</span> 
    ObjectAnimator<span class="token punctuation">.</span><span class="token function">ofFloat</span><span class="token punctuation">(</span>imageView<span class="token punctuation">,</span> <span class="token string">"translationX"</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token comment" spellcheck="true">/*改变属性的最终值*/</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
animator<span class="token punctuation">.</span><span class="token function">setDuration</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
animator<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>因此动画可改变的属性有</p>
<ol>
<li><p>继承于View的属性<br><img src="http://ws1.sinaimg.cn/large/006tKfTcgy1fj7x3rm1xxj30u50laq6y.jpg" alt=""></p>
</li>
<li><p>自定义View中的<code>自定义属性</code></p>
</li>
</ol>
<h2 id="第2节-改变方式"><a href="#第2节-改变方式" class="headerlink" title="第2节 改变方式"></a>第2节 改变方式</h2><h3 id="2-1-Interpolator"><a href="#2-1-Interpolator" class="headerlink" title="2.1 Interpolator"></a>2.1 Interpolator</h3><p><a href="https://hencoder.com/ui-1-6/" target="_blank" rel="noopener">https://hencoder.com/ui-1-6/</a></p>
<p><a href="https://github.com/MasayukiSuda/EasingInterpolator" target="_blank" rel="noopener"><strong>EasingInterpolator</strong></a></p>
<p><img src="https://raw.githubusercontent.com/MasayukiSuda/EasingInterpolator/master/art/easing.png" alt=""></p>
<h3 id="2-2-自定义-Evaluator"><a href="#2-2-自定义-Evaluator" class="headerlink" title="2.2 自定义 Evaluator"></a>2.2 自定义 Evaluator</h3><blockquote>
<h2 id="给起始值和进行的百分比，想要什么值自己定算法"><a href="#给起始值和进行的百分比，想要什么值自己定算法" class="headerlink" title="给起始值和进行的百分比，想要什么值自己定算法"></a>给起始值和进行的百分比，想要什么值自己定算法</h2></blockquote>
<p>案例一：颜色渐变Demo</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 自定义 HslEvaluator h 色度，s饱和度 l亮度</span>
<span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">HsvEvaluator</span> <span class="token keyword">implements</span> <span class="token class-name">TypeEvaluator</span><span class="token operator">&lt;</span>Integer<span class="token operator">></span> <span class="token punctuation">{</span>  
   <span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span> startHsv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">float</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span> endHsv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">float</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token keyword">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span> outHsv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">float</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

   <span class="token annotation punctuation">@Override</span>
   <span class="token keyword">public</span> Integer <span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token keyword">float</span> fraction<span class="token punctuation">,</span> Integer startValue<span class="token punctuation">,</span> Integer endValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token comment" spellcheck="true">// 把 ARGB 转换成 HSV</span>
       Color<span class="token punctuation">.</span><span class="token function">colorToHSV</span><span class="token punctuation">(</span>startValue<span class="token punctuation">,</span> startHsv<span class="token punctuation">)</span><span class="token punctuation">;</span>
       Color<span class="token punctuation">.</span><span class="token function">colorToHSV</span><span class="token punctuation">(</span>endValue<span class="token punctuation">,</span> endHsv<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment" spellcheck="true">// 计算当前动画完成度（fraction）所对应的颜色值</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>endHsv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> startHsv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">180</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           endHsv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">360</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>endHsv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> startHsv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">180</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           endHsv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">360</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       outHsv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> startHsv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>endHsv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> startHsv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> fraction<span class="token punctuation">;</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>outHsv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">360</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           outHsv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">360</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>outHsv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           outHsv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">360</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       outHsv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> startHsv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>endHsv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> startHsv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> fraction<span class="token punctuation">;</span>
       outHsv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> startHsv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>endHsv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> startHsv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> fraction<span class="token punctuation">;</span>

       <span class="token comment" spellcheck="true">// 计算当前动画完成度（fraction）所对应的透明度</span>
       <span class="token keyword">int</span> alpha <span class="token operator">=</span> startValue <span class="token operator">>></span> <span class="token number">24</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>endValue <span class="token operator">>></span> <span class="token number">24</span> <span class="token operator">-</span> startValue <span class="token operator">>></span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">*</span> fraction<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token comment" spellcheck="true">// 把 HSV 转换回 ARGB 返回</span>
       <span class="token keyword">return</span> Color<span class="token punctuation">.</span><span class="token function">HSVToColor</span><span class="token punctuation">(</span>alpha<span class="token punctuation">,</span> outHsv<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

ObjectAnimator animator <span class="token operator">=</span> ObjectAnimator<span class="token punctuation">.</span><span class="token function">ofInt</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> <span class="token string">"color"</span><span class="token punctuation">,</span> <span class="token number">0xff00ff00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">// 使用自定义的 HslEvaluator</span>
animator<span class="token punctuation">.</span><span class="token function">setEvaluator</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HsvEvaluator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
animator<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>案例二：使用Point（坐标）进行物体线路改变</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">class</span> <span class="token class-name">PointFEvaluator</span> <span class="token keyword">implements</span> <span class="token class-name">TypeEvaluator</span><span class="token operator">&lt;</span>PointF<span class="token operator">></span> <span class="token punctuation">{</span>  
   PointF newPoint <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PointF</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token annotation punctuation">@Override</span>
   <span class="token keyword">public</span> PointF <span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token keyword">float</span> fraction<span class="token punctuation">,</span> PointF startValue<span class="token punctuation">,</span> PointF endValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">float</span> x <span class="token operator">=</span> startValue<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token punctuation">(</span>fraction <span class="token operator">*</span> <span class="token punctuation">(</span>endValue<span class="token punctuation">.</span>x <span class="token operator">-</span> startValue<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">float</span> y <span class="token operator">=</span> startValue<span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token punctuation">(</span>fraction <span class="token operator">*</span> <span class="token punctuation">(</span>endValue<span class="token punctuation">.</span>y <span class="token operator">-</span> startValue<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

       newPoint<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token keyword">return</span> newPoint<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

ObjectAnimator animator <span class="token operator">=</span> ObjectAnimator<span class="token punctuation">.</span><span class="token function">ofObject</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> <span class="token string">"position"</span><span class="token punctuation">,</span>  
        <span class="token keyword">new</span> <span class="token class-name">PointFEvaluator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">PointF</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">PointF</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
animator<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="2-3-一次改变多个属性"><a href="#2-3-一次改变多个属性" class="headerlink" title="2.3 一次改变多个属性"></a>2.3 一次改变多个属性</h3><p>三种方式</p>
<ol>
<li>原生方式</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java">view<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">scaleX</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">scaleY</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">alpha</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li><p>PropertyValuesHolder 方式</p>
<pre class="line-numbers language-java"><code class="language-java">PropertyValuesHolder holder1 <span class="token operator">=</span> PropertyValuesHolder<span class="token punctuation">.</span><span class="token function">ofFloat</span><span class="token punctuation">(</span><span class="token string">"scaleX"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
PropertyValuesHolder holder2 <span class="token operator">=</span> PropertyValuesHolder<span class="token punctuation">.</span><span class="token function">ofFloat</span><span class="token punctuation">(</span><span class="token string">"scaleY"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
PropertyValuesHolder holder3 <span class="token operator">=</span> PropertyValuesHolder<span class="token punctuation">.</span><span class="token function">ofFloat</span><span class="token punctuation">(</span><span class="token string">"alpha"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ObjectAnimator animator <span class="token operator">=</span> ObjectAnimator<span class="token punctuation">.</span><span class="token function">ofPropertyValuesHolder</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> holder1<span class="token punctuation">,</span> holder2<span class="token punctuation">,</span> holder3<span class="token punctuation">)</span>  
animator<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>animatorSet方式</p>
<pre class="line-numbers language-java"><code class="language-java">animatorSet<span class="token punctuation">.</span><span class="token function">playTogether</span><span class="token punctuation">(</span>animator1<span class="token punctuation">,</span> animator2<span class="token punctuation">)</span><span class="token punctuation">;</span>  
animatorSet<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="2-4-多属性改变设置顺序"><a href="#2-4-多属性改变设置顺序" class="headerlink" title="2.4 多属性改变设置顺序"></a>2.4 多属性改变设置顺序</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 使用 AnimatorSet.play(animatorA).with/before/after(animatorB)</span>
<span class="token comment" spellcheck="true">// 的方式来精确配置各个 Animator 之间的关系</span>
animatorSet<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span>animator1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>animator2<span class="token punctuation">)</span><span class="token punctuation">;</span>  
animatorSet<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span>animator1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span>animator2<span class="token punctuation">)</span><span class="token punctuation">;</span>  
animatorSet<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span>animator1<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>animator2<span class="token punctuation">)</span><span class="token punctuation">;</span>  
animatorSet<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="2-5-同一个属性关键帧拆分"><a href="#2-5-同一个属性关键帧拆分" class="headerlink" title="2.5 同一个属性关键帧拆分"></a>2.5 同一个属性关键帧拆分</h3><pre class="line-numbers language-java"><code class="language-java"> <span class="token comment" spellcheck="true">// 在 0% 处开始</span>
Keyframe keyframe1 <span class="token operator">=</span> Keyframe<span class="token punctuation">.</span><span class="token function">ofFloat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// 时间经过 50% 的时候，动画完成度 100%</span>
Keyframe keyframe2 <span class="token operator">=</span> Keyframe<span class="token punctuation">.</span><span class="token function">ofFloat</span><span class="token punctuation">(</span><span class="token number">0.5f</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// 时间见过 100% 的时候，动画完成度倒退到 80%，即反弹 20%</span>
Keyframe keyframe3 <span class="token operator">=</span> Keyframe<span class="token punctuation">.</span><span class="token function">ofFloat</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
PropertyValuesHolder holder <span class="token operator">=</span> PropertyValuesHolder<span class="token punctuation">.</span><span class="token function">ofKeyframe</span><span class="token punctuation">(</span><span class="token string">"progress"</span><span class="token punctuation">,</span> keyframe1<span class="token punctuation">,</span> keyframe2<span class="token punctuation">,</span> keyframe3<span class="token punctuation">)</span><span class="token punctuation">;</span>

ObjectAnimator animator <span class="token operator">=</span> ObjectAnimator<span class="token punctuation">.</span><span class="token function">ofPropertyValuesHolder</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> holder<span class="token punctuation">)</span><span class="token punctuation">;</span>
animator<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注解：代码逻辑是根据关键帧（Keyframe），指定Value；定义三个个点（Keyframe, value）</p>
<ol>
<li>（0,0）</li>
<li>（0.5,100）</li>
<li>（1,80）</li>
</ol>
<h2 id="第3节-监听改变"><a href="#第3节-监听改变" class="headerlink" title="第3节 监听改变"></a>第3节 监听改变</h2><p>AnimatorListenerAdapter.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AnimatorListenerAdapter</span> <span class="token keyword">implements</span> <span class="token class-name">Animator<span class="token punctuation">.</span>AnimatorListener</span><span class="token punctuation">,</span>
        Animator<span class="token punctuation">.</span>AnimatorPauseListener <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAnimationCancel</span><span class="token punctuation">(</span>Animator animation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//onAnimationEnd()也会调用，后于Cancel</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAnimationEnd</span><span class="token punctuation">(</span>Animator animation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAnimationRepeat</span><span class="token punctuation">(</span>Animator animation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//由于 ViewPropertyAnimator 不支持重复，所以这个方法对 ViewPropertyAnimator 相当于无效</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAnimationStart</span><span class="token punctuation">(</span>Animator animation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAnimationPause</span><span class="token punctuation">(</span>Animator animation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAnimationResume</span><span class="token punctuation">(</span>Animator animation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="第4节-实战笔记"><a href="#第4节-实战笔记" class="headerlink" title="第4节 实战笔记"></a>第4节 实战笔记</h2><h3 id="4-1-Tween-Animation"><a href="#4-1-Tween-Animation" class="headerlink" title="4.1 Tween Animation"></a>4.1 Tween Animation</h3><p>第一步： <code>res/anim/hyperspace_jump.xml</code> 动画修改逻辑xml配置</p>
<pre class="line-numbers language-xml"><code class="language-xml">&lt;set xmlns:android="http://schemas.android.com/apk/res/android"
    android:interpolator="@[package:]anim/interpolator_resource"
    android:shareInterpolator=["true" | "false"] >
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alpha</span>
        <span class="token attr-name"><span class="token namespace">android:</span>fromAlpha</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>toAlpha</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scale</span>
        <span class="token attr-name"><span class="token namespace">android:</span>fromXScale</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>toXScale</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>fromYScale</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>toYScale</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>pivotX</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>pivotY</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>translate</span>
        <span class="token attr-name"><span class="token namespace">android:</span>fromXDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>toXDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>fromYDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>toYDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rotate</span>
        <span class="token attr-name"><span class="token namespace">android:</span>fromDegrees</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>toDegrees</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>pivotX</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>pivotY</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>float<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span><span class="token punctuation">></span></span>
        ...
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第二步：启动xml动画设置</p>
<pre class="line-numbers language-java"><code class="language-java">ImageView image <span class="token operator">=</span> <span class="token punctuation">(</span>ImageView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>
Animation hyperspaceJump <span class="token operator">=</span> AnimationUtils<span class="token punctuation">.</span><span class="token function">loadAnimation</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> R<span class="token punctuation">.</span>anim<span class="token punctuation">.</span>hyperspace_jump<span class="token punctuation">)</span><span class="token punctuation">;</span>
image<span class="token punctuation">.</span><span class="token function">startAnimation</span><span class="token punctuation">(</span>hyperspaceJump<span class="token punctuation">)</span><span class="token punctuation">;</span>

AnimatorSet set <span class="token operator">=</span> <span class="token punctuation">(</span>AnimatorSet<span class="token punctuation">)</span> AnimatorInflater<span class="token punctuation">.</span><span class="token function">loadAnimator</span><span class="token punctuation">(</span>myContext<span class="token punctuation">,</span>
    R<span class="token punctuation">.</span>animator<span class="token punctuation">.</span>property_animator<span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">setTarget</span><span class="token punctuation">(</span>myObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
set<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第三步：停止</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">stopAnimation</span><span class="token punctuation">(</span>View v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    v<span class="token punctuation">.</span><span class="token function">clearAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">canCancelAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       v<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
    <span class="token punctuation">}</span>    
    animation<span class="token punctuation">.</span><span class="token function">setAnimationListener</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>    
    v<span class="token punctuation">.</span><span class="token function">setAnimation</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**
 * Returns true if the API level supports canceling existing animations via the 
 * ViewPropertyAnimator, and false if it does not 
 * @return true if the API level supports canceling existing animations via the 
 * ViewPropertyAnimator, and false if it does not 
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">canCancelAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Build<span class="token punctuation">.</span>VERSION<span class="token punctuation">.</span>SDK_INT <span class="token operator">>=</span> Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>ICE_CREAM_SANDWICH<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>// 设置切换动画，从右边进入，左边退出<br>on Activity<br>overridePendingTransition(R.anim.in_from_right, R.anim.out_to_left);</p>
<pre class="line-numbers language-xml"><code class="language-xml">//in_from_right.xml
<span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>interpolator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:anim/accelerate_interpolator<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>translate</span>
        <span class="token attr-name"><span class="token namespace">android:</span>duration</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>fromXDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%p<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>toXDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0%p<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">></span></span>

//out_to_left.xml
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>interpolator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:anim/accelerate_interpolator<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>translate</span>
        <span class="token attr-name"><span class="token namespace">android:</span>duration</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>fromXDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0%p<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>toXDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-100%p<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="4-2-Frame-Animation"><a href="#4-2-Frame-Animation" class="headerlink" title="4.2 Frame Animation"></a>4.2 Frame Animation</h3><p>第一步：定义xml文件， 位置<code>res/drawable/rocket_thrust.xml</code>如：</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>animation-list</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">android:</span>oneshot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>drawable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/thrust1<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">android:</span>duration</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>drawable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/thrust2<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">android:</span>duration</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>drawable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@drawable/thrust3<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">android:</span>duration</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>animation-list</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第二步： 使用</p>
<pre class="line-numbers language-java"><code class="language-java">ImageView rocketImage <span class="token operator">=</span> <span class="token punctuation">(</span>ImageView<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>rocket_image<span class="token punctuation">)</span><span class="token punctuation">;</span>
rocketImage<span class="token punctuation">.</span><span class="token function">setBackgroundResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>rocket_thrust<span class="token punctuation">)</span><span class="token punctuation">;</span>
rocketAnimation <span class="token operator">=</span> <span class="token punctuation">(</span>AnimationDrawable<span class="token punctuation">)</span> rocketImage<span class="token punctuation">.</span><span class="token function">getBackground</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
rocketImage<span class="token punctuation">.</span><span class="token function">setOnClickListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">View<span class="token punctuation">.</span>OnClickListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onClick</span><span class="token punctuation">(</span>View view<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        rocketAnimation<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="4-3-Spring-Animation"><a href="#4-3-Spring-Animation" class="headerlink" title="4.3 Spring Animation"></a>4.3 Spring Animation</h3><ul>
<li><a href="https://developer.android.google.cn/guide/topics/graphics/spring-animation" target="_blank" rel="noopener">Animate movement using spring physics</a></li>
<li><a href="https://www.jianshu.com/p/c2962a8135f5" target="_blank" rel="noopener">Android中弹簧动画的那些事 - SpringAnimation</a></li>
</ul>
<h4 id="CustomView案例笔记"><a href="#CustomView案例笔记" class="headerlink" title="CustomView案例笔记"></a>CustomView案例笔记</h4><ul>
<li><a href="http://blog.csdn.net/tianjian4592/article/details/44538605" target="_blank" rel="noopener">一个绚丽的loading动效分析与实现！</a></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-6a6533d24b09bf74.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//知道对应的边,求角度</span>
<span class="token keyword">int</span> angle <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> Math<span class="token punctuation">.</span><span class="token function">toDegrees</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">acos</span><span class="token punctuation">(</span><span class="token punctuation">(</span>mArcRadius <span class="token operator">-</span> mCurrentProgressPosition<span class="token punctuation">)</span>        <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> mArcRadius<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//使用Matrix旋转,位移图片</span>
matrix<span class="token punctuation">.</span><span class="token function">postTranslate</span><span class="token punctuation">(</span>transX<span class="token punctuation">,</span> transY<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">postRotate</span><span class="token punctuation">(</span><span class="token keyword">float</span> degrees<span class="token punctuation">,</span> <span class="token keyword">float</span> px<span class="token punctuation">,</span> <span class="token keyword">float</span> py<span class="token punctuation">)</span><span class="token punctuation">;</span>
canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>mLeafBitmap<span class="token punctuation">,</span> matrix<span class="token punctuation">,</span> mBitmapPaint<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="第六章-UI-布局"><a href="#第六章-UI-布局" class="headerlink" title="第六章 UI 布局"></a>第六章 UI 布局</h1><h2 id="MeasureSpec-常用方法"><a href="#MeasureSpec-常用方法" class="headerlink" title="MeasureSpec 常用方法"></a>MeasureSpec 常用方法</h2><ul>
<li>MeasureSpec类中的三个Mode常量值的意义<br>UNSPECIFIED 表示未指定<br>EXACTLY 老爸已经指定好<br>AT_MOST 表示至多，有一个最大限制</li>
<li>获取Mode，int mode = MeasureSpec.getMode(heightMeasureSpec); </li>
<li>int size = MeasureSpec.getSize(measureSpec);  获得实际大小</li>
<li>int childWidthSpec = MeasureSpec.makeMeasureSpec(width, MeasureSpec.UNSPECIFIED);</li>
<li>measureChildren /measureChild/measureChildWithMargins</li>
<li>setMeasuredDimension()  设置最终测量值</li>
<li>API 11 以前 使用 resolveSize ，以后使用 resolveSizeAndState<pre class="line-numbers language-java"><code class="language-java"><span class="token function">setMeasuredDimension</span><span class="token punctuation">(</span>
<span class="token function">resolveSizeAndState</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">,</span> widthMeasureSpec<span class="token punctuation">,</span> childState <span class="token operator">&lt;&lt;</span> MEASURED_HEIGHT_STATE_SHIFT<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token function">resolveSizeAndState</span><span class="token punctuation">(</span>maxHeight<span class="token punctuation">,</span> heightMeasureSpec<span class="token punctuation">,</span> childState <span class="token operator">&lt;&lt;</span> MEASURED_HEIGHT_STATE_SHIFT<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">final</span> <span class="token keyword">int</span> width <span class="token operator">=</span> <span class="token function">resolveSize</span><span class="token punctuation">(</span><span class="token function">getSuggestedMinimumWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> widthMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">final</span> <span class="token keyword">int</span> height <span class="token operator">=</span> <span class="token function">resolveSize</span><span class="token punctuation">(</span><span class="token function">getSuggestedMinimumHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> heightMeasureSpec<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h2 id="ViewGroup-View"><a href="#ViewGroup-View" class="headerlink" title="ViewGroup/View"></a>ViewGroup/View</h2><p><img src="http://upload-images.jianshu.io/upload_images/1321512-28dbe5083f4f1c2f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/1321512-bb097e636dd027e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>shouldDelayChildPressedState 自定义ViewGroup 为不滚动Group返回false；</li>
<li>Gravity.apply(int gravity, int w, int h, Rect container, Rect outRect)<br>第一个参数表示我们的对其方式值，第二三个参数呢则表示我们要对齐的元素，这里通俗地说就是我们父容器下的子元素，而container参数表示的则是我们父容器的矩形区域，最后一个参数是接收计算后子元素位置区域的矩形对象，随便new个传进去就行，可见apply方式是根据矩形区域来计算对其方式的，所以说非常好用，我们只需在onLayout方法中确定出父容器的矩形区域就可以轻松地计算出子元素根据对其方式出现在父容器中的矩形区域，这一个过程留给大家自行尝试. </li>
</ul>
<h2 id="触摸反馈"><a href="#触摸反馈" class="headerlink" title="触摸反馈"></a>触摸反馈</h2><p><a href="https://blog.csdn.net/lovelease/article/details/81137071" target="_blank" rel="noopener">Android的事件分发机制以及滑动冲突的解决</a></p>
<h2 id="坐标"><a href="#坐标" class="headerlink" title="坐标"></a>坐标</h2><ul>
<li><strong>getGlobalVisibleRect方法的作用是获取视图在屏幕坐标中的可视区域</strong></li>
<li><strong>getLocalVisibleRect的作用是获取视图本身可见的坐标区域，坐标以自己的左上角为原点（0，0）</strong></li>
<li>view.getLocationInWindow(location); //获取在当前窗口内的绝对坐标</li>
<li>view.getLocationOnScreen(location); //获取在整个屏幕内的绝对坐标</li>
<li><a href="http://blog.csdn.net/ztp800201/article/details/17218067" target="_blank" rel="noopener">MotionEvent中getX()和getRawX()的区别</a>  getRowX：触摸点相对于屏幕的坐标  getX： 触摸点相对于按钮的坐标</li>
</ul>
<p>参考：</p>
<ul>
<li><a href="http://www.cnblogs.com/ai-developers/p/4413585.html" target="_blank" rel="noopener">getGlobalVisibleRect和getLocalVisibleRect</a></li>
<li><a href="https://blog.csdn.net/lvxiangan/article/details/19971509" target="_blank" rel="noopener">android坐标</a></li>
</ul>
<h3 id="获取View位置"><a href="#获取View位置" class="headerlink" title="获取View位置"></a>获取View位置</h3><p><img src="http://cdn.linz.tech/android_view_location.png" alt=""></p>
<p>屏幕分辨率为1080x2160</p>
<pre class="line-numbers language-kotlin"><code class="language-kotlin"><span class="token keyword">var</span> rect <span class="token operator">=</span> <span class="token function">Rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
view<span class="token punctuation">.</span><span class="token function">getGlobalVisibleRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span>
rect<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ul>
<li><p>getHitRect/getGlobalVisibleRect -&gt; Rect(882, 1764 - 1036, 1918)</p>
</li>
<li><p>getDrawingRect/getLocalVisibleRect -&gt; Rect(0, 0 - 154, 154)</p>
</li>
</ul>
<h1 id="附录一"><a href="#附录一" class="headerlink" title="附录一"></a>附录一</h1><h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><p><a href="https://blog.csdn.net/unicorn97/article/details/80796234#ConstraintLayoutConstraintSet_329" target="_blank" rel="noopener">Android动画大合集</a></p>
<p><a href="https://blog.csdn.net/aigestudio/article/list/2?t=1&amp;" target="_blank" rel="noopener">定义View 其实很简单</a></p>
<h3 id="Canvas"><a href="#Canvas" class="headerlink" title="Canvas"></a>Canvas</h3><ul>
<li><a href="https://www.jianshu.com/p/550d85419121" target="_blank" rel="noopener">Android画布剪裁函数clipRect详解</a></li>
<li><a href="https://blog.csdn.net/tiankongcheng6/article/details/83000247" target="_blank" rel="noopener">Android canvas.save()与canvas.restore()的使用总结</a></li>
<li><a href="https://blog.csdn.net/chen930724/article/details/50176661" target="_blank" rel="noopener">Android  draw canvas save restore saveLayer 学习</a></li>
</ul>
<h3 id="Style"><a href="#Style" class="headerlink" title="Style"></a>Style</h3><ul>
<li><p><a href="https://www.cnblogs.com/angeldevil/p/3479431.html" target="_blank" rel="noopener">Android中自定义样式与View的构造函数中的第三个参数defStyle的意义</a></p>
</li>
<li><p><a href="https://www.jianshu.com/p/f1fd2d8d5536" target="_blank" rel="noopener">Android中Attributes、defStyleAttr、defStyleRes关系理解与应用</a></p>
</li>
</ul>
<h2 id="图片处理"><a href="#图片处理" class="headerlink" title="图片处理"></a>图片处理</h2><h3 id="开源库"><a href="#开源库" class="headerlink" title="开源库"></a>开源库</h3><ul>
<li><a href="https://github.com/chengdazhi/StyleImageView" target="_blank" rel="noopener">StyleImageView</a><br><img src="https://raw.githubusercontent.com/chengdazhi/StyleImageView/master/images/style_sample.gif" alt=""></li>
</ul>
<h1 id="附录二"><a href="#附录二" class="headerlink" title="附录二"></a>附录二</h1><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><h3 id="Matrix"><a href="#Matrix" class="headerlink" title="Matrix"></a>Matrix</h3><p><img src="http://upload-images.jianshu.io/upload_images/1321512-02b7186177129852.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<blockquote>
<p>除了平移外，缩放、旋转、错切、透视都是需要一个中心点作为参照的，如果没有平移，默认为图形的[0,0]点，平移只需要指定移动的距离即可，平移操作会改变中心点的位置！非常重要！记牢了！</p>
</blockquote>
<ul>
<li>而preXXX和postXXX就是分别表示矩阵的左右乘,左右乘的结果是不同的。</li>
<li>平移left个单位↓平移top个单位，也就是说原本shader的原点应该是画布，不是屏幕。</li>
</ul>
<h2 id="仿写练习"><a href="#仿写练习" class="headerlink" title="仿写练习"></a>仿写练习</h2><p><a href="https://hencoder.com/activity-mock-2/" target="_blank" rel="noopener">https://hencoder.com/activity-mock-2/</a></p>
<p><strong>即刻仿写</strong>： <a href="https://insight.io/github.com/arvinljw/ThumbUpSample/tree/master/" target="_blank" rel="noopener">https://insight.io/github.com/arvinljw/ThumbUpSample/tree/master/</a><br>关于仿写者刘金伟：<br>github： <a href="https://github.com/arvinljw" target="_blank" rel="noopener">https://github.com/arvinljw</a><br>简书： <a href="http://www.jianshu.com/u/8fcc3372beb7" target="_blank" rel="noopener">http://www.jianshu.com/u/8fcc3372beb7</a></p>
<p><strong>薄荷健康仿写</strong>： <a href="https://insight.io/github.com/totond/BooheeRuler/tree/master/" target="_blank" rel="noopener">https://insight.io/github.com/totond/BooheeRuler/tree/master/</a><br>关于仿写者严积楷：<br>github： <a href="https://github.com/totond" target="_blank" rel="noopener">https://github.com/totond</a><br>CSDN： <a href="http://blog.csdn.net/totond" target="_blank" rel="noopener">http://blog.csdn.net/totond</a><br>邮箱： <a href="mailto:yanzhikai_yjk@qq.com" target="_blank" rel="noopener">yanzhikai_yjk@qq.com</a></p>
<p><strong>小米运动仿写</strong>： <a href="https://insight.io/github.com/SickWorm/MISportsConnectWidget/tree/master/" target="_blank" rel="noopener">https://insight.io/github.com/SickWorm/MISportsConnectWidget/tree/master/</a><br>关于仿写者陈浩：<br>github： <a href="https://github.com/SickWorm" target="_blank" rel="noopener">https://github.com/SickWorm</a></p>
<p><strong>Flipboard 仿写</strong>： <a href="https://insight.io/github.com/sunnyxibei/HenCoderPractice/tree/master/" target="_blank" rel="noopener">https://insight.io/github.com/sunnyxibei/HenCoderPractice/tree/master/</a><br>关于仿写者贾元斌：<br>github： <a href="https://github.com/sunnyxibei" target="_blank" rel="noopener">https://github.com/sunnyxibei</a><br>微博： <a href="https://weibo.com/812306989" target="_blank" rel="noopener">https://weibo.com/812306989</a><br>微信： sun521xibei<br>个人博客： <a href="http://timeriver.com.cn/" target="_blank" rel="noopener">http://timeriver.com.cn/</a></p>
<h2 id="自定义View其实很简单案例"><a href="#自定义View其实很简单案例" class="headerlink" title="自定义View其实很简单案例"></a>自定义View其实很简单案例</h2><ul>
<li><p><a href="http://blog.csdn.net/aigestudio/article/details/41316141" target="_blank" rel="noopener">自定义控件其实很简单1/6</a><br><img src="http://upload-images.jianshu.io/upload_images/1321512-e7aad3fae62f26d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
</li>
<li><p><a href="http://blog.csdn.net/aigestudio/article/details/41799811" target="_blank" rel="noopener">自定义控件其实很简单1/3</a><br><img src="http://upload-images.jianshu.io/upload_images/1321512-801e00469b2602c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><code>mRefBitmap = Bitmap.createBitmap(mSrcBitmap, 0, 0, mSrcBitmap.getWidth(), mSrcBitmap.getHeight(), matrix, true);</code>createBitamp + matrix 得到图片的倒影图<br><img src="http://upload-images.jianshu.io/upload_images/1321512-40c2c0171a7c1892.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>核心代码</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 实例化混合模式  </span>
      mXfermode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PorterDuffXfermode</span><span class="token punctuation">(</span>PorterDuff<span class="token punctuation">.</span>Mode<span class="token punctuation">.</span>SCREEN<span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">// 去饱和、提亮、色相矫正  </span>
mBitmapPaint<span class="token punctuation">.</span><span class="token function">setColorFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ColorMatrixColorFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> <span class="token number">0.8587F</span><span class="token punctuation">,</span> <span class="token number">0.2940F</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.0927F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6.79F</span><span class="token punctuation">,</span> <span class="token number">0.0821F</span><span class="token punctuation">,</span> <span class="token number">0.9145F</span><span class="token punctuation">,</span> <span class="token number">0.0634F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6.79F</span><span class="token punctuation">,</span> <span class="token number">0.2019F</span><span class="token punctuation">,</span> <span class="token number">0.1097F</span><span class="token punctuation">,</span> <span class="token number">0.7483F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6.79F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">// 设置径向渐变，渐变中心当然是图片的中心也是屏幕中心，渐变半径我们直接拿图片的高度但是要稍微小一点  </span>
      <span class="token comment" spellcheck="true">// 中心颜色为透明而边缘颜色为黑色  </span>
      mShaderPaint<span class="token punctuation">.</span><span class="token function">setShader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RadialGradient</span><span class="token punctuation">(</span>screenW <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> screenH <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> mBitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">7</span> <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>TRANSPARENT<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>BLACK<span class="token punctuation">,</span> Shader<span class="token punctuation">.</span>TileMode<span class="token punctuation">.</span>CLAMP<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token annotation punctuation">@Override</span>  
  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDraw</span><span class="token punctuation">(</span>Canvas canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
      canvas<span class="token punctuation">.</span><span class="token function">drawColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>BLACK<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token comment" spellcheck="true">// 新建图层  </span>
      <span class="token keyword">int</span> sc <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">saveLayer</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> x <span class="token operator">+</span> mBitmap<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y <span class="token operator">+</span> mBitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> Canvas<span class="token punctuation">.</span>ALL_SAVE_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token comment" spellcheck="true">// 绘制混合颜色  </span>
      canvas<span class="token punctuation">.</span><span class="token function">drawColor</span><span class="token punctuation">(</span><span class="token number">0xcc1c093e</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token comment" spellcheck="true">// 设置混合模式  </span>
      mBitmapPaint<span class="token punctuation">.</span><span class="token function">setXfermode</span><span class="token punctuation">(</span>mXfermode<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token comment" spellcheck="true">// 绘制位图  </span>
      canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>mBitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> mBitmapPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token comment" spellcheck="true">// 还原混合模式  </span>
      mBitmapPaint<span class="token punctuation">.</span><span class="token function">setXfermode</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token comment" spellcheck="true">// 还原画布  </span>
      canvas<span class="token punctuation">.</span><span class="token function">restoreToCount</span><span class="token punctuation">(</span>sc<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token comment" spellcheck="true">// 绘制一个跟图片大小一样的矩形  </span>
      canvas<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> x <span class="token operator">+</span> mBitmap<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y <span class="token operator">+</span> mBitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mShaderPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token punctuation">}</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Matrix ImageView中的应用<br><img src="http://upload-images.jianshu.io/upload_images/1321512-fa91852954be9f0f.gif?imageMogr2/auto-orient/strip" alt=""></p>
</li>
<li><p>Matrix 在ListView中的应用<br><img src="http://upload-images.jianshu.io/upload_images/1321512-5030edba20a127c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token annotation punctuation">@Override</span>  
  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDraw</span><span class="token punctuation">(</span>Canvas canvas<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
      mCamera<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
      mCamera<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
      mCamera<span class="token punctuation">.</span><span class="token function">getMatrix</span><span class="token punctuation">(</span>mMatrix<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      mMatrix<span class="token punctuation">.</span><span class="token function">preTranslate</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
      mMatrix<span class="token punctuation">.</span><span class="token function">postTranslate</span><span class="token punctuation">(</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
      canvas<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>mMatrix<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDraw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      mCamera<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token punctuation">}</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>自定义View<br><img src="http://upload-images.jianshu.io/upload_images/1321512-41c26887d58f3f4f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>关键代码：</p>
<pre class="line-numbers language-java"><code class="language-java"> canvas<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token comment" spellcheck="true">// 平移和旋转画布  </span>
      canvas<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>ccX<span class="token punctuation">,</span> ccY<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      canvas<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token comment" spellcheck="true">// 依次画：(间隔)线(间隔)-圈  </span>
      canvas<span class="token punctuation">.</span><span class="token function">drawLine</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span>largeCricleRadiu <span class="token operator">-</span> space<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span>lineLength <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">-</span> space<span class="token punctuation">,</span> strokePaint<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      canvas<span class="token punctuation">.</span><span class="token function">drawCircle</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span>lineLength <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">-</span> smallCricleRadiu <span class="token operator">-</span> space <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> smallCricleRadiu<span class="token punctuation">,</span> strokePaint<span class="token punctuation">)</span><span class="token punctuation">;</span>  
      <span class="token comment" spellcheck="true">// 释放画布  </span>
      canvas<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>View Path/Canvas的综合应用  <a href="http://blog.csdn.net/aigestudio/article/details/41960507" target="_blank" rel="noopener">5/12</a><br><img src="http://upload-images.jianshu.io/upload_images/1321512-7c44d124a04d43e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
</li>
<li><p>翻页<br><a href="http://blog.csdn.net/aigestudio/article/details/42678541" target="_blank" rel="noopener">翻页（1）</a><br><img src="http://upload-images.jianshu.io/upload_images/1321512-fab59160fd493e92.gif?imageMogr2/auto-orient/strip" alt="翻页-1"></p>
</li>
</ul>
<p>难点未理解：折叠区域图片的绘制。</p>
<pre class="line-numbers language-java"><code class="language-java">canvas<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token number">90</span> <span class="token operator">-</span> mDegrees<span class="token punctuation">)</span><span class="token punctuation">;</span>  
canvas<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span>mViewHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>  
canvas<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
canvas<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span><span class="token operator">-</span>mViewWidth<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-f0e11fa6b7745197.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-e553f979470b591c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<ul>
<li>drawBitmapMesh <a href="http://blog.csdn.net/aigestudio/article/details/41960507" target="_blank" rel="noopener">自定义控件其实很简单5/12</a></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-367aeaac082c40a1.gif?imageMogr2/auto-orient/strip" alt="20141216152332401.gif"></p>
<h2 id="优秀博文"><a href="#优秀博文" class="headerlink" title="优秀博文"></a>优秀博文</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/qqoBLsjU69YpWjkzBGgM_w?utm_source=androidweekly.io&amp;utm_medium=website" target="_blank" rel="noopener">如何实现图片的扭曲效果，窗帘效果及仿真水波纹效果，修图技术之瘦身瘦脸效果的实现(android-drawBitmapMesh)</a></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UI</tag>
        <tag>知识架构</tag>
        <tag>自定义View</tag>
      </tags>
  </entry>
  <entry>
    <title>Java 语法及知识架构笔记；</title>
    <url>/2019/09/14/2019-3-21-Java-basic/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1 id="Java-基础学习"><a href="#Java-基础学习" class="headerlink" title="Java 基础学习"></a>Java 基础学习</h1><p><a href="http://www.horstmann.com/corejava.html" target="_blank" rel="noopener">Core Java 书籍官网</a></p>
<h2 id="泛型"><a href="#泛型" class="headerlink" title="泛型"></a>泛型</h2><ul>
<li>方法 <pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> T <span class="token function">tell</span><span class="token punctuation">(</span>T t<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> t<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li>数组<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
  String arr<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"java"</span><span class="token punctuation">,</span><span class="token string">"web"</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">tell</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>   
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<p>public static <t>viod tell(T arr[]){<br>    for(int i=0;i&lt;arr.length;i++){<br>        System.out.println(arr[i]);<br>    }<br>}</t></p>
<pre><code>
demo
```java
private &lt;T&gt; T getObject(Message msg, Class&lt;T&gt; c) {
        return (T) msg.getData().getParcelable(c.getSimpleName());
    }</code></pre><p>现实案例：<br><a href="https://raw.githubusercontent.com/f2prateek/rx-preferences/master/rx-preferences/src/main/java/com/f2prateek/rx/preferences2/RxSharedPreferences.java" target="_blank" rel="noopener">RxSharePreference.java</a></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@CheckResult</span> <span class="token annotation punctuation">@NonNull</span> <span class="token keyword">public</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> Preference<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">getObject</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> String key<span class="token punctuation">,</span>
                                                         <span class="token annotation punctuation">@NonNull</span> T defaultValue<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> Preference<span class="token punctuation">.</span>Converter<span class="token operator">&lt;</span>T<span class="token operator">></span> converter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">checkNotNull</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">"key == null"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RealPreference</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>preferences<span class="token punctuation">,</span> key<span class="token punctuation">,</span> defaultValue<span class="token punctuation">,</span>
                                <span class="token keyword">new</span> <span class="token class-name">ConverterAdapter</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>converter<span class="token punctuation">)</span><span class="token punctuation">,</span> keyChanges<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>FlowableConversionTest.java from Rxjava</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token operator">&lt;</span>R<span class="token punctuation">,</span> O<span class="token operator">></span> O <span class="token function">x</span><span class="token punctuation">(</span>Function<span class="token operator">&lt;</span>Publisher<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">,</span> O<span class="token operator">></span> operator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> operator<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>onSubscribe<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h2><h2 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h2><pre class="line-numbers language-java"><code class="language-java"> <span class="token comment" spellcheck="true">//java7 以后数字可以加下划线</span>
<span class="token keyword">int</span> b <span class="token operator">=</span> 1_000_000<span class="token punctuation">;</span>
<span class="token keyword">int</span> by <span class="token operator">=</span> 0B1111_0100_0010<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 二进制</span>
<span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0xCAFE</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//十六进制</span>
<span class="token keyword">int</span> eight <span class="token operator">=</span> <span class="token number">010</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 八进制</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>Float</strong>  </p>
<pre><code>float 4 字节 double 8 字节
3.14F or 3.14D 不写默认为double类型

System.out.println(2.0 - 1.1);
// ==&gt; 0.8999999999999999 二进制无法表示 1/10</code></pre><p><strong>强转</strong></p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">double</span> x <span class="token operator">=</span> <span class="token number">9.997</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> nx <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> x<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// nx = 9;</span>
<span class="token keyword">int</span> nx2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// nx2 = 10;</span>

<span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
y <span class="token operator">+=</span> <span class="token number">3.9</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// y = 5;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>常用转化</strong></p>
<pre><code>List&lt;Object&gt; list ;
Object[] listener = list.toArray();

List&lt;Object&gt; list = Arrays.asList(T... elements);</code></pre><h2 id="Security"><a href="#Security" class="headerlink" title="Security"></a>Security</h2><ul>
<li><a href="https://snowolf.iteye.com/blog/379860" target="_blank" rel="noopener">Java加密技术</a></li>
</ul>
<h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><p><img src="http://cdn.linz.tech/java-base-execption-2019-6-13.png" alt=""></p>
<h3 id="常见异常"><a href="#常见异常" class="headerlink" title="常见异常"></a>常见异常</h3><ul>
<li>ArithmeticException（算术异常） </li>
<li>ClassCastException （类转换异常） </li>
<li>IllegalArgumentException （非法参数异常） </li>
<li>IndexOutOfBoundsException （下标越界异常） </li>
<li>NullPointerException （空指针异常） </li>
<li>SecurityException （安全异常）</li>
</ul>
<h2 id="常用技巧"><a href="#常用技巧" class="headerlink" title="常用技巧"></a>常用技巧</h2><p>静态方法导入直接使用</p>
<pre><code>import static java.lang.Math.*;</code></pre><h2 id="Annotation"><a href="#Annotation" class="headerlink" title="Annotation"></a>Annotation</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span>ElementType<span class="token punctuation">.</span>METHOD<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span>RetentionPolicy<span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token keyword">public</span> @<span class="token keyword">interface</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="生命周期-Retention"><a href="#生命周期-Retention" class="headerlink" title="生命周期 Retention"></a>生命周期 Retention</h3><ol>
<li>SOURCE: 在源码生效，不会被编译器编译进入class</li>
<li>CLASS: class核源码生效，执行时会被vm忽略。未的注释Retention时以class为默认值。</li>
<li>RUNTIME: </li>
</ol>
<h3 id="作用范围-Target"><a href="#作用范围-Target" class="headerlink" title="作用范围 Target"></a>作用范围 Target</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> ElementType <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">/**标明该注解可以用于类、接口（包括注解类型）或enum声明*/</span>
    TYPE<span class="token punctuation">,</span>

    <span class="token comment" spellcheck="true">/** 标明该注解可以用于字段(域)声明，包括enum实例 */</span>
    FIELD<span class="token punctuation">,</span>

    <span class="token comment" spellcheck="true">/** 标明该注解可以用于方法声明 */</span>
    METHOD<span class="token punctuation">,</span>

    <span class="token comment" spellcheck="true">/** 标明该注解可以用于参数声明 */</span>
    PARAMETER<span class="token punctuation">,</span>

    <span class="token comment" spellcheck="true">/** 标明注解可以用于构造函数声明 */</span>
    CONSTRUCTOR<span class="token punctuation">,</span>

    <span class="token comment" spellcheck="true">/** 标明注解可以用于局部变量声明 */</span>
    LOCAL_VARIABLE<span class="token punctuation">,</span>

    <span class="token comment" spellcheck="true">/** 标明注解可以用于注解声明(应用于另一个注解上)*/</span>
    ANNOTATION_TYPE<span class="token punctuation">,</span>

    <span class="token comment" spellcheck="true">/** 标明注解可以用于包声明 */</span>
    PACKAGE<span class="token punctuation">,</span>

    <span class="token comment" spellcheck="true">/**
     * 标明注解可以用于类型参数声明（1.8新加入）
     * @since 1.8
     */</span>
    TYPE_PARAMETER<span class="token punctuation">,</span>

    <span class="token comment" spellcheck="true">/**
     * 类型使用声明（1.8新加入)
     * @since 1.8
     */</span>
    TYPE_USE
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>zejian<span class="token punctuation">.</span>annotationdemo<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ElementType<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Retention<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RetentionPolicy<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Target<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * Created by wuzejian on 2017/5/19.
 * 数据类型使用Demo
 */</span>

<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span>ElementType<span class="token punctuation">.</span>TYPE<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span>RetentionPolicy<span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
@<span class="token keyword">interface</span> <span class="token class-name">Reference</span><span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> @<span class="token keyword">interface</span> <span class="token class-name">AnnotationElementDemo</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//枚举类型</span>
    <span class="token keyword">enum</span> Status <span class="token punctuation">{</span>FIXED<span class="token punctuation">,</span>NORMAL<span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">//声明枚举</span>
    Status <span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> Status<span class="token punctuation">.</span>FIXED<span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">//布尔类型</span>
    <span class="token keyword">boolean</span> <span class="token function">showSupport</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">//String类型</span>
    String <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">default</span> <span class="token string">""</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">//class类型</span>
    Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> <span class="token function">testCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> Void<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">//注解嵌套</span>
    Reference <span class="token function">reference</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token annotation punctuation">@Reference</span><span class="token punctuation">(</span>next<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">//数组类型</span>
    <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="默认赋值方式"><a href="#默认赋值方式" class="headerlink" title="默认赋值方式"></a>默认赋值方式</h3><p>默认会赋值给value方法</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>zejian<span class="token punctuation">.</span>annotationdemo<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>ElementType<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Retention<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RetentionPolicy<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Target<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * Created by zejian on 2017/5/20.
 * Blog : http://blog.csdn.net/javazejian [原文地址,请尊重原创]
 */</span>
<span class="token comment" spellcheck="true">//定义注解</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span>ElementType<span class="token punctuation">.</span>FIELD<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span>RetentionPolicy<span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
@<span class="token keyword">interface</span> <span class="token class-name">IntegerVaule</span><span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token number">0</span><span class="token punctuation">;</span>
    String <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">""</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">//使用注解</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QuicklyWay</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//当只想给value赋值时,可以使用以下快捷方式</span>
    <span class="token annotation punctuation">@IntegerVaule</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">//当name也需要赋值时必须采用key=value的方式赋值</span>
    <span class="token annotation punctuation">@IntegerVaule</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">,</span>name <span class="token operator">=</span> <span class="token string">"MONEY"</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> money<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="反射中的使用"><a href="#反射中的使用" class="headerlink" title="反射中的使用"></a>反射中的使用</h3><p>查看 <code>反射Annotation</code></p>
<h3 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h3><ol>
<li>@Documented 被修饰的注解会生成到javadoc中</li>
<li>@Inherited 可以让注解被继承</li>
</ol>
<h2 id="enum"><a href="#enum" class="headerlink" title="enum"></a>enum</h2><ul>
<li><a href="https://blog.csdn.net/testcs_dn/article/details/78604547" target="_blank" rel="noopener">Java 枚举(enum) 详解7种常见的用法</a></li>
</ul>
<h3 id="深入理解"><a href="#深入理解" class="headerlink" title="深入理解"></a>深入理解</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EnumDemo</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//直接引用</span>
        Day day <span class="token operator">=</span>Day<span class="token punctuation">.</span>MONDAY<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">//定义枚举类型</span>
<span class="token keyword">enum</span> Day <span class="token punctuation">{</span>
    MONDAY<span class="token punctuation">,</span> TUESDAY<span class="token punctuation">,</span> WEDNESDAY<span class="token punctuation">,</span>
    THURSDAY<span class="token punctuation">,</span> FRIDAY<span class="token punctuation">,</span> SATURDAY<span class="token punctuation">,</span> SUNDAY
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>编译 <code>javac EnumDemo.java</code></p>
<p>反编译</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Day</span> <span class="token keyword">extends</span> <span class="token class-name">Enum</span>
<span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//编译器为我们添加的静态的values()方法</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> Day<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>Day<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>$VALUES<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment" spellcheck="true">//编译器为我们添加的静态的valueOf()方法，注意间接调用了Enum也类的valueOf方法</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> Day <span class="token function">valueOf</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>Day<span class="token punctuation">)</span>Enum<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>com<span class="token operator">/</span>zejian<span class="token operator">/</span>enumdemo<span class="token operator">/</span>Day<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment" spellcheck="true">//私有构造函数</span>
    <span class="token keyword">private</span> <span class="token function">Day</span><span class="token punctuation">(</span>String s<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
     <span class="token comment" spellcheck="true">//前面定义的7种枚举实例</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Day MONDAY<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Day TUESDAY<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Day WEDNESDAY<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Day THURSDAY<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Day FRIDAY<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Day SATURDAY<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Day SUNDAY<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Day $VALUES<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> 
    <span class="token punctuation">{</span>    
        <span class="token comment" spellcheck="true">//实例化枚举实例</span>
        MONDAY <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Day</span><span class="token punctuation">(</span><span class="token string">"MONDAY"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        TUESDAY <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Day</span><span class="token punctuation">(</span><span class="token string">"TUESDAY"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        WEDNESDAY <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Day</span><span class="token punctuation">(</span><span class="token string">"WEDNESDAY"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        THURSDAY <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Day</span><span class="token punctuation">(</span><span class="token string">"THURSDAY"</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        FRIDAY <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Day</span><span class="token punctuation">(</span><span class="token string">"FRIDAY"</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        SATURDAY <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Day</span><span class="token punctuation">(</span><span class="token string">"SATURDAY"</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        SUNDAY <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Day</span><span class="token punctuation">(</span><span class="token string">"SUNDAY"</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        $VALUES <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Day</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
            MONDAY<span class="token punctuation">,</span> TUESDAY<span class="token punctuation">,</span> WEDNESDAY<span class="token punctuation">,</span> THURSDAY<span class="token punctuation">,</span> FRIDAY<span class="token punctuation">,</span> SATURDAY<span class="token punctuation">,</span> SUNDAY
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//正常使用</span>
Day<span class="token punctuation">[</span><span class="token punctuation">]</span> ds<span class="token operator">=</span>Day<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//向上转型Enum</span>
Enum e <span class="token operator">=</span> Day<span class="token punctuation">.</span>MONDAY<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//无法调用,没有此方法</span>
<span class="token comment" spellcheck="true">//e.values();</span>
<span class="token comment" spellcheck="true">//获取class对象引用</span>
Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> clasz <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>clasz<span class="token punctuation">.</span><span class="token function">isEnum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Day<span class="token punctuation">[</span><span class="token punctuation">]</span> dsz <span class="token operator">=</span> <span class="token punctuation">(</span>Day<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> clasz<span class="token punctuation">.</span><span class="token function">getEnumConstants</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"dsz:"</span><span class="token operator">+</span>Arrays<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>dsz<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**
   输出结果:
   dsz:[MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY]
 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="覆盖enum类方法"><a href="#覆盖enum类方法" class="headerlink" title="覆盖enum类方法"></a>覆盖enum类方法</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>zejian<span class="token punctuation">.</span>enumdemo<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * Created by zejian on 2017/5/8.
 * Blog : http://blog.csdn.net/javazejian [原文地址,请尊重原创]
 */</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> Day2 <span class="token punctuation">{</span>
    <span class="token function">MONDAY</span><span class="token punctuation">(</span><span class="token string">"星期一"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">TUESDAY</span><span class="token punctuation">(</span><span class="token string">"星期二"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">WEDNESDAY</span><span class="token punctuation">(</span><span class="token string">"星期三"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">THURSDAY</span><span class="token punctuation">(</span><span class="token string">"星期四"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">FRIDAY</span><span class="token punctuation">(</span><span class="token string">"星期五"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">SATURDAY</span><span class="token punctuation">(</span><span class="token string">"星期六"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">SUNDAY</span><span class="token punctuation">(</span><span class="token string">"星期日"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//记住要用分号结束</span>

    <span class="token keyword">private</span> String desc<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//中文描述</span>

    <span class="token comment" spellcheck="true">/**
     * 私有构造,防止被外部调用
     * @param desc
     */</span>
    <span class="token keyword">private</span> <span class="token function">Day2</span><span class="token punctuation">(</span>String desc<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>desc<span class="token operator">=</span>desc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 覆盖
     * @return
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> desc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>Day2 day<span class="token operator">:</span>Day2<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"name:"</span><span class="token operator">+</span>day<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>
                    <span class="token string">",desc:"</span><span class="token operator">+</span>day<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     输出结果:
     name:MONDAY,desc:星期一
     name:TUESDAY,desc:星期二
     name:WEDNESDAY,desc:星期三
     name:THURSDAY,desc:星期四
     name:FRIDAY,desc:星期五
     name:SATURDAY,desc:星期六
     name:SUNDAY,desc:星期日
     */</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="抽象方法"><a href="#抽象方法" class="headerlink" title="抽象方法"></a>抽象方法</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>zejian<span class="token punctuation">.</span>enumdemo<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * Created by zejian on 2017/5/9.
 * Blog : http://blog.csdn.net/javazejian [原文地址,请尊重原创]
 */</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> EnumDemo3 <span class="token punctuation">{</span>

    FIRST<span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> String <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">"FIRST TIME"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    SECOND<span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> String <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">"SECOND TIME"</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">/**
     * 定义抽象方法,每个枚举都要实现这个抽象方法
     * @return
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">abstract</span> String <span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">//测试</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"F:"</span><span class="token operator">+</span>EnumDemo3<span class="token punctuation">.</span>FIRST<span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"S:"</span><span class="token operator">+</span>EnumDemo3<span class="token punctuation">.</span>SECOND<span class="token punctuation">.</span><span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">/**
         输出结果:
         F:FIRST TIME
         S:SECOND TIME
         */</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="与接口"><a href="#与接口" class="headerlink" title="与接口"></a>与接口</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> Meal<span class="token punctuation">{</span>
  <span class="token function">APPETIZER</span><span class="token punctuation">(</span>Food<span class="token punctuation">.</span>Appetizer<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">MAINCOURSE</span><span class="token punctuation">(</span>Food<span class="token punctuation">.</span>MainCourse<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">DESSERT</span><span class="token punctuation">(</span>Food<span class="token punctuation">.</span>Dessert<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">COFFEE</span><span class="token punctuation">(</span>Food<span class="token punctuation">.</span>Coffee<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> Food<span class="token punctuation">[</span><span class="token punctuation">]</span> values<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token function">Meal</span><span class="token punctuation">(</span>Class<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Food</span><span class="token operator">></span> kind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//通过class对象获取枚举实例</span>
    values <span class="token operator">=</span> kind<span class="token punctuation">.</span><span class="token function">getEnumConstants</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Food</span> <span class="token punctuation">{</span>
    <span class="token keyword">enum</span> Appetizer <span class="token keyword">implements</span> <span class="token class-name">Food</span> <span class="token punctuation">{</span>
      SALAD<span class="token punctuation">,</span> SOUP<span class="token punctuation">,</span> SPRING_ROLLS<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">enum</span> MainCourse <span class="token keyword">implements</span> <span class="token class-name">Food</span> <span class="token punctuation">{</span>
      LASAGNE<span class="token punctuation">,</span> BURRITO<span class="token punctuation">,</span> PAD_THAI<span class="token punctuation">,</span>
      LENTILS<span class="token punctuation">,</span> HUMMOUS<span class="token punctuation">,</span> VINDALOO<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">enum</span> Dessert <span class="token keyword">implements</span> <span class="token class-name">Food</span> <span class="token punctuation">{</span>
      TIRAMISU<span class="token punctuation">,</span> GELATO<span class="token punctuation">,</span> BLACK_FOREST_CAKE<span class="token punctuation">,</span>
      FRUIT<span class="token punctuation">,</span> CREME_CARAMEL<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">enum</span> Coffee <span class="token keyword">implements</span> <span class="token class-name">Food</span> <span class="token punctuation">{</span>
      BLACK_COFFEE<span class="token punctuation">,</span> DECAF_COFFEE<span class="token punctuation">,</span> ESPRESSO<span class="token punctuation">,</span>
      LATTE<span class="token punctuation">,</span> CAPPUCCINO<span class="token punctuation">,</span> TEA<span class="token punctuation">,</span> HERB_TEA<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="枚举单利"><a href="#枚举单利" class="headerlink" title="枚举单利"></a>枚举单利</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
 * Created by wuzejian on 2017/5/9.
 * 枚举单利
 */</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span>  SingletonEnum <span class="token punctuation">{</span>
    INSTANCE<span class="token punctuation">;</span>
    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>
    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="EnumMap"><a href="#EnumMap" class="headerlink" title="EnumMap"></a>EnumMap</h3><pre class="line-numbers language-java"><code class="language-java"> Map<span class="token operator">&lt;</span>Color<span class="token punctuation">,</span>Integer<span class="token operator">></span> enumMap<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">EnumMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li>Key 值必须是枚举类型；</li>
<li>使用EnumMap比HashMap会更加高效</li>
</ul>
<h3 id="EnumSet"><a href="#EnumSet" class="headerlink" title="EnumSet"></a>EnumSet</h3><ul>
<li>内部实现是位向量,直接存储和操作都是bit，因此EnumSet空间和时间性能都十分可观</li>
<li>EnumSet不允许使用 null 元素</li>
<li>线程不安全</li>
</ul>
<h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><pre class="line-numbers language-java"><code class="language-java">创建一个具有指定元素类型的空EnumSet。
EnumSet<span class="token operator">&lt;</span>E<span class="token operator">></span>  <span class="token function">noneOf</span><span class="token punctuation">(</span>Class<span class="token operator">&lt;</span>E<span class="token operator">></span> elementType<span class="token punctuation">)</span>       
<span class="token comment" spellcheck="true">//创建一个指定元素类型并包含所有枚举值的EnumSet</span>
<span class="token operator">&lt;</span>E <span class="token keyword">extends</span> <span class="token class-name">Enum</span><span class="token operator">&lt;</span>E<span class="token operator">>></span> EnumSet<span class="token operator">&lt;</span>E<span class="token operator">></span> <span class="token function">allOf</span><span class="token punctuation">(</span>Class<span class="token operator">&lt;</span>E<span class="token operator">></span> elementType<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">// 创建一个包括枚举值中指定范围元素的EnumSet</span>
<span class="token operator">&lt;</span>E <span class="token keyword">extends</span> <span class="token class-name">Enum</span><span class="token operator">&lt;</span>E<span class="token operator">>></span> EnumSet<span class="token operator">&lt;</span>E<span class="token operator">></span> <span class="token function">range</span><span class="token punctuation">(</span>E from<span class="token punctuation">,</span> E to<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">// 初始集合包括指定集合的补集</span>
<span class="token operator">&lt;</span>E <span class="token keyword">extends</span> <span class="token class-name">Enum</span><span class="token operator">&lt;</span>E<span class="token operator">>></span> EnumSet<span class="token operator">&lt;</span>E<span class="token operator">></span> <span class="token function">complementOf</span><span class="token punctuation">(</span>EnumSet<span class="token operator">&lt;</span>E<span class="token operator">></span> s<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">// 创建一个包括参数中所有元素的EnumSet</span>
<span class="token operator">&lt;</span>E <span class="token keyword">extends</span> <span class="token class-name">Enum</span><span class="token operator">&lt;</span>E<span class="token operator">>></span> EnumSet<span class="token operator">&lt;</span>E<span class="token operator">></span> <span class="token function">of</span><span class="token punctuation">(</span>E e<span class="token punctuation">)</span>
<span class="token operator">&lt;</span>E <span class="token keyword">extends</span> <span class="token class-name">Enum</span><span class="token operator">&lt;</span>E<span class="token operator">>></span> EnumSet<span class="token operator">&lt;</span>E<span class="token operator">></span> <span class="token function">of</span><span class="token punctuation">(</span> E<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> rest<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//创建一个包含参数容器中的所有元素的EnumSet</span>
<span class="token operator">&lt;</span>E <span class="token keyword">extends</span> <span class="token class-name">Enum</span><span class="token operator">&lt;</span>E<span class="token operator">>></span> EnumSet<span class="token operator">&lt;</span>E<span class="token operator">></span> <span class="token function">copyOf</span><span class="token punctuation">(</span>EnumSet<span class="token operator">&lt;</span>E<span class="token operator">></span> s<span class="token punctuation">)</span>
<span class="token operator">&lt;</span>E <span class="token keyword">extends</span> <span class="token class-name">Enum</span><span class="token operator">&lt;</span>E<span class="token operator">>></span> EnumSet<span class="token operator">&lt;</span>E<span class="token operator">></span> <span class="token function">copyOf</span><span class="token punctuation">(</span>Collection<span class="token operator">&lt;</span>E<span class="token operator">></span> c<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 不会copy重复的值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol>
<li><a href="https://blog.csdn.net/javazejian/article/details/71333103" target="_blank" rel="noopener">深入理解Java枚举类型(enum)</a></li>
</ol>
<h2 id="反射-1"><a href="#反射-1" class="headerlink" title="反射"></a>反射</h2><h3 id="类的实例化"><a href="#类的实例化" class="headerlink" title="类的实例化"></a>类的实例化</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 1. class</span>
<span class="token comment" spellcheck="true">//获取Class对象的引用</span>
clazz <span class="token operator">=</span> Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"study.reflect.User"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//第一种方法，实例化默认构造方法，User必须无参构造函数,否则将抛异常</span>
User user <span class="token operator">=</span> <span class="token punctuation">(</span>User<span class="token punctuation">)</span> clazz<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">// 2. public constructor </span>
<span class="token comment" spellcheck="true">//获取带String参数的public构造函数</span>
Constructor cs1 <span class="token operator">=</span>clazz<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//创建User</span>
User user1<span class="token operator">=</span> <span class="token punctuation">(</span>User<span class="token punctuation">)</span> cs1<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token string">"xiaolong"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">// 3. private constructor </span>
Constructor cs2<span class="token operator">=</span>clazz<span class="token punctuation">.</span><span class="token function">getDeclaredConstructor</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//由于是private必须设置可访问</span>
cs2<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//创建user对象</span>
User user2<span class="token operator">=</span> <span class="token punctuation">(</span>User<span class="token punctuation">)</span> cs2<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token string">"lidakang"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">//获取所有构造包含private</span>
Constructor<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> cons<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredConstructors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token comment" spellcheck="true">//获取构造函数参数类型</span>
Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> clazzs<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> cons<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Field类及方法"><a href="#Field类及方法" class="headerlink" title="Field类及方法"></a>Field类及方法</h3><table>
<thead>
<tr>
<th>方法返回值</th>
<th>方法名称</th>
<th>方法说明</th>
</tr>
</thead>
<tbody><tr>
<td>Field</td>
<td>getDeclaredField(String name)</td>
<td>(包含private修饰的)字段，不包括继承的字段</td>
</tr>
<tr>
<td>Field[]</td>
<td>getDeclaredField()</td>
<td>获取Class对象所表示的类或接口的所有(包含private修饰的)字段,不包括继承的字段</td>
</tr>
<tr>
<td>Field</td>
<td>getField(String name)</td>
<td>获取具有public修饰的字段，包含继承字段</td>
</tr>
<tr>
<td>Field[]</td>
<td>getField()</td>
<td>获取修饰符为public的字段，包含继承字段</td>
</tr>
</tbody></table>
<p>Field 常用操作</p>
<pre class="line-numbers language-java"><code class="language-java">Class <span class="token class-name">claz</span> <span class="token operator">=</span> Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">"study.reflect.TestReflect$Animal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Field field <span class="token operator">=</span> claz<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"field-->"</span>  <span class="token operator">+</span> field<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"toGenericString-->"</span> <span class="token operator">+</span> field<span class="token punctuation">.</span><span class="token function">toGenericString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"getDeclaringClass-->"</span> <span class="token operator">+</span> field<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">//study.reflect.TestReflect$Animal</span>
<span class="token comment" spellcheck="true">//field-->class java.lang.String</span>
<span class="token comment" spellcheck="true">//toGenericString-->private java.lang.String //study.reflect.TestReflect$Animal.name</span>
<span class="token comment" spellcheck="true">//getDeclaringClass-->class study.reflect.TestReflect$Animal</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Method类及用法"><a href="#Method类及用法" class="headerlink" title="Method类及用法"></a>Method类及用法</h3><h4 id="get-Method"><a href="#get-Method" class="headerlink" title="get Method"></a>get Method</h4><p>方法包含父类</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//根据参数获取public的Method,包含继承自父类的方法</span>
Method method <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"draw"</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//获取所有public的方法:包含父类</span>
Method<span class="token punctuation">[</span><span class="token punctuation">]</span> methods <span class="token operator">=</span>clazz<span class="token punctuation">.</span><span class="token function">getMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>方法不包含父类</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//可以获取privat, 无法获取父类方法</span>
Method method1 <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">"drawCircle"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Method<span class="token punctuation">[</span><span class="token punctuation">]</span> methods1<span class="token operator">=</span>clazz<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="Invoke"><a href="#Invoke" class="headerlink" title="Invoke"></a>Invoke</h4><p><code>invoke(Object obj,Object... args)</code></p>
<h3 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h3><h4 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//获取类型</span>
Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> clazz <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getComponentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// new 一个指定类型的Array</span>
Object newArr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>clazz<span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> co <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//copy 赋值原数组到新数组</span>
System<span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> newArr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> co<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// setter/getter</span>
Array<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>newArr<span class="token punctuation">,</span> <span class="token number">5</span><span class="token comment" spellcheck="true">/*pos*/</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Array<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>newArra<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><p>Array的动态创建, 无效语句<code>T[] a = new T[];</code></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
  * 接收一个泛型数组，然后创建一个长度与接收的数组长度一样的泛型数组，
  * 并把接收的数组的元素复制到新创建的数组中，
  * 最后找出新数组中的最小元素，并打印出来
  * @param a
  * @param &lt;T>
  */</span>
 <span class="token keyword">public</span>  <span class="token operator">&lt;</span>T <span class="token keyword">extends</span> <span class="token class-name">Comparable</span><span class="token operator">&lt;</span>T<span class="token operator">>></span> <span class="token keyword">void</span> <span class="token function">min</span><span class="token punctuation">(</span>T<span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment" spellcheck="true">//通过反射创建相同类型的数组</span>
     T<span class="token punctuation">[</span><span class="token punctuation">]</span> b <span class="token operator">=</span> <span class="token punctuation">(</span>T<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> Array<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getComponentType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
     T min <span class="token operator">=</span> null<span class="token punctuation">;</span>
     <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
             min <span class="token operator">=</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
             flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>min<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
             min <span class="token operator">=</span> b<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
     System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="反射Annotation"><a href="#反射Annotation" class="headerlink" title="反射Annotation"></a>反射Annotation</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//指定类型是否存在</span>
<span class="token function">isAnnotationPresent</span><span class="token punctuation">(</span>Class<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token operator">></span> annotationClass<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//得到指定的注解，没有返回null</span>
clazz<span class="token punctuation">.</span><span class="token function">getAnnoations</span><span class="token punctuation">(</span>Depressed<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
Annotation<span class="token punctuation">[</span><span class="token punctuation">]</span> annote1 <span class="token operator">=</span> <span class="token function">getAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//不包括父类</span>
Annotation<span class="token punctuation">[</span><span class="token punctuation">]</span> annote2 <span class="token operator">=</span> <span class="token function">getDeclaredAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="常用反射操作"><a href="#常用反射操作" class="headerlink" title="常用反射操作"></a>常用反射操作</h3><pre class="line-numbers language-java"><code class="language-java"> <span class="token comment" spellcheck="true">/** 
  *    修饰符、父类、实现的接口、注解相关 
  */</span>

<span class="token comment" spellcheck="true">//获取修饰符，返回值可通过Modifier类进行解读</span>
<span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">int</span> <span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//获取父类，如果为Object，父类为null</span>
<span class="token keyword">public</span> <span class="token keyword">native</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> T<span class="token operator">></span> <span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//对于类，为自己声明实现的所有接口，对于接口，为直接扩展的接口，不包括通过父类间接继承来的</span>
<span class="token keyword">public</span> <span class="token keyword">native</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//自己声明的注解</span>
<span class="token keyword">public</span> Annotation<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getDeclaredAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//所有的注解，包括继承得到的</span>
<span class="token keyword">public</span> Annotation<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//获取或检查指定类型的注解，包括继承得到的</span>
<span class="token keyword">public</span> <span class="token operator">&lt;</span>A <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token operator">></span> A <span class="token function">getAnnotation</span><span class="token punctuation">(</span>Class<span class="token operator">&lt;</span>A<span class="token operator">></span> annotationClass<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAnnotationPresent</span><span class="token punctuation">(</span>Class<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token operator">></span> annotationClass<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/** 
  *   内部类相关
  */</span>
<span class="token comment" spellcheck="true">//获取所有的public的内部类和接口，包括从父类继承得到的</span>
<span class="token keyword">public</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getClasses</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//获取自己声明的所有的内部类和接口</span>
<span class="token keyword">public</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getDeclaredClasses</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//如果当前Class为内部类，获取声明该类的最外部的Class对象</span>
<span class="token keyword">public</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> <span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//如果当前Class为内部类，获取直接包含该类的类</span>
<span class="token keyword">public</span> Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> <span class="token function">getEnclosingClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//如果当前Class为本地类或匿名内部类，返回包含它的方法</span>
<span class="token keyword">public</span> Method <span class="token function">getEnclosingMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/** 
  *    Class对象类型判断相关
  */</span>
<span class="token comment" spellcheck="true">//是否是数组</span>
<span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">boolean</span> <span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">//是否是基本类型</span>
<span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">boolean</span> <span class="token function">isPrimitive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//是否是接口</span>
<span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">boolean</span> <span class="token function">isInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//是否是枚举</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEnum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//是否是注解</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAnnotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//是否是匿名内部类</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAnonymousClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//是否是成员类</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isMemberClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//是否是本地类</span>
<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isLocalClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="enum-反射"><a href="#enum-反射" class="headerlink" title="enum 反射"></a>enum 反射</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> RunnableState<span class="token punctuation">{</span>
  RUNNING<span class="token punctuation">,</span> ERROR<span class="token punctuation">,</span> DONE
<span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Class <span class="token class-name">clazz</span> <span class="token operator">=</span> RUNNING<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Object<span class="token punctuation">[</span><span class="token punctuation">]</span> enumConstants <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getEnumConstants</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>Object enumConstant <span class="token operator">:</span> enumConstants<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>enumConstant<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">//========= out ========</span>
RUNNING
ERROR
DONE
<span class="token comment" spellcheck="true">//======================</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><ul>
<li>assert false ; 在jvm的参数，参数是-ea或者-enableassertions 抛出java.lang.AssertionErro。增加错误信息，<code>assert  false : "这个异常没有性格";</code></li>
</ul>
<h3 id="Clone"><a href="#Clone" class="headerlink" title="Clone"></a><strong>Clone</strong></h3><p>浅度拷贝/深度拷贝</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//1.直接强转只能克隆基本数据类型，原因是clone方法只是复制了相同的内存块</span>
<span class="token annotation punctuation">@Override</span>
  <span class="token keyword">protected</span> Student <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> CloneNotSupportedException <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>Student<span class="token punctuation">)</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">//2.存在非基本数据类型的克隆方法</span>
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">protected</span> Student3 <span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> CloneNotSupportedException <span class="token punctuation">{</span>
    Student3 stu <span class="token operator">=</span> <span class="token punctuation">(</span>Student3<span class="token punctuation">)</span> <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    stu<span class="token punctuation">.</span>bag <span class="token operator">=</span> bag<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> stu<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">//3.有些类是不能拷贝的如：StringBuffer没有重载clone()方法</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="读写操作"><a href="#读写操作" class="headerlink" title="读写操作"></a>读写操作</h2><p><img src="https://images2017.cnblogs.com/blog/1218459/201709/1218459-20170909185534835-716713048.jpg" alt=""></p>
<p><img src="https://images2015.cnblogs.com/blog/1034279/201703/1034279-20170314221828745-451137504.png" alt=""></p>
<p><a href="http://tutorials.jenkov.com/java-io/overview.html" target="_blank" rel="noopener">Java IO教程.英文</a></p>
<p><a href="http://ifeve.com/java-io/" target="_blank" rel="noopener">Java IO教程.中文</a></p>
<p>Apache Commons IO FileUtils</p>
<p><a href="http://codingdict.com/article/8778" target="_blank" rel="noopener">Apache Commons IO 教程</a></p>
<h2 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h2><h3 id="监控工具"><a href="#监控工具" class="headerlink" title="监控工具"></a>监控工具</h3><ul>
<li><a href="https://www.cnblogs.com/happy-rabbit/p/6232581.html" target="_blank" rel="noopener">java自带的监控工具VisualVM一</a></li>
<li>jstat JVM分析工具</li>
</ul>
<h2 id="Java常用命令"><a href="#Java常用命令" class="headerlink" title="Java常用命令"></a>Java常用命令</h2><pre class="line-numbers language-java"><code class="language-java">javap <span class="token operator">-</span>c PathForClazz<span class="token punctuation">.</span><span class="token keyword">class</span> 查看<span class="token keyword">class</span>汇编指令<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><h4 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h4><p><img src="http://cdn.linz.tech/reg_metacharacter.jpg" alt=""></p>
<table>
<thead>
<tr>
<th align="center">.</th>
<th align="center">匹配除换行符以外的任意字符</th>
</tr>
</thead>
<tbody><tr>
<td align="center">\w</td>
<td align="center">匹配字母或数字或下划线或汉字</td>
</tr>
<tr>
<td align="center">\s</td>
<td align="center">匹配任意的空白符，空格回车</td>
</tr>
<tr>
<td align="center">\d</td>
<td align="center">匹配数字</td>
</tr>
<tr>
<td align="center">\b</td>
<td align="center">匹配单词的开始或结束</td>
</tr>
<tr>
<td align="center">^</td>
<td align="center">匹配字符串的开始</td>
</tr>
<tr>
<td align="center">$</td>
<td align="center">匹配字符串的结束</td>
</tr>
</tbody></table>
<p>Windows系统里面，每行结尾是“&lt;回车&gt;&lt;换行&gt;”，即“\r\n”；</p>
<p>Mac系统里，每行结尾是“&lt;回车&gt;”,即“\r”。</p>
<p>Windows系统里面，每行结尾是“&lt;回车&gt;&lt;换行&gt;”，即“\r\n”；</p>
<p>Mac系统里，每行结尾是“&lt;回车&gt;”,即“\r”。</p>
<p>而UNIX/Linux采用换行符LF表示下一行，即\n</p>
<p>苹果机(MAC OS系统)则采用回车符CR表示下一行，即\r</p>
<h4 id="常用的限定符-重复"><a href="#常用的限定符-重复" class="headerlink" title="常用的限定符 重复"></a>常用的限定符 重复</h4><table>
<thead>
<tr>
<th align="center">代码/语法</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">*</td>
<td align="center">重复零次或更多次</td>
</tr>
<tr>
<td align="center">+</td>
<td align="center">重复一次或更多次</td>
</tr>
<tr>
<td align="center">?</td>
<td align="center">重复零次或一次</td>
</tr>
<tr>
<td align="center">{n}</td>
<td align="center">重复n次</td>
</tr>
<tr>
<td align="center">{n,}</td>
<td align="center">重复n次或更多次</td>
</tr>
<tr>
<td align="center">{n,m}</td>
<td align="center">重复n到m次</td>
</tr>
</tbody></table>
<h4 id="反义"><a href="#反义" class="headerlink" title="反义"></a>反义</h4><table>
<thead>
<tr>
<th>代码/语法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>\W</td>
<td>匹配任意不是字母，数字，下划线，汉字的字符</td>
</tr>
<tr>
<td>\S</td>
<td>匹配任意不是空白符的字符</td>
</tr>
<tr>
<td>\D</td>
<td>匹配任意非数字的字符</td>
</tr>
<tr>
<td>\B</td>
<td>匹配不是单词开头或结束的位置</td>
</tr>
<tr>
<td>[^x]</td>
<td>匹配除了x以外的任意字符</td>
</tr>
<tr>
<td>[^aeiou]</td>
<td>匹配除了aeiou这几个字母以外的任意字符</td>
</tr>
</tbody></table>
<h4 id="后向引用"><a href="#后向引用" class="headerlink" title="后向引用"></a>后向引用</h4><p><img src="http://cdn.linz.tech/register.png" alt=""></p>
<ul>
<li><p><a href="http://blog.csdn.net/webgeek/article/details/22059923" target="_blank" rel="noopener">JAVA 正则表达式 （超详细)</a></p>
</li>
<li><p><a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">正则表达式30分钟入门教程</a></p>
</li>
<li><p><a href="https://github.com/Hamadakram/Ratifier" target="_blank" rel="noopener">Ratifier</a> 集中了Android验证的库,列如:</p>
<pre class="line-numbers language-java"><code class="language-java"> Mobile Number<span class="token operator">:</span> <span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token operator">+</span>\d<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token operator">-</span> <span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">?</span>\d<span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span>$<span class="token operator">/</span>
 Email Address<span class="token operator">:</span> <span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z0<span class="token operator">-</span>9_<span class="token punctuation">.</span>-<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span>@<span class="token punctuation">(</span><span class="token punctuation">[</span>\da<span class="token operator">-</span>z<span class="token punctuation">.</span>-<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">)</span>$<span class="token operator">/</span>
 URL<span class="token operator">:</span> <span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span>https<span class="token operator">?</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\da<span class="token operator">-</span>z<span class="token punctuation">.</span>-<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">[</span>a<span class="token operator">-</span>z<span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">/</span>\w <span class="token punctuation">.</span>-<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token operator">?</span>$<span class="token operator">/</span>
 IP Address<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">:</span><span class="token number">25</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">2</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token punctuation">[</span><span class="token number">01</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">:</span><span class="token number">25</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token number">2</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">|</span><span class="token punctuation">[</span><span class="token number">01</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">)</span>$<span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h4 id="正则表达式30分钟入门教程笔记"><a href="#正则表达式30分钟入门教程笔记" class="headerlink" title="正则表达式30分钟入门教程笔记"></a>正则表达式30分钟入门教程笔记</h4><p>简单的白话翻译</p>
<table>
<thead>
<tr>
<th align="center">白话</th>
<th align="center">正则翻译</th>
</tr>
</thead>
<tbody><tr>
<td align="center">精确地查找hi这个单词</td>
<td align="center">\bhi\b</td>
</tr>
<tr>
<td align="center">hi后面不远处跟着一个Lucy</td>
<td align="center">\bhi\b.*\bLucy\b</td>
</tr>
<tr>
<td align="center">以0开头，然后是两个数字，然后是一个连字号“-”，最后是8个数字</td>
<td align="center">0\d{2}-\d{8}</td>
</tr>
<tr>
<td align="center">QQ号必须为5位到12位数字</td>
<td align="center">^\d{5,12}$</td>
</tr>
<tr>
<td align="center">匹配deerchao.net</td>
<td align="center">deerchao\.net</td>
</tr>
<tr>
<td align="center">匹配C:\Windows</td>
<td align="center">C:\\Windows</td>
</tr>
<tr>
<td align="center">匹配Windows后面跟1个或更多数字</td>
<td align="center">Windows\d+</td>
</tr>
<tr>
<td align="center">匹配一行的第一个单词</td>
<td align="center">^\w+</td>
</tr>
<tr>
<td align="center">匹配任何一个英文元音字母</td>
<td align="center">[aeiou]</td>
</tr>
<tr>
<td align="center">匹配标点符号(.或?或!)</td>
<td align="center">[.?!]</td>
</tr>
<tr>
<td align="center">\S+</td>
<td align="center">匹配不包含空白符的字符串</td>
</tr>
<tr>
<td align="center">&lt;a[^&gt;]+&gt;</td>
<td align="center">用尖括号括起来的以a开头的字符串</td>
</tr>
<tr>
<td align="center">\b(\w+)\b\s+\1\b</td>
<td align="center">匹配重复的单词，像go go</td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<p>复杂的阅读理解<br>|                            正则                             |     翻译     |<br>| :———————————————————: | :————–: |<br>|0\d{2}-\d{8}| 0\d{3}-\d{7}|匹配两种以连字号分隔的电话号码：一种是三位区号，8位本地号(如010-12345678)，一种是4位区号，7位本地号(0376-2233445)|<br>|(0\d{2})[- ]?\d{8}| 0\d{2}[- ]?\d{8}|匹配3位区号的电话号码，其中区号可以用小括号括起来，也可以不用，区号与本地号间可以用连字号或空格间隔，也可以没有间隔|<br>|(\d{1,3}.){3}\d{1,3}|简单的IP地址匹配|<br>|\b\w+(?=ing\b)|以ing结尾的单词的前面部分(除了ing以外的部分)，如查找<em>I’m singing while you’re dancing.<em>时，它会匹配sing和danc|<br>|(?&lt;=\bre)\w+\b|以re开头的单词的后半部分(除了re以外的部分)，例如在查找reading a book时，它匹配ading|<br>|((?&lt;=\d)\d{3})+\b|</em>234567890*进行查找时结果是234567890|<br>|(?&lt;=\s)\d+(?=\s)|以空白符间隔的数字(再次强调，不包括这些空白符)|<br>|\d{3}(?!\d)|三位数字，而且这三位数字的后面不能是数字|<br>|\b((?!abc)\w)+\b|不包含连续字符串abc的单词|<br>|(?&lt;![a-z])\d{7}|前面不是小写字母的七位数字|<br>|(?&lt;=&lt;(\w+)&gt;).</em>(?=&lt;/\1&gt;)|匹配不包含属性的简单HTML标签内里的内容|</p>
<p>匹配IP地址:<code>((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)</code></p>
<p><a href="https://blog.csdn.net/zm2714/article/details/7946437" target="_blank" rel="noopener">正则表达式——详细讲解平衡组</a></p>
<h3 id="JavaDoc"><a href="#JavaDoc" class="headerlink" title="JavaDoc"></a>JavaDoc</h3><h4 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h4><ol>
<li><p><strong>Class Level</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
* Hero is the main entity we'll be using to . . .
* 
* Please see the {@link com.baeldung.javadoc.Person} class for true identity
* @author Captain America
* 
*/</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SuperHero</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// fields and methods</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Field Level</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
 * The public name of a hero that is common knowledge
 */</span>
<span class="token keyword">private</span> String heroName<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Method Level</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
 * Factory for {@linkplain Call calls} // 连接到其他类的说明
 * &lt;h3>OkHttpClients should be shared&lt;/h3> //设置字体大小
 * {@link #newBuilder()} // 连接本地方法
 * {@link ExecutorService#shutdown shutdown()} // 连接其他类的方法
 * &lt;p>This is a simple description of the method. . . // &lt;p> 能实现换行功能
 * &lt;a href="http://www.supermanisthegreatest.com">Superman!&lt;/a>
 * &lt;/p>
 * //代码块
 * &lt;pre>   {@code
 *   // The singleton HTTP client.
 *   public final OkHttpClient client = new OkHttpClient.Builder()
 *       .addInterceptor(new HttpLoggingInterceptor())
 *       .cache(new Cache(cacheDir, cacheSize))
 *       .build();
 * }&lt;/pre>
 * {@code String}  //{@code text} 将文本标记为code 一般在Javadoc中只要涉及到类名或者方法名，都需要使用@code进行标记
  * &lt;ul>&lt;li>{@code toffset} is negative. // 无符号列表
  * &lt;li>{@code ooffset} is negative.
  * &lt;li>{@code toffset+len} is greater than the length of this
  * {@code String} object.
  * &lt;li>{@code ooffset+len} is greater than the length of the other
  * &lt;/ul>
 * @param incomingDamage the amount of incoming damage
 * @return the amount of health hero has after attack
 * @see &lt;a href="http://www.link_to_jira/HERO-402">HERO-402&lt;/a>
 * @since 1.0
 * @version 版本
 */</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">successfullyAttacked</span><span class="token punctuation">(</span><span class="token keyword">int</span> incomingDamage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// do things</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>javadoc -d doc src\*</code> 生成</p>
</li>
<li><p>maven plugin <code>mvn javadoc:javadoc</code></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-javadoc-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tags</span><span class="token punctuation">></span></span>
            ...
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tags</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>Custom TAG <code>javadoc -tag location:a:</code>“Notable Locations:”<code></code>-d doc src*``</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
 * This is an example...
 * @location New York
 * @returns blah blah
 */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>@location 替换成 Notable Locations:</p>
</blockquote>
<p>above maven plugin </p>
<pre class="line-numbers language-xml"><code class="language-xml">...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tags</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tag</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>location<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>placement</span><span class="token punctuation">></span></span>a<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>placement</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>Notable Places:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tag</span><span class="token punctuation">></span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tags</span><span class="token punctuation">></span></span>
...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h4 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://www.oracle.com/technetwork/articles/java/index-137868.html" target="_blank" rel="noopener">How to Write Doc Comments for the Javadoc Tool</a></li>
</ul>
<h1 id="Java-高级"><a href="#Java-高级" class="headerlink" title="Java 高级"></a>Java 高级</h1><h2 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h2><h3 id="1-ClassLoader-介绍"><a href="#1-ClassLoader-介绍" class="headerlink" title="1. ClassLoader 介绍"></a>1. ClassLoader 介绍</h3><p>1.1 结束一个JVM的生命周期方式</p>
<p>1.2 类加载的三中方式</p>
<ol>
<li>验证 -&gt; 确保被加载类的正确性</li>
<li>准备 -&gt; 为类的静态变量分配内存，将其初始化为默认值</li>
<li>解析 -&gt; 把类中的符号引用转换为直接应用</li>
<li>初始化 -&gt; 为类的静态变量赋予正确的初始化值</li>
</ol>
<p>1.4 主动使用</p>
<blockquote>
<p>除了以下六个，其余的都是被动使用，不会导致类的初始化</p>
</blockquote>
<ol>
<li>new, 直接使用</li>
<li>访问某个类或者接口的静态变量，或者对静态变量进行赋值操作<ol>
<li>访问类的静态变量会初始化class </li>
</ol>
</li>
<li>调用静态方法</li>
<li>反射某个类</li>
<li>初始化一个子类</li>
<li>启动类，比如：java HelloWorld</li>
</ol>
<p>1.5 被动使用</p>
<p>三种易错的被动使用</p>
<ol>
<li>通过子类访问父类的static变量，不会导致子类的初始化</li>
<li>定义引用数组，不会初始化类</li>
<li>final修饰的常量会在编译期间放到常量池中，不会初始化类</li>
<li>final修饰的复杂类型，在编译期间无法计算得出，会初始化类</li>
</ol>
<h3 id="2-类加载详解"><a href="#2-类加载详解" class="headerlink" title="2. 类加载详解"></a>2. 类加载详解</h3><p>2.1 加载类的方式</p>
<ol>
<li>本地磁盘加载</li>
<li>内存直接加载</li>
<li>网络加载 URLClassLoader</li>
<li>从zip,jar等归档文件中加载.class文件</li>
<li>数据库中提取.class文件</li>
<li>动态编译</li>
</ol>
<p>2.2 JVM内存简介</p>
<p><img src="http://cdn.linz.tech/jvm-detail.png" alt="2018070215085731"></p>
<ol>
<li>Execution engine功能：执行classes中的指令</li>
<li>Native interface组件：与native libraries交互</li>
<li>Runtime Data Area组件也就是JVM内存</li>
</ol>
<p>2.2.1 Program Counter Register</p>
<p>2.2.2 Java Virtual Machine Stacks </p>
<p>2.2.3 Heap Memory </p>
<p>2.2.4 Method Area</p>
<p>2.2.5 Run-time Constant Pool </p>
<p>2.2.6 Native Method Stack</p>
<h4 id="Class-and-Object-in-the-Memory"><a href="#Class-and-Object-in-the-Memory" class="headerlink" title="Class and Object in the Memory"></a>Class and Object in the Memory</h4><p><img src="http://cdn.linz.tech/class-object-in-memory.png" alt="1556803701272"></p>
<h4 id="创建对象的过程"><a href="#创建对象的过程" class="headerlink" title="创建对象的过程"></a>创建对象的过程</h4><p><img src="http://cdn.linz.tech/create-object-process.png" alt="1556804652176"></p>
<h3 id="3-类的连接详解"><a href="#3-类的连接详解" class="headerlink" title="3. 类的连接详解"></a>3. 类的连接详解</h3><p>3.1 验证</p>
<blockquote>
<p>字节流中包含的信息符合虚拟机的要求，并不会损害到JVM自身安全</p>
</blockquote>
<ul>
<li>文件格式验证<ul>
<li>魔术因子是否正确，0xCAFEBABE</li>
<li>主从版本号是否符合当前虚拟机</li>
<li>常量池中的常量类型是不是支持</li>
<li>…</li>
</ul>
</li>
<li>元素数据验证</li>
<li>字节码验证</li>
<li>字符号引用验证</li>
</ul>
<p>3.2 准备阶段</p>
<ol>
<li>初始值</li>
</ol>
<p>3.3 解析</p>
<p>3.4 初始化</p>
<h3 id="4-类的初始化详解"><a href="#4-类的初始化详解" class="headerlink" title="4. 类的初始化详解"></a>4. 类的初始化详解</h3><h3 id="5-类加载器（JDK自带）详细介绍"><a href="#5-类加载器（JDK自带）详细介绍" class="headerlink" title="5. 类加载器（JDK自带）详细介绍"></a>5. 类加载器（JDK自带）详细介绍</h3><p><img src="http://cdn.linz.tech/classloader-detail.png" alt="1556806319483"></p>
<h4 id="JVM自带的几种加载器"><a href="#JVM自带的几种加载器" class="headerlink" title="JVM自带的几种加载器"></a>JVM自带的几种加载器</h4><p>根（Bootstrap）</p>
<ol>
<li>负责加载核心类库，如java.lang.*等。</li>
<li>指定加载目录为<code>System.getProperty("sun.boot.class.path")</code></li>
<li>没有继承ClassLoader类，没有父加载器；</li>
</ol>
<p>扩展（Extension）类加载器</p>
<ol>
<li>父加载器为Bootstrap；</li>
<li>指定加载目录为System.getProperty(“java.ext.dirs”)，或者从jdk/jre/lib/ext 中加载</li>
</ol>
<p>系统（System）类加载器</p>
<ol>
<li>父家加载器为Extension；</li>
<li>指定加载目录为classpath或System.getProperty(“java.class.path”)指定目录</li>
<li>用户自定义类默认加载器</li>
</ol>
<h3 id="6-类加载的父委托机制"><a href="#6-类加载的父委托机制" class="headerlink" title="6. 类加载的父委托机制"></a>6. 类加载的父委托机制</h3><blockquote>
<ol>
<li>先有父加载，父加载不到再由儿子孙子加载，Tomcat的加载器机制和JVM正好相反</li>
<li>父加载器和子加载器其实是一种包装关系，或者包含关系</li>
<li>优点： 能提高系统的安全性，在此机制下，用户自定义的类加载器不可能加载应该有父加载器加载的可靠类，防止恶意的代码代替父加载的可靠代码</li>
</ol>
</blockquote>
<h3 id="7-命名空间-amp-运行时包"><a href="#7-命名空间-amp-运行时包" class="headerlink" title="7. 命名空间&amp;运行时包"></a>7. 命名空间&amp;运行时包</h3><h4 id="命名空间"><a href="#命名空间" class="headerlink" title="命名空间"></a>命名空间</h4><p>每个类的加载器都有子的命名空间，命名空间由该加载器及其所有父加载器所加载的类组成。</p>
<p><img src="http://cdn.linz.tech/name-for-class.png" alt="1556852278628"></p>
<h4 id="运行时包"><a href="#运行时包" class="headerlink" title="运行时包"></a>运行时包</h4><ol>
<li>父类家加载器看不到子类加载器加载的类</li>
<li>不同命名空间下的类加载器之间的类互相不可访问</li>
</ol>
<h3 id="8-创建自定义类加载器"><a href="#8-创建自定义类加载器" class="headerlink" title="8. 创建自定义类加载器"></a>8. 创建自定义类加载器</h3><h3 id="9-类的卸载"><a href="#9-类的卸载" class="headerlink" title="9. 类的卸载"></a>9. 类的卸载</h3><blockquote>
<p>JVM中的Class只有满足以下三个条件，才能被GC回收，也就是该Class被卸载（unload）:</p>
</blockquote>
<ol>
<li><p>该类所有的实例都已经被GC。</p>
</li>
<li><p>加载该类的ClassLoader实例已经被GC。</p>
</li>
<li><p>该类的java.lang.Class对象没有任何地方被引用。</p>
</li>
</ol>
<p>GC的时机我们是不可以控的，那么同样的我们对于Class的卸载也是不可控的。</p>
<h3 id="10-自定义解密加密类加载器"><a href="#10-自定义解密加密类加载器" class="headerlink" title="10. 自定义解密加密类加载器"></a>10. 自定义解密加密类加载器</h3><h3 id="11-线程上下文加载器"><a href="#11-线程上下文加载器" class="headerlink" title="11. 线程上下文加载器"></a>11. 线程上下文加载器</h3><p> SPI（Service Provider Interface）</p>
<blockquote>
<p>is an <a href="https://en.wikipedia.org/wiki/Application_programming_interface" target="_blank" rel="noopener">API</a> intended to be implemented or extended by a third party. It can be used to enable framework extension and replaceable components. for example jdbc, jndi,jms in the rt.jar. </p>
</blockquote>
<p>The reason for ContextLoader:</p>
<p>rt.jar was loaded by BootClassLoader, but the implementation is loaded by AppClassLoader</p>
<h4 id="JDBC-example"><a href="#JDBC-example" class="headerlink" title="JDBC example"></a>JDBC example</h4><p>com.mysql.jdbc.Driver</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">static</span><span class="token punctuation">{</span>
    <span class="token keyword">try</span><span class="token punctuation">{</span>
        java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>DriverManager<span class="token punctuation">.</span><span class="token function">registerDriver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Driver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>SQLException E<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"Cann't register driver!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="Custom-Context-Class-Loader"><a href="#Custom-Context-Class-Loader" class="headerlink" title="Custom Context Class Loader"></a>Custom Context Class Loader</h4><pre class="line-numbers language-java"><code class="language-java">Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setContextClassLoader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContextClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="12-关于JVM类加载器的总结"><a href="#12-关于JVM类加载器的总结" class="headerlink" title="12. 关于JVM类加载器的总结"></a>12. 关于JVM类加载器的总结</h3><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><ul>
<li><a href="https://docs.oracle.com/javase/specs/jvms/se8/html/" target="_blank" rel="noopener">The Java Virtual Machine Specification Java SE 8 Edition</a></li>
</ul>
<h1 id="Java实战笔记"><a href="#Java实战笔记" class="headerlink" title="Java实战笔记"></a>Java实战笔记</h1><h2 id="class声明为final的好处"><a href="#class声明为final的好处" class="headerlink" title="class声明为final的好处"></a><a href="https://blog.csdn.net/zzxuan6/article/details/44646263" target="_blank" rel="noopener">class声明为final的好处</a></h2><ul>
<li>不会被重载<ul>
<li>Vm产生更快codes</li>
<li>防止自己改的代码影响到客户</li>
</ul>
</li>
<li>多线程使用安全</li>
<li>针对Final的优化<ul>
<li>Jvm和Application有针对final的缓存</li>
<li>Final keyword allows JVM to optimized method, variable or class.</li>
<li>jit能够避免使用虚函数表</li>
</ul>
</li>
</ul>
<blockquote>
<p>结论：能用final尽量使用final</p>
</blockquote>
<h2 id="运行Java代码"><a href="#运行Java代码" class="headerlink" title="运行Java代码"></a>运行Java代码</h2><p>Exmaple.java </p>
<pre class="line-numbers language-shell"><code class="language-shell">#编译Java代码成.class
javac Exmaple.java 
# 运行.class文件
java -cp . Example
#后台运行
nohup java -cp . Exmaple 
# 查看后台运行日志
tail -f nohup.out<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><ul>
<li><a href="https://blog.csdn.net/qq_22076345/article/details/82392236" target="_blank" rel="noopener">Intellij idea 报错：Error : java 不支持发行版本5</a></li>
</ul>
<h1 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h1><ul>
<li><a href="https://github.com/crossoverJie/JCSprout" target="_blank" rel="noopener">JCSprout</a> 处于萌芽阶段的 Java 核心知识库</li>
<li><a href="https://github.com/eugenp/tutorials/tree/master/core-java" target="_blank" rel="noopener"><strong>Core Java Cookbooks and Examples</strong></a></li>
</ul>
<p>很好的深入Java基层系列</p>
<ol>
<li><a href="http://blog.csdn.net/javazejian/article/details/70768369" target="_blank" rel="noopener">深入理解Java类型信息(Class对象)与反射机制</a></li>
<li><a href="http://blog.csdn.net/javazejian/article/details/71333103" target="_blank" rel="noopener">深入理解Java枚举类型(enum)</a></li>
<li><a href="http://blog.csdn.net/javazejian/article/details/71860633" target="_blank" rel="noopener">深入理解Java注解类型(@Annotation)</a></li>
<li><a href="http://blog.csdn.net/javazejian/article/details/72828483" target="_blank" rel="noopener">深入理解Java并发之synchronized实现原理</a></li>
<li><a href="http://blog.csdn.net/javazejian/article/details/72772461" target="_blank" rel="noopener">深入理解Java内存模型(JMM)及volatile关键字</a></li>
<li><a href="http://blog.csdn.net/javazejian/article/details/73413292" target="_blank" rel="noopener">深入理解Java类加载器(ClassLoader)</a></li>
</ol>
<h1 id="附录-1"><a href="#附录-1" class="headerlink" title="附录"></a>附录</h1><h2 id="javase-11-API-官方文档搜索"><a href="#javase-11-API-官方文档搜索" class="headerlink" title="javase 11 API 官方文档搜索 "></a><a href="https://docs.oracle.com/en/java/javase/11/" target="_blank" rel="noopener">javase 11 API 官方文档搜索 </a></h2><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><h3 id="Expresso-正则工具"><a href="#Expresso-正则工具" class="headerlink" title="Expresso 正则工具"></a>Expresso 正则工具</h3><p><a href="http://www.ultrapico.com/ExpressoDownload.htm" target="_blank" rel="noopener">http://www.ultrapico.com/ExpressoDownload.htm</a></p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>知识架构</tag>
      </tags>
  </entry>
  <entry>
    <title>JNI/NDK开发指南学习笔记</title>
    <url>/2019/09/12/2018-8-15-jni-note/</url>
    <content><![CDATA[<p>[TOC]</p>
<h2 id="JNI开发流程及HelloWorld"><a href="#JNI开发流程及HelloWorld" class="headerlink" title="JNI开发流程及HelloWorld"></a><a href="https://blog.csdn.net/xyang81/article/details/41759643" target="_blank" rel="noopener">JNI开发流程及HelloWorld</a></h2><p>基础知识：不同平台的动态库<code>（windows：*.dll，linux/unix：*.so，mac os x：*.jnilib）</code></p>
<h3 id="JNI开发主要流程"><a href="#JNI开发主要流程" class="headerlink" title="JNI开发主要流程"></a>JNI开发主要流程</h3><ol>
<li><p>第一步、并新建一个HelloWorld.java源文件</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">package</span> com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>jnilearn<span class="token punctuation">;</span>
 <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>
     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> String <span class="token function">sayHello</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">// 1.声明这是一个native函数，由本地代码实现</span>

     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         String text <span class="token operator">=</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token string">"yangxin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment" spellcheck="true">// 3.调用本地函数</span>
         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>

     <span class="token keyword">static</span> <span class="token punctuation">{</span>
         System<span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span><span class="token string">"HelloWorld"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 2.加载实现了native函数的动态库，只需要写动态库的名字</span>
     <span class="token punctuation">}</span>

 <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>用javac命令将.java源文件编译成.class字节码文件</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//-d 指定目录</span>
javac src<span class="token operator">/</span>com<span class="token operator">/</span>study<span class="token operator">/</span>jnilearn<span class="token operator">/</span>HelloWorld<span class="token punctuation">.</span>java <span class="token operator">-</span>d <span class="token punctuation">.</span>/bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>生成.h头文件</p>
<pre class="line-numbers language-java"><code class="language-java">javah <span class="token operator">-</span>jni <span class="token operator">-</span>classpath <span class="token punctuation">.</span>/bin <span class="token operator">-</span>d <span class="token punctuation">.</span>/jni com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>jnilearn<span class="token punctuation">.</span>HelloWorld<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>实现.h头文件中的函数</p>
</li>
</ol>
<p><em>com_study_jnilearn_HelloWorld.h：</em></p>
<pre><code>```c
/* DO NOT EDIT THIS FILE - it is machine generated */
#include &lt;jni.h&gt;</code></pre><p> /* Header for class com_study_jnilearn_HelloWorld */</p>
<pre><code>#ifndef _Included_com_study_jnilearn_HelloWorld
#define _Included_com_study_jnilearn_HelloWorld
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_study_jnilearn_HelloWorld
 * Method:    sayHello
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_study_jnilearn_HelloWorld_sayHello</code></pre><p>   (JNIEnv *, jclass, jstring);</p>
<pre><code>#ifdef __cplusplus
}
#endif
#endif
```</code></pre><ol start="5">
<li>将C/C++代码编译成本地动态库文件<pre class="line-numbers language-shell"><code class="language-shell">#-I 包含头文件
# -fPIC：    编译成与位置无关的独立代码
# -shared：编译成动态库
# -o 指定输出
gcc -I$JAVA_HOME/include -I$JAVA_HOME/include/linux -fPIC -shared HelloWorld.c -o libHelloWorld.so<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>运行Java程序</li>
</ol>
<h3 id="so库加载及相关配置"><a href="#so库加载及相关配置" class="headerlink" title="so库加载及相关配置"></a>so库加载及相关配置</h3><p>如果手上有动态库；</p>
<pre class="line-numbers language-txt"><code class="language-txt">win: libHelloWorld.dll，linux/unix：libHelloWorld.so，mac os x：libHelloWorld.jnilib<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>加载方式</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//1. 不需要加lib前缀，也不要加.so、.dll和.jnilib后缀</span>
System<span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span><span class="token string">"HelloWorld"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//2. 指定动态库的绝对路径名，需要加上前缀和后缀</span>
System<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">"/Users/yangxin/Desktop/libHelloWorld.jnilib"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>加载方式1的配置</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//1. 将动态链接库拷贝到java.library.path目录</span>
String libraryDirs <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">"java.library.path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>libraryDirs<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// 输出结果如下：</span>
<span class="token operator">/</span>Users<span class="token operator">/</span>yangxin<span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>Extensions<span class="token operator">:</span><span class="token operator">/</span>Library<span class="token operator">/</span>Java<span class="token operator">/</span>Extensions<span class="token operator">:</span>

<span class="token comment" spellcheck="true">// 2. 指定系统属性java.library.path的值</span>
java <span class="token operator">-</span>Djava<span class="token punctuation">.</span>library<span class="token punctuation">.</span>path<span class="token operator">=</span><span class="token operator">/</span>Users<span class="token operator">/</span>yangxin<span class="token operator">/</span>Desktop
<span class="token comment" spellcheck="true">// 3. 指定库的搜索目录: Linux/Unix环境下可以通过设置LD_LIBRARY_PATH环境变量。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="JNI数据类型"><a href="#JNI数据类型" class="headerlink" title="JNI数据类型"></a><a href="https://blog.csdn.net/xyang81/article/details/42047899" target="_blank" rel="noopener">JNI数据类型</a></h2><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// HelloWorld.java</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">short</span> s<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">long</span> l<span class="token punctuation">,</span> <span class="token keyword">float</span> f<span class="token punctuation">,</span> <span class="token keyword">double</span> d<span class="token punctuation">,</span> <span class="token keyword">char</span> c<span class="token punctuation">,</span> 
            <span class="token keyword">boolean</span> z<span class="token punctuation">,</span> <span class="token keyword">byte</span> b<span class="token punctuation">,</span> String str<span class="token punctuation">,</span> Object obj<span class="token punctuation">,</span> MyClass p<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">// HelloWorld.h</span>
JNIEXPORT <span class="token keyword">void</span> JNICALL <span class="token function">Java_com_study_jnilearn_HelloWorld_test</span>
    <span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jclass cls<span class="token punctuation">,</span> jshort s<span class="token punctuation">,</span> jint i<span class="token punctuation">,</span> jlong l<span class="token punctuation">,</span> jfloat f<span class="token punctuation">,</span>
     jdouble d<span class="token punctuation">,</span> jchar c<span class="token punctuation">,</span> jboolean z<span class="token punctuation">,</span> jbyte b<span class="token punctuation">,</span> jstring j_str<span class="token punctuation">,</span> jobject jobj1<span class="token punctuation">,</span> jobject job2<span class="token punctuation">,</span> jintArray j_int_arr<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>主要类型：</strong><br><img src="http://cdn.linz.tech/jni_type_blog.jpg" alt=""></p>
<p><strong>数组：</strong><br><img src="http://cdn.linz.tech/jni_array.jpg" alt=""></p>
<p><strong>其他</strong><br>JNIEnv和jclass</p>
<h3 id="jobject-C-and-C-不同"><a href="#jobject-C-and-C-不同" class="headerlink" title="jobject C++ and C 不同"></a>jobject C++ and C 不同</h3><p>C++ 和Java一样面向对象</p>
<blockquote>
<p>所有引用类型自jobject派生</p>
</blockquote>
<pre><code>class _jobject {};
   class _jclass : public _jobject {};
   class _jstring : public _jobject {};
   class _jarray : public _jobject {};
   class _jbooleanArray : public _jarray {};
   class _jbyteArray : public _jarray {};
   ...</code></pre><p>C 使用typedef重新定义，如：typedef jobject jstring</p>
<p>*<em>jvalue *</em></p>
<pre class="line-numbers language-java"><code class="language-java">typedef union jvalue <span class="token punctuation">{</span>
    jboolean z<span class="token punctuation">;</span>
    jbyte    b<span class="token punctuation">;</span>
    jchar    c<span class="token punctuation">;</span>
    jshort   s<span class="token punctuation">;</span>
    jint     i<span class="token punctuation">;</span>
    jlong    j<span class="token punctuation">;</span>
    jfloat   f<span class="token punctuation">;</span>
    jdouble  d<span class="token punctuation">;</span>
    jobject  l<span class="token punctuation">;</span>
<span class="token punctuation">}</span> jvalue<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a><a href="https://blog.csdn.net/xyang81/article/details/42066665" target="_blank" rel="noopener">字符串处理</a></h2><p>基础知识</p>
<ul>
<li>JNI把Java中的所有对象当作一个C指针传递到本地方法中，这个指针指向JVM中的内部数据结构，而内部的数据结构在内存中的存储方式是不可见的。只能从JNIEnv指针指向的函数表中选择合适的JNI函数来操作JVM中的数据结构</li>
<li>Java默认使用Unicode编码，而C/CPP默认使用UTF编码；GetXXUTFXX/ReleaseXXUTFXX 用于C/CPP </li>
</ul>
<h3 id="字符三部曲-GET-gt-Release-gt-New"><a href="#字符三部曲-GET-gt-Release-gt-New" class="headerlink" title="字符三部曲 GET -> Release -> New"></a>字符三部曲 GET -&gt; Release -&gt; New</h3><pre class="line-numbers language-c"><code class="language-c"><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>c_str <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> buff<span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    jboolean isCopy<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 返回JNI_TRUE表示原字符串的拷贝，返回JNI_FALSE表示返回原字符串的指针</span>
    c_str <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetStringUTFChars</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> j_str<span class="token punctuation">,</span> <span class="token operator">&amp;</span>isCopy<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"C_str: %s \n"</span><span class="token punctuation">,</span> c_str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">sprintf</span><span class="token punctuation">(</span>buff<span class="token punctuation">,</span> <span class="token string">"hello %s"</span><span class="token punctuation">,</span> c_str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ReleaseStringUTFChars</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> j_str<span class="token punctuation">,</span> c_str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>buff<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>GetStringUTFChars(env, j_str, &amp;isCopy) 说明：</p>
<ul>
<li>isCopy 默认为NULL就好<ul>
<li>JNI_TRUE Jvm中j_str复制一份;</li>
<li>JNI_FALSE 返回源字符串的内容，不推荐；</li>
</ul>
</li>
<li>UTF <font color="#EA0000" face="STHupo">Java默认使用Unicode编码，而C/C++默认使用UTF编码</font>，GetStringUTFChars可以把一个jstring指针（指向JVM内部的Unicode字符序列）转换成一个UTF-8格式的C字符串</li>
</ul>
<h3 id="异常检查"><a href="#异常检查" class="headerlink" title="异常检查"></a>异常检查</h3><blockquote>
<p>因为JVM需要为新诞生的字符串分配内存空间，当内存空间不够分配的时候，会导致调用失败，失败后GetStringUTFChars会返回NULL，并抛出一个OutOfMemoryError异常。JNI的异常不会停止而是继续往下，留下一个空指针。</p>
</blockquote>
<p>if(GetStringUTFChars == NULL ) return ;</p>
<h3 id="释放字符串"><a href="#释放字符串" class="headerlink" title="释放字符串"></a>释放字符串</h3><blockquote>
<p><font color="red" face="STHupo">GetStringUTFChars</font> 会分配内存需释放</p>
</blockquote>
<p>同理： <font color="red" face="STHupo">GETXX</font>就必须调用<font color="red" face="STHupo">ReleaseXXX</font></p>
<h3 id="NewStringUTF"><a href="#NewStringUTF" class="headerlink" title="NewStringUTF"></a>NewStringUTF</h3><pre><code>graph LR
NewStringUTF --&gt; JVM新建java.lang.String; 
JVM新建java.lang.String --&gt; 没有内存;
没有内存--&gt; OutOfMemoryError ;</code></pre><h3 id="其他函数"><a href="#其他函数" class="headerlink" title="其他函数"></a>其他函数</h3><ul>
<li>Get和ReleaseStringChars(Unicode)vs Get/ReleaseStringUTFChars(UTF-8)</li>
<li>GetStringLength/GetStringUTFLength 由于UTF-8编码的字符串以’\0’结尾，而Unicode字符串不是。</li>
<li>Get/ReleaseStringCritical：提高JVM返回源字符串直接指针的可能性<ul>
<li>当字符1M左右，较大时使用</li>
<li>两个代码间，不可以执行导致阻塞的调用或为新对象在JVM中分配内存，否则，JVM有可能死锁。<pre class="line-numbers language-java"><code class="language-java">JNIEXPORT jstring JNICALL <span class="token function">Java_com_study_jnilearn_Sample_sayHello</span>
<span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jclass cls<span class="token punctuation">,</span> jstring j_str<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token keyword">const</span> jchar<span class="token operator">*</span> c_str<span class="token operator">=</span> NULL<span class="token punctuation">;</span>
<span class="token keyword">char</span> buff<span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"hello "</span><span class="token punctuation">;</span>
<span class="token keyword">char</span><span class="token operator">*</span> pBuff <span class="token operator">=</span> buff <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">/*
* 在GetStringCritical/RealeaseStringCritical之间是一个关键区。
* 在这关键区之中,绝对不能呼叫JNI的其他函数和会造成当前线程中断或是会让当前线程等待的任何本地代码，
* 否则将造成关键区代码执行区间垃圾回收器停止运作，任何触发垃圾回收器的线程也会暂停。
* 其他触发垃圾回收器的线程不能前进直到当前线程结束而激活垃圾回收器。
*/</span>
c_str <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">GetStringCritical</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>j_str<span class="token punctuation">,</span>NULL<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 返回源字符串指针的可能性</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>c_str <span class="token operator">==</span> NULL<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 验证是否因为字符串拷贝内存溢出而返回NULL</span>
<span class="token punctuation">{</span>
  <span class="token keyword">return</span> NULL<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">*</span>c_str<span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
  <span class="token operator">*</span>pBuff<span class="token operator">++</span> <span class="token operator">=</span> <span class="token operator">*</span>c_str<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">ReleaseStringCritical</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>j_str<span class="token punctuation">,</span>c_str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>buff<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
</li>
<li>GetStringRegion和GetStringUTFRegion 源字符串复制到一个预先分配的缓冲区内【不分配内存】，UTF越界 会报StringIndexOutOfBoundsException; 【推荐使用】<ul>
<li>缓冲区可以被编译器提前分配，而且永远不会产生内存溢出的异常</li>
<li>提供了一个开始索引和子字符串的长度值</li>
<li>复制少量字符串的消耗非常小<pre class="line-numbers language-java"><code class="language-java">jsize len <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">GetStringLength</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>j_str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 获取unicode字符串的长度</span>
<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"str_len:%d\n"</span><span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">char</span> buff<span class="token punctuation">[</span><span class="token number">128</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"hello "</span><span class="token punctuation">;</span>
<span class="token keyword">char</span><span class="token operator">*</span> pBuff <span class="token operator">=</span> buff <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">// 将JVM中的字符串以utf-8编码拷入C缓冲区,该函数内部不会分配内存空间</span>
<span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">GetStringUTFRegion</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>j_str<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>len<span class="token punctuation">,</span>pBuff<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>buff<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
</li>
</ul>
<h2 id="Crash错误定位"><a href="#Crash错误定位" class="headerlink" title="Crash错误定位"></a><a href="https://blog.csdn.net/xyang81/article/details/42319789" target="_blank" rel="noopener">Crash错误定位</a></h2><p><code>sdk\ndk-bundle\toolchains</code>选择出分析对应CPU架构的so文件</p>
<table>
<thead>
<tr>
<th>Toolchain</th>
<th>Location</th>
</tr>
</thead>
<tbody><tr>
<td>arm</td>
<td>$TOOLCHAIN/arm-linux-androideabi/lib/</td>
</tr>
<tr>
<td>arm64</td>
<td>$TOOLCHAIN/aarch64-linux-android/lib/</td>
</tr>
<tr>
<td>x86</td>
<td>$TOOLCHAIN/i686-linux-android/lib/</td>
</tr>
<tr>
<td>x86_64</td>
<td>$TOOLCHAIN/x86_64-linux-android/lib/</td>
</tr>
</tbody></table>
<pre><code> #02 pc 0000242f  /data/app/com.hard.dev.spiproject-C3PjhijiVGgyqX2M1fK3KQ==/lib/arm/libspi-lib.so (will_crash+30)
 #03 pc 0000245b  /data/app/com.hard.dev.spiproject-C3PjhijiVGgyqX2M1fK3KQ==/lib/arm/libspi-lib.so (JNI_OnLoad+18)</code></pre><p>两位数字 pc”开头的都是backtrace日志<br> 0000242f 0000245b为</p>
<ol>
<li>arm-linux-androideabi-addr2line 定位出错位置</li>
</ol>
<pre><code>adb pull /data/app/com.hard.dev.spiproject-C3PjhijiVGgyqX2M1fK3KQ==/lib/arm/libspi-lib.so
arm-linux-androideabi-addr2line -e libspi-lib.so 0000242f 0000245b</code></pre><ol start="2">
<li>使用arm-linux-androideabi-objdump  定位出错的函数信息<pre><code>arm-linux-androideabi-objdump -S -D libspi-lib.so &gt; dump.log</code></pre></li>
<li>ndk-stack<pre><code>adb logcat &gt; /tmp/foo.txt
#其中$PROJECT_PATH/obj/local/armeabi-v7a 指定生成的so库路径
$NDK/ndk-stack -sym $PROJECT_PATH/obj/local/armeabi-v7a -dump foo.txt</code></pre>输出 <font color="red" face="STCaiyun">Routine</font>后有指明保存源码位置<pre><code>Stack frame #05  pc 00000d1c  /data/app-lib/com.example.hellojni-1/libhello-jni.so (JNI_OnLoad+20):Routine JNI_OnLoad at /samples/hello-jni/jni/hello-jni.c:15</code></pre></li>
</ol>
<h2 id="访问数组（基本类型数组与对象数组）"><a href="#访问数组（基本类型数组与对象数组）" class="headerlink" title="访问数组（基本类型数组与对象数组）"></a><a href="https://blog.csdn.net/xyang81/article/details/42346165" target="_blank" rel="noopener">访问数组（基本类型数组与对象数组）</a></h2><h3 id="GetIntArrayRegion-【小量的、固定大小的数组】"><a href="#GetIntArrayRegion-【小量的、固定大小的数组】" class="headerlink" title="GetIntArrayRegion 【小量的、固定大小的数组】"></a>GetIntArrayRegion 【小量的、固定大小的数组】</h3><p>返回Int型数组的和例子</p>
<pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* DO NOT EDIT THIS FILE - it is machine generated */</span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;jni.h></span></span>
<span class="token comment" spellcheck="true">/* Header for class com_study_jnilearn_IntArray */</span>

<span class="token macro property">#<span class="token directive keyword">ifndef</span> _Included_com_study_jnilearn_IntArray</span>
<span class="token macro property">#<span class="token directive keyword">define</span> _Included_com_study_jnilearn_IntArray</span>
<span class="token macro property">#<span class="token directive keyword">ifdef</span> __cplusplus</span>
<span class="token keyword">extern</span> <span class="token string">"C"</span> <span class="token punctuation">{</span>
<span class="token macro property">#<span class="token directive keyword">endif</span></span>
<span class="token comment" spellcheck="true">/*
 * Class:     com_study_jnilearn_IntArray
 * Method:    sumArray
 * Signature: ([I)I
 */</span>
JNIEXPORT jint JNICALL <span class="token function">Java_com_study_jnilearn_IntArray_sumArray</span>
  <span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span><span class="token punctuation">,</span> jobject<span class="token punctuation">,</span> jintArray<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">#<span class="token directive keyword">ifdef</span> __cplusplus</span>
<span class="token punctuation">}</span>
<span class="token macro property">#<span class="token directive keyword">endif</span></span>
<span class="token macro property">#<span class="token directive keyword">endif</span></span>

<span class="token comment" spellcheck="true">// IntArray.c</span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"com_study_jnilearn_IntArray.h"</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span>

<span class="token comment" spellcheck="true">/*
 * Class:     com_study_jnilearn_IntArray
 * Method:    sumArray
 * Signature: ([I)I
 */</span>
JNIEXPORT jint JNICALL <span class="token function">Java_com_study_jnilearn_IntArray_sumArray</span>
<span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jobject obj<span class="token punctuation">,</span> jintArray j_array<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    jint i<span class="token punctuation">,</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    jint <span class="token operator">*</span>c_array<span class="token punctuation">;</span>
    jint arr_len<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//1. 获取数组长度</span>
    arr_len <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetArrayLength</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>j_array<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//2. 根据数组长度和数组元素的数据类型申请存放java数组元素的缓冲区</span>
    c_array <span class="token operator">=</span> <span class="token punctuation">(</span>jint<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>jint<span class="token punctuation">)</span> <span class="token operator">*</span> arr_len<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//3. 初始化缓冲区</span>
    <span class="token function">memset</span><span class="token punctuation">(</span>c_array<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>jint<span class="token punctuation">)</span><span class="token operator">*</span>arr_len<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"arr_len = %d "</span><span class="token punctuation">,</span> arr_len<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//4. 拷贝Java数组中的所有元素到缓冲区中</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetIntArrayRegion</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>j_array<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>arr_len<span class="token punctuation">,</span>c_array<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr_len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum <span class="token operator">+</span><span class="token operator">=</span> c_array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//5. 累加数组元素的和</span>
    <span class="token punctuation">}</span>
    <span class="token function">free</span><span class="token punctuation">(</span>c_array<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//6. 释放存储数组元素的缓冲区</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="优化GetIntArrayElements"><a href="#优化GetIntArrayElements" class="headerlink" title="优化GetIntArrayElements"></a>优化GetIntArrayElements</h3><pre class="line-numbers language-c"><code class="language-c">JNIEXPORT jint JNICALL <span class="token function">Java_com_study_jnilearn_IntArray_sumArray2</span>
<span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jobject obj<span class="token punctuation">,</span> jintArray j_array<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    jint i<span class="token punctuation">,</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    jint <span class="token operator">*</span>c_array<span class="token punctuation">;</span>
    jint arr_len<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 可能数组中的元素在内存中是不连续的，JVM可能会复制所有原始数据到缓冲区，然后返回这个缓冲区的指针</span>
    c_array <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetIntArrayElements</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>j_array<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// NULL JNI_TRUE 缓冲区数组指针 JNI_FALSE 原始</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c_array <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// JVM复制原始数据到缓冲区失败</span>
    <span class="token punctuation">}</span>
    arr_len <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetArrayLength</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>j_array<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"arr_len = %d\n"</span><span class="token punctuation">,</span> arr_len<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr_len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum <span class="token operator">+</span><span class="token operator">=</span> c_array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ReleaseIntArrayElements</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>j_array<span class="token punctuation">,</span> c_array<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 释放可能复制的缓冲区</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="GetIntArrayElements-缺点"><a href="#GetIntArrayElements-缺点" class="headerlink" title="GetIntArrayElements 缺点"></a>GetIntArrayElements 缺点</h3><ul>
<li>有可能在申请开辟临时缓冲区内存空间时，会内存不足导致申请失败，返回NULL</li>
<li>GC占用对象锁，导致本地线程一直堵塞</li>
</ul>
<h3 id="Get-ReleasePrimitiveArrayCritical-暂停GC"><a href="#Get-ReleasePrimitiveArrayCritical-暂停GC" class="headerlink" title="Get/ReleasePrimitiveArrayCritical 暂停GC"></a>Get/ReleasePrimitiveArrayCritical 暂停GC</h3><ul>
<li>特点：地代码在访问数组对象时会暂停GC线程</li>
<li>注意：两个函数期间不能调用任何会让线程阻塞或等待JVM中其它线程的本地函数或JNI函数</li>
</ul>
<h2 id="对象数组"><a href="#对象数组" class="headerlink" title="对象数组"></a>对象数组</h2><h3 id="Get-SetObjectArrayElement"><a href="#Get-SetObjectArrayElement" class="headerlink" title="Get/SetObjectArrayElement"></a>Get/SetObjectArrayElement</h3><p>案例：ObjectArray.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>jnilearn<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ObjectArray</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">initInt2DArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ObjectArray obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">initInt2DArray</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"arr[%d][%d] = %d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span><span class="token string">"ObjectArray"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>C语言</p>
<pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">/* DO NOT EDIT THIS FILE - it is machine generated */</span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;jni.h></span></span>
<span class="token comment" spellcheck="true">/* Header for class com_study_jnilearn_ObjectArray */</span>

<span class="token macro property">#<span class="token directive keyword">ifndef</span> _Included_com_study_jnilearn_ObjectArray</span>
<span class="token macro property">#<span class="token directive keyword">define</span> _Included_com_study_jnilearn_ObjectArray</span>
<span class="token macro property">#<span class="token directive keyword">ifdef</span> __cplusplus</span>
<span class="token keyword">extern</span> <span class="token string">"C"</span> <span class="token punctuation">{</span>
<span class="token macro property">#<span class="token directive keyword">endif</span></span>
<span class="token comment" spellcheck="true">/*
 * Class:     com_study_jnilearn_ObjectArray
 * Method:    initInt2DArray
 * Signature: (I)[[I
 */</span>
JNIEXPORT jobjectArray JNICALL <span class="token function">Java_com_study_jnilearn_ObjectArray_initInt2DArray</span>
  <span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span><span class="token punctuation">,</span> jobject<span class="token punctuation">,</span> jint<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token macro property">#<span class="token directive keyword">ifdef</span> __cplusplus</span>
<span class="token punctuation">}</span>
<span class="token macro property">#<span class="token directive keyword">endif</span></span>
<span class="token macro property">#<span class="token directive keyword">endif</span></span>


<span class="token comment" spellcheck="true">// ObjectArray.c</span>

<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"com_study_jnilearn_ObjectArray.h"</span></span>
<span class="token comment" spellcheck="true">/*
 * Class:     com_study_jnilearn_ObjectArray
 * Method:    initInt2DArray
 * Signature: (I)[[I
 */</span>
JNIEXPORT jobjectArray JNICALL <span class="token function">Java_com_study_jnilearn_ObjectArray_initInt2DArray</span>
  <span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jobject obj<span class="token punctuation">,</span> jint size<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    jobjectArray result<span class="token punctuation">;</span>
    jclass clsIntArray<span class="token punctuation">;</span>
    jint i<span class="token punctuation">,</span>j<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 1.获得一个int型二维数组类的引用</span>
    clsIntArray <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span><span class="token string">"[I"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//"[I" JNI class descript</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>clsIntArray <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment" spellcheck="true">// 2.创建一个数组对象（里面每个元素用clsIntArray表示）</span>
    <span class="token comment" spellcheck="true">// 说明： 函数NewObjectArray只能分配第一维，JVM没有与多维数组相对应的数据结构，JNI也没有提供类似的函数来创建二维数组</span>
    result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewObjectArray</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>size<span class="token punctuation">,</span>clsIntArray<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 3.为数组元素赋值</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        jint buff<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        jintArray intArr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewIntArray</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>intArr <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            buff<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">+</span> j<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment" spellcheck="true">//把buff[]缓冲中的内容复制到新分配的一维数组中</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">SetIntArrayRegion</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>intArr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>size<span class="token punctuation">,</span>buff<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">SetObjectArrayElement</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>result<span class="token punctuation">,</span> i<span class="token punctuation">,</span> intArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment" spellcheck="true">//避免在循环内创建大量的JNI局部引用，造成JNI引用表溢出</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>intArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> result<span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="JVM引用"><a href="#JVM引用" class="headerlink" title="JVM引用"></a>JVM引用</h3><p> 在JNI中，只有jobject以及子类属于引用变量，会占用引用表的空间，jint，jfloat，jboolean等都是基本类型变量，不会占用引用表空间，即不需要释放。引用表最大空间为512个，如果超出这个范围，JVM就会挂掉。</p>
<h2 id="C-C-访问Java实例方法和静态方法"><a href="#C-C-访问Java实例方法和静态方法" class="headerlink" title="C/C++访问Java实例方法和静态方法"></a><a href="https://blog.csdn.net/xyang81/article/details/42582213" target="_blank" rel="noopener">C/C++访问Java实例方法和静态方法</a></h2><h3 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h3><p><strong>AccessMethod.java</strong></p>
<pre class="line-numbers language-c"><code class="language-c">package com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>jnilearn<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * AccessMethod.java
 * 本地代码访问类的实例方法和静态方法
 * @author yangxin
 */</span>
public class AccessMethod <span class="token punctuation">{</span>

    public <span class="token keyword">static</span> native <span class="token keyword">void</span> <span class="token function">callJavaStaticMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    public <span class="token keyword">static</span> native <span class="token keyword">void</span> <span class="token function">callJavaInstaceMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    public <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">callJavaStaticMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">callJavaInstaceMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span><span class="token string">"AccessMethod"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>ClassMethod.java</strong></p>
<pre class="line-numbers language-c"><code class="language-c">package com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>jnilearn<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * ClassMethod.java
 * 用于本地代码调用
 * @author yangxin
 */</span>
public class ClassMethod <span class="token punctuation">{</span>

    private <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">callStaticMethod</span><span class="token punctuation">(</span>String str<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"ClassMethod::callStaticMethod called!-->str=%s,"</span> <span class="token operator">+</span>
                <span class="token string">" i=%d\n"</span><span class="token punctuation">,</span> str<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    private <span class="token keyword">void</span> <span class="token function">callInstanceMethod</span><span class="token punctuation">(</span>String str<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"ClassMethod::callInstanceMethod called!-->str=%s, "</span> <span class="token operator">+</span>
                <span class="token string">"i=%d\n"</span><span class="token punctuation">,</span> str<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Jni 源码</p>
<pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">// AccessMethod.c</span>

<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"com_study_jnilearn_AccessMethod.h"</span></span>

<span class="token comment" spellcheck="true">/*
 * Class:     com_study_jnilearn_AccessMethod
 * Method:    callJavaStaticMethod
 * Signature: ()V
 */</span>
JNIEXPORT <span class="token keyword">void</span> JNICALL <span class="token function">Java_com_study_jnilearn_AccessMethod_callJavaStaticMethod</span>
<span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jclass cls<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    jclass clazz <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    jstring str_arg <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    jmethodID mid_static_method<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 1、从classpath路径下搜索ClassMethod这个类，并返回该类的Class对象</span>
    clazz <span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span><span class="token string">"com/study/jnilearn/ClassMethod"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 2、从clazz类中查找callStaticMethod方法</span>
    mid_static_method <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetStaticMethodID</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>clazz<span class="token punctuation">,</span><span class="token string">"callStaticMethod"</span><span class="token punctuation">,</span><span class="token string">"(Ljava/lang/String;I)V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mid_static_method <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"找不到callStaticMethod这个静态方法。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 3、调用clazz类的callStaticMethod静态方法</span>
    str_arg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span><span class="token string">"我是静态方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">CallStaticVoidMethod</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>clazz<span class="token punctuation">,</span>mid_static_method<span class="token punctuation">,</span> str_arg<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 删除局部引用</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>str_arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*
 * Class:     com_study_jnilearn_AccessMethod
 * Method:    callJavaInstaceMethod
 * Signature: ()V
 */</span>
JNIEXPORT <span class="token keyword">void</span> JNICALL <span class="token function">Java_com_study_jnilearn_AccessMethod_callJavaInstaceMethod</span>
<span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jclass cls<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    jclass clazz <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    jobject jobj <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    jmethodID mid_construct <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    jmethodID mid_instance <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    jstring str_arg <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 1、从classpath路径下搜索ClassMethod这个类，并返回该类的Class对象</span>
    clazz <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">"com/study/jnilearn/ClassMethod"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"找不到'com.study.jnilearn.ClassMethod'这个类"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 2、获取类的默认构造方法ID</span>
    mid_construct <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>clazz<span class="token punctuation">,</span> <span class="token string">"&lt;init>"</span><span class="token punctuation">,</span><span class="token string">"()V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mid_construct <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"找不到默认的构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 3、查找实例方法的ID</span>
    mid_instance <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> clazz<span class="token punctuation">,</span> <span class="token string">"callInstanceMethod"</span><span class="token punctuation">,</span> <span class="token string">"(Ljava/lang/String;I)V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mid_instance <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 4、创建该类的实例</span>
    jobj <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewObject</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>clazz<span class="token punctuation">,</span>mid_construct<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>jobj <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"在com.study.jnilearn.ClassMethod类中找不到callInstanceMethod方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 5、调用对象的实例方法</span>
    str_arg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span><span class="token string">"我是实例方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">CallVoidMethod</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>jobj<span class="token punctuation">,</span>mid_instance<span class="token punctuation">,</span>str_arg<span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 删除局部引用</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>jobj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>str_arg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="callJavaStaticMethod静态方法实现说明"><a href="#callJavaStaticMethod静态方法实现说明" class="headerlink" title="callJavaStaticMethod静态方法实现说明"></a>callJavaStaticMethod静态方法实现说明</h3><p>++void (JNICALL *CallStaticVoidMethod)(JNIEnv *env, jclass cls, jmethodID methodID, …);++</p>
<ul>
<li>env：JNI函数表指针</li>
<li>cls：调用该静态方法的Class对象</li>
<li>methodID：方法唯一ID</li>
<li>… 参数4：方法实参列表  </li>
</ul>
<p>其他方法</p>
<ul>
<li>CallStaticXXXMethod<blockquote>
<p>CallStaticIntMethod、CallStaticFloatMethod、CallStaticShortMethod、CallStaticObjectMethod</p>
</blockquote>
</li>
</ul>
<h3 id="callInstanceMethod实例方法实现说明"><a href="#callInstanceMethod实例方法实现说明" class="headerlink" title="callInstanceMethod实例方法实现说明"></a>callInstanceMethod实例方法实现说明</h3><p>++void (JNICALL *CallVoidMethod) (JNIEnv *env, jobject obj, jmethodID methodID, …);++</p>
<ul>
<li>env：JNI函数表指针</li>
<li>obj：调用该方法的实例 【于上不同】</li>
<li>methodID：方法唯一ID</li>
<li>… 参数4：方法实参列表  </li>
</ul>
<h4 id="相关的函数CallXXXMethod"><a href="#相关的函数CallXXXMethod" class="headerlink" title="相关的函数CallXXXMethod"></a>相关的函数CallXXXMethod</h4><blockquote>
<p>（CallXXXMethod），如：CallIntMethod、CallFloatMethod、CallObjectMethod等</p>
</blockquote>
<h3 id="方法签名"><a href="#方法签名" class="headerlink" title="方法签名"></a>方法签名</h3><p>fadfaf</p>
<h4 id="方法签名的格式"><a href="#方法签名的格式" class="headerlink" title="方法签名的格式"></a>方法签名的格式</h4><p><img src="http://cdn.linz.tech/jni_argments_method.png" alt=""></p>
<h4 id="基本类型映射关系"><a href="#基本类型映射关系" class="headerlink" title="基本类型映射关系"></a>基本类型映射关系</h4><p><img src="http://cdn.linz.tech/jni_field_descriptor.png" alt=""></p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul>
<li>获取构造方法ID，方法名称使用”<init>“</init></li>
</ul>
<h2 id="C-C-访问Java实例Field和static-Field"><a href="#C-C-访问Java实例Field和static-Field" class="headerlink" title="C/C++访问Java实例Field和static Field"></a><a href="https://blog.csdn.net/xyang81/article/details/42836783" target="_blank" rel="noopener">C/C++访问Java实例Field和static Field</a></h2><blockquote>
<p>C/C++代码中可以访问任意Java类中的属性</p>
</blockquote>
<h3 id="实战Demo"><a href="#实战Demo" class="headerlink" title="实战Demo"></a>实战Demo</h3><p>AccessField.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>jnilearn<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * C/C++访问类的实例变量和静态变量
 * @author yangxin
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AccessField</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">accessInstanceField</span><span class="token punctuation">(</span>ClassField obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">accessStaticField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ClassField obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        obj<span class="token punctuation">.</span><span class="token function">setNum</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        obj<span class="token punctuation">.</span><span class="token function">setStr</span><span class="token punctuation">(</span><span class="token string">"Hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// 本地代码访问和修改ClassField为中的静态属性num</span>
        <span class="token function">accessStaticField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">accessInstanceField</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// 输出本地代码修改过后的值</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"In Java--->ClassField.num = "</span> <span class="token operator">+</span> obj<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"In Java--->ClassField.str = "</span> <span class="token operator">+</span> obj<span class="token punctuation">.</span><span class="token function">getStr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span><span class="token string">"AccessField"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>ClassField.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>jnilearn<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">/**
 * ClassField.java
 * 用于本地代码访问和修改该类的属性
 * @author yangxin
 *
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ClassField</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> num<span class="token punctuation">;</span>

    <span class="token keyword">private</span> String str<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> num<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setNum</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ClassField<span class="token punctuation">.</span>num <span class="token operator">=</span> num<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> String <span class="token function">getStr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> str<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStr</span><span class="token punctuation">(</span>String str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>str <span class="token operator">=</span> str<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Native 代码</p>
<pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">// AccessField.c</span>

<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"com_study_jnilearn_AccessField.h"</span></span>

<span class="token comment" spellcheck="true">/*
 * Class:     com_study_jnilearn_AccessField
 * Method:    accessInstanceField
 * Signature: ()V
 */</span>
JNIEXPORT <span class="token keyword">void</span> JNICALL <span class="token function">Java_com_study_jnilearn_AccessField_accessInstanceField</span>
<span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jclass cls<span class="token punctuation">,</span> jobject obj<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    jclass clazz<span class="token punctuation">;</span>
    jfieldID fid<span class="token punctuation">;</span>
    jstring j_str<span class="token punctuation">;</span>
    jstring j_newStr<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>c_str <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 1.获取AccessField类的Class引用</span>
    clazz <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetObjectClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 2. 获取AccessField类实例变量str的属性ID</span>
    fid <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetFieldID</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>clazz<span class="token punctuation">,</span><span class="token string">"str"</span><span class="token punctuation">,</span> <span class="token string">"Ljava/lang/String;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 3. 获取实例变量str的值</span>
    j_str <span class="token operator">=</span> <span class="token punctuation">(</span>jstring<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetObjectField</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>obj<span class="token punctuation">,</span>fid<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 4. 将unicode编码的java字符串转换成C风格字符串</span>
    c_str <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetStringUTFChars</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>j_str<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c_str <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"In C--->ClassField.str = %s\n"</span><span class="token punctuation">,</span> c_str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ReleaseStringUTFChars</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> j_str<span class="token punctuation">,</span> c_str<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 5. 修改实例变量str的值</span>
    j_newStr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">"This is C String"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>j_newStr <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">SetObjectField</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> fid<span class="token punctuation">,</span> j_newStr<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 6.删除局部引用</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> j_str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> j_newStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/*
 * Class:     com_study_jnilearn_AccessField
 * Method:    accessStaticField
 * Signature: ()V
 */</span>
JNIEXPORT <span class="token keyword">void</span> JNICALL <span class="token function">Java_com_study_jnilearn_AccessField_accessStaticField</span>
<span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jclass cls<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    jclass clazz<span class="token punctuation">;</span>
    jfieldID fid<span class="token punctuation">;</span>
    jint num<span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">//1.获取ClassField类的Class引用</span>
    clazz <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span><span class="token string">"com/study/jnilearn/ClassField"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>clazz <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 错误处理</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">//2.获取ClassField类静态变量num的属性ID</span>
    fid <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetStaticFieldID</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> clazz<span class="token punctuation">,</span> <span class="token string">"num"</span><span class="token punctuation">,</span> <span class="token string">"I"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fid <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 3.获取静态变量num的值</span>
    num <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetStaticIntField</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>clazz<span class="token punctuation">,</span>fid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"In C--->ClassField.num = %d\n"</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 4.修改静态变量num的值</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">SetStaticIntField</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> clazz<span class="token punctuation">,</span> fid<span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 删除属部引用</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="访问实例Field"><a href="#访问实例Field" class="headerlink" title="访问实例Field"></a>访问实例Field</h3><h4 id="GetXXField"><a href="#GetXXField" class="headerlink" title="GetXXField"></a>GetXXField</h4><blockquote>
<p>GetIntField，GetFloatField，GetDoubleField，GetBooleanField等</p>
</blockquote>
<pre><code>jobject (JNICALL *GetObjectField) (JNIEnv *env, jobject obj, jfieldID fieldID);</code></pre><ul>
<li>env是JNI函数表指针</li>
<li>obj是实例变量所属的对象</li>
<li>fieldID是变量的ID  </li>
</ul>
<p>类比Java反射</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>
    ClassField obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    obj<span class="token punctuation">.</span><span class="token function">setStr</span><span class="token punctuation">(</span><span class="token string">"YangXin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 获取ClassField字节码对象的Class引用</span>
    Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> clazz <span class="token operator">=</span> obj<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token comment" spellcheck="true">// 获取str属性</span>
    Field field <span class="token operator">=</span> clazz<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"str"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 取消权限检查，因为Java语法规定，非public属性是无法在外部访问的</span>
    field<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 获取obj对象中的str属性的值</span>
    String str <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span>field<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"str = "</span> <span class="token operator">+</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Jni的步骤</p>
<pre><code>clazz = (*env)-&gt;GetObjectClass(env,obj);
fid = (*env)-&gt;GetFieldID(env,clazz,"str", "Ljava/lang/String;");
j_str = (jstring)(*env)-&gt;GetObjectField(env,obj,fid);
//修改实例属性的值为j_newStr
(*env)-&gt;SetObjectField(env, obj, fid, j_newStr);</code></pre><p>++SetObjectField++ 类似的有<code>SetIntField、SetDoubleField、SetBooleanField等</code></p>
<h3 id="访问静态变量"><a href="#访问静态变量" class="headerlink" title="访问静态变量"></a>访问静态变量</h3><pre><code>// 3.获取静态变量num的值
num = (*env)-&gt;GetStaticIntField(env,clazz,fid);
// 4.修改静态变量num的值
(*env)-&gt;SetStaticIntField(env, clazz, fid, 80);</code></pre><h2 id="调用构造方法和父类实例方法"><a href="#调用构造方法和父类实例方法" class="headerlink" title="调用构造方法和父类实例方法"></a><a href="https://blog.csdn.net/xyang81/article/details/44002089" target="_blank" rel="noopener">调用构造方法和父类实例方法</a></h2><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>Java代码</p>
<pre><code>// Animal.java
package com.study.jnilearn;
public class Animal {

    protected String name;

    public Animal(String name) {
        this.name = name;
        System.out.println("Animal Construct call...");
    }

    public String getName() {
        System.out.println("Animal.getName Call...");
        return this.name;
    }

    public void run() {
        System.out.println("Animal.run...");
    }   
}

// Cat.java
package com.study.jnilearn;
public class Cat extends Animal {

    public Cat(String name) {
        super(name);
        System.out.println("Cat Construct call....");
    }

    @Override
    public String getName() {
        return "My name is " + this.name;
    }

    @Override
    public void run() {
        System.out.println(name + " Cat.run...");
    }
}

// AccessSuperMethod.java
package com.study.jnilearn;
public class AccessSuperMethod {

    public native static void callSuperInstanceMethod(); 

    public static void main(String[] args) {
        callSuperInstanceMethod();
    }

    static {
        System.loadLibrary("AccessSuperMethod");
    }
}</code></pre><p>AccessSuperMethod.c</p>
<pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">// AccessSuperMethod.c</span>

<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"com_study_jnilearn_AccessSuperMethod.h"</span></span>

JNIEXPORT <span class="token keyword">void</span> JNICALL <span class="token function">Java_com_study_jnilearn_AccessSuperMethod_callSuperInstanceMethod</span>
  <span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jclass cls<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    jclass cls_cat<span class="token punctuation">;</span>
    jclass cls_animal<span class="token punctuation">;</span>
    jmethodID mid_cat_init<span class="token punctuation">;</span>
    jmethodID mid_run<span class="token punctuation">;</span>
    jmethodID mid_getName<span class="token punctuation">;</span>
    jstring c_str_name<span class="token punctuation">;</span>
    jobject obj_cat<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>name <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 1、获取Cat类的class引用</span>
    cls_cat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">"com/study/jnilearn/Cat"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cls_cat <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 2、获取Cat的构造方法ID(构造方法的名统一为：&lt;init>)</span>
    mid_cat_init <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> cls_cat<span class="token punctuation">,</span> <span class="token string">"&lt;init>"</span><span class="token punctuation">,</span> <span class="token string">"(Ljava/lang/String;)V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mid_cat_init <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 没有找到只有一个参数为String的构造方法</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 3、创建一个String对象，作为构造方法的参数</span>
    c_str_name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">"汤姆猫"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c_str_name <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 创建字符串失败（内存不够）</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">//  4、创建Cat对象的实例(调用对象的构造方法并初始化对象)</span>
    obj_cat <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewObject</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>cls_cat<span class="token punctuation">,</span> mid_cat_init<span class="token punctuation">,</span>c_str_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj_cat <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">//-------------- 5、调用Cat父类Animal的run和getName方法 --------------</span>
    cls_animal <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">"com/study/jnilearn/Animal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cls_animal <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 例1： 调用父类的run方法</span>
    mid_run <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> cls_animal<span class="token punctuation">,</span> <span class="token string">"run"</span><span class="token punctuation">,</span> <span class="token string">"()V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 获取父类Animal中run方法的id</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mid_run <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 注意：obj_cat是Cat的实例，cls_animal是Animal的Class引用，mid_run是Animal类中的方法ID</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">CallNonvirtualVoidMethod</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> obj_cat<span class="token punctuation">,</span> cls_animal<span class="token punctuation">,</span> mid_run<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 例2：调用父类的getName方法</span>
    <span class="token comment" spellcheck="true">// 获取父类Animal中getName方法的id</span>
    mid_getName <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> cls_animal<span class="token punctuation">,</span> <span class="token string">"getName"</span><span class="token punctuation">,</span> <span class="token string">"()Ljava/lang/String;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mid_getName <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    c_str_name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">CallNonvirtualObjectMethod</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> obj_cat<span class="token punctuation">,</span> cls_animal<span class="token punctuation">,</span> mid_getName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetStringUTFChars</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> c_str_name<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"In C: Animal Name is %s\n"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 释放从java层获取到的字符串所分配的内存</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ReleaseStringUTFChars</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> c_str_name<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>

quit<span class="token punctuation">:</span>
    <span class="token comment" spellcheck="true">// 删除局部引用（jobject或jobject的子类才属于引用变量），允许VM释放被局部变量所引用的资源</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> cls_cat<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> cls_animal<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> c_str_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> obj_cat<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="JNI调用性能测试及优化"><a href="#JNI调用性能测试及优化" class="headerlink" title="JNI调用性能测试及优化"></a>JNI调用性能测试及优化</h2><h3 id="性能测试的结论"><a href="#性能测试的结论" class="headerlink" title="性能测试的结论"></a>性能测试的结论</h3><ul>
<li>空方法调用，JNI的性能就要比Java内部调用慢将近5倍</li>
<li>查找class和ID(属性和方法ID)消耗的时间比较大-&gt;如果每次都根据名称查找class和field的话，性能要下降高达40倍，反复调用甚至能到达百万级别<ul>
<li>消耗时间最多的就是查找class</li>
<li>native里保存class和member id是很有必要的</li>
<li>class和member id在一定范围内是稳定的，但在动态加载的class loader下，保存全局的class要么可能失效<h3 id="使用时缓存"><a href="#使用时缓存" class="headerlink" title="使用时缓存"></a>使用时缓存</h3></li>
</ul>
</li>
</ul>
<p><strong>示例：</strong><br>AccessCache.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>study<span class="token punctuation">.</span>jnilearn<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AccessCache</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> String str <span class="token operator">=</span> <span class="token string">"Hello"</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">accessField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 访问str成员变量</span>
    <span class="token keyword">public</span> <span class="token keyword">native</span> String <span class="token function">newString</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chars<span class="token punctuation">,</span> <span class="token keyword">int</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 根据字符数组和指定长度创建String对象</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        AccessCache accessCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccessCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        accessCache<span class="token punctuation">.</span><span class="token function">nativeMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span> chars<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">char</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        chars<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'中'</span><span class="token punctuation">;</span>
        chars<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'华'</span><span class="token punctuation">;</span>
        chars<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'人'</span><span class="token punctuation">;</span>
        chars<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'民'</span><span class="token punctuation">;</span>
        chars<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'共'</span><span class="token punctuation">;</span>
        chars<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'和'</span><span class="token punctuation">;</span>
        chars<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'国'</span><span class="token punctuation">;</span>
        String str <span class="token operator">=</span> accessCache<span class="token punctuation">.</span><span class="token function">newString</span><span class="token punctuation">(</span>chars<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span><span class="token string">"AccessCache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>++AccessCache.c++</p>
<pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">// AccessCache.c</span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"com_study_jnilearn_AccessCache.h"</span></span>

JNIEXPORT <span class="token keyword">void</span> JNICALL <span class="token function">Java_com_study_jnilearn_AccessCache_accessField</span>
  <span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jobject obj<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// 第一次访问时将字段存到内存数据区，直到程序结束才会释放，可以起到缓存的作用</span>
    <span class="token keyword">static</span> jfieldID fid_str <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    jclass cls_AccessCache<span class="token punctuation">;</span>
    jstring j_str<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>c_str<span class="token punctuation">;</span>
    cls_AccessCache <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetObjectClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 获取该对象的Class引用</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cls_AccessCache <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 先判断字段ID之前是否已经缓存过，如果已经缓存过则不进行查找</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>fid_str <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fid_str <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetFieldID</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>cls_AccessCache<span class="token punctuation">,</span><span class="token string">"str"</span><span class="token punctuation">,</span><span class="token string">"Ljava/lang/String;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// 再次判断是否找到该类的str字段</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fid_str <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    j_str <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetObjectField</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> fid_str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 获取字段的值</span>
    c_str <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetStringUTFChars</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> j_str<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c_str <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 内存不够</span>
    <span class="token punctuation">}</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"In C:\n str = \"%s\"\n"</span><span class="token punctuation">,</span> c_str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ReleaseStringUTFChars</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> j_str<span class="token punctuation">,</span> c_str<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 释放从从JVM新分配字符串的内存空间</span>

    <span class="token comment" spellcheck="true">// 修改字段的值</span>
    j_str <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">"12345"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>j_str <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">SetObjectField</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> fid_str<span class="token punctuation">,</span> j_str<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 释放本地引用</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>cls_AccessCache<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>j_str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

JNIEXPORT jstring JNICALL <span class="token function">Java_com_study_jnilearn_AccessCache_newString</span>
<span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jobject obj<span class="token punctuation">,</span> jcharArray j_char_arr<span class="token punctuation">,</span> jint len<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    jcharArray elemArray<span class="token punctuation">;</span>
    jchar <span class="token operator">*</span>chars <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    jstring j_str <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> jclass cls_string <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> jmethodID cid_string <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 注意：这里缓存局引用的做法是错误，这里做为一个反面教材提醒大家，下面会说到。</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cls_string <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cls_string <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">"java/lang/String"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cls_string <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 缓存String的构造方法ID</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cid_string <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cid_string <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> cls_string<span class="token punctuation">,</span> <span class="token string">"&lt;init>"</span><span class="token punctuation">,</span> <span class="token string">"([C)V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cid_string <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"In C array Len: %d\n"</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 创建一个字符数组</span>
    elemArray <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewCharArray</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>elemArray <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 获取数组的指针引用，注意：不能直接将jcharArray作为SetCharArrayRegion函数最后一个参数</span>
    chars <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetCharArrayElements</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> j_char_arr<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>chars <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment" spellcheck="true">// 将Java字符数组中的内容复制指定长度到新的字符数组中</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">SetCharArrayRegion</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> elemArray<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">,</span> chars<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 调用String对象的构造方法，创建一个指定字符数组为内容的String对象</span>
    j_str <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewObject</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> cls_string<span class="token punctuation">,</span> cid_string<span class="token punctuation">,</span> elemArray<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 释放本地引用</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> elemArray<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> j_str<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="类静态初始化缓存"><a href="#类静态初始化缓存" class="headerlink" title="类静态初始化缓存"></a>类静态初始化缓存</h3><p><strong>示例：</strong><br>AccessCache.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AccessCache</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">initIDs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

    <span class="token keyword">public</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">nativeMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"AccessCache.callback invoked!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        AccessCache accessCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccessCache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        accessCache<span class="token punctuation">.</span><span class="token function">nativeMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span><span class="token string">"AccessCache"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">initIDs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>++AccessCache.c++</p>
<pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"com_study_jnilearn_AccessCache.h"</span></span>

jmethodID MID_AccessCache_callback<span class="token punctuation">;</span>

JNIEXPORT <span class="token keyword">void</span> JNICALL <span class="token function">Java_com_study_jnilearn_AccessCache_initIDs</span>
<span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jclass cls<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"initIDs called!!!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    MID_AccessCache_callback <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>cls<span class="token punctuation">,</span><span class="token string">"callback"</span><span class="token punctuation">,</span><span class="token string">"()V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

JNIEXPORT <span class="token keyword">void</span> JNICALL <span class="token function">Java_com_study_jnilearn_AccessCache_nativeMethod</span>
<span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jobject obj<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"In C Java_com_study_jnilearn_AccessCache_nativeMethod called!!!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">CallVoidMethod</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> obj<span class="token punctuation">,</span> MID_AccessCache_callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="两种缓存方式比较"><a href="#两种缓存方式比较" class="headerlink" title="两种缓存方式比较"></a>两种缓存方式比较</h3><p>使用时缓存缺点</p>
<ul>
<li>每次都需要检查是否已经缓存该ID或Class引用</li>
<li>只要本地代码依赖于这个ID的值，那么这个类就不会被unload。</li>
<li>如果缓存发生在静态初始化时，当类被unload或reload时，ID会被重新计</li>
</ul>
<h2 id="JNI局部引用、全局引用和弱全局引用"><a href="#JNI局部引用、全局引用和弱全局引用" class="headerlink" title="JNI局部引用、全局引用和弱全局引用"></a><a href="https://blog.csdn.net/xyang81/article/details/44657385" target="_blank" rel="noopener">JNI局部引用、全局引用和弱全局引用</a></h2><h3 id="异常案例：Android-JNI局部引用表溢出：local-reference-table-overflow-max-512"><a href="#异常案例：Android-JNI局部引用表溢出：local-reference-table-overflow-max-512" class="headerlink" title="异常案例：Android JNI局部引用表溢出：local reference table overflow (max=512)"></a>异常案例：<a href="https://blog.csdn.net/xyang81/article/details/44873769" target="_blank" rel="noopener">Android JNI局部引用表溢出：local reference table overflow (max=512)</a></h3><p>Java 调用</p>
<pre class="line-numbers language-Java"><code class="language-Java">    // 返回count个sample相同的字符串数组，并用编号标识，如：sample1，sample2...
    public native String[] getStrings(int count, String sample);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><em>local_ref_overflow_test.c</em></p>
<pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;jni.h></span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;android/log.h></span></span>

<span class="token macro property">#<span class="token directive keyword">define</span> LOG_TAG "MainActivity"</span>
<span class="token macro property">#<span class="token directive keyword">define</span> LOG_I(...) __android_log_print(ANDROID_LOG_INFO,LOG_TAG, __VA_ARGS__)</span>
<span class="token macro property">#<span class="token directive keyword">define</span> LOG_E(...) __android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__)</span>

<span class="token macro property">#<span class="token directive keyword">ifdef</span> __cplusplus</span>
<span class="token keyword">extern</span> <span class="token string">"C"</span> <span class="token punctuation">{</span>
<span class="token macro property">#<span class="token directive keyword">endif</span></span>

jobjectArray <span class="token function">getStrings</span><span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jobject obj<span class="token punctuation">,</span> jint count<span class="token punctuation">,</span> jstring sample<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    jobjectArray str_array <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    jclass cls_string <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    jmethodID mid_string_init<span class="token punctuation">;</span>
    jobject obj_str <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>c_str_sample <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token keyword">char</span> buff<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i<span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 保证至少可以创建3个局部引用（str_array，cls_string，obj_str）</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">EnsureLocalCapacity</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">!=</span> JNI_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    c_str_sample <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetStringUTFChars</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> sample<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c_str_sample <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    cls_string <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">"java/lang/String"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cls_string <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 获取String的构造方法</span>
    mid_string_init <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetMethodID</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> cls_string<span class="token punctuation">,</span> <span class="token string">"&lt;init>"</span><span class="token punctuation">,</span> <span class="token string">"()V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mid_string_init <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>cls_string<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    obj_str <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewObject</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> cls_string<span class="token punctuation">,</span> mid_string_init<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj_str <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>cls_string<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 创建一个字符串数组</span>
    str_array <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewObjectArray</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> count<span class="token punctuation">,</span> cls_string<span class="token punctuation">,</span> obj_str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>str_array <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>cls_string<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>obj_str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 给数组中每个元素赋值</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">memset</span><span class="token punctuation">(</span>buff<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>buff<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 初始一下缓冲区</span>
        <span class="token function">sprintf</span><span class="token punctuation">(</span>buff<span class="token punctuation">,</span> c_str_sample<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        jstring newStr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewStringUTF</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> buff<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">SetObjectArrayElement</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> str_array<span class="token punctuation">,</span> i<span class="token punctuation">,</span> newStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>newStr<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// Warning: 这里如果不手动释放局部引用，很有可能造成局部引用表溢出</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 释放模板字符串所占的内存</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ReleaseStringUTFChars</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> sample<span class="token punctuation">,</span> c_str_sample<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// 释放局部引用所占用的资源</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> cls_string<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> obj_str<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> str_array<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> JNINativeMethod g_methods<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token punctuation">{</span><span class="token string">"getStrings"</span><span class="token punctuation">,</span> <span class="token string">"(ILjava/lang/String;)[Ljava/lang/String;"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span>getStrings<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> jclass g_cls_MainActivity <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>

JNIEXPORT jint JNICALL <span class="token function">JNI_OnLoad</span><span class="token punctuation">(</span>JavaVM<span class="token operator">*</span> vm<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> reserved<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">LOG_I</span><span class="token punctuation">(</span><span class="token string">"JNI_OnLoad method call begin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    JNIEnv<span class="token operator">*</span> env <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    jclass cls <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>vm<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetEnv</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>env<span class="token punctuation">,</span> JNI_VERSION_1_6<span class="token punctuation">)</span> <span class="token operator">!=</span> JNI_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> JNI_ERR<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// 查找要加载的本地方法Class引用</span>
    cls <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">"com/example/jni/MainActivity"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>cls <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> JNI_ERR<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment" spellcheck="true">// 将class的引用缓存到全局变量中</span>
    g_cls_MainActivity <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewWeakGlobalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> cls<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> cls<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">// 手动删除局部引用是个好习惯</span>

    <span class="token comment" spellcheck="true">// 将java中的native方法与本地函数绑定</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">RegisterNatives</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> g_cls_MainActivity<span class="token punctuation">,</span> g_methods<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>g_methods<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>g_methods<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">LOG_I</span><span class="token punctuation">(</span><span class="token string">"JNI_OnLoad method call end"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> JNI_VERSION_1_6<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

JNIEXPORT <span class="token keyword">void</span> JNICALL <span class="token function">JNI_OnUnload</span><span class="token punctuation">(</span>JavaVM<span class="token operator">*</span> vm<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> reserved<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">LOG_I</span><span class="token punctuation">(</span><span class="token string">"JNI_OnUnload method call begin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    JNIEnv <span class="token operator">*</span>env <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>vm<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetEnv</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>env<span class="token punctuation">,</span> JNI_VERSION_1_6<span class="token punctuation">)</span> <span class="token operator">!=</span> JNI_OK<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">UnregisterNatives</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> g_cls_MainActivity<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// so被卸载的时候解除注册</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteWeakGlobalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> g_cls_MainActivity<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property">#<span class="token directive keyword">ifdef</span> __cplusplus</span>
<span class="token punctuation">}</span>
<span class="token macro property">#<span class="token directive keyword">endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="三种引用简介及区别"><a href="#三种引用简介及区别" class="headerlink" title="三种引用简介及区别"></a>三种引用简介及区别</h3><h4 id="局部引用（Local-Reference）"><a href="#局部引用（Local-Reference）" class="headerlink" title="局部引用（Local Reference）"></a>局部引用（Local Reference）</h4><ul>
<li>创建: NewLocalRef 或JNI接口创建（FindClass、NewObject、GetObjectClass和NewCharArray等）</li>
<li>特性：<ul>
<li>会阻止GC回收所引用的对象</li>
<li>不在本地函数中跨函数使用</li>
<li>不能跨线程使用</li>
</ul>
</li>
<li>释放<ul>
<li>函数返回后局部引用所引用的对象会被JVM自动释放</li>
<li>调用DeleteLocalRef<code>(*env)-&gt;DeleteLocalRef(env,local_ref)</code><pre><code>jclass cls_string = (*env)-&gt;FindClass(env, "java/lang/String");
jcharArray charArr = (*env)-&gt;NewCharArray(env, len);
jstring str_obj = (*env)-&gt;NewObject(env, cls_string, cid_string, elemArray);
// 通过NewLocalRef函数创建
jstring str_obj_local_ref = (*env)-&gt;NewLocalRef(env,str_obj);  
....</code></pre><h4 id="全局引用（Global-Reference）"><a href="#全局引用（Global-Reference）" class="headerlink" title="全局引用（Global Reference）"></a>全局引用（Global Reference）</h4></li>
</ul>
</li>
<li>创建： NewGlobalRef</li>
<li>特性： <ul>
<li>会阻GC回收所引用的对象基于局部引用创建</li>
<li>可以跨方法、跨线程使用</li>
<li>VM不会自动释放，必须调用DeleteGlobalRef手动释放<code>(*env)-&gt;DeleteGlobalRef(env,g_cls_string)</code><h4 id="弱全局引用（Weak-Global-Reference）"><a href="#弱全局引用（Weak-Global-Reference）" class="headerlink" title="弱全局引用（Weak Global Reference）"></a>弱全局引用（Weak Global Reference）</h4></li>
</ul>
</li>
<li>创建： NewWeakGlobalRef基于局部引用或全局引用创建</li>
<li>特性：<ul>
<li>不会阻止GC回收所引用的对象</li>
<li>可以跨方法、跨线程使用</li>
</ul>
</li>
<li>释放： 1.比如内存紧张的时候；2. 调用DeleteWeakGlobalRef手动释放<code>(*env)-&gt;DeleteWeakGlobalRef(env,g_cls_string)</code><pre class="line-numbers language-c"><code class="language-c"><span class="token keyword">static</span> jclass g_cls_string<span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">TestFunc</span><span class="token punctuation">(</span>JNIEnv<span class="token operator">*</span> env<span class="token punctuation">,</span> jobject obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  jclass cls_string <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">"java/lang/String"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  g_cls_string <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">NewWeakGlobalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>cls_string<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="局部引用"><a href="#局部引用" class="headerlink" title="局部引用"></a>局部引用</h3><h4 id="误区一-用static变量缓存局部变量（变动），造成野指针；"><a href="#误区一-用static变量缓存局部变量（变动），造成野指针；" class="headerlink" title="误区一: 用static变量缓存局部变量（变动），造成野指针；"></a>误区一: 用static变量缓存局部变量（变动），造成野指针；</h4><blockquote>
<p>本地方法返回到Java层之后，如果Java层没有对返回的局部引用使用的话，<font color="red">局部引用就会被JVM自动释放</font></p>
</blockquote>
<h4 id="误区二：局部引用不用释放"><a href="#误区二：局部引用不用释放" class="headerlink" title="误区二：局部引用不用释放"></a>误区二：局部引用不用释放</h4><ul>
<li>Android上的JNI局部引用表最大数量是512个，一些局部引用循环可能溢出<pre class="line-numbers language-Java"><code class="language-Java">for (i = 0; i < len; i++) {
   jstring jstr = (*env)->GetObjectArrayElement(env, arr, i);
   ... /* 使用jstr */
   (*env)->DeleteLocalRef(env, jstr); // 使用完成之后马上释放
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>调用JNI工具函数时，返回的引用需要手动释放</li>
<li>局部引用占用大资源，但是函数不能立即结束时，如：占用资源后有大量的运算；<pre><code>JNIEXPORT void JNICALL Java_pkg_Cls_func(JNIEnv *env, jobject this)
{
 lref = ...              /* lref引用的是一个大的Java对象 */
 ...                     /* 在这里已经处理完业务逻辑后，这个对象已经使用完了 */
 (*env)-&gt;DeleteLocalRef(env, lref); /* 及时删除这个对这个大对象的引用，GC就可以对它回收，并释放相应的资源*/
 lengthyComputation();   /* 在里有个比较耗时的计算过程 */
 return;                 /* 计算完成之后，函数返回之前所有引用都已经释放 */
}</code></pre><h3 id="管理局部引用"><a href="#管理局部引用" class="headerlink" title="管理局部引用"></a>管理局部引用</h3></li>
<li>JNI提供的引用的生命周期管理<code>EnsureLocalCapacity、NewLocalRef、PushLocalFrame、PopLocalFrame、DeleteLocalRef。</code></li>
<li>JNI函数默认只支持<font color="red">16个局部引用</font>，可以调用EnsureLocalCapacity增加局部引用数量，如果创建成功则返回0，否则创建失败，并抛出OutOfMemoryError异常；<pre><code>/*处理函数逻辑时，确保函数能创建len个局部引用*/
if((*env)-&gt;EnsureLocalCapacity(env,len) != 0) {
 ... /*申请len个局部引用的内存空间失败 OutOfMemoryError*/
 return;
}
for(i=0; i &lt; len; i++) {
 jstring jstr = (*env)-&gt;GetObjectArrayElement(env, arr, i);
 // ... 使用jstr字符串
 /*这里没有删除在for中临时创建的局部引用*/
}</code></pre></li>
<li>Push/PopLocalFrame引用堆栈<pre><code>#define N_REFS ... /*最大局部引用数量*/
for (i = 0; i &lt; len; i++) {
 if ((*env)-&gt;PushLocalFrame(env, N_REFS) != 0) {
     ... /*内存溢出*/
 }
  jstring jstr = (*env)-&gt;GetObjectArrayElement(env, arr, i);
  ... /* 使用jstr */
  (*env)-&gt;PopLocalFrame(env, NULL);
}</code></pre></li>
</ul>
<h3 id="全局引用"><a href="#全局引用" class="headerlink" title="全局引用"></a>全局引用</h3><p>++案例++</p>
<pre><code>JNIEXPORT jstring JNICALL Java_com_study_jnilearn_AccessCache_newString
(JNIEnv *env, jobject obj, jcharArray j_char_arr, jint len)
{
    // ...
    jstring jstr = NULL;
    static jclass cls_string = NULL;
    if (cls_string == NULL) {
        jclass local_cls_string = (*env)-&gt;FindClass(env, "java/lang/String");
        if (cls_string == NULL) {
            return NULL;
        }

        // 将java.lang.String类的Class引用缓存到全局引用当中
        cls_string = (*env)-&gt;NewGlobalRef(env, local_cls_string);

        // 删除局部引用
        (*env)-&gt;DeleteLocalRef(env, local_cls_string);

        // 再次验证全局引用是否创建成功
        if (cls_string == NULL) {
            return NULL;
        }
    }

    // ....
    return jstr;
}</code></pre><h3 id="弱全局引用"><a href="#弱全局引用" class="headerlink" title="弱全局引用"></a>弱全局引用</h3><p><font color="red" face="STHupo">与全局引用很重要不同的一点是，弱引用不会阻止GC回收它引用的对象</font>  </p>
<blockquote>
<p>如果不手动调用这个函数来释放所指向的对象，JVM仍会回收弱引用所指向的对象，但弱引用本身在引用表中所占的内存永远也不会被回收。</p>
</blockquote>
<p>++案例：++</p>
<pre><code>JNIEXPORT void JNICALL
Java_mypkg_MyCls_f(JNIEnv *env, jobject self)
{
    static jclass myCls2 = NULL;
    if (myCls2 == NULL)
    {
        jclass myCls2Local = (*env)-&gt;FindClass(env, "mypkg/MyCls2");
        if (myCls2Local == NULL)
        {
            return; /* 没有找到mypkg/MyCls2这个类 */
        }
        myCls2 = NewWeakGlobalRef(env, myCls2Local);
        if (myCls2 == NULL)
        {
            return; /* 内存溢出 */
        }
    }
    ... /* 使用myCls2的引用 */
}</code></pre><h3 id="引用比较"><a href="#引用比较" class="headerlink" title="引用比较"></a>引用比较</h3><p>jboolean isEqual = (*env)-&gt;IsSameObject(env, obj1, obj2)</p>
<ul>
<li>obj1,obj2: 不管是全局、局部还是弱全局引用</li>
<li>isEqual  JNI_TRUE（或者1）相同，JNI_FALSE（或者0）</li>
<li>JNI中的NULL引用指向JVM中的null对象<ul>
<li>局部或全局引用-&gt; (*env)-&gt;IsSameObject(env, obj, NULL) 或者 obj == NUL判断</li>
<li>弱全局引用 (*env)-&gt;IsSameObject(env, g_obj_ref, NULL) -&gt; 引用中是否仍然指向活动对象<pre><code>jobject local_obj_ref = (*env)-&gt;NewObject(env, xxx_cls,xxx_mid);
jobject g_obj_ref = (*env)-&gt;NewWeakGlobalRef(env, local_ref);
// ... 业务逻辑处理
jboolean isEqual = (*env)-&gt;IsSameObject(env, g_obj_ref, NULL);</code></pre></li>
</ul>
</li>
</ul>
<h3 id="小Tip"><a href="#小Tip" class="headerlink" title="小Tip"></a>小Tip</h3><h4 id="基于全局引用创建一个局引用返回，也同样会阻止GC回收所引用的这个对象"><a href="#基于全局引用创建一个局引用返回，也同样会阻止GC回收所引用的这个对象" class="headerlink" title="基于全局引用创建一个局引用返回，也同样会阻止GC回收所引用的这个对象"></a>基于全局引用创建一个局引用返回，也同样会阻止GC回收所引用的这个对象</h4><h4 id="Push-PopLocalFrame是非常方便且安全的【建议使用】"><a href="#Push-PopLocalFrame是非常方便且安全的【建议使用】" class="headerlink" title="Push/PopLocalFrame是非常方便且安全的【建议使用】"></a>Push/PopLocalFrame是非常方便且安全的【建议使用】</h4><pre class="line-numbers language-java"><code class="language-java">jobject <span class="token function">f</span><span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    jobject result<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">PushLocalFrame</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">/* 调用PushLocalFrame获取10个局部引用失败，不需要调用PopLocalFrame */</span>
        <span class="token keyword">return</span> NULL<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    result <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 创建局部引用result</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">/* 返回前先弹出栈顶的frame */</span>
        result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">PopLocalFrame</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">PopLocalFrame</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">/* 正常返回 */</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="JNI异常处理"><a href="#JNI异常处理" class="headerlink" title="JNI异常处理"></a><a href="https://blog.csdn.net/xyang81/article/details/45770551" target="_blank" rel="noopener">JNI异常处理</a></h2><p>JNI 异常函数列表</p>
<table>
<thead>
<tr>
<th>异常函数</th>
<th>相关描述</th>
</tr>
</thead>
<tbody><tr>
<td>ExceptionCheck</td>
<td>检查是否发生了异常，若有异常返回JNI_TRUE，否则返回JNI_FALSE</td>
</tr>
<tr>
<td>ExceptionOccurred</td>
<td>检查是否发生了异常，若用异常返回该异常的引用，否则返回NULL</td>
</tr>
<tr>
<td>ExceptionDescribe</td>
<td>打印异常的堆栈信息</td>
</tr>
<tr>
<td>ExceptionClear</td>
<td>清除异常堆栈信息</td>
</tr>
<tr>
<td>ThrowNew</td>
<td>在当前线程触发一个异常，并自定义输出异常信息</td>
</tr>
<tr>
<td>Throw</td>
<td>丢弃一个现有的异常对象，在当前线程触发一个新的异常</td>
</tr>
<tr>
<td>FatalError</td>
<td>致命异常，用于输出一个异常信息，并终止当前VM实例（即退出程序）</td>
</tr>
</tbody></table>
<p>void (JNICALL *FatalError) (JNIEnv *env, const char *msg);<br>jint (JNICALL *ThrowNew) (JNIEnv *env, jclass clazz, const char *msg);<br>jint (JNICALL *Throw) (JNIEnv *env, jthrowable obj); </p>
<h3 id="异常处理示例"><a href="#异常处理示例" class="headerlink" title="异常处理示例"></a>异常处理示例</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JNIException</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">doit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">exceptionCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">20</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--->"</span> <span class="token operator">+</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">normalCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"In Java: invoke normalCallback."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">doit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span><span class="token string">"JNIException"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>++JNIException.c++</p>
<pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">"com_study_jnilearn_JNIException.h"</span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span>

JNIEXPORT <span class="token keyword">void</span> JNICALL <span class="token function">Java_com_study_jnilearn_JNIException_doit</span><span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jclass cls<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    jthrowable exc <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
    jmethodID mid <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetStaticMethodID</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>cls<span class="token punctuation">,</span><span class="token string">"exceptionCallback"</span><span class="token punctuation">,</span><span class="token string">"()V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mid <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">CallStaticVoidMethod</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>cls<span class="token punctuation">,</span>mid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"In C: Java_com_study_jnilearn_JNIException_doit-->called!!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ExceptionCheck</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 检查JNI调用是否有引发异常</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ExceptionDescribe</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ExceptionClear</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 清除引发的异常，在Java层不会打印异常的堆栈信息</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ThrowNew</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span><span class="token string">"java/lang/Exception"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"JNI抛出的异常！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//return;</span>
    <span class="token punctuation">}</span>
    <span class="token comment" spellcheck="true">//如果不return 程序继续执行</span>
    mid <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetStaticMethodID</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>cls<span class="token punctuation">,</span><span class="token string">"normalCallback"</span><span class="token punctuation">,</span><span class="token string">"()V"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mid <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">CallStaticVoidMethod</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span>cls<span class="token punctuation">,</span>mid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>++JNIException.c++ ExceptionOccurred 改造,<code>作用和ExceptionCheck一样</code>，<font color="red" face="STCaiyun">两者的区别在于返回值不一样</font></p>
<pre class="line-numbers language-c"><code class="language-c"><span class="token comment" spellcheck="true">// ....</span>
jthrowable exc <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
exc <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ExceptionOccurred</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 返回一个指向当前异常对象的引用</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>exc<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ExceptionDescribe</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 打印Java层抛出的异常堆栈信息</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ExceptionClear</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//清除异常信息</span>

    <span class="token comment" spellcheck="true">// 抛出我们自己的异常处理</span>
    jclass newExcCls<span class="token punctuation">;</span>
    newExcCls <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">FindClass</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span><span class="token string">"java/lang/Exception"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newExcCls <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ThrowNew</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> newExcCls<span class="token punctuation">,</span> <span class="token string">"throw from C Code."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token comment" spellcheck="true">/* 注意释放局部引用 */</span>
     <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">DeleteLocalRef</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> newExcCls<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token comment" spellcheck="true">/*异常发生后释放资源*/</span>
<span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">// ....</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="异常发生后释放资源"><a href="#异常发生后释放资源" class="headerlink" title="异常发生后释放资源"></a>异常发生后释放资源</h3><pre class="line-numbers language-c"><code class="language-c">JNIEXPORT <span class="token keyword">void</span> JNICALL <span class="token function">Java_pkg_Cls_f</span><span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span>env<span class="token punctuation">,</span> jclass cls<span class="token punctuation">,</span> jstring jstr<span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     <span class="token keyword">const</span> jchar <span class="token operator">*</span>cstr <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">GetStringChars</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> jstr<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>c_str <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">return</span><span class="token punctuation">;</span> 
     <span class="token punctuation">}</span>
     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ExceptionCheck</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">/* 异常检查 */</span>
         <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ReleaseStringChars</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> jstr<span class="token punctuation">,</span> cstr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 发生异常后释放前面所分配的内存</span>
         <span class="token keyword">return</span><span class="token punctuation">;</span> 
     <span class="token punctuation">}</span>
     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
     <span class="token comment" spellcheck="true">/* 正常返回 */</span>
     <span class="token punctuation">(</span><span class="token operator">*</span>env<span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">ReleaseStringChars</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> jstr<span class="token punctuation">,</span> cstr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://blog.csdn.net/xyang81/article/details/41759643" target="_blank" rel="noopener">JNI/NDK开发指南（开山篇）</a></li>
<li>推荐《Pro Android C++ with the NDK》，中文版名称《Android C++高级编程 使用NDK》</li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>实践</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义控件其实很简单(笔记一)</title>
    <url>/2019/09/11/2019-9-11-custome-view/</url>
    <content><![CDATA[<h2 id="姿势点"><a href="#姿势点" class="headerlink" title="姿势点"></a>姿势点</h2><ul>
<li>在Android中设置数字类型的参数时如果没有特别的说明，参数的单位一般都为px像素。</li>
<li><a href="http://developer.android.com/guide/topics/graphics/hardware-accel.html#unsupported" target="_blank" rel="noopener">HardwareAccel</a> 查看那些方法不支持硬件加速;</li>
<li>关闭硬件加速，AndroidManifest.xml==&gt; application节点下android:hardwareAccelerated=false</li>
<li>针对某个View关闭硬件加速 <code>setLayerType(LAYER_TYPE_SOFTWARE, null);</code></li>
<li>Android会把拷贝到资源目录的图片转为RGB565</li>
</ul>
<h2 id="ColorFilter"><a href="#ColorFilter" class="headerlink" title="ColorFilter"></a>ColorFilter</h2><p><img src="http://upload-images.jianshu.io/upload_images/1321512-83c30bcf4aaf6e66.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h3 id="ColorMatrix"><a href="#ColorMatrix" class="headerlink" title="ColorMatrix"></a><strong>ColorMatrix</strong></h3><pre class="line-numbers language-java"><code class="language-java">ColorMatrix colorMatrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorMatrix</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
        <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>行表示的R（红色）的向量，第二行表示的G（绿色）的向量，第三行表示的B（蓝色）的向量，最后一行表示A（透明度）的向量</li>
<li>这个矩阵不同的位置表示的RGBA值，其范围在0.0F至2.0F之间，1为保持原图的RGB值;</li>
<li>每一行的第五列数字表示偏移值</li>
</ul>
<p>Usage</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 生成色彩矩阵</span>
ColorMatrix colorMatrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorMatrix</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
        <span class="token number">0.5F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">/*1表示不变颜色*/</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mPaint<span class="token punctuation">.</span><span class="token function">setColorFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ColorMatrixColorFilter</span><span class="token punctuation">(</span>colorMatrix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>数学原理是：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-9f505ebf99ff5a87.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ColorMatrix"></p>
<p>实践效果</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-372cca129af04bd8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="原图"></p>
<p>Demo1</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 生成色彩矩阵</span>
ColorMatrix colorMatrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorMatrix</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
        <span class="token number">0.5F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
mPaint<span class="token punctuation">.</span><span class="token function">setColorFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ColorMatrixColorFilter</span><span class="token punctuation">(</span>colorMatrix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-66b0e010cb4b61cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Demo1"></p>
<p>Demo2</p>
<pre class="line-numbers language-java"><code class="language-java">ColorMatrix colorMatrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorMatrix</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
        <span class="token number">0.33F</span><span class="token punctuation">,</span> <span class="token number">0.59F</span><span class="token punctuation">,</span> <span class="token number">0.11F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0.33F</span><span class="token punctuation">,</span> <span class="token number">0.59F</span><span class="token punctuation">,</span> <span class="token number">0.11F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0.33F</span><span class="token punctuation">,</span> <span class="token number">0.59F</span><span class="token punctuation">,</span> <span class="token number">0.11F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-4907cce455e0ec3a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Demo2"></p>
<p>Demo3</p>
<pre class="line-numbers language-java"><code class="language-java">ColorMatrix colorMatrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorMatrix</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
        <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-d8cc681a1779bdd8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Demo3"></p>
<p>Demo4</p>
<pre class="line-numbers language-java"><code class="language-java">ColorMatrix colorMatrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorMatrix</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
        <span class="token number">0.393F</span><span class="token punctuation">,</span> <span class="token number">0.769F</span><span class="token punctuation">,</span> <span class="token number">0.189F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0.349F</span><span class="token punctuation">,</span> <span class="token number">0.686F</span><span class="token punctuation">,</span> <span class="token number">0.168F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0.272F</span><span class="token punctuation">,</span> <span class="token number">0.534F</span><span class="token punctuation">,</span> <span class="token number">0.131F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-9ce82b2dc10df197.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Demo4"><br>Demo5 红色的变成了蓝色而蓝色的就变成了红色</p>
<pre class="line-numbers language-java"><code class="language-java">ColorMatrix colorMatrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorMatrix</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-2dee4408a4588540.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Demo5"></p>
<h3 id="LightingColorFilter"><a href="#LightingColorFilter" class="headerlink" title="LightingColorFilter"></a><strong>LightingColorFilter</strong></h3><p> A color filter that can be used to simulate simple lighting effects.<br>[LightingColorFilter](<a href="http://developer.android.com/reference/android/graphics/LightingColorFilter.html#LightingColorFilter" target="_blank" rel="noopener">http://developer.android.com/reference/android/graphics/LightingColorFilter.html#LightingColorFilter</a>(int, int)) (int mul, int add)</p>
<pre class="line-numbers language-java"><code class="language-java">R' <span class="token operator">=</span> R <span class="token operator">*</span> colorMultiply<span class="token punctuation">.</span>R <span class="token operator">+</span> colorAdd<span class="token punctuation">.</span>R 
G' <span class="token operator">=</span> G <span class="token operator">*</span> colorMultiply<span class="token punctuation">.</span>G <span class="token operator">+</span> colorAdd<span class="token punctuation">.</span>G 
B' <span class="token operator">=</span> B <span class="token operator">*</span> colorMultiply<span class="token punctuation">.</span>B <span class="token operator">+</span> colorAdd<span class="token punctuation">.</span>B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>usage:</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//设置颜色过滤后为黄色  </span>
mPaint<span class="token punctuation">.</span><span class="token function">setColorFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LightingColorFilter</span><span class="token punctuation">(</span><span class="token number">0xFFFFFFFF</span><span class="token punctuation">,</span> <span class="token number">0X00FFFF00</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
 mPaint<span class="token punctuation">.</span><span class="token function">setColorFilter</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//还原本色  </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="PorterDuffColorFilter"><a href="#PorterDuffColorFilter" class="headerlink" title="PorterDuffColorFilter"></a><strong>PorterDuffColorFilter</strong></h3><ul>
<li>Public Contructors<br>[PorterDuffColorFilter](<a href="http://developer.android.com/reference/android/graphics/PorterDuffColorFilter.html#PorterDuffColorFilter" target="_blank" rel="noopener">http://developer.android.com/reference/android/graphics/PorterDuffColorFilter.html#PorterDuffColorFilter</a>(int, android.graphics.PorterDuff.Mode))(int color, <a href="http://developer.android.com/reference/android/graphics/PorterDuff.Mode.html" target="_blank" rel="noopener">PorterDuff.Mode</a> mode)</li>
<li>PorterDuff.Mode 对应</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-d9d320f2f5b29581.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-db444c9b90f8a742.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="混合模式"></p>
<p>####Paint.setXfermode(Xfermode xfermode)</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-5665750f87dbce4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Xfermode"></p>
<h2 id="AvoidXfermode"><a href="#AvoidXfermode" class="headerlink" title="AvoidXfermode"></a><strong>AvoidXfermode</strong></h2><ul>
<li>API 16 以上机型必须在应用或手机上关闭硬件加速 ；</li>
<li>AvoidXfermode(int opColor, int tolerance, AvoidXfermode.Mode mode)<br>opColor：表示一个16进制的可以带透明通道的颜色值例如0x12345678<br>Tolerance：表示容差值，那么什么是容差呢？你可以理解为一个可以标识“精确”或“模糊”的东西<br>AvoidXfermode.Mode： AvoidXfermode.Mode.AVOID或者AvoidXfermode.Mode.TARGET</li>
</ul>
<p>AvoidXfermode.Mode.TARGET<br>在该模式下Android会判断画布上的颜色是否会有跟opColor不一样的颜色，比如我opColor是红色，那么在TARGET模式下就会去判断我们的画布上是否有存在红色的地方，如果有，则把该区域“染”上一层我们画笔定义的颜色，否则不“染”色，而tolerance容差值则表示画布上的像素和我们定义的红色之间的差别该是多少的时候才去“染”的，比如当前画布有一个像素的色值是(200, 20, 13)，而我们的红色值为(255, 0, 0)，当tolerance容差值为255时，即便(200, 20, 13)并不等于红色值也会被“染”色，容差值越大“染”色范围越广反之则反.<br>Usage:</p>
<pre class="line-numbers language-java"><code class="language-java"> avoidXfermode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AvoidXfermode</span><span class="token punctuation">(</span><span class="token number">0XFFFFFFFF</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> AvoidXfermode<span class="token punctuation">.</span>Mode<span class="token punctuation">.</span>TARGET<span class="token punctuation">)</span><span class="token punctuation">;</span>  
mPaint<span class="token punctuation">.</span><span class="token function">setXfermode</span><span class="token punctuation">(</span>avoidXfermode<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>API 16+没有关闭硬件加速</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-5c2a44817fe2dbb8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>API 16以下关闭硬件加速<br><img src="http://upload-images.jianshu.io/upload_images/1321512-3a01682c6dde761e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>符合条件的效果，在我们的模式为TARGET容差值为0的时候此时只有当图片中像色颜色值为0XFFFFFFFF的地方才会被染色，而其他地方不会有改变，而当容差值为255的时候只要是跟0XFFFFFFFF有点接近的地方都会被染色。<br><img src="http://upload-images.jianshu.io/upload_images/1321512-13fe2e833f369acb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Paste_Image.png"></p>
<p>AvoidXfermode.Mode.AVOID<br>AVOID是我们指定的颜色是否与画布不一样<br>AvoidXfermode(0XFFFFFFFF, 0, AvoidXfermode.Mode.AVOID)：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-53dbfcc8f292f5c8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>当模式为AVOID容差值为0时，只有当图片中像素颜色值与0XFFFFFFFF完全不一样的地方才会被染色<br>AvoidXfermode(0XFFFFFFFF, 255, AvoidXfermode.Mode.AVOID)：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-f519ac37bbaf1bff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>当容差值为255时，只要与0XFFFFFFFF稍微有点不一样的地方就会被染色<br>那么这玩意究竟有什么用呢？比如说当我们只想在白色的区域画点东西或者想把白色区域的地方替换为另一张图片的时候就可以采取这种方式！</p>
<h3 id="PixelXorXfermode"><a href="#PixelXorXfermode" class="headerlink" title="PixelXorXfermode"></a><strong>PixelXorXfermode</strong></h3><ul>
<li>API 16以过时</li>
<li>useless</li>
</ul>
<p><strong><a href="http://developer.android.com/reference/android/graphics/PorterDuff.Mode.html" target="_blank" rel="noopener">PorterDuffXfermode</a></strong></p>
<ul>
<li>概念最早来自于SIGGRAPH的Tomas Proter和Tom Duff </li>
<li>混合图形的概念极大地推动了图形图像学的发展，延伸到计算机图形图像学像Adobe和AutoDesk公司著名的多款设计软件都可以说一定程度上受到影响.<br><a href="http://developer.android.com/reference/android/graphics/PorterDuff.Mode.html" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/1321512-05621f0ce42072e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></a><br>Usage:<pre class="line-numbers language-java"><code class="language-java">paint<span class="token punctuation">.</span><span class="token function">setXfermode</span><span class="token punctuation">(</span> <span class="token keyword">new</span> <span class="token class-name">PorterDuffXfermode</span><span class="token punctuation">(</span>PorterDuff<span class="token punctuation">.</span>Mode<span class="token punctuation">.</span>SCREEN<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-5edd60e0d85f7b2e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>Sa全称为Source alpha表示源图的Alpha通道；Sc全称为Source color表示源图的颜色；Da全称为Destination alpha表示目标图的Alpha通道；Dc全称为Destination color表示目标图的颜色。 </li>
<li>“[……]”里分为两部分 , 前代表计算后的Alpha通道，后代表计算后的颜色值。</li>
<li>More <a href="https://en.wikipedia.org/wiki/Alpha_compositing" target="_blank" rel="noopener">Alpha compositing wiki</a></li>
</ul>
<h3 id="PorterDuffXfermode高级姿势"><a href="#PorterDuffXfermode高级姿势" class="headerlink" title="PorterDuffXfermode高级姿势"></a>PorterDuffXfermode高级姿势</h3><ul>
<li>PorterDuff.Mode.ADD 计算方式：Saturate(S + D)；Chinese：饱和相加<br><img src="http://upload-images.jianshu.io/upload_images/1321512-eef02b9a9713ca4c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li>PorterDuff.Mode.CLEAR</li>
<li>PorterDuff.Mode.DARKEN<br>计算方式：[Sa + Da - Sa<em>Da, Sc</em>(1 - Da) + Dc*(1 - Sa) + min(Sc, Dc)]；Chinese：变暗</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-e4bbf242c7385c42.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>两个图像混合，较深的颜色总是会覆盖较浅的颜色，如果两者深浅相同则混合，如图，黄色覆盖了红色而蓝色和青色因为是跟透明混合所以不变.</p>
<ul>
<li>PorterDuff.Mode.DST_IN</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-636ac3c942cd1685.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>两张图合成去掉美女头上的字</p>
<pre class="line-numbers language-java"><code class="language-java">
         <span class="token comment" spellcheck="true">// 先绘制dis目标图</span>
        canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmapDis<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 设置混合模式</span>
        mPaint<span class="token punctuation">.</span><span class="token function">setXfermode</span><span class="token punctuation">(</span>PorterDuff<span class="token punctuation">.</span>Mode<span class="token punctuation">.</span>DST_IN<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 再绘制src源图</span>
        canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmapSrc<span class="token comment" spellcheck="true">/*黑色底图*/</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> mPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 还原混合模式</span>
        mPaint<span class="token punctuation">.</span><span class="token function">setXfermode</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 还原画布</span>
        canvas<span class="token punctuation">.</span><span class="token function">restoreToCount</span><span class="token punctuation">(</span>sc<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-71458373f4246349.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>PorterDuff.Mode.DST_OUT<br>计算方式：[Da * (1 - Sa), Dc * (1 - Sa)]；Chinese：只在源图像和目标图像不相交的地方绘制目标图像</li>
</ul>
<h2 id="Paint-之-Font"><a href="#Paint-之-Font" class="headerlink" title="Paint 之 Font"></a>Paint 之 Font</h2><h3 id="FontMetrics"><a href="#FontMetrics" class="headerlink" title="FontMetrics"></a><strong>FontMetrics</strong></h3><p><img src="http://upload-images.jianshu.io/upload_images/1321512-ae793a1c884e8858.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Summary"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-4a3daa2477b03f22.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-6a7f6cf38557f408.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>Top: 是除了Baseline到字符顶端的距离外还应该包含这些符号的高度,bottom类似 ；</li>
<li>Android依然会在绘制文本的时候在文本外层留出一定的边距，这就是为什么top和bottom总会比ascent和descent大一点的原因。而在TextView中我们可以通过xml设置其属性android:includeFontPadding=”false”去掉一定的边距值但是不能完全去掉。</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java">
         mFontMetrics <span class="token operator">=</span> mPaint<span class="token punctuation">.</span><span class="token function">getFontMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"Aige"</span><span class="token punctuation">,</span> <span class="token string">"ascent："</span> <span class="token operator">+</span> mFontMetrics<span class="token punctuation">.</span>ascent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"Aige"</span><span class="token punctuation">,</span> <span class="token string">"top："</span> <span class="token operator">+</span> mFontMetrics<span class="token punctuation">.</span>top<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"Aige"</span><span class="token punctuation">,</span> <span class="token string">"leading："</span> <span class="token operator">+</span> mFontMetrics<span class="token punctuation">.</span>leading<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"Aige"</span><span class="token punctuation">,</span> <span class="token string">"descent："</span> <span class="token operator">+</span> mFontMetrics<span class="token punctuation">.</span>descent<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"Aige"</span><span class="token punctuation">,</span> <span class="token string">"bottom："</span> <span class="token operator">+</span> mFontMetrics<span class="token punctuation">.</span>bottom<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-d88cb5ce11dd59fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Log.d()——文字只有一行，故leading为零"><br>StaticLayout结合<a href="http://developer.android.com/reference/android/text/TextPaint.html" target="_blank" rel="noopener">TextPaint</a>实现换行</p>
<pre class="line-numbers language-java"><code class="language-java">mStaticLayout <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StaticLayout</span><span class="token punctuation">(</span>TEXT<span class="token punctuation">,</span> mTextPaint<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Alignment<span class="token punctuation">.</span>ALIGN_NORMAL<span class="token punctuation">,</span> <span class="token number">1.0F</span><span class="token punctuation">,</span> <span class="token number">0.0F</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
mStaticLayout<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="Paint-之方法解析"><a href="#Paint-之方法解析" class="headerlink" title="Paint 之方法解析"></a><a href="http://developer.android.com/reference/android/graphics/Paint.html" target="_blank" rel="noopener">Paint</a> 之方法解析</h3><ul>
<li>[breakText](<a href="http://developer.android.com/reference/android/graphics/Paint.html#breakText" target="_blank" rel="noopener">http://developer.android.com/reference/android/graphics/Paint.html#breakText</a>(java.lang.CharSequence, int, int, boolean, float, float[]))(<a href="http://developer.android.com/reference/java/lang/CharSequence.html" target="_blank" rel="noopener">CharSequence</a> text, int start, int end, boolean measureForwards, float maxWidth, float[] measuredWidth)<br>Measure the text, stopping early if the measured width exceeds maxWidth.<ul>
<li>measureForwards表示向前还是向后测量</li>
<li>measuredWidth为一个可选项，可以为空，不为空时返回真实的测量值</li>
</ul>
</li>
<li>定义字体 Android中字体有四种样式：BOLD（加粗）,BOLD_ITALIC（加粗并倾斜）,ITALIC（倾斜）,NORMAL（正常）；而其为我们提供的字体有五种：DEFAULT,DEFAULT_BOLD,MONOSPACE,SANS_SERIF和SERIF</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//系统自带</span>
textPaint<span class="token punctuation">.</span><span class="token function">setTypeface</span><span class="token punctuation">(</span>Typeface<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token string">"SERIF"</span><span class="token punctuation">,</span> Typeface<span class="token punctuation">.</span>NORMAL<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
textPaint<span class="token punctuation">.</span><span class="token function">setTypeface</span><span class="token punctuation">(</span>Typeface<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>Typeface<span class="token punctuation">.</span>SERIF<span class="token punctuation">,</span> Typeface<span class="token punctuation">.</span>NORMAL<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//自定义字体 一</span>
<span class="token function">createFromAsset</span><span class="token punctuation">(</span>AssetManager mgr<span class="token punctuation">,</span> String path<span class="token punctuation">)</span>
<span class="token function">createFromFile</span><span class="token punctuation">(</span>String path<span class="token punctuation">)</span>和<span class="token function">createFromFile</span><span class="token punctuation">(</span>File path<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//自定义字体 二</span>
<span class="token comment" spellcheck="true">// 获取字体并设置画笔字体</span>
Typeface typeface <span class="token operator">=</span> Typeface<span class="token punctuation">.</span><span class="token function">createFromAsset</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getAssets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"kt.ttf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
textPaint<span class="token punctuation">.</span><span class="token function">setTypeface</span><span class="token punctuation">(</span>typeface<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>setTextSkewX (float skewX) // 设置画笔文本倾斜  官方推荐-0.25F</li>
<li>setStrikeThruText (boolean strikeThruText)  //文本删除线</li>
<li>setLinearText (boolean linearText)<br>设置是否打开线性文本标识，这玩意对大多数人来说都很奇怪不知道这玩意什么意思。想要明白这东西你要先知道文本在Android中是如何进行存储和计算的。在Android中文本的绘制需要使用一个bitmap作为单个字符的缓存，既然是缓存必定要使用一定的空间，我们可以通过setLinearText (true)告诉Android我们不需要这样的文本缓存。</li>
<li>setFakeBoldText (boolean fakeBoldText) //设置文本仿粗体</li>
</ul>
<p>** setMaskFilter(MaskFilter maskfilter) **</p>
<ul>
<li>关闭硬件加速 setLayerType(LAYER_TYPE_SOFTWARE, null);  </li>
</ul>
<h2 id="MaskFilter"><a href="#MaskFilter" class="headerlink" title="MaskFilter"></a>MaskFilter</h2><h3 id="BlurMaskFilter"><a href="#BlurMaskFilter" class="headerlink" title="BlurMaskFilter"></a><a href="http://developer.android.com/reference/android/graphics/BlurMaskFilter.html" target="_blank" rel="noopener">BlurMaskFilter</a></h3><p>BlurMaskFilter(float radius, BlurMaskFilter.Blur style)  是根据Alpha通道的边界来计算模糊的</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-9b82058bb8d768cb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mPaint.setMaskFilter(new BlurMaskFilter(20, BlurMaskFilter.Blur.SOLID)); "><br>SOLID: 在图像的Alpha边界外产生一层与Paint颜色一致的阴影效果而不影响图像本身,而NORMAL,OUTER和INNER,NORMAL会将整个图像模糊掉：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-dd0ae05f5bb6b83c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="而NORMAL会在Alpha边界外产生一层阴影且会将原本的图像变透明"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-969dbe864ea21df3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="OUTER会在Alpha边界外产生一层阴影且会将原本的图像变透明："></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-a2d737f7e141cd00.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="INNER则会在图像内部产生模糊："></p>
<ul>
<li>INNER效果其实并不理想，实际应用中我们使用的也少，我们往往会使用混合模式和渐变和获得更完美的内阴影效果。</li>
<li>从Bitmap中获取其Alpha通道，在绘制Bitmap<pre class="line-numbers language-java"><code class="language-java">      <span class="token comment" spellcheck="true">// 获取位图的Alpha通道图</span>
      shadowBitmap <span class="token operator">=</span> srcBitmap<span class="token punctuation">.</span><span class="token function">extractAlpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment" spellcheck="true">// 先绘制阴影</span>
      canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>shadowBitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> shadowPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>ps
      <span class="token comment" spellcheck="true">// 再绘制位图</span>
      canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>srcBitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-65441b07e4897adc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="效果"> </p>
<h3 id="EmbossMaskFilter"><a href="#EmbossMaskFilter" class="headerlink" title="EmbossMaskFilter"></a>EmbossMaskFilter</h3><p><a href="http://developer.android.com/reference/android/graphics/EmbossMaskFilter.html" target="_blank" rel="noopener">EmbossMaskFilter</a>让你绘制的图像感觉像是从屏幕中“凸”起来更有立体感一样（在设计软件中类似的效果称之为斜面浮雕）。<br>public EmbossMaskFilter (float[] direction, float ambient, float specular, float blurRadius)</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-c86eea804db449c2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ul>
<li>direction 指光照方向,有而且只能有三个值即float[x,y,z],<br>首先x和y很好理解，平面的两个维度,上面小球使用[1,1] 45度角, 而z轴表示光源是在屏幕后方还是屏幕前方,上面我们是用的是1，正值表示光源往屏幕外偏移1个单位，负值表示往屏幕里面偏移。[x,y,z]表示的是空间坐标，代表光源的位置，那么一旦这个位置确定，[ax,ay,az]则没有意义</li>
<li>ambient 用来设置环境光的，在Android中环境光默认为白色，其值越大, 球阴影越浅</li>
<li>specular是跟高光有关的，其值是个双向值越小或越大高光越强中间值则是最弱</li>
</ul>
<h2 id="setPathEffect"><a href="#setPathEffect" class="headerlink" title="setPathEffect"></a>setPathEffect</h2><p><a href="http://developer.android.com/reference/android/graphics/Paint.html#setPathEffect(android.graphics.PathEffect)" target="_blank" rel="noopener"><strong>setPathEffect</strong></a>(<a href="http://developer.android.com/reference/android/graphics/PathEffect.html" target="_blank" rel="noopener">PathEffect</a> effect)</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-28a7d7d4a0184dd7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="PathEffect"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-eced4d31240f92cc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="六个子类分别可以实现不同的路径效果"></p>
<ul>
<li>ComposePathEffect(PathEffect outerpe, PathEffect innerpe)会先将路径变成innerpe的效果，再去复合outerpe的路径效果，即：outerpe(innerpe(Path))；而SumPathEffect(PathEffect first, PathEffect second)则会把两种路径效果加起来再作用于路径</li>
</ul>
<h2 id="setShadowLayer"><a href="#setShadowLayer" class="headerlink" title="setShadowLayer"></a>setShadowLayer</h2><p><strong>setShadowLayer(float radius, float dx, float dy, int shadowColor)</strong></p>
<ul>
<li>该方法为我们绘制的图形添加一个阴影层效果</li>
<li>同样不支持HW</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
     * 初始化画笔
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">initPaint</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 实例化画笔</span>
        mPaint <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>ANTI_ALIAS_FLAG<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mPaint<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>RED<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mPaint<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span>Style<span class="token punctuation">.</span>FILL<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mPaint<span class="token punctuation">.</span><span class="token function">setShadowLayer</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>DKGRAY<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-dc54b487331bc55c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="setShadowLayer"></p>
<h2 id="Shader"><a href="#Shader" class="headerlink" title="Shader"></a><a href="http://developer.android.com/reference/android/graphics/Shader.html" target="_blank" rel="noopener">Shader</a></h2><p><img src="http://upload-images.jianshu.io/upload_images/1321512-9c835814fe118758.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Shader"></p>
<h3 id="BitmapShader"><a href="#BitmapShader" class="headerlink" title="BitmapShader"></a><strong>BitmapShader</strong></h3><p>[BitmapShader](<a href="http://developer.android.com/reference/android/graphics/BitmapShader.html#BitmapShader" target="_blank" rel="noopener">http://developer.android.com/reference/android/graphics/BitmapShader.html#BitmapShader</a>(android.graphics.Bitmap, android.graphics.Shader.TileMode, android.graphics.Shader.TileMode))(<a href="http://developer.android.com/reference/android/graphics/Bitmap.html" target="_blank" rel="noopener">Bitmap</a> bitmap, <a href="http://developer.android.com/reference/android/graphics/Shader.TileMode.html" target="_blank" rel="noopener">Shader.TileMode</a> tileX, Shader.TileMode tileY)<br>Usage:<br> <code>mPaint.setShader(new BitmapShader(bitmap, Shader.TileMode.MIRROR, Shader.TileMode.MIRROR));</code><br>Shader.TileMode</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-429c4b5b87ee42e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="BitmapShader(bitmap, Shader.TileMode.MIRROR, Shader.TileMode.MIRROR)"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-a8a376efeb396145.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="BitmapShader(bitmap, Shader.TileMode.REPEAT, Shader.TileMode.REPEAT)"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-26cc878c09718d6c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="BitmapShader(bitmap, Shader.TileMode.CLAMP, Shader.TileMode.MIRROR)"></p>
<ul>
<li>着色是先在Y轴拉伸了然后再沿着X轴重复对</li>
</ul>
<h3 id="LinearGradient"><a href="#LinearGradient" class="headerlink" title="LinearGradient"></a><strong>LinearGradient</strong></h3><ul>
<li>mPaint.setShader(new LinearGradient(left, top, right - RECT_SIZE, bottom - RECT_SIZE, Color.RED, Color.YELLOW, Shader.TileMode.REPEAT));   //(left,top) 起点坐标， (right-RECT_SIZE, bottom-RECT_SIZE) 终点坐标，效果如下：<br><img src="http://upload-images.jianshu.io/upload_images/1321512-8abc8e6d219ba11f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li>LinearGradient(left, top, right, bottom, new int[] { Color.RED, Color.YELLOW, Color.GREEN, Color.CYAN, Color.BLUE }, new float[] { 0, 0.1F, 0.5F, 0.7F, 0.8F }, Shader.TileMode.MIRROR)，效果如下图：<ul>
<li>new int[](colors[]) 定义渐变颜色</li>
<li>new float[](positions[]) 定义渐变区间,取值区间[0, 100%]，意思是整个渐变占渐变区域的百分比</li>
</ul>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-8abb4c67099048e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-c39e7f5bacace753.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="positions[] =null, 各颜色均分"></p>
<p>应用案例图片1——倒影：</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-ed98c0646e213843.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="reflect"></p>
<pre class="line-numbers language-java"><code class="language-java">        <span class="token comment" spellcheck="true">// 实例化一个矩阵对象</span>
        Matrix matrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Matrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        matrix<span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">1F</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1F</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 生成倒影图</span>
        mRefBitmap <span class="token operator">=</span> Bitmap<span class="token punctuation">.</span><span class="token function">createBitmap</span><span class="token punctuation">(</span>mSrcBitmap<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> mSrcBitmap<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mSrcBitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> matrix<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//生产消失渐变</span>
        mPaint<span class="token punctuation">.</span><span class="token function">setShader</span><span class="token punctuation">(</span>
                        <span class="token keyword">new</span> <span class="token class-name">LinearGradient</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token operator">+</span> mSrcBitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span>
                                y <span class="token operator">+</span> mSrcBitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> mSrcBitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">,</span>
                                <span class="token number">0xAA000000</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>TRANSPARENT<span class="token punctuation">,</span> Shader<span class="token punctuation">.</span>TileMode<span class="token punctuation">.</span>CLAMP<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">//合成效果</span>
    mXfermode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PorterDuffXfermode</span><span class="token punctuation">(</span>PorterDuff<span class="token punctuation">.</span>Mode<span class="token punctuation">.</span>DST_IN<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDraw</span><span class="token punctuation">(</span>Canvas canvas<span class="token punctuation">)</span><span class="token punctuation">{</span>
        canvas<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>srcBitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> sc <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">saveLayer</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>null<span class="token punctuation">,</span>Canvas<span class="token punctuation">.</span>ALL_SAVE_FLAG<span class="token punctuation">)</span> <span class="token punctuation">;</span>

        canvas<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span>mRefBitmap<span class="token punctuation">)</span>
        mPaint<span class="token punctuation">.</span><span class="token function">setXfermode</span><span class="token punctuation">(</span>mXfermode<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        canvas<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span>top<span class="token punctuation">,</span>right<span class="token punctuation">,</span>bottom<span class="token punctuation">,</span>mPaint<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        mPaint<span class="token punctuation">.</span><span class="token function">setXfermode</span><span class="token punctuation">(</span>mXfermode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        canvas<span class="token punctuation">.</span><span class="token function">restoreToCount</span><span class="token punctuation">(</span>sc<span class="token punctuation">)</span> <span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>应用案例图片2-（去饱和、提亮、色相矫正）<br>姿势诀窍第一式：<br><img src="http://upload-images.jianshu.io/upload_images/1321512-6daae0620f962d72.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="专业术语之梦幻特效"></p>
<pre class="line-numbers language-java"><code class="language-java">        <span class="token comment" spellcheck="true">// 实例化混合模式</span>
        mXfermode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PorterDuffXfermode</span><span class="token punctuation">(</span>PorterDuff<span class="token punctuation">.</span>Mode<span class="token punctuation">.</span>SCREEN<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 去饱和、提亮、色相矫正</span>
        mBitmapPaint<span class="token punctuation">.</span><span class="token function">setColorFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ColorMatrixColorFilter</span><span class="token punctuation">(</span>
                <span class="token keyword">new</span> <span class="token class-name">float</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
                        <span class="token number">0.8587F</span><span class="token punctuation">,</span> <span class="token number">0.2940F</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.0927F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6.79F</span><span class="token punctuation">,</span>
                        <span class="token number">0.0821F</span><span class="token punctuation">,</span> <span class="token number">0.9145F</span><span class="token punctuation">,</span> <span class="token number">0.0634F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6.79F</span><span class="token punctuation">,</span>
                        <span class="token number">0.2019F</span><span class="token punctuation">,</span> <span class="token number">0.1097F</span><span class="token punctuation">,</span> <span class="token number">0.7483F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6.79F</span><span class="token punctuation">,</span>
                        <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDraw</span><span class="token punctuation">(</span>Canvas canvas<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> sc <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">saveLayer</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>null<span class="token punctuation">,</span>Canvas<span class="token punctuation">.</span>ALL_SAVE_FLAG<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        canvas<span class="token punctuation">.</span><span class="token function">drawColor</span><span class="token punctuation">(</span><span class="token number">0xcc1c093e</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
        mPaint<span class="token punctuation">.</span><span class="token function">setXfermode</span><span class="token punctuation">(</span>mXfermode<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>bitmap<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>mPaint<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        mPaint<span class="token punctuation">.</span><span class="token function">setXfermode</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span> <span class="token punctuation">;</span>
        canvas<span class="token punctuation">.</span><span class="token function">restoreToCount</span><span class="token punctuation">(</span>sc<span class="token punctuation">)</span> <span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>模拟单反相机的暗角效果，压暗图片周围的颜色亮度提亮中心：</p>
<h3 id="RadialGradient"><a href="#RadialGradient" class="headerlink" title="RadialGradient"></a>RadialGradient</h3><p>姿势诀窍第二式：<br><img src="http://upload-images.jianshu.io/upload_images/1321512-fadf93e521b00064.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="RadialGradientPs.png"></p>
<pre class="line-numbers language-java"><code class="language-java">      <span class="token function">onDraw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 最后添加
        <span class="token comment" spellcheck="true">// 实例化混合模式</span>
        <span class="token comment" spellcheck="true">// 中心颜色为透明而边缘颜色为黑色</span>
        mShaderPaint<span class="token punctuation">.</span><span class="token function">setShader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RadialGradient</span><span class="token punctuation">(</span>screenW <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> screenH <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>
                mBitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">7</span> <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>TRANSPARENT<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>BLACK<span class="token punctuation">,</span> Shader<span class="token punctuation">.</span>TileMode<span class="token punctuation">.</span>CLAMP<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 绘制一个跟图片大小一样的矩形</span>
        canvas<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> x <span class="token operator">+</span> mBitmap<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> y <span class="token operator">+</span> mBitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mShaderPaint<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>姿势二存在的问题：</p>
<ul>
<li>只能是圆形的渐变，对颜色区域的把控能力不足 ；</li>
</ul>
<p>姿势2.1 矩阵亮相</p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-f2e7497cb9dffbc7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="MatrixPs.png"></p>
<pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">// 根据我们源图的大小生成暗角Bitmap</span>
        darkCornerBitmap <span class="token operator">=</span> Bitmap<span class="token punctuation">.</span><span class="token function">createBitmap</span><span class="token punctuation">(</span>mBitmap<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mBitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Bitmap<span class="token punctuation">.</span>Config<span class="token punctuation">.</span>ARGB_8888<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 将该暗角Bitmap注入Canvas</span>
        Canvas canvas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Canvas</span><span class="token punctuation">(</span>darkCornerBitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 计算径向渐变半径</span>
        <span class="token keyword">float</span> radiu <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">2F</span> <span class="token operator">/</span> <span class="token number">3F</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 实例化Shader图形的画笔</span>
        mShaderPaint <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 设置径向渐变，渐变中心当然是图片的中心也是屏幕中心，渐变半径我们直接拿图片的高度但是要稍微小一点</span>
        <span class="token comment" spellcheck="true">// 中心颜色为透明而边缘颜色为黑色</span>
        RadialGradient radialGradient <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadialGradient</span><span class="token punctuation">(</span>screenW <span class="token operator">/</span> <span class="token number">2</span> <span class="token punctuation">,</span> screenH <span class="token operator">/</span> <span class="token number">2</span> <span class="token punctuation">,</span>
                mBitmap<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">7</span> <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">,</span> Color<span class="token punctuation">.</span>TRANSPARENT<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>BLACK<span class="token punctuation">,</span> Shader<span class="token punctuation">.</span>TileMode<span class="token punctuation">.</span>CLAMP<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 实例化一个矩阵</span>
        Matrix matrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Matrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 设置矩阵的缩放</span>
        matrix<span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>radiu <span class="token operator">*</span> <span class="token number">2F</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.0F</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 设置矩阵的预平移</span>
        matrix<span class="token punctuation">.</span><span class="token function">preTranslate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>radiu <span class="token operator">*</span> <span class="token number">2F</span><span class="token punctuation">)</span> <span class="token operator">-</span> canvas<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2F</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 将该矩阵注入径向渐变</span>
        radialGradient<span class="token punctuation">.</span><span class="token function">setLocalMatrix</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span><span class="token punctuation">;</span>
        mShaderPaint<span class="token punctuation">.</span><span class="token function">setShader</span><span class="token punctuation">(</span>radialGradient<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 绘制矩形</span>
        canvas<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mShaderPaint<span class="token punctuation">)</span><span class="token punctuation">;</span>
               把姿势二onDraw换成
        <span class="token comment" spellcheck="true">//绘制我们画好的径向渐变图      </span>
        canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>darkCornerBitmap<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>nginx 学习笔记</title>
    <url>/2019/09/11/2019-6-5-nginx/</url>
    <content><![CDATA[<h1 id="第一章-Nginx-简介"><a href="#第一章-Nginx-简介" class="headerlink" title="第一章 Nginx 简介"></a>第一章 Nginx 简介</h1><blockquote>
<p>nginx [engine x] is an HTTP and reverse proxy server, a mail proxy server, and a generic TCP/UDP proxy server</p>
<p>nginx  是一个高性能的<a href="https://baike.baidu.com/item/HTTP" target="_blank" rel="noopener">HTTP</a>和<a href="https://baike.baidu.com/item/反向代理/7793488" target="_blank" rel="noopener">反向代理</a>web服务器</p>
</blockquote>
<h2 id="1-0-Basic-HTTP-server-features"><a href="#1-0-Basic-HTTP-server-features" class="headerlink" title="1.0 Basic HTTP server features"></a>1.0 Basic HTTP server features</h2><ul>
<li>Serving static and <a href="https://nginx.org/en/docs/http/ngx_http_index_module.html" target="_blank" rel="noopener">index</a> files, <a href="https://nginx.org/en/docs/http/ngx_http_autoindex_module.html" target="_blank" rel="noopener">autoindexing</a>; <a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#open_file_cache" target="_blank" rel="noopener">open file descriptor cache</a>;</li>
<li><a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html" target="_blank" rel="noopener">Accelerated reverse proxying with caching</a>; <a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html" target="_blank" rel="noopener">load balancing and fault tolerance</a>;</li>
<li>Accelerated support with caching of <a href="https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html" target="_blank" rel="noopener">FastCGI</a>, <a href="https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html" target="_blank" rel="noopener">uwsgi</a>, <a href="https://nginx.org/en/docs/http/ngx_http_scgi_module.html" target="_blank" rel="noopener">SCGI</a>, and <a href="https://nginx.org/en/docs/http/ngx_http_memcached_module.html" target="_blank" rel="noopener">memcached</a> servers; <a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html" target="_blank" rel="noopener">load balancing and fault tolerance</a>;</li>
<li>Modular architecture. Filters include <a href="https://nginx.org/en/docs/http/ngx_http_gzip_module.html" target="_blank" rel="noopener">gzipping</a>, byte ranges, chunked responses, <a href="https://nginx.org/en/docs/http/ngx_http_xslt_module.html" target="_blank" rel="noopener">XSLT</a>, <a href="https://nginx.org/en/docs/http/ngx_http_ssi_module.html" target="_blank" rel="noopener">SSI</a>, and <a href="https://nginx.org/en/docs/http/ngx_http_image_filter_module.html" target="_blank" rel="noopener">image transformation</a> filter. Multiple SSI inclusions within a single page can be processed in parallel if they are handled by proxied or FastCGI/uwsgi/SCGI servers;</li>
<li><a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html" target="_blank" rel="noopener">SSL and TLS SNI support</a>;</li>
<li>Support for <a href="https://nginx.org/en/docs/http/ngx_http_v2_module.html" target="_blank" rel="noopener">HTTP/2</a> with weighted and dependency-based prioritization.</li>
</ul>
<h2 id="2-0-Other-HTTP-server-features"><a href="#2-0-Other-HTTP-server-features" class="headerlink" title="2.0 Other HTTP server features"></a>2.0 Other HTTP server features</h2><ul>
<li>Name-based and IP-based <a href="https://nginx.org/en/docs/http/request_processing.html" target="_blank" rel="noopener">virtual servers</a>;</li>
<li><a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_timeout" target="_blank" rel="noopener">Keep-alive</a> and pipelined connections support;</li>
<li><a href="https://nginx.org/en/docs/http/ngx_http_log_module.html#log_format" target="_blank" rel="noopener">Access log formats</a>, <a href="https://nginx.org/en/docs/http/ngx_http_log_module.html#access_log" target="_blank" rel="noopener">buffered log writing</a>, <a href="https://nginx.org/en/docs/control.html#logs" target="_blank" rel="noopener">fast log rotation</a>, and <a href="https://nginx.org/en/docs/syslog.html" target="_blank" rel="noopener">syslog logging</a>;</li>
<li>3xx-5xx error codes <a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#error_page" target="_blank" rel="noopener">redirection</a>;</li>
<li>The rewrite module: <a href="https://nginx.org/en/docs/http/ngx_http_rewrite_module.html" target="_blank" rel="noopener">URI changing using regular expressions</a>;</li>
<li><a href="https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#if" target="_blank" rel="noopener">Executing different functions</a> depending on the <a href="https://nginx.org/en/docs/http/ngx_http_geo_module.html" target="_blank" rel="noopener">client address</a>;</li>
<li>Access control based on <a href="https://nginx.org/en/docs/http/ngx_http_access_module.html" target="_blank" rel="noopener">client IP address</a>, <a href="https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html" target="_blank" rel="noopener">by password (HTTP Basic authentication)</a> and by the<a href="https://nginx.org/en/docs/http/ngx_http_auth_request_module.html" target="_blank" rel="noopener">result of subrequest</a>;</li>
<li>Validation of <a href="https://nginx.org/en/docs/http/ngx_http_referer_module.html" target="_blank" rel="noopener">HTTP referer</a>;</li>
<li>The <a href="https://nginx.org/en/docs/http/ngx_http_dav_module.html" target="_blank" rel="noopener">PUT, DELETE, MKCOL, COPY, and MOVE</a> methods;</li>
<li><a href="https://nginx.org/en/docs/http/ngx_http_flv_module.html" target="_blank" rel="noopener">FLV</a> and <a href="https://nginx.org/en/docs/http/ngx_http_mp4_module.html" target="_blank" rel="noopener">MP4</a> streaming;</li>
<li><a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#limit_rate" target="_blank" rel="noopener">Response rate limiting</a>;</li>
<li>Limiting the number of simultaneous <a href="https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html" target="_blank" rel="noopener">connections</a> or <a href="https://nginx.org/en/docs/http/ngx_http_limit_req_module.html" target="_blank" rel="noopener">requests</a> coming from one address;</li>
<li><a href="https://nginx.org/en/docs/http/ngx_http_geoip_module.html" target="_blank" rel="noopener">IP-based geolocation</a>;</li>
<li><a href="https://nginx.org/en/docs/http/ngx_http_split_clients_module.html" target="_blank" rel="noopener">A/B testing</a>;</li>
<li><a href="https://nginx.org/en/docs/http/ngx_http_mirror_module.html" target="_blank" rel="noopener">Request mirroring</a>;</li>
<li>Embedded <a href="https://nginx.org/en/docs/http/ngx_http_perl_module.html" target="_blank" rel="noopener">Perl</a>;</li>
<li><a href="https://nginx.org/en/docs/njs/index.html" target="_blank" rel="noopener">njs</a> scripting language.</li>
</ul>
<h2 id="3-0-TCP-UDP-proxy-server-features"><a href="#3-0-TCP-UDP-proxy-server-features" class="headerlink" title="3.0 TCP/UDP proxy server features"></a>3.0 TCP/UDP proxy server features</h2><ul>
<li><p><a href="https://nginx.org/en/docs/stream/ngx_stream_proxy_module.html" target="_blank" rel="noopener">Generic proxying</a> of TCP and UDP;</p>
</li>
<li><p><a href="https://nginx.org/en/docs/stream/ngx_stream_ssl_module.html" target="_blank" rel="noopener">SSL</a> and TLS <a href="https://nginx.org/en/docs/stream/ngx_stream_ssl_preread_module.html" target="_blank" rel="noopener">SNI</a> support for TCP;</p>
</li>
<li><p><a href="https://nginx.org/en/docs/stream/ngx_stream_upstream_module.html" target="_blank" rel="noopener">Load balancing and fault tolerance</a>;</p>
</li>
<li><p>Access control based on <a href="https://nginx.org/en/docs/stream/ngx_stream_access_module.html" target="_blank" rel="noopener">client address</a>;</p>
</li>
<li><p>Executing different functions depending on the <a href="https://nginx.org/en/docs/stream/ngx_stream_geo_module.html" target="_blank" rel="noopener">client address</a>;</p>
</li>
<li><p>Limiting the number of simultaneous <a href="https://nginx.org/en/docs/stream/ngx_stream_limit_conn_module.html" target="_blank" rel="noopener">connections</a> coming from one address;</p>
</li>
<li><p><a href="https://nginx.org/en/docs/stream/ngx_stream_log_module.html#log_format" target="_blank" rel="noopener">Access log formats</a>, <a href="https://nginx.org/en/docs/stream/ngx_stream_log_module.html#access_log" target="_blank" rel="noopener">buffered log writing</a>, <a href="https://nginx.org/en/docs/control.html#logs" target="_blank" rel="noopener">fast log rotation</a>, and <a href="https://nginx.org/en/docs/syslog.html" target="_blank" rel="noopener">syslog logging</a>;</p>
</li>
<li><p><a href="https://nginx.org/en/docs/stream/ngx_stream_geoip_module.html" target="_blank" rel="noopener">IP-based geolocation</a>;</p>
</li>
<li><p><a href="https://nginx.org/en/docs/stream/ngx_stream_split_clients_module.html" target="_blank" rel="noopener">A/B testing</a>;</p>
</li>
<li><p><a href="https://nginx.org/en/docs/njs/index.html" target="_blank" rel="noopener">njs</a> scripting language.</p>
<h2 id="4-0-Nginx-优点"><a href="#4-0-Nginx-优点" class="headerlink" title="4.0 Nginx 优点"></a>4.0 Nginx 优点</h2></li>
</ul>
<ol>
<li><p>IO 多路复用epoll<br><img src="http://cdn.linz.tech/nginx-2019-6-13-io-epoll.png" alt=""></p>
<blockquote>
<p>什么是IO多路复用： 多个描述符的I/O操作都能在一个线程内并发交替地顺序完成，其中<code>复用</code>指复用同一个线程。</p>
</blockquote>
</li>
<li><p>轻量级，功能模块化，代码模块化</p>
</li>
<li><p>CPU亲和（afflinity）</p>
<blockquote>
<p>什么是CPU亲和： 是一种CPU核心和Nginx工作进程绑定的方式，把没一个Worker进程固定在一个cpu上执行，减少切换cpu的cache miss, 获取更好的性能。</p>
</blockquote>
</li>
<li><p>sendFile<br><img src="http://cdn.linz.tech/nginx-2019-6-13-io-sendfile.png" alt=""></p>
</li>
</ol>
<h1 id="第二章-基础篇"><a href="#第二章-基础篇" class="headerlink" title="第二章 基础篇"></a>第二章 基础篇</h1><h2 id="Nginx快速搭建"><a href="#Nginx快速搭建" class="headerlink" title="Nginx快速搭建"></a>Nginx快速搭建</h2><p>官网： <a href="http://nginx.org/" target="_blank" rel="noopener">http://nginx.org/</a></p>
<p>Mainline version 开发版本</p>
<p>Stable version 稳定版本</p>
<p>Legacy version 历史版本</p>
<h3 id="Pre-Built-Packages"><a href="#Pre-Built-Packages" class="headerlink" title="Pre-Built Packages"></a>Pre-Built Packages</h3><p>有对应系统的安装方式 <a href="http://nginx.org/en/linux_packages.html" target="_blank" rel="noopener">linux_package</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">vim /etc/yum.repos.d/nginx.repos<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="Nginx-基本命令使用"><a href="#Nginx-基本命令使用" class="headerlink" title="Nginx 基本命令使用"></a>Nginx 基本命令使用</h2><p>Ø  -h：显示帮助信息</p>
<p>Ø  -v：显示Tengine版本</p>
<p>Ø  -m：显示所有静态编译的模块</p>
<p>Ø  -l：显示所有可配置的指令</p>
<p>Ø  -V：显示版本、编译安装时的选项、所有静态编译的模块</p>
<p>Ø  -t：检查Tengine配置文件语法</p>
<p>Ø  -s [stop | quit | reopen | reload]：关闭 | 退出 | 重新打开 | 重载Tengine</p>
<ul>
<li><a href="https://www.cnblogs.com/jiangwangxiang/p/8481661.html" target="_blank" rel="noopener">windows下nginx的安装及使用</a> </li>
</ul>
<pre class="line-numbers language-shell"><code class="language-shell">  start nginx
  nginx -s stop(快速停止nginx)  或  nginx -s quit(完整有序的停止nginx)
  nginx.exe -t # 测试conf
  nginx.exe -s reload #重新加载conf
  taskkill /IM  nginx.exe  /F # kill 所有后台nginx实例<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>Nginx 常用命令</li>
</ul>
<pre class="line-numbers language-shell"><code class="language-shell">  sudo nginx #打开 nginx
  nginx -s reload|reopen|stop|quit  #重新加载配置|重启|停止|退出 nginx
  nginx -t   #测试配置是否有语法错误

  nginx [-?hvVtq] [-s signal] [-c filename] [-p prefix] [-g directives]

  -?,-h           : 打开帮助信息
  -v              : 显示版本信息并退出
  -V              : 显示版本和配置选项信息，然后退出
  -t              : 检测配置文件是否有语法错误，然后退出
  -q              : 在检测配置文件期间屏蔽非错误信息
  -s signal       : stop（停止）, quit（退出）, reopen（重启）, reload
  -p prefix       : 设置前缀路径（默认是：/usr/local/Cellar/nginx/1.2.6/）
  -c filename     : 设置配置文件（默认是：/usr/local/etc/nginx/nginx.conf）
  -g directives   : 设置配置文件外的全局指令<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>nginx -t  能查看配置文件所在目录</p>
<pre class="line-numbers language-shell"><code class="language-shell">nginx: the configuration file /usr/local/tengine/conf/nginx.conf syntax is ok
nginx: configuration file /usr/local/tengine/conf/nginx.conf test is successful<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>阿里云后台配置文件路径：<code>/usr/local/tengine/conf/nginx.conf</code></p>
<h2 id="Nginx的目录和配置语法"><a href="#Nginx的目录和配置语法" class="headerlink" title="Nginx的目录和配置语法"></a>Nginx的目录和配置语法</h2><h3 id="Building-nginx-from-Sources"><a href="#Building-nginx-from-Sources" class="headerlink" title="Building nginx from Sources"></a>Building nginx from Sources</h3><p><a href="https://nginx.org/en/docs/configure.html" target="_blank" rel="noopener">https://nginx.org/en/docs/configure.html</a></p>
<h3 id="Core-functionality"><a href="#Core-functionality" class="headerlink" title="Core functionality"></a>Core functionality</h3><p><a href="https://nginx.org/en/docs/ngx_core_module.html" target="_blank" rel="noopener">https://nginx.org/en/docs/ngx_core_module.html</a></p>
<p>日志目录 </p>
<p>tengine -&gt; /usr/local/tengine/logs</p>
<p>查看nginx的配置</p>
<pre class="line-numbers language-shell"><code class="language-shell">nginx -V<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="配置模块化"><a href="#配置模块化" class="headerlink" title="配置模块化"></a>配置模块化</h3><p>不同功能的配置文件尽量单独编写，使配置文件解耦</p>
<pre class="line-numbers language-shell"><code class="language-shell">http {
    #导入servers/目录下所有conf文件
    include servers/*.conf;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h3><ol>
<li>自定义错误页</li>
</ol>
<pre class="line-numbers language-shell"><code class="language-shell">   location /bbs {
       root /vhosts/bbs;
       error_page 404 404/404.html;
   }
   error_page 500 502 503 504 /50x.html;
   location = /50x.html {
           root /usr/share/nginx/html;
   }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Nginx-日志-log-fromat"><a href="#Nginx-日志-log-fromat" class="headerlink" title="Nginx 日志 log_fromat"></a>Nginx 日志 log_fromat</h3><h3 id="简单的访问控制"><a href="#简单的访问控制" class="headerlink" title="简单的访问控制"></a>简单的访问控制</h3><h4 id="基于来源IP实现访问控制"><a href="#基于来源IP实现访问控制" class="headerlink" title="基于来源IP实现访问控制"></a>基于来源IP实现访问控制</h4><pre class="line-numbers language-shell"><code class="language-shell">server{
    location / {
        # 网段的写法：192.168.1.0/24
        deny 192.168.1.222;
        # 从上到下进行匹配，类似iptables
        allow all;
    }

    location /bbs {
        if ( $remote_addr = 192.168.1.146 ) {
        return 404;
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="基于用户名-密码实现访问控制"><a href="#基于用户名-密码实现访问控制" class="headerlink" title="基于用户名/密码实现访问控制"></a>基于用户名/密码实现访问控制</h4><pre class="line-numbers language-shell"><code class="language-shell">location /bbs {
    auth_basic "Please Login";
    auth_basic_user_file /usr/local/tengine/conf/.htpasswd;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>设置账户密码</p>
<pre class="line-numbers language-shell"><code class="language-shell">yum -y install httpd-tools
cd /usr/local/tengine/conf
htpasswd -c -m .htpasswd keyso     //用户名keyso，密码123456
nginx -t
nginx -s reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>htpasswd</strong></p>
<p>  -c：自动创建账号文件<strong>（仅在添加第一个用户时使用该选项）</strong></p>
<p> -m：使用MD5加密用户密码</p>
<p> -s：使用SHA加密用户密码</p>
<p>  -D：删除指定用户</p>
<h4 id="禁止访问某一类资源"><a href="#禁止访问某一类资源" class="headerlink" title="禁止访问某一类资源"></a>禁止访问某一类资源</h4><pre class="line-numbers language-shell"><code class="language-shell">location ~ \.(txt|doc)$ {
    if (-f $request_filename){
        root html;
        break;
    }
    deny all;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Nginx-变量"><a href="#Nginx-变量" class="headerlink" title="Nginx 变量"></a>Nginx 变量</h3><p>HTTP请求变量 - arg_PARAMETER, http_HEADER, sent_http_HEADER</p>
<p>内置变量 - Nginx内置变量 <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#Embedded%20Variables" target="_blank" rel="noopener">Embedded Variables</a></p>
<h4 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h4><pre><code>server {
    set $foo hello;
    location /test/ {
        default_type application/json;
        return 200 '{"status":"${foo}/$foo"}';
    }
}</code></pre><ul>
<li><p>定义范围：<code>server{}</code> 内</p>
<blockquote>
<p>放到外面报错<code>nginx: [emerg] "set" directive is not allowed here</code></p>
</blockquote>
</li>
<li><p>初始化：在加载conf的时候，故没有set变量直接引用无法启动 </p>
</li>
</ul>
<pre><code>server {
    listen 8080;

    location /foo {
        set $a hello;
        echo_exec /bar; #内部跳转a值不变
    }

    location /bar {
        #可以看出定义在location范围之外，赋值是在location内
        echo "a = [$a]"; 
    }
}
</code></pre><p>测试</p>
<pre><code>[root@localhost html]# curl localhost/foo
#内部跳转a值不变
a = [hello]
[root@localhost html]# curl 'http://localhost/bar'
#外部跳转没有赋值
a = []</code></pre><h4 id="内建变量"><a href="#内建变量" class="headerlink" title="内建变量"></a>内建变量</h4><p>参考 深度学习之 <code>Nginx 变量</code></p>
<h4 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h4><p>参考 <code>附录二 Nginx全局变量解析</code></p>
<h2 id="Nginx-模块讲解"><a href="#Nginx-模块讲解" class="headerlink" title="Nginx 模块讲解"></a>Nginx 模块讲解</h2><blockquote>
<p>分为 官方模块，第三方模块<br> 官方模块参数：  <a href="https://nginx.org/en/docs/" target="_blank" rel="noopener">Modules reference</a></p>
</blockquote>
<h3 id="常用的模块用法"><a href="#常用的模块用法" class="headerlink" title="常用的模块用法"></a><strong>常用的模块用法</strong></h3><p><a href="https://nginx.org/en/docs/http/ngx_http_stub_status_module.html" target="_blank" rel="noopener">ngx_http_stub_status_module</a> 提供访问的基本状态信息</p>
<p>编译选项： –with-http_stub_status_module</p>
<p>用法</p>
<pre class="line-numbers language-shell"><code class="language-shell">location /status {
    stub_status on;
    allow 192.168.101.120;
    deny all;
    access_log off;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><a href="https://nginx.org/en/docs/http/ngx_http_random_index_module.html" target="_blank" rel="noopener">ngx_http_random_index_module</a> 随机Index.html</p>
<p>用法</p>
<pre class="line-numbers language-shell"><code class="language-shell">location / {
    root /usr/src/nginx/;
     random_index on;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>在<code>/usr/src/nginx/</code> 下新建1.html,2.html,3.html ，访问<code>/</code> 会随机访问以上三个文件</p>
<p><a href="https://nginx.org/en/docs/http/ngx_http_sub_module.html" target="_blank" rel="noopener">ngx_http_sub_module</a> 指定字符串的替换</p>
<p>编译选项：  <code>--with-http_sub_module</code></p>
<blockquote>
<pre><code>location / {
    sub_filter '&lt;a href="http://127.0.0.1:8080/'  '&lt;a href="https://$host/';
    sub_filter '&lt;img src="http://127.0.0.1:8080/' '&lt;img src="https://$host/';
    sub_filter_once on; ## 默认为全部替换，开启替换一次
}</code></pre></blockquote>
<h3 id="Nginx-请求限制"><a href="#Nginx-请求限制" class="headerlink" title="Nginx 请求限制"></a>Nginx 请求限制</h3><h4 id="链接频率限制"><a href="#链接频率限制" class="headerlink" title="链接频率限制 :"></a>链接频率限制 :</h4><p><a href="https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html" target="_blank" rel="noopener">ngx_http_limit_conn_module</a></p>
<blockquote>
<p>this module is used to limit the number of connections per the defined key, in particular, the number of connections from a single IP address.</p>
<p>Not all connections are counted. A connection is counted only if it has a request being processed by the server and the whole request header has already been read.</p>
</blockquote>
<p>Directives</p>
<table>
<thead>
<tr>
<th align="left">Syntax:</th>
<th><code>**limit_conn** *zone* *number*;</code></th>
</tr>
</thead>
<tbody><tr>
<td align="left">Default:</td>
<td>—</td>
</tr>
<tr>
<td align="left">Context:</td>
<td><code>http</code>, <code>server</code>, <code>location</code></td>
</tr>
</tbody></table>
<p> Example Configuration</p>
<pre class="line-numbers language-shell"><code class="language-shell">limit_conn_zone $binary_remote_addr zone=perip:10m;
limit_conn_zone $server_name zone=perserver:10m;

server {
    ...
    limit_conn perip 10; #每个IP allow 10 connections 
    limit_conn perserver 100;#每个服务 allow 10 connections 
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意：HTTP/2 复用的连接是分开计数的，原文：<br> In HTTP/2 and SPDY, each concurrent request is considered a separate connection. </p>
<h4 id="请求频率限制-："><a href="#请求频率限制-：" class="headerlink" title="请求频率限制 ："></a>请求频率限制 ：</h4><p><a href="https://nginx.org/en/docs/http/ngx_http_limit_req_module.html" target="_blank" rel="noopener">ngx_http_limit_req_module</a></p>
<blockquote>
<p>this module (0.7.21) is used to limit the request processing rate per a defined key, in particular, the processing rate of requests coming from a single IP address. The limitation is done using the “leaky bucket” method.</p>
</blockquote>
<p>Example Configuration</p>
<pre class="line-numbers language-shelll"><code class="language-shelll">limit_req_zone $binary_remote_addr zone=perip:10m rate=1r/s;
limit_req_zone $server_name zone=perserver:10m rate=10r/s; #(r/m)
server {
    ...
    limit_req zone=perip burst=5 nodelay;
    limit_req zone=perserver burst=10;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>－　burst 下一个周期继续响应5个reqest超过1r/s，当超过5个request的时候看 [nodelay | delay=<em>number</em>] 怎么处理</p>
<p>Directives</p>
<p>| Syntax:  | <code>**limit_req** zone=*name* [burst=*number*] [nodelay | delay=*number*];</code> |<br>| :——- | ———————————————————— |<br>| Default: | —                                                            |<br>| Context: | <code>http</code>, <code>server</code>, <code>location</code>                                 |</p>
<h3 id="Nginx-访问控制"><a href="#Nginx-访问控制" class="headerlink" title="Nginx 访问控制"></a>Nginx 访问控制</h3><p>auth_mod.conf</p>
<h4 id="基于IP"><a href="#基于IP" class="headerlink" title="基于IP"></a>基于IP</h4><ul>
<li><a href="https://nginx.org/en/docs/http/ngx_http_access_module.html" target="_blank" rel="noopener">ngx_http_access_module</a></li>
</ul>
<p>| Syntax:  | <code>**allow** *address* | *CIDR* | unix: | all;</code> |<br>| :——- | ——————————————— |<br>| Default: | —                                             |<br>| Context: | <code>http</code>, <code>server</code>, <code>location</code>, <code>limit_except</code>  |</p>
<p>CIDR 网段</p>
<p>Sample Configuration</p>
<pre class="line-numbers language-shell"><code class="language-shell">location / {
    deny  192.168.1.1;
    allow 192.168.1.0/24;
    allow 10.1.1.0/16;
    allow 2001:0db8::/32;
    deny  all;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>过个IP用ngx_http_geo_module定义</p>
<p>access_module存在的局限性，及当client通过代理访问是remote_addr是不同的</p>
<p>解决方案一</p>
<p><img src="http://cdn.linz.tech/nginx_http_x_forwared_for.png" alt=""></p>
<p>存在问题是，http_x_forwarded_for是协议要求，厂商可以不实现且可以修改</p>
<p>解决方案二 HTP自定义变量</p>
<h4 id="基于用户信任登录"><a href="#基于用户信任登录" class="headerlink" title="基于用户信任登录"></a>基于用户信任登录</h4><ul>
<li><a href="https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html" target="_blank" rel="noopener">ngx_http_auth_basic_module</a></li>
</ul>
<p>Sample Configuration</p>
<pre class="line-numbers language-shell"><code class="language-shell">location / {
    auth_basic           "Auth access test ! input your password!";
    auth_basic_user_file conf/htpasswd;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>auth_basic_user_file</strong> </p>
<pre class="line-numbers language-xml"><code class="language-xml"># comment 用户名:密码:描述
name1:password1
name2:password2:comment
name3:password3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>加密密码：htpasswd</p>
<pre class="line-numbers language-shell"><code class="language-shell">yum install httpd-tools -y 
htpasswd -c ./auth_conf jeson # -c 指定生成文件 jeson 用户名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>局限性</p>
<ol>
<li>用户信息依赖文件方式</li>
<li>操作管理机械，效率低下</li>
</ol>
<p>解决方案：</p>
<ol>
<li>Nginx结合LUA实现高效验证</li>
<li>Nginx和LDAP打通，利用nginx-auth-ldap模块 </li>
</ol>
<h1 id="第三章-场景实践"><a href="#第三章-场景实践" class="headerlink" title="第三章 场景实践"></a>第三章 场景实践</h1><h2 id="Nginx作为静态资源WEB服务"><a href="#Nginx作为静态资源WEB服务" class="headerlink" title="Nginx作为静态资源WEB服务"></a>Nginx作为静态资源WEB服务</h2><h3 id="1-静态资源服务场景-CDN"><a href="#1-静态资源服务场景-CDN" class="headerlink" title="1, 静态资源服务场景-CDN"></a>1, 静态资源服务场景-CDN</h3><h3 id="2-配置语法"><a href="#2-配置语法" class="headerlink" title="2 配置语法"></a>2 配置语法</h3><p>tcp_nopush<br>原理：多个包集中发送，适合大文件开启</p>
<pre class="line-numbers language-shell"><code class="language-shell">Syntax: tcp_nopush on | off;
Default: tcp_nopush off;
Context: http, server, location <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>作用： sendfile开启的情况下，提高网络包的传输效率</p>
<p> tcp_nodelay</p>
<pre class="line-numbers language-shel"><code class="language-shel">Syntax: tcp_nodelay on | off;
Default: on
Context: http, server, location <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>作用： keepalive连接下，提高网络包的传输实时性；</p>
<h3 id="3-压缩"><a href="#3-压缩" class="headerlink" title="3. 压缩"></a>3. 压缩</h3><ul>
<li><a href="https://nginx.org/en/docs/http/ngx_http_gzip_module.html" target="_blank" rel="noopener">ngx_http_gzip_module</a></li>
</ul>
<p>Sample_confuration</p>
<pre class="line-numbers language-shell"><code class="language-shell">gzip            on;
gzip_min_length 1000;
gzip_proxied    expired no-cache no-store private auth;
gzip_types      text/plain application/xml;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>压缩</p>
<pre class="line-numbers language-shell"><code class="language-shell">Syntax: gzip on | off;
Default: off;
Context: http, server, location, if in location<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>压缩比</p>
<pre class="line-numbers language-shell"><code class="language-shell">Syntax: gzip_comp_level level;
Default: 1;
Context: http, server, location<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>压缩版本</p>
<pre class="line-numbers language-shell"><code class="language-shell">Syntax: gzip_http_version 1.0 | 1.1;
Default: gzip_http_version 1.1; # 主流
Context: http, server, location<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="4-浏览器缓存原理"><a href="#4-浏览器缓存原理" class="headerlink" title="4 浏览器缓存原理"></a>4 浏览器缓存原理</h3><p><strong>客户端浏览器缓存原理</strong></p>
<p>etag lastmodified 缓存原理流程图</p>
<p><img src="http://cdn.linz.tech/nginx_cache_last_etag_flow.png" alt=""></p>
<p>Expires 配置语法</p>
<pre class="line-numbers language-shell"><code class="language-shell">Syntax: expires  [modified] time;
        expires epoch | max | off;
Default: expires off;
Context: http, server, location, if in location<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>Sample 以<code>.html/htm</code>结尾的文件过期时间为24小时</p>
<pre class="line-numbers language-shell"><code class="language-shell">location ~ .*\.(htm|html)$ {
    expires 24h;
    root /opt/app/code;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="5-跨域访问"><a href="#5-跨域访问" class="headerlink" title="5 跨域访问"></a>5 跨域访问</h3><ol>
<li>浏览器禁止跨域的原因<br>不安全容易出现CSRF攻击！ CSRF攻击是攻击者利用用户的身份操作用户帐户的一种攻击方式，通常使用Anti CSRF Token来防御CSRF攻击，同时要注意Token的保密性和随机性。</li>
</ol>
<pre class="line-numbers language-shell"><code class="language-shell">  location / {
        add_header 'Access-Control-Allow-Origin' '*'; # * 允许所有站点跨域访问
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' '*'; # GET,POST,PUT,DELETE,OPTIONS; * 指所有 
        proxy_pass http://localhost:8088;
        # proxy_redirect off ;
        index index.php index.html index.htm;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>配置Nginx 允许多个域名跨域访问</p>
<p>异常</p>
<pre class="line-numbers language-shell"><code class="language-shell">No'Access-Control-Allow-Origin' header is present on the requested resourse.Origin 'http//localhost:8088' is therefore not allowed access.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>解决</p>
<pre class="line-numbers language-shell"><code class="language-shell">map $http_origin $corsHost {
    default 0;
    "~http://www.haibakeji.com" http://www.haibakeji.com;
    "~http://m.haibakeji.com" http://m.haibakeji.com;
    "~http://wap.haibakeji.com" http://wap.haibakeji.com;
}
server
{
    listen 80;
    server_name www.haibakeji.com;
    root /nginx;
    location /
    {
        add_header Access-Control-Allow-Origin $corsHost;
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="6-防盗链接"><a href="#6-防盗链接" class="headerlink" title="6 防盗链接"></a>6 防盗链接</h3><ul>
<li><a href="https://nginx.org/en/docs/http/ngx_http_referer_module.html" target="_blank" rel="noopener">ngx_http_referer_module</a></li>
</ul>
<p>原因： 1. 防止资源被盗用，2. 防止非法抓取资源导致网站卡顿；</p>
<p>http_refer </p>
<p><img src="http://cdn.linz.tech/nginx_http_refer.jpg" alt=""></p>
<pre class="line-numbers language-shell"><code class="language-shell">Syntax: valid_referers none | blocked | server_names | string ...;
Context: server, location<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>请求头为指定值时， 内嵌变量$invalid_referer被设置为空字符串， 否则这个变量会被置成“1”。查找匹配时不区分大小写。</p>
<ul>
<li>blocked：“Referer” 请求头存在，但是它的值被防火墙或者代理服务器删除；这些值都不以“http://” 或者 “https://”字符串作为开头；</li>
<li>none：缺少“Referer”请求头；</li>
<li>server_names：“Referer” 请求头包含某个虚拟主机名；</li>
</ul>
<p>正则表达式：必须以“~”符号作为开头。 需要注意的是表达式会从“http://”或者“https://”之后的文本开始匹配。</p>
</blockquote>
<p>Sample</p>
<pre class="line-numbers language-java"><code class="language-java">location <span class="token operator">~</span> <span class="token punctuation">.</span>*<span class="token punctuation">.</span><span class="token punctuation">(</span>jpg<span class="token operator">|</span>gif<span class="token operator">|</span>png<span class="token punctuation">)</span>$ <span class="token punctuation">{</span>
    # 允许那些referers信息进行访问 
    # ndne 允许没有带referer信息的过来
    # blocked 允许没有带协议信息，如http的
    # <span class="token operator">~</span><span class="token operator">/</span>google\<span class="token punctuation">.</span>/ #所有 <span class="token operator">~</span><span class="token operator">/</span>google\<span class="token punctuation">.</span>/过来的
    valid_referers none blocked <span class="token number">116.62</span><span class="token punctuation">.</span><span class="token number">103.228</span> <span class="token operator">~</span><span class="token operator">/</span>google\<span class="token punctuation">.</span>/<span class="token punctuation">;</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span>$invalid_referer<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">403</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><a href="https://blog.51cto.com/woymk/1893774" target="_blank" rel="noopener">利用nginx“ngx_http_referer_module”模块设置防盗链</a></p>
<h2 id="Nginx作为代理服务"><a href="#Nginx作为代理服务" class="headerlink" title="Nginx作为代理服务"></a>Nginx作为代理服务</h2><ul>
<li><a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html" target="_blank" rel="noopener">ngx_http_proxy_module</a></li>
</ul>
<p>nginx 支持的代理类型</p>
<p><img src="http://cdn.linz.tech/nginx-proxy-type.png" alt=""></p>
<p>代理分为正向代理和反向代理</p>
<p>fx_proxy.conf</p>
<p>模板设置</p>
<pre class="line-numbers language-shell"><code class="language-shell">server{
    listen 80;
    server_name locahost jeson.t.imooc.io;
    location / {
        proxy_pass http://127.0.0.1:8080;
        proxy_redirect default;
        #访问日志配置， 传递真的地址给proxy，而不是当前nginx
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_connect_timeout 30; #30s
        proxy_send_timeout 60;
        proxy_read_timeout 60;

        proxy_buffer_size 32k;
        proxy_buffering on; 
        proxy_buffers 4 128k;
        proxy_busy_buffers_size 256k;
        proxy_max_temp_file_size 256k; #config时指定 --http-proxy-temp-path=
        #当出现一下异常是启用下一个 upstream
         proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>文件形式导入</p>
<pre class="line-numbers language-shell"><code class="language-shell">location {
    include proxy_params;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>proxy_params;</p>
<pre class="line-numbers language-shell"><code class="language-shell">proxy_redirect default;

proxy_set_header Host $http_host;
proxy_set_header X-Real-IP $remote_addr;

proxy_connect_timeout 30; #30s
proxy_send_timeout 60;
proxy_read_timeout 60;

proxy_buffer_size 32k;
proxy_buffering on; 
proxy_buffers 4 128k;
proxy_busy_buffers_size 256k;
proxy_max_temp_file_size 256k; #config时指定 --http-proxy-temp-path=<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="转发路径规则"><a href="#转发路径规则" class="headerlink" title="转发路径规则"></a>转发路径规则</h3><p>真实请求路径<code>http://localhost/online/wxapi/test/loginSwitch</code></p>
<p>第一种：proxy_pass 结尾有<code>/</code></p>
<pre><code>location /online/wxapi/ {
        proxy_pass http://localhost:8080/; #转发不代 location 路径
}</code></pre><p>代理结果：<code>http://localhost:8080/test/loginSwitch</code></p>
<p>第二种：proxy_pass 结尾没有<code>/</code></p>
<pre><code>location /online/wxapi/ {
        proxy_pass http://localhost:8080;#转发代 location 路径
}</code></pre><p>代理结果：<code>http://localhost:8080/online/wxapi/test/loginSwitch</code></p>
<p>第三种：proxy_pass 结尾有<code>/web</code></p>
<pre><code>location /online/wxapi/ {
        proxy_pass http://localhost:8080/web;#转发location路径,直接拼接，不带`/`分割符
}</code></pre><p>代理结果：<code>http://localhost:8080/webtest/loginSwitch</code></p>
<p>第二种：proxy_pass 结尾没有<code>/web/</code></p>
<pre><code>location /online/wxapi/ {
        proxy_pass http://localhost:8080/web/;#转发代 location 路径
}</code></pre><p>代理结果：<code>http://localhost:8080/web/test/loginSwitch</code></p>
<h3 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h3><pre class="line-numbers language-shell"><code class="language-shell">location ^~ /static/ 
{     
    #不传 static
    # curl http://localhost:3000/static/index.html
    # proxy_pass 转发为 http://www.test.com/index.html
    proxy_pass http://www.test.com/; 

    #传 static
    # curl http://localhost:3000/static/index.html
    # proxy_pass 转发为 http://www.test.com/static/index.html
    proxy_pass http://www.test.com; 
}

location /forum {
    #http://node1.qiuyue.com/forum ->  http://192.168.1.144/bbs
    proxy_pass http://192.168.1.144/bbs;
    index index.html index.html;
}

#jpg、png或者gif结尾的请求反代
location ~* \.(jpg|png|gif)$ {
    proxy_pass http://192.168.1.144;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Nginx作为负载均衡服务"><a href="#Nginx作为负载均衡服务" class="headerlink" title="Nginx作为负载均衡服务"></a>Nginx作为负载均衡服务</h2><ul>
<li><a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html" target="_blank" rel="noopener">ngx_http_upstream_module</a></li>
</ul>
<p>按区域可分为GSLB，SLB </p>
<p>Example Configuration</p>
<pre class="line-numbers language-shell"><code class="language-shell">upstream backend {
    ip_hash; #调度方式 hash 
    server backend1.example.com   weight=5;
    server backend2.example.com:8080 max_fails=3 fail_timeout=30s;;
    server unix:/tmp/backend3 backup; 

    server backup1.example.com:8080   backup;
    server backup2.example.com:8080   backup;
}

server {
    location / {
        proxy_pass http://backend;

    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="调度算法"><a href="#调度算法" class="headerlink" title="调度算法"></a>调度算法</h3><p><img src="http://cdn.linz.tech/nginx_upstream.png" alt=""></p>
<p>ip_hash 有代理问题</p>
<pre class="line-numbers language-shell"><code class="language-shell">upstream imooc {
    hash $request_url; #可以提取URL指定位置进行hash
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="Nginx作为缓存服务"><a href="#Nginx作为缓存服务" class="headerlink" title="Nginx作为缓存服务"></a>Nginx作为缓存服务</h2><pre class="line-numbers language-shell"><code class="language-shell">proxy_cache_path /opt/app/cache levels=1:2 keys_zone=imooc_cache:10m max_size=10g inactive=7d max_size=10g use_temp_path=off;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>proxy_cache_path </p>
<p>keys_zone = 1m # 1m可以存储8000个</p>
<p>inactive = 60m# 60分钟内不访问就把他清除掉 </p>
<p>use_temp_path = off; #关闭零时文件存储，开启同时和 cache_path 使用可能会产生性能损耗</p>
<pre class="line-numbers language-shell"><code class="language-shell">location / {

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_cache imooc_cache;
    proxy_cache_valid 200 304 12h; #头部为返回为200 304 12小时过期
    proxy_cache_valid any 10m; #其他的10m过期
    proxy_cache_key $host$uri$is_args$args;
    add_header Nginx-Cache "&upstream_cache_status"; #查看缓存使用状态 Miss 未使用， HIT使用
    #当出现一下异常是启用下一个 upstream
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="清理指定缓存"><a href="#清理指定缓存" class="headerlink" title="清理指定缓存"></a>清理指定缓存</h3><p>ngx_cache_purge</p>
<p>安装ngx_cache_purge module块</p>
<pre class="line-numbers language-shell"><code class="language-shell">cd /tmp
wget http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz
tar -xf ngx_cache_purge-2.3.tar.gz
dso_tool --add-module=/tmp/ngx_cache_purge-2.3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>nginx.conf 配置</p>
<pre class="line-numbers language-shell"><code class="language-shell">dso {
    load ngx_cache_purge_module.so;
}

location ~ /purge(/.*) {
       allow 192.168.1.0/24;
       deny all;
       proxy_cache_purge mycache $host$1$is_args$args;
       access_log off;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>清理缓存</p>
<p>如果要清理<a href="http://node1.qiuyue.com/bbs/index.html的缓存，则访问http://node1.qiuyue.com/purge/bbs/index.html即" target="_blank" rel="noopener">http://node1.qiuyue.com/bbs/index.html的缓存，则访问http://node1.qiuyue.com/purge/bbs/index.html即</a></p>
<h3 id="让部分页面不缓存"><a href="#让部分页面不缓存" class="headerlink" title="让部分页面不缓存"></a>让部分页面不缓存</h3><pre class="line-numbers language-shell"><code class="language-shell">Systax: proxy_on_cache string ...
Context: http,server,location<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>Sample</p>
<pre class="line-numbers language-shell"><code class="language-shell">server {
    #检测url是否已不缓存的页面
    if($request_url ~ ^/(url3|login|register|password\/reset)){ 
        set $cookie_nocache 1; #设置变量的值
    }

    location / {
        proxy_no_cache $cookie_nocache $arg_nocache $arg_comment;
        proxy_no_cache $http_pragma $http_authorization;
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="大文件分片请求"><a href="#大文件分片请求" class="headerlink" title="大文件分片请求"></a>大文件分片请求</h3><p>http_slice_module</p>
<pre class="line-numbers language-shell"><code class="language-shell">Systax: slice size;
Context: http,server,location<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>优势： </p>
<p>每个子请求收到的数据都会形成一个独立的文件，一个请求断了，其他请求不收影响</p>
<p>劣势：</p>
<p>当文件很大或者slice很小的时候，可能会导致文件描述符耗尽等情况</p>
<p>–with-http_slice_module</p>
<pre class="line-numbers language-shell"><code class="language-shell">http {
    include      mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    proxy_cache_path /tmp/nginx/cache levels=1:2 keys_zone=cache:100m;
    server {
        listen      8087;
        server_name  localhost;
        location / {
            slice 1m;
            proxy_cache cache;
            proxy_cache_key $uri$is_args$args$slice_range;
            proxy_set_header Range $slice_range;
            proxy_cache_valid 200 206 1h;
            #proxy_set_header Range $http_range;
            proxy_pass http://127.0.0.1:8080;
        }
        error_page  500 502 503 504  /50x.html;
        location = /50x.html {
            root  html;
        }

    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>该模块用在 proxy_cache 大文件的场景，将大文件切片缓存</li>
<li>编译时对 configure 加上 –with-http_slice_module 参数</li>
<li>$slice_range 一定要加到 proxy_cache_key 中，并使用 proxy_set_header 将其作为 Range 头传递给后端</li>
<li>要根据文件大小合理设置 slice 大小</li>
</ul>
<p>参考：<a href="https://www.cnblogs.com/chenpingzhao/p/5803772.html" target="_blank" rel="noopener">Nginx 切片模块、断点续传</a></p>
<h2 id="Nginx动静分离"><a href="#Nginx动静分离" class="headerlink" title="Nginx动静分离"></a>Nginx动静分离</h2><p>nginx分离JSP给Tomcat， jpg,png直接用静态资源</p>
<h2 id="Nginx-搭建文件服务器"><a href="#Nginx-搭建文件服务器" class="headerlink" title="Nginx 搭建文件服务器"></a>Nginx 搭建文件服务器</h2><h1 id="第四章-深度学习篇"><a href="#第四章-深度学习篇" class="headerlink" title="第四章 深度学习篇"></a>第四章 深度学习篇</h1><h2 id="Nginx简单的语法"><a href="#Nginx简单的语法" class="headerlink" title="Nginx简单的语法"></a>Nginx简单的语法</h2><h3 id="Nginx-变量-1"><a href="#Nginx-变量-1" class="headerlink" title="Nginx 变量"></a>Nginx 变量</h3><blockquote>
<ol>
<li>Nginx 变量名的可见范围虽然是整个配置，但每个请求都有所有变量的独立副本，或者说都有各变量用来存放值的容器的独立副本，彼此互不干扰;</li>
<li>一个请求在其处理过程中，即使经历多个不同的 <code>location</code> 配置块，它使用的还是同一套 Nginx 变量的副本,Nginx 变量值容器的生命期是与当前正在处理的请求绑定的，而与 <code>location</code>无关。</li>
</ol>
</blockquote>
<ol>
<li><p>Nginx 内建变变量  <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#Embedded%20Variables" target="_blank" rel="noopener">Embedded Variables</a> ， 有由 Nginx 核心和各个 Nginx 模块提供的“预定义变量”，或者说“内建变量”（builtin variables）。常用的内键变量请查看附录二，Nginx全局变量解析</p>
</li>
<li><p><a href="http://wiki.nginx.org/HttpCoreModule#.24arg_PARAMETER" target="_blank" rel="noopener">$arg_XXX</a> 变量群，大部分arg_xxx变量是只读的，尝试修改会报一些奇特的异常<br>$arg_name 案例</p>
<pre class="line-numbers language-shell"><code class="language-shell">location /test {
       echo "name: $arg_name";
       echo "class: $arg_class";
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>请求/test接口</p>
<pre class="line-numbers language-shell"><code class="language-shell">$ curl 'http://localhost:8080/test'
name: 
class: 

$ curl 'http://localhost:8080/test?name=Tom&class=3'
name: Tom
class: 3

$ curl 'http://localhost:8080/test?name=hello%20world&class=9'
name: hello%20world
class: 9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>$arg_name</code> 不仅可以匹配 <code>name</code> 参数，也可以匹配 <code>NAME</code> 参数，抑或是 <code>Name</code>，等等</p>
<pre class="line-numbers language-shell"><code class="language-shell">$ curl 'http://localhost:8080/test?NAME=Marry'
name: Marry
class: 

$ curl 'http://localhost:8080/test?Name=Jimmy'
name: Jimmy
class:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>对<code>hello%20world</code>进行解码,使用第三方 <a href="http://wiki.nginx.org/HttpSetMiscModule" target="_blank" rel="noopener">ngx_set_misc</a> 模块提供</p>
<pre class="line-numbers language-shell"><code class="language-shell">   location /test {
       set_unescape_uri $name $arg_name;
       set_unescape_uri $class $arg_class;

       echo "name: $name";
       echo "class: $class";
   }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>测试效果</p>
<pre class="line-numbers language-shell"><code class="language-shell">$ curl 'http://localhost:8080/test?name=hello%20world&class=9'
name: hello world
class: 9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>类 <a href="http://wiki.nginx.org/HttpCoreModule#.24arg_PARAMETER" target="_blank" rel="noopener">$arg_XXX</a> 的内建变量群，比如用来取 cookie 值的 <a href="http://wiki.nginx.org/HttpCoreModule#.24cookie_COOKIE" target="_blank" rel="noopener">$cookie_XXX</a> 变量群，用来取请求头的 <a href="http://wiki.nginx.org/HttpCoreModule#.24http_HEADER" target="_blank" rel="noopener">$http_XXX</a> 变量群，以及用来取响应头的 <a href="http://wiki.nginx.org/HttpCoreModule#.24sent_http_HEADER" target="_blank" rel="noopener">$sent_http_XXX</a> 变量群，参考 <a href="http://nginx.org/en/docs/http/ngx_http_core_module.html" target="_blank" rel="noopener">ngx_http_core</a> 模块的官方文档。</p>
</li>
</ol>
<h3 id="Perl兼容正则表达式"><a href="#Perl兼容正则表达式" class="headerlink" title="Perl兼容正则表达式"></a>Perl兼容正则表达式</h3><ul>
<li>.：匹配除换行符\n以外的任意单个字符</li>
<li>?：匹配之前的字符0次或1次</li>
<li>+：匹配之前的字符至少1次</li>
<li>*：匹配之前的字符任意次</li>
<li>\d：匹配数字</li>
<li>^：匹配字符串的开始</li>
<li>$：匹配字符串的结尾</li>
<li>{m}：重复m次</li>
<li>{m,}：重复至少m次</li>
<li>{m,n}：重复至少m次，最多n次</li>
<li>[a]：匹配单个字符a</li>
<li>[a-z]：匹配a-z小写字母中的任意一个</li>
<li>[^ ]：匹配任何不包括在指定字符集内的任意字符</li>
<li>|：匹配 | 之前或之后的部分</li>
<li>()：分组，组成一组用于匹配的实体，通常配合 | 使用。小括号()之间匹配的内容，可以在后面通过$1来引用，$2表示的是前面第二个()里的内容</li>
</ul>
<p>深入学习参考 <a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">正则表达式30分钟入门教程</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">#localhost:8080/abc/qwe/asd
location ~/abc/(.*)/(.*) {
    set $para1 $1; # qwe
    set $para2 $2;# asd
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p><code>$1|$2|$3 ...</code>是<code>nginx在匹配正则时生成的变量</code>，用于捕获<strong>一个</strong>正则表达式括号中匹配的字符串（从左到右依次存储在<code>$1|$2|$3 ...</code>中），新值覆盖旧值。</p>
</blockquote>
<p><code>if(条件) {…}</code></p>
<ol>
<li>if(b), b是空或者任务以0开头的字符串，条件为false</li>
<li>比较内容，用= 或!= </li>
<li>检测文件或目录<ol>
<li>-f和!-f用来判断文件是否存在</li>
<li>-d和!-d用来判断目录是否存在</li>
<li>-e和!-e用来判断文件和目录是否存在</li>
<li>-x和!-x用来判断文件是否可执行</li>
</ol>
</li>
</ol>
<pre class="line-numbers language-shell"><code class="language-shell">if(!-f $request_filename){ #如果文件不存在重定向到百度
    rewrite ^/(.*)$ http://www.baidu.com/$1 redirect;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>正则表达式匹配：</p>
<p>==:等值比较;</p>
<p>~：与指定正则表达式模式匹配时返回“真”，判断匹配与否时区分字符大小写；</p>
<p>~*：与指定正则表达式模式匹配时返回“真”，判断匹配与否时不区分字符大小写；</p>
<p>!~：与指定正则表达式模式</p>
<p>不匹配时返回“真”，判断匹配与否时区分字符大小写；</p>
<p>!~*：与指定正则表达式模式不匹配时返回“真”，判断匹配与否时不区分字符大小写；</p>
<h3 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h3><p><strong>浏览器实现分离</strong></p>
<pre class="line-numbers language-shell"><code class="language-shell"># 禁止使用curl命令下载文件
if ($http_user_agent ~ curl) {
    return 403;
}

# 浏览器实现分离
if ($http_user_agent ~ Firefox){
       rewrite ^/(.*)$ /firefox/$1 break;
}

if ($http_user_agent ~ MSIE){
      rewrite ^/(.*)$ /msie/$1 break;
}

if ($http_user_agent ~ Edge){
      rewrite ^/(.*)$ /edge/$1 break;
}

if ($http_user_agent ~ Chrome){
      rewrite ^/(.*)$ /chrome/$1 break;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>浏览器分离的效果</p>
<pre class="line-numbers language-shell"><code class="language-shell">例如： 用chrome访问 http://192.168.1.222/index.html 会访问 /usr/local/tengine/html/chrome/index.html

# echo "Firefox html" > /usr/local/tengine/html/firefox/index.html
# echo "MSIE html" > /usr/local/tengine/html/msie/index.html
# echo "Edge html" > /usr/local/tengine/html/edge/index.html
# echo "Chrome html" > /usr/local/tengine/html/chrome/index.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>网站更新，原服务跳转到停服提示，公司内部IP可以访问</p>
<pre class="line-numbers language-shell"><code class="language-shell">set $my_ip ''; 
if ( $remote_addr = 222.222.222.222){set $my_ip 1;} #注意这里的$remote_addr如何用了负载均衡的话,这里应该是$http_x_forwarded_for
if ( $remote_addr = 192.168.1.170 ){ set $my_ip 1;}
if ( $remote_addr = 192.168.1.169 ){ set $my_ip 1;}
if ( $my_ip != 1) {rewrite ^/design/(.*)\.php$ /tingfu.html?$1&;}  #将*.php转到tingfu.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>只允许指定IP访问，其他IP跳转到指定页面</p>
<pre class="line-numbers language-shell"><code class="language-shell">set $test '';
if ( $request_uri ~* /img/test.php ) {
        set $test P;
}

if ( $http_x_forwarded_for !~* ^222\.222\.222\.222.* ) {
        set $test "${test}C";
}

if ( $test = PC ) {  #当条件符合 访问test.php并且 ip不是222.222.222.222的 转发到55555.php
    rewrite ^(.*)$ /img/55555.php permanent;  
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Location使用详解"><a href="#Location使用详解" class="headerlink" title="Location使用详解"></a>Location使用详解</h2><blockquote>
<p>参考 <a href="https://www.cnblogs.com/xiaoliangup/p/9175932.html" target="_blank" rel="noopener">nginx location指令详解</a></p>
</blockquote>
<p>基本语法： <code>location [=|~|~\*|^~|@] pattern{……}**</code></p>
<ol>
<li>没有修饰符 表示：必须以指定模式开始</li>
<li>=表示：必须与指定的模式<code>精确</code>匹配</li>
<li>~ 表示：指定的正则表达式要<code>区分大小写</code><ul>
<li><code>~ \.(txt|css)$</code>   匹配所有以txt和css结尾的请求 区分大小写</li>
</ul>
</li>
<li>~* 表示：指定的正则表达式<code>不区分大小写</code></li>
<li>^~ 类似于无修饰符的行为，也是以指定模式开始，不同的是，如果模式匹配，<br>那么就<code>停止搜索其他模式</code>了。</li>
<li>@ ：定义命名location区段，这些区段客户段不能访问，只可以由<code>内部</code>产生的请<br>求来访问，如try_files或error_page等</li>
</ol>
<p>优先级 “=” &gt; <strong>“^~”</strong> &gt; *<em>“<del>” 或“</del>\</em>” ** &gt; “/ ”</p>
<ol>
<li>location块中未设置root时，会取外层（server块）的root，但server.root明显不是先生成字符串然后赋值给location.root，而是直接把模板串交给location.root。</li>
</ol>
<h2 id="Rewrite规则"><a href="#Rewrite规则" class="headerlink" title="Rewrite规则"></a>Rewrite规则</h2><blockquote>
<p><a href="https://blog.51cto.com/qiuyue/2121319" target="_blank" rel="noopener">CentOS 7.4 Tengine安装配置详解（四）</a></p>
</blockquote>
<p>配置语法</p>
<pre class="line-numbers language-shell"><code class="language-shell">Syntax: rewrite regex replacement [falg];
Context: server, location , if<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="四种flag标志位"><a href="#四种flag标志位" class="headerlink" title="四种flag标志位"></a>四种flag标志位</h3><ul>
<li>last：执行该rewrite规则后，停止处理后续的rewrite指令集，对于<code>重写后的URL会重新匹配location</code></li>
<li>break：执行该rewrite规则后，停止处理后续的rewrite指令集，<code>不再进行location匹配</code></li>
<li>redirect：重写完成之后会返回客户端302状态响应码（临时重定向），地址栏会显示跳转后的地址</li>
<li>permanent：重写完成之后会返回客户端301（永久重定向），地址栏会显示跳转后的地址</li>
</ul>
<p>Sample01 <code>default</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">location /aaa.html {
    rewrite "^/aaa.html$" /bbb.html; # 先走rewrite 才 location
    rewrite "^/bbb.html$" /ddd.html;
}


location /bbb.html {
    rewrite "^/bbb.html$" /ccc.html;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>创建测试内容：</p>
<pre class="line-numbers language-shell"><code class="language-shell"># echo "aaa html" > /usr/local/tengine/html/aaa.html
# echo "bbb html" > /usr/local/tengine/html/bbb.html
# echo "ccc html" > /usr/local/tengine/html/ccc.html
# echo "ddd html" > /usr/local/tengine/html/ddd.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>测试结果</p>
<blockquote>
<p> curl <a href="http://localhost/aaa.html" target="_blank" rel="noopener">http://localhost/aaa.html</a> –&gt; ddd.html</p>
</blockquote>
<p> Sample02  <code>last</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">location /aaa.html {

    rewrite "^/aaa.html$" /bbb.html last; # 不会往下rewrite ,走下面的location匹配
    rewrite "^/bbb.html$" /ddd.html; 

}

location /bbb.html {
    rewrite "^/bbb.html$" /ccc.html;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>测试： curl <a href="http://localhost/aaa.html" target="_blank" rel="noopener">http://localhost/aaa.html</a> ==&gt; ccc.html</p>
<p>解析： aaa.html –&gt; bbb.html –&gt; 由于flag为last，所以不会将bbb.html –&gt; ddd.html –&gt; 重新匹配bbb.html –&gt; ccc.html</p>
</blockquote>
<p>Sample03  <code>break</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">location /aaa.html {
    rewrite "^/aaa.html$" /bbb.html break;  # 不向下rewrite 及location
    rewrite "^/bbb.html$" /ddd.html;
}

location /bbb.html {
    rewrite "^/bbb.html$" /ccc.html;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>测试： curl <a href="http://localhost/aaa.html" target="_blank" rel="noopener">http://localhost/aaa.html</a> –&gt; bbb.html</p>
<p>解析：aaa.html –&gt; bbb.html –&gt; 由于flag为break，所以不再进行location匹配</p>
</blockquote>
<p>Sample04 首先执行server段内的rewrite指令</p>
<pre class="line-numbers language-shell"><code class="language-shell">rewrite "^/aaa.html$" /bbb.html;

location /ccc.html {
    rewrite "^/ccc.html$" /eee.html;
}

location /bbb.html {
    rewrite "^/bbb.html$" /ccc.html;
    rewrite "^/ccc.html$" /ddd.html;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p> curl <a href="http://localhost/aaa.html" target="_blank" rel="noopener">http://localhost/aaa.html</a> –&gt; ddd.html</p>
</blockquote>
<p>Sample 05 先把server段的rewrite弄完，然后才location</p>
<pre class="line-numbers language-shell"><code class="language-shell">rewrite "^/aaa.html$" /bbb.html;

rewrite "^/ccc.html$" /ddd.html;


location /bbb.html {
    rewrite "^/bbb.html$" /ccc.html;
}

location /ddd.html {
    rewrite "^/ddd.html$" /eee.html;
}
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>测试： curl <a href="http://localhost/aaa.html" target="_blank" rel="noopener">http://localhost/aaa.html</a> –&gt; ccc.html</p>
</blockquote>
<h3 id="实战案例-1"><a href="#实战案例-1" class="headerlink" title="实战案例"></a>实战案例</h3><p>浏览器分离</p>
<pre class="line-numbers language-shell"><code class="language-shell">#http://192.168.1.222/index.html  -> /usr/local/tengine/html/msie/index.html
if ($http_user_agent ~ MSIE){

      rewrite ^/(.*)$ /msie/$1 break;

}
#http://192.168.1.222/index.html  -> /usr/local/tengine/html/edge/index.html
if ($http_user_agent ~ Edge){

      rewrite ^/(.*)$ /edge/$1 break;

}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>自动跳转到, <a href="http://blog.qiuyue.com时自动跳转到http://www.qiuyue.com/blog" target="_blank" rel="noopener">http://blog.qiuyue.com时自动跳转到http://www.qiuyue.com/blog</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">server {

    listen 80;
    server_name blog.qiuyue.com;
    rewrite ^/(.*)$ http://www.qiuyue.com/blog/$1 permanent;

    location / {
         root html/blog;
         index index.html index.html;
    }
}

server {
    listen 80;
    server_name www.qiuyue.com;
    location / {
      root html/www;
      index index.html index.html;
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><a href="http://www.qiuyue.com/bbs时自动跳转到http://bbs.qiuyue.com" target="_blank" rel="noopener">http://www.qiuyue.com/bbs时自动跳转到http://bbs.qiuyue.com</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">server {

    listen 80;
    server_name www.qiuyue.com;
    rewrite ^/bbs/(.*)$ http://bbs.qiuyue.com/$1 permanent;

     location / {
        root html/www;
        index index.html index.html;
     }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="优雅的Rewrite规则书写"><a href="#优雅的Rewrite规则书写" class="headerlink" title="优雅的Rewrite规则书写"></a>优雅的Rewrite规则书写</h3><p>自己写的</p>
<pre class="line-numbers language-shell"><code class="language-shell">server {
    listen 80;
    server_name www.nginx.org nginx.org;
    if($htpp_host = nginx.org){
        rewrite (.*) http://www.nginx.org$1;
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>官方推荐写法</p>
<pre class="line-numbers language-shell"><code class="language-shell">server {
    listen 80;
    server_name nginx.org;
    rewrite ^ http://www.nginx.org$request_url?; #只用一行，并且书写美观
}

server {
    listen 80;
    server_name www.nginx.org;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Nginx-高级模块"><a href="#Nginx-高级模块" class="headerlink" title="Nginx 高级模块"></a>Nginx 高级模块</h2><h3 id="secure-link-module模块"><a href="#secure-link-module模块" class="headerlink" title="secure_link_module模块"></a>secure_link_module模块</h3><ul>
<li><a href="https://nginx.org/en/docs/http/ngx_http_secure_link_module.html" target="_blank" rel="noopener">ngx_http_secure_link_module</a></li>
</ul>
<p>注意作用：</p>
<ol>
<li>制定并允许检查请求的连接的真实性以及保护资源免遭未经授权的访问；</li>
<li>限制连接生效周期；</li>
</ol>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>enabled with the <code>--with-http_secure_link_module</code></p>
<p>语法</p>
<pre class="line-numbers language-shell"><code class="language-shell">Syntax:    secure_link expression;
Context:    http, server, location<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-shell"><code class="language-shell">Syntax:    secure_link_md5 expression;
Context:    http, server, location<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h4><pre class="line-numbers language-shell"><code class="language-shell">location /s/ {
    secure_link $arg_md5,$arg_expires;
    secure_link_md5 "$secure_link_expires$uri$remote_addr secret";

    if ($secure_link = "") {
        return 403;
    }

    if ($secure_link = "0") {
        return 410;
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>md5url.sh 生成安全连接</p>
<pre class="line-numbers language-shell"><code class="language-shell">#!/bin/sh
#
#Auth:zhilinchn@126.com
servername="zhilinchn.com"
download_file="/dowload/file.img"
time_num=$(date -d "2019-10-16 00:00:00" +%s)
secret_num="secret"  #记得和服务端 secret对应
res=$(echo -n "${time_num}${download_file} ${secret_num}" | openssl md5 -binary | openssl base64 | tr +/ -_ | tr -d =)
echo "http://${servername}${download_file}?md5=${res}&expires=${time_num}"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>source md5url.sh 进行访问</p>
<pre class="line-numbers language-shell"><code class="language-shell">http://zhilinchn.com/dowload/file.img?md5=FFhZt0XJo7ed_X973FsRgA&expires=1571155200<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="geoip-module-模块"><a href="#geoip-module-模块" class="headerlink" title="geoip_module 模块"></a>geoip_module 模块</h3><ul>
<li><a href="https://nginx.org/en/docs/http/ngx_http_geoip_module.html" target="_blank" rel="noopener">ngx_http_geoip_module</a> 基于IP地址MaxMind GeoIP 二进制文件，读取IP所在地域信息。</li>
<li>yum install nginx-module-geoip</li>
</ul>
<h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><ol>
<li>区别国内国外作HTTP访问规则</li>
<li>区别国内城市地域HTTP访问规则</li>
</ol>
<h3 id="ngx-fancyindex-实现文件索引目录"><a href="#ngx-fancyindex-实现文件索引目录" class="headerlink" title="ngx-fancyindex 实现文件索引目录"></a>ngx-fancyindex 实现文件索引目录</h3><blockquote>
<p>实现索引目录（适用于下载站）tengine</p>
</blockquote>
<ol>
<li><p>下载ngx-fancyindex</p>
<pre class="line-numbers language-shell"><code class="language-shell">yum -y install git \
cd /tmp \
git clone https://github.com/aperezdc/ngx-fancyindex.git ngx-fancyindex<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>使用Tengine的dso_tool工具编译第三方模块：</p>
<pre class="line-numbers language-shell"><code class="language-shell">dso_tool -h #help
dso_tool --add-module=/tmp/ngx-fancyindex
ls /usr/local/tengine/modules | grep fancyindex  -->  ngx_http_fancyindex_module.so<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>添加events 配置</p>
</li>
</ol>
<pre class="line-numbers language-shell"><code class="language-shell">   dso {
       load ngx_http_fancyindex_module.so;
   }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol start="4">
<li><p>server 设置</p>
<pre class="line-numbers language-shell"><code class="language-shell">location /software {
    root /download;
    fancyindex on;              # 启用fancy目录索引功能
    fancyindex_exact_size off;    # 不显示文件的精确大小，而是四舍五入，单位是KB、MB和GB
    fancyindex_localtime on;     # 默认为off，显示的是GMT时间，改为on，显示的是服务器时间

}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>重载后测试</p>
</li>
</ol>
<ul>
<li>访问到测试</li>
<li>检测模块是否加载成功 nginx -m  –&gt;  ngx_http_fancyindex_module (shared, 3.1)</li>
</ul>
<h2 id="基于Nginx的HTTPS服务"><a href="#基于Nginx的HTTPS服务" class="headerlink" title="基于Nginx的HTTPS服务"></a>基于Nginx的HTTPS服务</h2><h3 id="自建CA服务器创建私有CA"><a href="#自建CA服务器创建私有CA" class="headerlink" title="自建CA服务器创建私有CA"></a>自建CA服务器创建私有CA</h3><ol>
<li><p>安装相关软件包,生成私钥</p>
<pre class="line-numbers language-shell"><code class="language-shell">yum -y install openssl openssh-clients
#创建保存证书信息的数据库文件
touch /etc/pki/CA/index.txt
#保存证书序列号的文件
echo 01 > /etc/pki/CA/serial
#生成私钥cakey.pem
(umask 077; openssl genrsa -out /etc/pki/CA/private/cakey.pem 2048)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>备注：</p>
<p>genrsa：用于生成RSA密钥对的OpenSSL子命令 (man genrsa)</p>
<p>-out cakey.pem 指定私钥保存位置</p>
<p>2048 密钥长度</p>
</li>
<li><p>生成CA证书cacert.pem</p>
<pre class="line-numbers language-shell"><code class="language-shell">cd /etc/pki/CA 
openssl req -new -x509 -key private/cakey.pem -days 7300 -out cacert.pem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>输入信息</p>
<pre class="line-numbers language-shell"><code class="language-shell">Country Name (2 letter code) [XX]:cn
State or Province Name (full name) []:guangdong       
Locality Name (eg, city) [Default City]:shenzhen
Organization Name (eg, company) [Default Company Ltd]:TX
Organizational Unit Name (eg, section) []:DEV
Common Name (eg, your name or your server's hostname) []:ca.vhosts.com #证书颁发者
Email Address []:zhilinchn@126.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>备注：</p>
<p>req子命令常用选项（man req）<br>-new：生成新证书签署请求<br>-x509：专用于CA生成自签证书<br>-key cakey.pem：生成CA证书请求时用到的私钥</p>
<p>-days 7300：证书的有效期限为20年<br>-out cacert.pem：证书的保存路径</p>
</li>
</ol>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://blog.csdn.net/baofeidyz/article/details/80435929" target="_blank" rel="noopener">【Nginx】Nginx配置SSL证书</a></li>
</ul>
<h2 id="Nginx-与Lua开发"><a href="#Nginx-与Lua开发" class="headerlink" title="Nginx 与Lua开发"></a>Nginx 与Lua开发</h2><h3 id="Nginx与Lua特性与优势"><a href="#Nginx与Lua特性与优势" class="headerlink" title="Nginx与Lua特性与优势"></a>Nginx与Lua特性与优势</h3><ol>
<li><p>Lua 是一个简洁、轻量、可扩展的脚本语言。Lua脚本可以很容易的被<a href="https://baike.baidu.com/item/C%2FC%2B%2B" target="_blank" rel="noopener">C/C++</a> 代码调用，也可以反过来调用C/C++的函数。Lua由标准C编写而成，代码简洁优美，几乎在所有操作系统和平台上都可以<a href="https://baike.baidu.com/item/编译/1258343" target="_blank" rel="noopener">编译</a>，运行。一个完整的Lua解释器不过200k，在目前所有<a href="https://baike.baidu.com/item/脚本引擎/4449478" target="_blank" rel="noopener">脚本引擎</a>中，Lua的速度是最快的。这一切都决定了Lua是作为嵌入式脚本的最佳选择</p>
</li>
<li><p>Nginx+ Lua的优势<br>充分结合Nginx的并发处理epoll优势和Lua的轻量级实现简单的功能提高高并发场景。</p>
<ul>
<li>统计用户IP；</li>
<li>统计用户的访问次数；</li>
<li>安全功能</li>
</ul>
</li>
</ol>
<h3 id="Lua-基础语法"><a href="#Lua-基础语法" class="headerlink" title="Lua 基础语法"></a>Lua 基础语法</h3><ol>
<li><p>安装lua解析器 <code>yum install lua</code></p>
</li>
<li><p>run Hello World </p>
<ul>
<li><p>terminal input lua <code>print("Hello World!")</code></p>
</li>
<li><p>script：test.lua , <code>chmod a+x text.lua</code> <code>./test.lua</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">#!/usr/bin/lua
print("Hello World!")<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ul>
</li>
<li><p>注释</p>
<pre class="line-numbers language-shell"><code class="language-shell">-- 单行注释
--[[
 多行注释
 多行注释
 --]]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>lua的数据类型<br>布尔类型只有nil和false， 数字，空字符串（’\0‘）都是true</p>
</li>
<li><p>变量</p>
<pre class="line-numbers language-lua"><code class="language-lua">a <span class="token operator">=</span> <span class="token number">5</span>               <span class="token comment" spellcheck="true">-- 全局变量</span>
<span class="token keyword">local</span> b <span class="token operator">=</span> <span class="token number">5</span>         <span class="token comment" spellcheck="true">-- 局部变量</span>

<span class="token keyword">function</span> <span class="token function">joke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    c <span class="token operator">=</span> <span class="token number">5</span>           <span class="token comment" spellcheck="true">-- 全局变量</span>
    <span class="token keyword">local</span> d <span class="token operator">=</span> <span class="token number">6</span>     <span class="token comment" spellcheck="true">-- 局部变量</span>
<span class="token keyword">end</span>

<span class="token function">joke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">print</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">--> 5 nil</span>

<span class="token keyword">do</span> 
    <span class="token keyword">local</span> a <span class="token operator">=</span> <span class="token number">6</span>     <span class="token comment" spellcheck="true">-- 局部变量</span>
    b <span class="token operator">=</span> <span class="token number">6</span>           <span class="token comment" spellcheck="true">-- 对局部变量重新赋值</span>
    <span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">--> 6 6</span>
<span class="token keyword">end</span>

<span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span>      <span class="token comment" spellcheck="true">--> 5 6</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<p>while循环</p>
<pre class="line-numbers language-lua"><code class="language-lua">sum <span class="token operator">=</span> <span class="token number">0</span> 
num <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">while</span> num <span class="token operator">&lt;=</span><span class="token number">100</span> <span class="token keyword">do</span>
    sum <span class="token operator">=</span> sum <span class="token operator">+</span> num
    <span class="token comment" spellcheck="true">-- 不支持 num++</span>
    num <span class="token operator">=</span> num <span class="token operator">+</span><span class="token number">1</span>
<span class="token keyword">end</span>
<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"sum="</span><span class="token punctuation">,</span>sum<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>for循环</p>
<pre class="line-numbers language-shell"><code class="language-shell">sum=0
for i=1,100 do
    sum = sum +i
end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>if-else 判断语句</p>
<pre class="line-numbers language-lua"><code class="language-lua"><span class="token keyword">if</span> age <span class="token operator">==</span> <span class="token number">40</span> <span class="token keyword">and</span> sex <span class="token operator">==</span> <span class="token string">"Male"</span> <span class="token keyword">then</span> 
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"大于40男人"</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">-- ~= 不等于</span>
<span class="token keyword">elseif</span> age <span class="token operator">></span> <span class="token number">60</span> <span class="token keyword">and</span> sex <span class="token operator">~=</span> <span class="token string">"Female"</span> <span class="token keyword">then</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"非女人而且大于60"</span><span class="token punctuation">)</span>
<span class="token keyword">else</span>
    <span class="token comment" spellcheck="true">-- 从屏幕终端读取</span>
    <span class="token keyword">local</span> age <span class="token operator">=</span> io<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">-- .. 字符拼接</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Your age is "</span><span class="token operator">..</span>age<span class="token punctuation">)</span>
<span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Nginx-lua-环境"><a href="#Nginx-lua-环境" class="headerlink" title="Nginx + lua 环境"></a>Nginx + lua 环境</h3><ol>
<li><p>LuaJIT</p>
</li>
<li><p>ngx_devel_kit 和lua-nginx-module</p>
</li>
<li><p>重新编译 参考 <a href="http://www.imooc.com/article/19597" target="_blank" rel="noopener">http://www.imooc.com/article/19597</a> </p>
</li>
<li><p>容器化，参考附录二</p>
</li>
</ol>
<h3 id="Nginx-调用lua模块指令"><a href="#Nginx-调用lua模块指令" class="headerlink" title="Nginx 调用lua模块指令"></a>Nginx 调用lua模块指令</h3><p><img src="http://cdn.linz.tech/nginx_lua_module.png" alt=""></p>
<h3 id="Nginx-lua-API"><a href="#Nginx-lua-API" class="headerlink" title="Nginx lua API"></a>Nginx lua API</h3><p><img src="http://cdn.linz.tech/nginx_lua_api.png" alt=""></p>
<p>比较全的API总结 <a href="https://www.cnblogs.com/wangxusummer/p/4309007.html" target="_blank" rel="noopener">ngx_lua 模块</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">location /hello {
      default_type 'text/plain';
      content_by_lua 'ngx.say("hello, lua")';
}

location /myip {
      default_type 'text/plain';
      content_by_lua 'ngx.req.get_headers()["x_forward_for"] ngx.say("IP",clientIP)'
}

location / {
      default_type 'text/plain';
      content_by_lua_file0 /opt/app/lua/dep.lua; #调用lua脚本
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="实战-灰度发布"><a href="#实战-灰度发布" class="headerlink" title="实战-灰度发布"></a>实战-灰度发布</h3><p><a href="https://blog.csdn.net/qq_31725371/article/details/85226056#2_192168120MemcacheLua_70" target="_blank" rel="noopener">Nginx + Lua + Memcache基于IP实现灰度发布</a></p>
<p>dep.lua</p>
<pre class="line-numbers language-lua"><code class="language-lua"><span class="token comment" spellcheck="true">-- 取到用户IP</span>
clientIP <span class="token operator">=</span> ngx<span class="token punctuation">.</span>req<span class="token punctuation">.</span><span class="token function">get_headers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"X-Real-IP"</span><span class="token punctuation">]</span>
<span class="token keyword">if</span> clientIP <span class="token operator">==</span> <span class="token keyword">nil</span> <span class="token keyword">then</span>
    clientIP <span class="token operator">=</span> ngx<span class="token punctuation">.</span>req<span class="token punctuation">.</span><span class="token function">get_headers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"x_forwarded_for"</span><span class="token punctuation">]</span>
<span class="token keyword">end</span>
<span class="token keyword">if</span> clientIP <span class="token operator">==</span> nill <span class="token keyword">then</span> 
    clientIP <span class="token operator">==</span> ngx<span class="token punctuation">.</span>var<span class="token punctuation">.</span>remote_addr
<span class="token keyword">end</span>
    <span class="token keyword">local</span> memcached <span class="token operator">=</span> require <span class="token string">"resty.memcached"</span>
    <span class="token keyword">local</span> memc<span class="token punctuation">,</span> err <span class="token operator">=</span> memcached<span class="token punctuation">:</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> memc <span class="token keyword">then</span> 
        ngx<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token string">"failed to instantiate memc:"</span><span class="token punctuation">,</span>err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token keyword">end</span>
    <span class="token keyword">local</span> ok<span class="token punctuation">,</span>err <span class="token operator">=</span> memc<span class="token punctuation">:</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span><span class="token number">11211</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> ok <span class="token keyword">then</span> 
        ngx<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token string">"failed to connect:"</span><span class="token punctuation">,</span>err<span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token keyword">end</span>
    <span class="token keyword">local</span> res<span class="token punctuation">,</span> flags<span class="token punctuation">,</span> err <span class="token operator">=</span> memc<span class="token punctuation">:</span><span class="token function">get</span><span class="token punctuation">(</span>clientIP<span class="token punctuation">)</span>
    ngx<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token string">"value key:"</span><span class="token punctuation">,</span>res<span class="token punctuation">,</span>clientIP<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token keyword">then</span> 
        ngx<span class="token punctuation">.</span><span class="token function">say</span><span class="token punctuation">(</span><span class="token string">"failed to get clientIP "</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
        <span class="token keyword">return</span> 
    <span class="token keyword">end</span> 
    <span class="token keyword">if</span> res <span class="token operator">==</span> <span class="token string">"1"</span> <span class="token keyword">then</span> 
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="第五章-Nginx架构篇"><a href="#第五章-Nginx架构篇" class="headerlink" title="第五章 Nginx架构篇"></a>第五章 Nginx架构篇</h1><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ol>
<li>多个server_name 的优先级</li>
<li>多个Location优先级</li>
<li>try_files使用</li>
<li>alias 和root区别</li>
<li>获取用户真实IP</li>
<li>Nginx常见的错误</li>
</ol>
<h2 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h2><h3 id="Apache-ab-压测试工具"><a href="#Apache-ab-压测试工具" class="headerlink" title="Apache ab 压测试工具"></a>Apache ab 压测试工具</h3><p>安装</p>
<pre class="line-numbers language-shell"><code class="language-shell">sudo yum install httpd-tools<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>使用</p>
<pre class="line-numbers language-shell"><code class="language-shell"># -n 发送100次 -c 并发10
ab -n 100 -c 10 [http[s]://]hostname[:port]/path
#-p post 方式 -T 数据格式
#post_wecaht.txt  = {"send_type":"email", "to":"yanyongwen@xiaoniu66.com", "content":"parallel test"}
ab -n 100 -c 10 -p post_wechat.txt -T application/json [http[s]://]hostname[:port]/path
#-H headers
ab -n 1000 -c 200 -p post.txt -H 'X-Custom-Header':'xxxx' -H 'OS-TYPE':'linux' -T application/json http://localhost:9090/hardware
# -k 是否开启长连接<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>结果分析</p>
<pre class="line-numbers language-shell"><code class="language-shell">Server Software:        Microsoft-HTTPAPI/2.0 
Server Hostname:        192.168.0.10 
Server Port:            80

Document Path:          / 
Document Length:        315 bytes       HTTP响应数据的正文长度

Concurrency Level:      800 
Time taken for tests:   0.914 seconds    所有这些请求处理完成所花费的时间 
Complete requests:      800             完成请求数 
Failed requests:        0                失败请求数 
Write errors:           0                
Non-2xx responses:      800              # 有多少个非200的请求
Total transferred:      393600 bytes     网络总传输量 
HTML transferred:       252000 bytes     HTML内容传输量 
Requests per second:    875.22 [#/sec] (mean) 吞吐量-每秒请求数 
Time per request:       914.052 [ms] (mean)  服务器收到请求，响应页面要花费的时间 
Time per request:       1.143 [ms] (mean, across all concurrent requests) 并发的每个请求平均消耗时间 
Transfer rate:          420.52 [Kbytes/sec] received 平均每秒网络上的流量，可以帮助排除是否存在网络流量过大导致响应时间延长的问题


网络上消耗的时间的分解： 
Connection Times (ms) 
              min  mean[+/-sd] median   max 
Connect:        0    1   0.5      1       3 
Processing:   245  534 125.2    570     682 
Waiting:       11  386 189.1    409     669 
Total:        246  535 125.0    571     684

整个场景中所有请求的响应情况。在场景中每个请求都有一个响应时间 
其中 50％ 的用户响应时间小于 571 毫秒 
80 ％ 的用户响应时间小于 652 毫秒 
最大的响应时间小于 684 毫秒 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="系统和Nginx性能优化"><a href="#系统和Nginx性能优化" class="headerlink" title="系统和Nginx性能优化"></a>系统和Nginx性能优化</h3><h3 id="文件句柄设置"><a href="#文件句柄设置" class="headerlink" title="文件句柄设置"></a>文件句柄设置</h3><h3 id="CPU亲和性设置"><a href="#CPU亲和性设置" class="headerlink" title="CPU亲和性设置"></a>CPU亲和性设置</h3><h3 id="Nginx通用配置优化"><a href="#Nginx通用配置优化" class="headerlink" title="Nginx通用配置优化"></a>Nginx通用配置优化</h3><h2 id="Nginx安全"><a href="#Nginx安全" class="headerlink" title="Nginx安全"></a>Nginx安全</h2><h3 id="恶意行为控制手段"><a href="#恶意行为控制手段" class="headerlink" title="恶意行为控制手段"></a>恶意行为控制手段</h3><h3 id="攻击手段之暴力破解"><a href="#攻击手段之暴力破解" class="headerlink" title="攻击手段之暴力破解"></a>攻击手段之暴力破解</h3><h3 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h3><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><h3 id="Nginx-lua-防火墙功能"><a href="#Nginx-lua-防火墙功能" class="headerlink" title="Nginx + lua 防火墙功能"></a>Nginx + lua 防火墙功能</h3><h3 id="复杂访问攻击中CC攻击方式"><a href="#复杂访问攻击中CC攻击方式" class="headerlink" title="复杂访问攻击中CC攻击方式"></a>复杂访问攻击中CC攻击方式</h3><h2 id="1-调试"><a href="#1-调试" class="headerlink" title="1. 调试"></a>1. 调试</h2><h3 id="1-1-查看nginx的状态信息"><a href="#1-1-查看nginx的状态信息" class="headerlink" title="1.1 查看nginx的状态信息"></a>1.1 查看nginx的状态信息</h3><blockquote>
<p>需要编译时安装<code>http_stub_status_module</code>  及config –with-http_stub_status_module</p>
</blockquote>
<pre class="line-numbers language-shell"><code class="language-shell">location /status {
    stub_status on;
    allow 192.168.101.120;
    deny all;
    access_log off;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>访问<a href="http://192.168.1.222/status" target="_blank" rel="noopener">http://192.168.1.222/status</a></p>
<p><img src="http://cdn.linz.tech/nginx-2019-6-13-io-status.png" alt=""></p>
<p>状态说明</p>
<ul>
<li>Active connections：当前活动的客户端连接数</li>
<li>accepts：已经接收过的客户端连接总数</li>
<li>handled：已经处理过的客户端连接总数</li>
<li>requests：客户端的请求总数</li>
<li>request_time：请求时间</li>
<li>Reading：正在读取的客户端请求数</li>
<li>Writing：正在处理请求或发送响应报文的连接数</li>
<li>Waiting：等待发出请求的空闲连接数</li>
</ul>
<blockquote>
<p>注意：可以配合 基于用户名/密码实现访问控制进行密码校验</p>
</blockquote>
<h3 id="1-2-装载echo模块-用于打印日志"><a href="#1-2-装载echo模块-用于打印日志" class="headerlink" title="1.2 装载echo模块, 用于打印日志"></a>1.2 装载echo模块, 用于打印日志</h3><ol>
<li>下载echo-nginx-module：</li>
</ol>
<pre class="line-numbers language-shell"><code class="language-shell">yum -y install git \
cd /tmp \
git clone https://github.com/openresty/echo-nginx-module.git<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li><p>使用Tengine的dso_tool工具编译第三方模块：</p>
<pre class="line-numbers language-shell"><code class="language-shell">dso_tool --add-module=/tmp/echo-nginx-module
ls /usr/local/tengine/modules | grep echo  -->  ngx_http_echo_module.so<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>nginx 配置</p>
<pre class="line-numbers language-shell"><code class="language-shell">events{
    dso {
        load ngx_http_echo_module.so;
    }
}
server{
location /echo {
    default_type "text/plain";    # 不指定default_type，会提示下载文件，而非直接输出在浏览器中
    echo "host  -->  $host";                        # 请求主机头字段，否则为服务器名称
    echo "server_name  -->  $server_name";          # 服务器名称
    echo "server_addr  -->  $server_addr";            # 服务器IP地址
    echo "remote_addr  -->  $remote_addr";          # 客户端IP地址
    echo "uri  -->  $uri";                          # 不带请求参数的当前URI，$uri不包含主机名
    echo "document_uri  -->  $document_uri";        # 与$uri含义相同
    echo "request_uri  -->  $request_uri";            # 带请求参数的原始URI，不包含主机名
    echo "request_filename  -->  $request_filename";   # 当前请求的文件路径
    echo "document_root  -->  $document_root";      # 当前请求在root指令中指定的值
}
}
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>测试</p>
<ul>
<li>nginx -m  –&gt;  ngx_http_echo_module (shared, 3.1)</li>
<li>访问的  <a href="http://www.qiuyue.com/echo" target="_blank" rel="noopener">http://www.qiuyue.com/echo</a></li>
</ul>
</li>
</ol>
<h3 id="Curl-使用"><a href="#Curl-使用" class="headerlink" title="Curl 使用"></a>Curl 使用</h3><p>查看一个完整的http请求</p>
<pre class="line-numbers language-shell"><code class="language-shell">curl -v https://coding.imooc.com > /dev/null<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="测试正则表达式"><a href="#测试正则表达式" class="headerlink" title="测试正则表达式"></a>测试正则表达式</h3><p>官网： <a href="https://www.pcre.org/" target="_blank" rel="noopener">https://www.pcre.org/</a></p>
<p>安装</p>
<pre class="line-numbers language-shell"><code class="language-shell">wget https://ftp.pcre.org/pub/pcre/pcre-8.13.tar.gz
tar -xzvf  pcre-8.13.tar.gz
cd pcre-8.13
./configure --enable-utf8  
make && make intall<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用</p>
<pre class="line-numbers language-shell"><code class="language-shell">pcre
pcretest # 正则测试<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>Expresso 巨好用的正则工具</p>
<p>下载地址： <a href="http://www.ultrapico.com/ExpressoDownload.htm" target="_blank" rel="noopener">http://www.ultrapico.com/ExpressoDownload.htm</a></p>
<h3 id="使用返回值调试"><a href="#使用返回值调试" class="headerlink" title="使用返回值调试"></a>使用返回值调试</h3><pre class="line-numbers language-shell"><code class="language-shell">location /test/ {
    default_type application/json;
    return 200 '{"status":"success"}';
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><pre class="line-numbers language-shell"><code class="language-shell">tail -f /usr/local/tengine/logs/access.log <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="第六章-新特性"><a href="#第六章-新特性" class="headerlink" title="第六章 新特性"></a>第六章 新特性</h1><h2 id="Nginx-平滑升级实现和原理"><a href="#Nginx-平滑升级实现和原理" class="headerlink" title="Nginx 平滑升级实现和原理"></a>Nginx 平滑升级实现和原理</h2><h2 id="HTTP2-0协议特性gRPC"><a href="#HTTP2-0协议特性gRPC" class="headerlink" title="HTTP2.0协议特性gRPC"></a>HTTP2.0协议特性gRPC</h2><h1 id="附录一"><a href="#附录一" class="headerlink" title="附录一"></a>附录一</h1><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol>
<li><a href="https://blog.51cto.com/qiuyue/2114716" target="_blank" rel="noopener">CentOS 7.4 Tengine安装配置详解（一）</a></li>
<li><a href="https://www.jianshu.com/p/00cd4dfe5829" target="_blank" rel="noopener">nginx正则相关变量$1,$2,$3使用注意</a></li>
<li><a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">正则表达式30分钟入门教程</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_6d579ff40100wi7p.html" target="_blank" rel="noopener">Nginx 变量漫谈（一）</a></li>
<li><a href="https://coding.imooc.com/class/chapter/121.html#Anchor" target="_blank" rel="noopener">Nginx入门到实践－Nginx中间件</a></li>
</ol>
<h3 id="神级进阶博文"><a href="#神级进阶博文" class="headerlink" title="神级进阶博文"></a>神级进阶博文</h3><p><a href="http://blog.sina.com.cn/s/articlelist_1834459124_1_1.html" target="_blank" rel="noopener">Nginx 变量漫谈</a></p>
<p><a href="http://blog.sina.com.cn/s/articlelist_1834459124_2_1.html" target="_blank" rel="noopener">Nginx 配置指令的执行顺序</a></p>
<h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h2><p><a href="https://nginx.org/en/docs/" target="_blank" rel="noopener">https://nginx.org/en/docs/</a></p>
<h3 id="ngx-http-core-module-参数官网文档"><a href="#ngx-http-core-module-参数官网文档" class="headerlink" title="ngx_http_core_module 参数官网文档"></a>ngx_http_core_module 参数官网文档</h3><blockquote>
<p> 包含在http上下文内的所有参数解析</p>
</blockquote>
<ul>
<li><a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#var_status" target="_blank" rel="noopener">ngx_http_core_module</a></li>
</ul>
<h3 id="ngx-http-log-module（日志模块）"><a href="#ngx-http-log-module（日志模块）" class="headerlink" title="ngx_http_log_module（日志模块）"></a>ngx_http_log_module（日志模块）</h3><p><a href="http://nginx.org/en/docs/http/ngx_http_log_module.html" target="_blank" rel="noopener">http://nginx.org/en/docs/http/ngx_http_log_module.html</a> </p>
<h3 id="Embedded-Variables-（nginx-内置变量）"><a href="#Embedded-Variables-（nginx-内置变量）" class="headerlink" title="Embedded Variables （nginx 内置变量）"></a>Embedded Variables （nginx 内置变量）</h3><p><a href="http://nginx.org/en/docs/http/ngx_http_core_module.html#Embedded%20Variables" target="_blank" rel="noopener">Embedded Variables</a></p>
<h1 id="附录二"><a href="#附录二" class="headerlink" title="附录二"></a>附录二</h1><h2 id="Tengine"><a href="#Tengine" class="headerlink" title="Tengine"></a><strong>Tengine</strong></h2><p><a href="https://github.com/alibaba/tengine" target="_blank" rel="noopener">Tengine github</a></p>
<p><a href="http://tengine.taobao.org/documentation.html" target="_blank" rel="noopener">documentation</a></p>
<h2 id="Nginx-conf-标准模板-Tengine"><a href="#Nginx-conf-标准模板-Tengine" class="headerlink" title="Nginx.conf 标准模板(Tengine)"></a>Nginx.conf 标准模板(Tengine)</h2><pre class="line-numbers language-shell"><code class="language-shell">
user tengine;                    # 运行worker进程的用户

worker_processes auto;           # worker进程的个数，命令ps aux | grep nginx可查看启动的worker进程数量

worker_cpu_affinity auto;         # 将worker进程绑定在哪些CPU上，减少由于上下文切换导致的CPU消耗

worker_rlimit_nofile 65535;       # worker进程能够打开的最大文件数限制

error_log logs/error.log error;     # 指定Tengine错误日志的存放路径和级别

pid logs/nginx.pid;              # 指定Tengine进程的pid文件路径

google_perftools_profiles /tmp/tcmalloc;   # tcmalloc保存路径，命令lsof -n | grep tcmalloc验证运行状态



events {

accept_mutex on;           # 让多个worker进程轮流地、序列化地响应新请求

multi_accept on;            # 在Tengine接收到一个新连接通知后，调用accept()来接收尽可能多的连接

worker_connections 65535;   # 单个worker进程所能响应的最大并发连接数

# 此处没有指定use epoll;指令，让Tengine自动选择合适的事件处理模型

}



http {

server_tokens off;           # 隐藏Tengine版本号

include mime.types;         # MIME是网络资源的媒体类型，使用include指令导入mime.types文件

default_type application/octet-stream;   # 指定默认类型



# 自定义访问日志格式，名称为main，指定要保存的日志内容

# ====================================================

# $remote_addr与$http_x_forwarded_for含义相同：客户端的IP地址

# $remote_user：记录客户端用户名称

# $time_local：通用日志格式下的本地服务器时间

# $request：记录请求的URL与HTTP协议

# $status：响应状态码，成功是200

# $body_bytes_sent：发送给客户端HTTP响应的主体内容的字节数大小，不包括响应首部的大小

# $http_referer：记录从哪个页面链接访问过来的

# $http_user_agent：记录客户端浏览器相关信息

# ====================================================

log_format main '$remote_addr - $remote_user [$time_local] "$request" '

                  '$status $body_bytes_sent "$http_referer" '

                 '"$http_user_agent" "$http_x_forwarded_for"';



access_log off;       # 关闭访问日志，提高磁盘的I/O性能

sendfile on;          # 开启高效文件传输模式，调用sendfile()进行数据复制，sendfile()复制数据是在内核级别完成的，所以会比一般的read()、write()更高效，sendfile()可以在磁盘和TCP socket之间互相拷贝数据

tcp_nopush on;      # 开启后服务器的响应头部信息产生独立的数据包发送，即一个响应头信息一个包。在一个数据包里发送所有头文件，而不是一个接一个的发送，用于防止网络阻塞，必须先开启sendfile模式

keepalive_timeout 65; # 客户端keep-alive连接超时时长，服务器将在这个超时时长过后关闭连接，单位秒

charset UTF-8;      # 定义头文件默认字符集



gzip on;                      # 采用gzip压缩形式发送数据，将页面压缩后传输更节省带宽

gzip_disable "msie6";           # IE6的浏览器禁用gzip功能

gzip_proxied any;              # 指定对客户端请求的所有资源启用压缩功能

gzip_min_length 1k;            # 指定对数据启用压缩的最少字节数，如果请求小于1K的文件，不要压缩，压缩小数据会降低处理此请求的所有进程速度

gzip_comp_level 6;             # 指定数据的压缩等级，这个等级可以是1~9之间的任意数值，1压缩比最小但处理速度最快，9处理最慢但压缩比最大，CPU消耗也越大

gzip_buffers 16 8k;             # 指定压缩响应的缓冲区的数量和大小

gzip_vary on;                 # 允许把"Vary: Accept-Encoding"插入响应首部

gzip_http_version 1.1;          # 指定识别HTTP协议版本，默认是1.1

gzip_types text/plain text/css text/xml text/javascript application/json application/x-javascript application/xml application/xml+rss;               # 指定需要压缩的资源类型



reset_timedout_connection on;       # 关闭不响应的客户端连接，释放客户端所占的内存空间

client_body_buffer_size 8k;         # 指定用于读取客户端请求主体的缓冲区大小

client_header_buffer_size 1k;       # 指定用于读取客户端请求首部的缓冲区大小

large_client_header_buffers 4 8k;    # 指定用于读取客户端请求中较大首部的缓冲区的最大数量和大小

client_max_body_size 1m;          # 指定用于客户端请求主体的最大大小

client_header_timeout 30s;         # 指定用于读取客户端请求报文首部的超时时长，单位秒

client_body_timeout 30s;           # 指定用于读取客户端请求报文主体的超时时长，单位秒

send_timeout 30s;                 # 指定用于向客户端发送响应报文的超时时长，单位秒

}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Nginx-Lua-环境容器化脚本"><a href="#Nginx-Lua-环境容器化脚本" class="headerlink" title="Nginx + Lua 环境容器化脚本"></a>Nginx + Lua 环境容器化脚本</h2><p>Dockerfile</p>
<pre class="line-numbers language-shell"><code class="language-shell">FROM centos:latest
MAINTAINER  becivells <becivells@gmail.com> 
RUN yum -y update &&  yum  -y upgrade
RUN yum -y install gcc gcc-c+ openssl openssl-devel pcre-devel zlib-devel  make wget 

ENV TENGINE_VERSION tengine-2.2.3
RUN cd /tmp/ && wget  http://tengine.taobao.org/download/${TENGINE_VERSION}.tar.gz &&\
    tar -zxvf ${TENGINE_VERSION}.tar.gz -C /tmp/ && chmod -R 777 /tmp/${TENGINE_VERSION}
#mkdir
RUN mkdir -p /var/tmp/nginx/client/ &&\
    mkdir -p /var/tmp/nginx/proxy/ &&\
    mkdir -p /var/tmp/nginx/fcgi/ &&\
    mkdir -p /var/tmp/nginx/uwsgi/ &&\
    mkdir -p /var/tmp/nginx/scgi/ 
#./configure

#LuaJIT
RUN cd /tmp/ && wget http://luajit.org/download/LuaJIT-2.0.4.tar.gz && \
    tar xzvf LuaJIT-2.0.4.tar.gz && \
    cd LuaJIT-2.0.4 && \
    make install PREFIX=/usr/local/LuaJIT 

ENV LUAJIT_LIB=/usr/local/LuaJIT/lib 
ENV LUAJIT_INC=/usr/local/LuaJIT/include/luajit-2.0

RUN cd /tmp/ && wget https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz && \
    tar -xzvf v0.3.0.tar.gz && \
    wget https://github.com/openresty/lua-nginx-module/archive/v0.10.8.tar.gz && \
    tar -xzvf v0.10.8.tar.gz


RUN cd /tmp/${TENGINE_VERSION} && ./configure \
    --prefix=/opt/${TENGINE_VERSION}/ \
    #--sbin-path=/usr/sbin/nginx \
    #--modules-path=/usr/lib64/nginx/modules \
    #--conf-path=/etc/nginx/nginx.conf \
    --error-log-path=/var/log/nginx/error.log \
    --http-log-path=/var/log/nginx/access.log \
    --pid-path=/var/run/nginx/nginx.pid  \
    --lock-path=/var/lock/nginx.lock \
    --http-client-body-temp-path=/var/tmp/nginx/client/ \
    --http-proxy-temp-path=/var/tmp/nginx/proxy/ \
    --http-fastcgi-temp-path=/var/tmp/nginx/fcgi/ \
    --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \
    --with-file-aio \
    --with-http_addition_module \
    --with-http_auth_request_module \
    --with-http_dav_module \
    --with-http_flv_module \
    --with-http_gunzip_module \
    --with-http_gzip_static_module \
    --with-http_mp4_module \
    --with-http_random_index_module \
    --with-http_realip_module \
    --with-http_secure_link_module \
    --with-http_slice_module \
    --with-http_ssl_module \
    --with-http_stub_status_module \
    --with-http_sub_module \
    --with-mail \
    --with-mail_ssl_module \
    --with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions  -fstack-protector-strong \
    --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC' \
    --with-ld-opt='-Wl,-z,relro -Wl,-z,now -pie' \
    --add-module=/tmp/lua-nginx-module-0.10.8 \
    --add-module=/tmp/ngx_devel_kit-0.3.0 \
    --with-pcre  &&\
    cd /tmp/${TENGINE_VERSION} && make -j 4 && make install && \
    rm -rf /tmp/* && yum clean all && \
    ln -s /opt/${TENGINE_VERSION}/ /opt/tengine && \
    echo "/usr/local/LuaJIT/lib" >> /etc/ld.so.conf && \
    ldconfig
EXPOSE 80
CMD ["/opt/tengine/sbin/nginx", "-g", "daemon off;"] 
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用方式</p>
<pre class="line-numbers language-shell"><code class="language-shell">#构建容器
docker build -t centos:tengine .
#指定81端口运行
docker run --rm -p 81:80 centos:tengine
#进入centos:tengine terminal 终端
docker exec -it <container_id> /bin/bash <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>测试</p>
<pre class="line-numbers language-shell"><code class="language-shell">location /hello {
      default_type 'text/plain';
      content_by_lua 'ngx.say("hello, lua")';
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Nginx全局变量解析"><a href="#Nginx全局变量解析" class="headerlink" title="Nginx全局变量解析"></a>Nginx全局变量解析</h2><pre class="line-numbers language-shelll"><code class="language-shelll">$content_length：http请求头中的Content-length字段

$content_type：http请求头中的Content-Type字段

$document_root：当前请求在root指令中指定的值

$host：请求主机头字段，如果请求中没有Host行，则为服务器名称

$http_user_agent：客户端agent信息

$http_cookie：客户端cookie信息

$limit_rate：限制连接速率

$request_method：客户端请求方法，通常为GET或POST

$remote_addr：客户端IP地址

$remote_port：客户端端口

$remote_user：已经经过Auth Basic Module验证的用户名

$request_filename：当前请求的文件路径，由root或alias指令与URL请求生成

$scheme：请求使用的协议，比如http或者是https

$server_protocol：请求使用的协议版本，通常是HTTP/1.0或HTTP/1.1

$server_addr：服务器地址，在完成一次系统调用后可以确定这个值

$server_name：服务器名称

$server_port：请求到达服务器的端口号

$request_uri：包含请求参数的原始URL，不包含主机名，如：/foo/bar.php?arg=baz

$uri：不带请求参数的当前URL，$uri不包含主机名，如：/foo/bar.html

$document_uri：与$uri相同<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="使用过程中的问题列表"><a href="#使用过程中的问题列表" class="headerlink" title="使用过程中的问题列表"></a>使用过程中的问题列表</h2><h3 id="window-conf-文件加载无效"><a href="#window-conf-文件加载无效" class="headerlink" title="window conf 文件加载无效"></a>window conf 文件加载无效</h3><p>原因是 nginx 在后台启动多个实例导致无法更新到当前使用的实例(<code>在任务列表中可以找到多个nginx实例</code>)</p>
<p>解决：关闭所有nginx.exe, 重新启动</p>
<pre class="line-numbers language-shell"><code class="language-shell">taskkill /IM  nginx.exe  /F <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="增加别名缓存"><a href="#增加别名缓存" class="headerlink" title="增加别名缓存"></a>增加别名缓存</h3><p>错误提示：</p>
<pre><code>could not build the server_names_hash, you should increase server_names_hash_bucket_size: 32</code></pre><p>解决方案：</p>
<pre><code>http{
    server_names_hash_bucket_size 64; #必须是32的倍数
}</code></pre><h3 id="413-request-entity-too-large"><a href="#413-request-entity-too-large" class="headerlink" title="413 request entity too large"></a>413 request entity too large</h3><p>Nginx设置上传文件大小限制</p>
<pre><code>location ^~ /api/media/ {
          proxy_pass http://media_server_pool/media/;
          client_max_body_size 2000m;
}</code></pre><h1 id="实践案例记录"><a href="#实践案例记录" class="headerlink" title="实践案例记录"></a>实践案例记录</h1><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>知识架构</tag>
      </tags>
  </entry>
  <entry>
    <title>Java多线程并发学习笔记</title>
    <url>/2019/09/11/2019-4-13-Java-concurrent/</url>
    <content><![CDATA[<h1 id="阶段一：多线基础知识"><a href="#阶段一：多线基础知识" class="headerlink" title="阶段一：多线基础知识"></a>阶段一：多线基础知识</h1><h2 id="入门思考"><a href="#入门思考" class="headerlink" title="入门思考"></a>入门思考</h2><h3 id="为什么要学习并发"><a href="#为什么要学习并发" class="headerlink" title="为什么要学习并发"></a>为什么要学习并发</h3><ol>
<li>发挥CPU多处理器的强大能力 </li>
<li>更符合现实生活中的多事件同时处理</li>
<li>简化异步事件的处理</li>
<li>更加灵敏的响应用户界面</li>
</ol>
<h3 id="并发的缺点"><a href="#并发的缺点" class="headerlink" title="并发的缺点"></a>并发的缺点</h3><ol>
<li>安全性</li>
<li>活跃性（饥饿）问题</li>
<li>性能问题（并发不一定快）<ol>
<li>线程切换有消耗ccc</li>
</ol>
</li>
</ol>
<h3 id="学习并发的四个阶段"><a href="#学习并发的四个阶段" class="headerlink" title="学习并发的四个阶段"></a>学习并发的四个阶段</h3><ol>
<li>熟练掌握API，能够完成并发编程</li>
<li>熟读API源码，掌握其原理</li>
<li>理解Java虚拟机的内存模型 【待看】</li>
<li>操作系统对并发的支持 【待看】</li>
</ol>
<h2 id="进程与线程基础知识"><a href="#进程与线程基础知识" class="headerlink" title="进程与线程基础知识"></a>进程与线程基础知识</h2><ul>
<li>进程是资源分配的基本单位</li>
<li>进程包含多个线程，线程共享进程</li>
<li>线程是CPU调度的基本单位</li>
</ul>
<h3 id="线程状态"><a href="#线程状态" class="headerlink" title="线程状态"></a>线程状态</h3><p><img src="http://ifeve.com/wp-content/uploads/2014/08/threads2.gif" alt=""></p>
<h3 id="线程中断及中断处理"><a href="#线程中断及中断处理" class="headerlink" title="线程中断及中断处理"></a>线程中断及中断处理</h3><p><a href="https://www.cnblogs.com/lujiango/p/7641983.html" target="_blank" rel="noopener">多线程-interrupt()，isInterrupted()，interrupted()</a></p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token function">setDaemon</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//主进程结束，子线程while（true）也结束</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="优雅的中断线程"><a href="#优雅的中断线程" class="headerlink" title="优雅的中断线程"></a>优雅的中断线程</h4><ol>
<li>处理不中断线程，在中断中触发其异常</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><a href="https://www.jianshu.com/p/0821801170dd" target="_blank" rel="noopener">如何优雅的”中断”一个线程？</a></p>
<pre class="line-numbers language-java"><code class="language-java">      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> InterruptedException <span class="token punctuation">{</span>
        Thread thred<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">{</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">boolean</span> in<span class="token operator">=</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"before:"</span><span class="token operator">+</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    Thread<span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置复位</span>
                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"after:"</span><span class="token operator">+</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"==>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thred<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        thred<span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//终端</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>用守护进程,</li>
</ol>
<blockquote>
<p>Daemon Thread： 其优先级特别低(低到甚至可以被JVM自动终止)，通常这类线程用于在空闲时做一些资源清理类的工作，比如GC线程</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java">   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span>Runnable task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       executeThread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token string">"ThreadService"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token annotation punctuation">@Override</span>
         <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           Thread runner <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token string">"Daemon-thread"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           runner<span class="token punctuation">.</span><span class="token function">setDaemon</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           runner<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">try</span> <span class="token punctuation">{</span>
             runner<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
             finished <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
             <span class="token comment" spellcheck="true">//e.printStackTrace();</span>
           <span class="token punctuation">}</span>
         <span class="token punctuation">}</span>
       <span class="token punctuation">}</span><span class="token punctuation">;</span>
       executeThread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>   线程池中的应用</p>
<pre class="line-numbers language-java"><code class="language-java">     <span class="token keyword">public</span> <span class="token keyword">static</span> ThreadFactory <span class="token function">threadFactory</span><span class="token punctuation">(</span><span class="token keyword">final</span> String name<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> daemon<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> Thread <span class="token function">newThread</span><span class="token punctuation">(</span>Runnable runnable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           Thread result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>runnable<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
           result<span class="token punctuation">.</span><span class="token function">setDaemon</span><span class="token punctuation">(</span>daemon<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">return</span> result<span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
       <span class="token punctuation">}</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="堆和栈"><a href="#堆和栈" class="headerlink" title="堆和栈"></a>堆和栈</h3><blockquote>
<ol>
<li>栈java.util.Stak是线程的私有Last In First Out顺序的数据结构，堆所有线程都能访问到</li>
<li>栈内存用来存储<code>局部变量和方法调用</code> ,堆内存用来存储Java中的对象。 无论是成员变量，局部变量，还是类变量，它们指向的对象都存储在堆内存中。</li>
</ol>
</blockquote>
<ul>
<li><a href="https://droidyue.com/blog/2014/12/07/differences-between-stack-and-heap-in-java/" target="_blank" rel="noopener">Java中的堆和栈的区别</a></li>
</ul>
<p>查看堆和栈的默认值</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//堆 其中InitialHeapSize为最开始的堆的大小，MaxHeapSize为堆的最大值。</span>
java <span class="token operator">-</span>XX<span class="token operator">:</span><span class="token operator">+</span>PrintFlagsFinal <span class="token operator">-</span>version <span class="token operator">|</span> grep HeapSize
<span class="token comment" spellcheck="true">//栈</span>
java <span class="token operator">-</span>XX<span class="token operator">:</span><span class="token operator">+</span>PrintFlagsFinal <span class="token operator">-</span>version <span class="token operator">|</span> grep ThreadStackSize<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="线程之间的通信"><a href="#线程之间的通信" class="headerlink" title="线程之间的通信"></a>线程之间的通信</h3><h4 id="1-类synchronized-wait-notify-实现相互通知"><a href="#1-类synchronized-wait-notify-实现相互通知" class="headerlink" title="1. 类synchronized,wait,notify 实现相互通知"></a>1. 类synchronized,wait,notify 实现相互通知</h4><p>共享变量</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySignal</span><span class="token punctuation">{</span>

  <span class="token keyword">protected</span> <span class="token keyword">boolean</span> hasDataToProcess <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">boolean</span> <span class="token function">hasDataToProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>hasDataToProcess<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">setHasDataToProcess</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> hasData<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>hasDataToProcess <span class="token operator">=</span> hasData<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>Wait解锁</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">int</span> <span class="token function">get</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// wait() synchronized 解锁，多线程能直接访问到wait</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>notify. , 会加锁拿到锁，但是会等到synchronize的锁释放成功后才能加锁<ul>
<li>notify: 随机叫醒一个处于wait状态的线程</li>
<li>notifyAll: 叫醒所有的处于wait线程，争夺到时间片的线程只有一个</li>
</ul>
</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">set</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    signal <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// notify方法会随机叫醒一个处于wait状态的线程</span>
    <span class="token comment" spellcheck="true">// notifyAll叫醒所有的处于wait线程，争夺到时间片的线程只有一个</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="3-常用的Lock机制"><a href="#3-常用的Lock机制" class="headerlink" title="3. 常用的Lock机制"></a>3. 常用的Lock机制</h4><p>LockSupport, ReentrantLock</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//初始化    </span>
Lock lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Condition a <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Condition b <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//使用</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>signal <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            a<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        signal <span class="token operator">++</span><span class="token punctuation">;</span>
        b<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="4-并发工具类及并发容器"><a href="#4-并发工具类及并发容器" class="headerlink" title="4. 并发工具类及并发容器"></a>4. 并发工具类及并发容器</h4><p>CountDownLatch </p>
<h4 id="5-管道"><a href="#5-管道" class="headerlink" title="5. 管道"></a>5. 管道</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>PipedInputStream<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>PipedOutputStream<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">testPipeConnection</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">/**
         * 创建管道输出流
         */</span>
        PipedOutputStream pos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PipedOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">/**
         * 创建管道输入流
         */</span>
        PipedInputStream pis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PipedInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">/**
             * 将管道输入流与输出流连接 此过程也可通过重载的构造函数来实现
             */</span>
            pos<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>pis<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment" spellcheck="true">/**
         * 创建生产者线程
         */</span>
        Producer p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Producer</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">/**
         * 创建消费者线程
         */</span>
        Consumer1 c1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Consumer1</span><span class="token punctuation">(</span>pis<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">/**
         * 启动线程
         */</span>
        p<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        c1<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**
 * 生产者线程(与一个管道输入流相关联)
 * 
 */</span>
<span class="token keyword">class</span> <span class="token class-name">Producer</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> PipedOutputStream pos<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">Producer</span><span class="token punctuation">(</span>PipedOutputStream pos<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pos <span class="token operator">=</span> pos<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            pos<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">/**
 * 消费者线程(与一个管道输入流相关联)
 * 
 */</span>
<span class="token keyword">class</span> <span class="token class-name">Consumer1</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> PipedInputStream pis<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token function">Consumer1</span><span class="token punctuation">(</span>PipedInputStream pis<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>pis <span class="token operator">=</span> pis<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"consumer1:"</span><span class="token operator">+</span>pis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>缺点 </p>
<ol>
<li>只能两个线程之间专递.</li>
<li>只能单向流动；</li>
</ol>
<h4 id="4-volatile-关键字"><a href="#4-volatile-关键字" class="headerlink" title="4. volatile 关键字"></a>4. volatile 关键字</h4><h4 id="ThreadLocal原理和使用"><a href="#ThreadLocal原理和使用" class="headerlink" title="ThreadLocal原理和使用"></a>ThreadLocal原理和使用</h4><blockquote>
<p>案例：javaBase/ThreadLocalDemo<br>原理：把初始值放到线程中去，并且每个线程单独一份互不影响</p>
</blockquote>
<p><strong>使用场景</strong> </p>
<ul>
<li>实现单个线程单例以及单个线程上下文信息存储，比如交易id等</li>
<li>实现线程安全，非线程安全的对象使用ThreadLocal之后就会变得线程安全，因为每个线程都会有一个对应的实例</li>
<li>承载一些线程相关的数据，避免在方法中来回传递参数</li>
</ul>
<h4 id="间通信之join加赛"><a href="#间通信之join加赛" class="headerlink" title="间通信之join加赛"></a>间通信之join加赛</h4><blockquote>
<p> JavaBase/JoinDemo.java</p>
</blockquote>
<p>CyclicBarrier  开会场景类似，如果出现一个人员没有await或中途异常，导致其他线程一直在等待</p>
<h4 id="Exchanger"><a href="#Exchanger" class="headerlink" title="Exchanger"></a>Exchanger<v></v></h4><blockquote>
<p>tb7.Demo</p>
</blockquote>
<h4 id="Callable、Future和FutureTask"><a href="#Callable、Future和FutureTask" class="headerlink" title="Callable、Future和FutureTask"></a>Callable、Future和FutureTask</h4><blockquote>
<p>tb8.Demo</p>
</blockquote>
<ul>
<li><a href="https://www.cnblogs.com/dolphin0520/p/3949310.html" target="_blank" rel="noopener">Callable、Future和FutureTask</a></li>
</ul>
<p>Future设计模式的实现</p>
<blockquote>
<p>tb9 com.sample.design_pattern.chapter04_future_design</p>
</blockquote>
<p><strong>Callable 和Runnable的区别</strong></p>
<ol>
<li>Runnable的run方法是线程调用的，在run方法是异步执行的</li>
<li>Callable的call方法，不是异步执行的，是由Future的run方法调用的</li>
</ol>
<p><strong>Future源码解析</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">!=</span> NEW <span class="token operator">||</span>
        <span class="token operator">!</span>UNSAFE<span class="token punctuation">.</span><span class="token function">compareAndSwapObject</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> runnerOffset<span class="token punctuation">,</span>
                                     null<span class="token punctuation">,</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        Callable<span class="token operator">&lt;</span>V<span class="token operator">></span> c <span class="token operator">=</span> callable<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> state <span class="token operator">==</span> NEW<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            V result<span class="token punctuation">;</span>
            <span class="token keyword">boolean</span> ran<span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                result <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                ran <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                result <span class="token operator">=</span> null<span class="token punctuation">;</span>
                ran <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
                <span class="token function">setException</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>ran<span class="token punctuation">)</span>
                <span class="token function">set</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// runner must be non-null until state is settled to</span>
        <span class="token comment" spellcheck="true">// prevent concurrent calls to run()</span>
        runner <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// state must be re-read after nulling runner to prevent</span>
        <span class="token comment" spellcheck="true">// leaked interrupts</span>
        <span class="token keyword">int</span> s <span class="token operator">=</span> state<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">>=</span> INTERRUPTING<span class="token punctuation">)</span>
            <span class="token function">handlePossibleCancellationInterrupt</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="多种创建线程的方式案"><a href="#多种创建线程的方式案" class="headerlink" title="多种创建线程的方式案"></a>多种创建线程的方式案</h3><ol>
<li>继承Thread类</li>
<li>实现Runnable接口</li>
<li>匿名内部类</li>
<li>带返回值的线程，实现 <code>implements Callable&lt;T&gt;</code> 有返回值的 </li>
<li>定时器，java常用的几种定时器<code>@Scheduled注解、quartz、new Timer().schedule、使用线程控制</code> 【待深入】</li>
<li>线程池的实现 【待深入】</li>
<li>Lambda表达式实现</li>
<li>Spring是需要多线程</li>
<li>RxJava </li>
</ol>
<h3 id="线程设置"><a href="#线程设置" class="headerlink" title="线程设置"></a>线程设置</h3><p>-Xss10M 设置 tackssize  new thread(stacksize)</p>
<ul>
<li><p><a href="https://unixboy.iteye.com/blog/174173" target="_blank" rel="noopener">VM调优总结 -Xms -Xmx -Xmn -Xss</a></p>
</li>
<li><p><code>Thread.currentThread().setPriority(priority);</code>优先级设置</p>
<blockquote>
<p>不要把线程的优先级与<code>运行结果的顺序</code>作为衡量的标准，优先级较高的线程并不一定每一次都先执行完run()方法中的任务，也就是说，线程的优先级与打印顺序无关，不要将这两者的关系相关联，它们的关系具有不确定性和随机性。</p>
</blockquote>
</li>
</ul>
<h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><ul>
<li>join 兄弟你走，我垫后</li>
</ul>
<h3 id="ThreadGroup-线程组"><a href="#ThreadGroup-线程组" class="headerlink" title="ThreadGroup 线程组"></a>ThreadGroup 线程组</h3><ul>
<li>给线程指定ThreadGroup </li>
</ul>
<pre class="line-numbers language-java"><code class="language-java">  ThreadGroup threadGroup <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadGroup</span><span class="token punctuation">(</span><span class="token string">"TG1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Thread t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>threadGroup<span class="token punctuation">,</span> <span class="token string">"t1"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ul>
<li>main函数默认创建在<code>main</code>线程组中</li>
</ul>
<h2 id="中断的处理逻辑体会"><a href="#中断的处理逻辑体会" class="headerlink" title="中断的处理逻辑体会"></a>中断的处理逻辑体会</h2><ol>
<li><p>不支持线程interrupt的</p>
<blockquote>
<p>可以在interrupt中触发停止条件，如读取文件时在interrupt中关闭读取文件的流触发线程内的异常</p>
</blockquote>
</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java">   <span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span>
   <span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>InputStream<span class="token punctuation">;</span>
   <span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>Socket<span class="token punctuation">;</span>

   <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test32</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>
       <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> BUF_SIZE <span class="token operator">=</span> <span class="token number">512</span><span class="token punctuation">;</span>

       Socket socket<span class="token punctuation">;</span>
       InputStream in<span class="token punctuation">;</span>

       <span class="token keyword">public</span> <span class="token function">Test32</span><span class="token punctuation">(</span>Socket socket<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>
           <span class="token keyword">this</span><span class="token punctuation">.</span>socket <span class="token operator">=</span> socket<span class="token punctuation">;</span>
           <span class="token keyword">this</span><span class="token punctuation">.</span>in <span class="token operator">=</span> socket<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>

       <span class="token annotation punctuation">@Override</span>
       <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">try</span> <span class="token punctuation">{</span>
               <span class="token comment" spellcheck="true">//中断是关闭socket是线程产生错误</span>
               socket<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>

           <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
               <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span>

       <span class="token annotation punctuation">@Override</span>
       <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token keyword">try</span> <span class="token punctuation">{</span>
               <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span>BUF_SIZE<span class="token punctuation">]</span><span class="token punctuation">;</span>
               <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                   <span class="token keyword">int</span> count <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
                   <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                       <span class="token keyword">break</span><span class="token punctuation">;</span>
                   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

                   <span class="token punctuation">}</span>
               <span class="token punctuation">}</span>
           <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li><p>向上抛异常，自己不处理</p>
</li>
<li><p>自己处理完，在抛异常上面在处理</p>
</li>
</ol>
<h2 id="线程异常问题及处理"><a href="#线程异常问题及处理" class="headerlink" title="线程异常问题及处理"></a>线程异常问题及处理</h2><blockquote>
<p>知识点： 银行服务会预留应急服务器，定期重启服务器，重置资源保持服务器的稳定性</p>
</blockquote>
<h3 id="1-钩子函数，捕获异常"><a href="#1-钩子函数，捕获异常" class="headerlink" title="1. 钩子函数，捕获异常"></a>1. 钩子函数，捕获异常</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExitCapture</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Runtime<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addShutdownHook</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">{</span>
      System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The application will be exit."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">notifyAndRelease</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>1_000L<span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"I am working ..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment" spellcheck="true">//ignore</span>
      <span class="token punctuation">}</span>
      i<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token comment" spellcheck="true">// simulate a exception</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">></span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment" spellcheck="true">// 1. try to capture the simulate exception and handler that</span>
  <span class="token comment" spellcheck="true">// 2. even this Thread kill by some reason can capture</span>
  <span class="token comment" spellcheck="true">// 3. but kill -9 pid (force kill ) can't not capture </span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">notifyAndRelease</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"notify to the admin(the monitor.) by email or mq or some other way"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>1_000<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Will release resource(socket,file,connection.)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">try</span><span class="token punctuation">{</span>
      Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span>1_000<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment" spellcheck="true">//ignore</span>
    <span class="token punctuation">}</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Relase and notify Done. "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="2-获取线程运行期间的异常"><a href="#2-获取线程运行期间的异常" class="headerlink" title="2. 获取线程运行期间的异常"></a>2. 获取线程运行期间的异常</h3><pre class="line-numbers language-java"><code class="language-java">  threadRun<span class="token punctuation">.</span><span class="token function">setUncaughtExceptionHandler</span><span class="token punctuation">(</span><span class="token punctuation">(</span>threadError<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>threadError<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li>ThreadFactory设置</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java">   ExecutorService exec <span class="token operator">=</span> Executors<span class="token punctuation">.</span><span class="token function">newCachedThreadPool</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
               <span class="token annotation punctuation">@Override</span>
               <span class="token keyword">public</span> Thread <span class="token function">newThread</span><span class="token punctuation">(</span>Runnable r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                   Thread thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
                   thread<span class="token punctuation">.</span><span class="token function">setUncaughtExceptionHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyUnchecckedExceptionhandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                   <span class="token keyword">return</span> thread<span class="token punctuation">;</span>
               <span class="token punctuation">}</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   exec<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ExceptionThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="3-追踪程序中调用的逻辑顺序"><a href="#3-追踪程序中调用的逻辑顺序" class="headerlink" title="3. 追踪程序中调用的逻辑顺序"></a>3. 追踪程序中调用的逻辑顺序</h3><pre class="line-numbers language-java"><code class="language-java">    Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>e <span class="token operator">-</span><span class="token operator">></span> <span class="token operator">!</span>e<span class="token punctuation">.</span><span class="token function">isNativeMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>e <span class="token operator">-</span><span class="token operator">></span> Optional<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
                    e<span class="token punctuation">.</span><span class="token function">getClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getMethodName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> e<span class="token punctuation">.</span><span class="token function">getLineNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>out<span class="token operator">:</span><span class="token operator">:</span>println<span class="token punctuation">)</span>
                <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="4-线程组ThreadGroup"><a href="#4-线程组ThreadGroup" class="headerlink" title="4. 线程组ThreadGroup"></a>4. 线程组ThreadGroup</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//1.创建线程组</span>
ThreadGroup threadGroup <span class="token operator">=</span>
        <span class="token comment" spellcheck="true">// 这是匿名类写法</span>
        <span class="token keyword">new</span> <span class="token class-name">ThreadGroup</span><span class="token punctuation">(</span><span class="token string">"group"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// 继承ThreadGroup并重新定义以下方法</span>
            <span class="token comment" spellcheck="true">// 在线程成员抛出unchecked exception 会执行此方法</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">uncaughtException</span><span class="token punctuation">(</span>Thread t<span class="token punctuation">,</span> Throwable e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">//4.处理捕获的线程异常</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//2.创建Thread        </span>
Thread thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>threadGroup<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">"my_thread"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token comment" spellcheck="true">//3.启动线程</span>
thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="5-默认的线程异常捕获器"><a href="#5-默认的线程异常捕获器" class="headerlink" title="5. 默认的线程异常捕获器"></a>5. 默认的线程异常捕获器</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// 设置默认的线程异常捕获处理器</span>
Thread<span class="token punctuation">.</span><span class="token function">setDefaultUncaughtExceptionHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MyUnchecckedExceptionhandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<blockquote>
<p>当线程出现异常时，<br>如果我们没有指定线程的异常处理器，而且线程组也没有设置，那么就会使用默认的线程异常处理器</p>
</blockquote>
<h3 id="6-FetureTask来捕获异常"><a href="#6-FetureTask来捕获异常" class="headerlink" title="6. FetureTask来捕获异常"></a>6. FetureTask来捕获异常</h3><h4 id="6-1-基本用法"><a href="#6-1-基本用法" class="headerlink" title="6.1 基本用法"></a>6.1 基本用法</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//1.创建FeatureTask</span>
FutureTask<span class="token operator">&lt;</span>Integer<span class="token operator">></span> futureTask <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FutureTask</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callable</span><span class="token operator">&lt;</span>Integer<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> Integer <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//2.创建Thread</span>
Thread thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>futureTask<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//3.启动线程</span>
thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    Integer result <span class="token operator">=</span> futureTask<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//4.处理捕获的线程异常</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="6-2-线程池使用"><a href="#6-2-线程池使用" class="headerlink" title="6.2 线程池使用"></a>6.2 线程池使用</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//1.创建线程池</span>
ExecutorService executorService <span class="token operator">=</span> Executors<span class="token punctuation">.</span><span class="token function">newFixedThreadPool</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//2.创建Callable，有返回值的，你也可以创建一个线程实现Callable接口。</span>
<span class="token comment" spellcheck="true">//  如果你不需要返回值，这里也可以创建一个Thread即可，在第3步时submit这个thread。</span>
Callable<span class="token operator">&lt;</span>Integer<span class="token operator">></span> callable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Callable</span><span class="token operator">&lt;</span>Integer<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> Integer <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//3.提交待执行的线程</span>
Future<span class="token operator">&lt;</span>Integer<span class="token operator">></span> future <span class="token operator">=</span> executorService<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>callable<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
     Integer result <span class="token operator">=</span> future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//4.处理捕获的线程异常</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="7-重写ThreadPoolExecutor的afterExecute"><a href="#7-重写ThreadPoolExecutor的afterExecute" class="headerlink" title="7. 重写ThreadPoolExecutor的afterExecute"></a>7. 重写ThreadPoolExecutor的afterExecute</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//1.创建线程池</span>
ThreadPoolExecutor threadPoolExecutor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> 0L<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">,</span>
        <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">afterExecute</span><span class="token punctuation">(</span>Runnable r<span class="token punctuation">,</span> Throwable t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token keyword">instanceof</span> <span class="token class-name">Thread</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">//处理捕获的异常</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token keyword">instanceof</span> <span class="token class-name">FutureTask</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            FutureTask futureTask <span class="token operator">=</span> <span class="token punctuation">(</span>FutureTask<span class="token punctuation">)</span> r<span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                futureTask<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">//处理捕获的异常</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Thread t1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
threadPoolExecutor<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
Callable<span class="token operator">&lt;</span>Integer<span class="token operator">></span> callable <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token number">2</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>
threadPoolExecutor<span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span>callable<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="多线程带来的风险"><a href="#多线程带来的风险" class="headerlink" title="多线程带来的风险"></a>多线程带来的风险</h2><h3 id="活跃性问题"><a href="#活跃性问题" class="headerlink" title="活跃性问题"></a>活跃性问题</h3><h4 id="1-死锁"><a href="#1-死锁" class="headerlink" title="1. 死锁"></a>1. 死锁</h4><p><a href="https://blog.csdn.net/hd12370/article/details/82814348" target="_blank" rel="noopener">什么是死锁，产生死锁的原因及必要条件</a></p>
<h4 id="2-饥饿"><a href="#2-饥饿" class="headerlink" title="2. 饥饿"></a>2. 饥饿</h4><blockquote>
<ol>
<li>高优先级吞噬所有低优先级的CPU时间片</li>
<li>线程被永久堵塞(block)在一个等待进入同步块的状态</li>
<li>wait() 等待的线程永远不被唤醒 </li>
</ol>
</blockquote>
<p>   如何处饥饿与公平</p>
<ol>
<li>设置合理的优先级；</li>
<li>设置synchronized</li>
</ol>
<h4 id="3-活锁"><a href="#3-活锁" class="headerlink" title="3. 活锁"></a>3. 活锁</h4><blockquote>
<p>由于某些条件没有满足，导致一直重复尝试，失败，尝试，失败。活锁和死锁的区别在于，处于活锁的实体是在不断的改变状态</p>
</blockquote>
<p>活锁指的是线程不断重复执行相同的操作，但每次操作的结果都是失败的。尽管这个问题不会阻塞线程，但是程序也无法继续执行。活锁通常发生在处理事务消息的应用程序中，如果不能成功处理这个事务那么事务将回滚整个操作。解决活锁的办法是在每次重复执行的时候引入随机机制，这样由于出现的可能性不同使得程序可以继续执行其他的任务</p>
<h3 id="性能问题"><a href="#性能问题" class="headerlink" title="性能问题"></a>性能问题</h3><h3 id="线程安全性问题"><a href="#线程安全性问题" class="headerlink" title="线程安全性问题"></a>线程安全性问题</h3><blockquote>
<p>出现线程安全性问题的条件：</p>
<ol>
<li>•多线程环境下</li>
<li>•多个线程共享一个资源</li>
<li>对资源进行非原子性操作（同时读OK，同时 读写有问题）</li>
</ol>
</blockquote>
<h4 id="synchronized-的原理与使用"><a href="#synchronized-的原理与使用" class="headerlink" title="synchronized 的原理与使用"></a>synchronized 的原理与使用</h4><ul>
<li><p>内置锁</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
* 普通方法上,内置锁就是当前类的实例
*/</span>
<span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">int</span> <span class="token function">getNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> value <span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>互斥锁</p>
</li>
</ul>
<p>三种修饰方式</p>
<ol>
<li>普通方法，内置锁<code>当前类的实例</code></li>
<li>静态方法，内置锁<code>是当前的Class字节码对象</code></li>
<li>代码块，内置锁<code>指定的类</code></li>
</ol>
<h4 id="线程锁"><a href="#线程锁" class="headerlink" title="线程锁"></a>线程锁</h4><p>锁的存放</p>
<blockquote>
<p>任何对象都可以作为锁，锁信息存放在对象的头中 Mark World</p>
</blockquote>
<p>锁的分类</p>
<ol>
<li><p>偏向锁</p>
<blockquote>
<p>存在原因：</p>
<ol>
<li>每次获取锁和释放锁会浪费资源</li>
<li>很多情况下，竞争锁不是有多个线程，而是一个线程在使用</li>
</ol>
</blockquote>
<p>处理方式：</p>
<ol>
<li>如果是同一个线程，判断是否是偏向锁，是否是上一个线程id，直接访问；更多条件如下：<ol>
<li>•线程id</li>
<li>•Epoch</li>
<li>•对象的分代年龄信息</li>
<li>•是否是偏向锁</li>
<li>•锁标志位</li>
</ol>
</li>
<li>其他线程访问会需要重新获取锁；</li>
</ol>
</li>
<li><p>轻量锁</p>
</li>
<li><p>重量锁（synchronize）</p>
</li>
</ol>
<h4 id="理解自旋锁，死锁与重入锁"><a href="#理解自旋锁，死锁与重入锁" class="headerlink" title="理解自旋锁，死锁与重入锁"></a>理解自旋锁，死锁与重入锁</h4><ul>
<li>锁的重入</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java">  synchronize 方法访问 内部访问synchronize方法<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li>自旋锁，没有拿到锁的线程等待或者在等待线程的状态达到某个条件的时候</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java">          <span class="token keyword">while</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">activeCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment" spellcheck="true">// 自旋</span>
          <span class="token punctuation">}</span>
          System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"所有的线程执行完毕了..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><p>死锁</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">// a b 并行执行，a 方法获取obj1锁， b方法获取obj2锁，第二步相互制约形成死锁</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">a</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>obj1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>obj2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">b</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>obj2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>obj1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"b"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h4 id="指令重排序-happen-before"><a href="#指令重排序-happen-before" class="headerlink" title="指令重排序(happen-before)"></a>指令重排序(happen-before)</h4><blockquote>
<p><strong>指令重排序</strong>，可以分为编译器重排序和处理器重排序</p>
</blockquote>
<h4 id="单例"><a href="#单例" class="headerlink" title="单例"></a>单例</h4><ul>
<li><p>饿汉式</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//不存在线程安全性问题</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Singleton</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// 私有化构造方法</span>
    <span class="token keyword">private</span> <span class="token function">Singleton</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> Singleton instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> Singleton <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<ul>
<li><p>懒汉式，用的时候才加载</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Singleton2</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token function">Singleton2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token comment" spellcheck="true">// volatile 防止虚拟机为了提高性能在不改变执行结果的前提下指令重排序（原来执行在后面的可能放到前面运行）</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">volatile</span> Singleton2 instance<span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">/**
     * 双重检查加锁
     * @return
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> Singleton2 <span class="token function">getInstance</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 自旋   while(true)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>instance <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>Singleton2<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>instance <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>

                    instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Singleton2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 指令重排序</span>
                    <span class="token comment" spellcheck="true">// new Singleton2() 汇编中不是一个指令完成，大致过程如下</span>
                    <span class="token comment" spellcheck="true">// 申请一块内存空间   // 1 在1的时候instance就不为空了</span>
                    <span class="token comment" spellcheck="true">// 在这块空间里实例化对象  // 2</span>
                    <span class="token comment" spellcheck="true">// instance的引用指向这块空间地址   // 3</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h4 id="Volatile原理与使用"><a href="#Volatile原理与使用" class="headerlink" title="Volatile原理与使用"></a>Volatile原理与使用</h4><blockquote>
<ol>
<li>Volatile称之为轻量级锁，被volatile修饰的变量，在线程之间是可见的。<ol>
<li>可见：一个线程修改了这个变量的值，在另外一个线程中能够读到这个修改后的值。</li>
</ol>
</li>
<li>Synchronized除了线程之间互斥意外，还有一个非常大的作用，就是保证可见性</li>
<li>volatile 只保证了线程的之间的可见性，不能保证线程的原子性</li>
</ol>
</blockquote>
<p>volatile内存语义</p>
<ol>
<li>线程对变量进行修改之后，要立刻回写到主内存。</li>
<li>线程对变量读取的时候，要从主内存中读，而不是缓存。</li>
</ol>
<p>参考： </p>
<ol>
<li><a href="https://blog.csdn.net/vernonzheng/article/details/8201744" target="_blank" rel="noopener">Java多线程（一）之volatile深入分析</a></li>
<li><a href="https://www.ibm.com/developerworks/cn/java/j-jtp06197.html" target="_blank" rel="noopener">正确使用 Volatile 变量 【重点】</a> EverNote有笔记</li>
</ol>
<h4 id="JDK5提供的原子类的操作以及实现原理"><a href="#JDK5提供的原子类的操作以及实现原理" class="headerlink" title="JDK5提供的原子类的操作以及实现原理"></a>JDK5提供的原子类的操作以及实现原理</h4><p>jar： rt.jar <code>java.util.concurrent.atomic</code>  核心代码逻辑</p>
<pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token function">getAndUpdate</span><span class="token punctuation">(</span>IntUnaryOperator updateFunction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> prev<span class="token punctuation">,</span> next<span class="token punctuation">;</span>
        <span class="token keyword">do</span> <span class="token punctuation">{</span>
            prev <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 获取当前值</span>
            next <span class="token operator">=</span> updateFunction<span class="token punctuation">.</span><span class="token function">applyAsInt</span><span class="token punctuation">(</span>prev<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获取共享资源值</span>
        <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//如果共享资源没有被改变更新，继续get()</span>
        <span class="token keyword">return</span> prev<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参考　１．［非阻塞算法简介］（<a href="https://www.ibm.com/developerworks/cn/java/j-jtp04186/）" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/java/j-jtp04186/）</a></p>
<h4 id="Lock接口认识与使用"><a href="#Lock接口认识与使用" class="headerlink" title="Lock接口认识与使用"></a>Lock接口认识与使用</h4><p><strong>synchronized 和Lock各自优势</strong></p>
<p>Lock</p>
<ol>
<li>显示地获取和释放锁，繁琐能让代码更灵活</li>
<li>使用Lock可以方便的实现公平性</li>
<li>非阻塞的获取锁</li>
<li>能被中断的获取锁</li>
<li>超时获取锁</li>
</ol>
<h4 id="AbstractQueuedSynchronizer-AQS-详解"><a href="#AbstractQueuedSynchronizer-AQS-详解" class="headerlink" title="AbstractQueuedSynchronizer(AQS)详解"></a><strong>AbstractQueuedSynchronizer(AQS)详解</strong></h4><pre class="line-numbers language-java"><code class="language-java">ReentrantLock<span class="token punctuation">.</span>java
<span class="token comment" spellcheck="true">//简单案例</span>
MyLock2<span class="token punctuation">.</span>java<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="公平锁"><a href="#公平锁" class="headerlink" title="公平锁"></a>公平锁</h4><blockquote>
<p>公平是针对获取而言的，如果一个锁是公平的，那么锁的获取顺序就应该符合请求的绝对时间顺序。</p>
<p>实质是先进先出</p>
</blockquote>
<p>FirLock</p>
<ul>
<li>FairSync 顺序执行，高并发性能损耗</li>
<li>NonFairSync  每个线程获取锁的几率都是相同，减少JVM调度时间</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">FairSync</span> <span class="token keyword">extends</span> <span class="token class-name">Sync</span> <span class="token punctuation">{</span>
        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token operator">-</span>3000897897090466540L<span class="token punctuation">;</span>

        <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">acquire</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment" spellcheck="true">/**
         * Fair version of tryAcquire.  Don't grant access unless
         * recursive call or no waiters or is first.
         */</span>
        <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">tryAcquire</span><span class="token punctuation">(</span><span class="token keyword">int</span> acquires<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> Thread current <span class="token operator">=</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">hasQueuedPredecessors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                    <span class="token function">compareAndSetState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> acquires<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token function">setExclusiveOwnerThread</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> <span class="token function">getExclusiveOwnerThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> nextc <span class="token operator">=</span> c <span class="token operator">+</span> acquires<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>nextc <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"Maximum lock count exceeded"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token function">setState</span><span class="token punctuation">(</span>nextc<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="读写锁"><a href="#读写锁" class="headerlink" title="读写锁"></a>读写锁</h4><ul>
<li>ReentrantReadWriteLock  多个读锁不互斥，读锁与写锁互斥，多个写锁互斥</li>
</ul>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">tryReleaseShared</span><span class="token punctuation">(</span><span class="token keyword">int</span> unused<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Thread current <span class="token operator">=</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>firstReader <span class="token operator">==</span> current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// assert firstReaderHoldCount > 0;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>firstReaderHoldCount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
            firstReader <span class="token operator">=</span> null<span class="token punctuation">;</span>
        <span class="token keyword">else</span>
            firstReaderHoldCount<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        HoldCounter rh <span class="token operator">=</span> cachedHoldCounter<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rh <span class="token operator">==</span> null <span class="token operator">||</span> rh<span class="token punctuation">.</span>tid <span class="token operator">!=</span> <span class="token function">getThreadId</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">)</span>
            rh <span class="token operator">=</span> readHolds<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> rh<span class="token punctuation">.</span>count<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            readHolds<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">throw</span> <span class="token function">unmatchedUnlockException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token operator">--</span>rh<span class="token punctuation">.</span>count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> nextc <span class="token operator">=</span> c <span class="token operator">-</span> SHARED_UNIT<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndSetState</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> nextc<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token comment" spellcheck="true">// Releasing the read lock has no effect on readers,</span>
            <span class="token comment" spellcheck="true">// but it may allow waiting writers to proceed if</span>
            <span class="token comment" spellcheck="true">// both read and write locks are now free.</span>
            <span class="token keyword">return</span> nextc <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>锁降级</strong></p>
<blockquote>
<p>•锁降级是指写锁降级为读锁。</p>
<p>•在写锁没有释放的时候，获取到读锁，再释放写锁</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">boolean</span> isUpdate<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">readWrite</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        r<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 为了保证isUpdate能够拿到最新的值</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>isUpdate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            r<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            w<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">,</span> <span class="token string">"xxx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            r<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//锁降级 利用读写锁互斥，在写锁竞争写之前先读锁</span>
            w<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        Object obj <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        r<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>锁升级</strong></p>
<blockquote>
<p>•把读锁升级为写锁</p>
<p>•在读锁没有释放的时候，获取到写锁，再释放读锁</p>
</blockquote>
<h4 id="线程安全性问题简单总结"><a href="#线程安全性问题简单总结" class="headerlink" title="线程安全性问题简单总结"></a>线程安全性问题简单总结</h4><ol>
<li><p>出现线程安全性问题的条件</p>
<p>•在多线程的环境下</p>
<p>•必须有共享资源</p>
<p>•对共享资源进行非原子性操作</p>
</li>
<li><p>解决线程安全性问题的途径</p>
<p>•synchronized （偏向锁，轻量级锁，重量级锁）</p>
<p>•volatile</p>
<p>•JDK提供的原子类</p>
</li>
<li><p>使用Lock（共享锁，排它锁）</p>
</li>
<li><p>认识的“*锁”</p>
<p>•偏向锁</p>
<p>•轻量级锁</p>
<p>•重量级锁</p>
<p>•重入锁</p>
<p>•自旋锁</p>
<p>•共享锁</p>
<p>•独占锁</p>
<p>•排他锁</p>
<p>•读写锁</p>
<p>•公平锁</p>
<p>•非公平锁</p>
<p>•死锁</p>
<p>•活锁</p>
</li>
</ol>
<h3 id="同步容器与并发容器"><a href="#同步容器与并发容器" class="headerlink" title="同步容器与并发容器"></a>同步容器与并发容器</h3><ul>
<li>同步容器，性能比较差<ul>
<li>Vector（线程安全）</li>
<li>ArrayList（线程不安全）==&gt; 转化成线程安全<code>Collections.synchronizedCollection(list)</code></li>
<li>Hashtable ==&gt; HashMap</li>
</ul>
</li>
<li>并发容器<ul>
<li>CopyOnWriteArrayList  </li>
<li>ConcurrentHashMap   分区加锁 来实现</li>
</ul>
</li>
</ul>
<h4 id="CopyOnWriteArrayList-原理和使用"><a href="#CopyOnWriteArrayList-原理和使用" class="headerlink" title="CopyOnWriteArrayList 原理和使用"></a>CopyOnWriteArrayList 原理和使用</h4><blockquote>
<p>原理：读不加锁， 写new一个List用于写，写完成List头指针指向新的List </p>
<p>使用： 每次写都copy一份，故写数据量大的时候对内存的消耗是非常大的，读操作比较多使用CopyOnWriteArrayList ，如果读很少写操作很多使用同步容器处理这件事性能会更好一点</p>
</blockquote>
<h4 id="非阻塞队列-并发容器ConcurrentLinkedQueu"><a href="#非阻塞队列-并发容器ConcurrentLinkedQueu" class="headerlink" title="非阻塞队列-并发容器ConcurrentLinkedQueu"></a>非阻塞队列-并发容器ConcurrentLinkedQueu</h4><p>原理与使用</p>
<blockquote>
<p>并发安全的FIFO链表的队列<br>提示: size() 不是线程安全，导致调用的时候数量不准确容易变</p>
</blockquote>
<h4 id="阻塞队列BlockingQueue"><a href="#阻塞队列BlockingQueue" class="headerlink" title="阻塞队列BlockingQueue"></a>阻塞队列BlockingQueue</h4><ul>
<li>ArrayBlockingQueue</li>
</ul>
<p><img src="http://cdn.linz.tech/java-blockingqueue-2019-6-13.jpg" alt=""></p>
<p>1)ArrayBlockingQueue:规定大小的BlockingQueue,其构造函数必须带一个int参数来指明其大小.其所含的对象是以FIFO(先入先出)顺序排序的.</p>
<p>2)LinkedBlockingQueue:大小不定的BlockingQueue,若其构造函数带一个规定大小的参数,生成的BlockingQueue有大小限制,若不带大小参数,所生成的BlockingQueue的大小由Integer.MAX_VALUE来决定.其所含的对象是以FIFO(先入先出)顺序排序的   <code>有届链表队列</code></p>
<p>3)PriorityBlockingQueue:类似于LinkedBlockQueue,但其所含对象的排序不是FIFO,而是依据对象的自然排序顺序或者是构造函数的Comparator决定的顺序.  <code>无届队列</code></p>
<p>4)SynchronousQueue:特殊的BlockingQueue,对其的操作必须是放和取交替完成的.</p>
<h4 id="并发容器ConcurrentHashMap"><a href="#并发容器ConcurrentHashMap" class="headerlink" title="并发容器ConcurrentHashMap"></a>并发容器ConcurrentHashMap</h4><h2 id="线程池"><a href="#线程池" class="headerlink" title="线程池"></a>线程池</h2><h3 id="线程池概述"><a href="#线程池概述" class="headerlink" title="线程池概述"></a>线程池概述</h3><ul>
<li><p>什么是线程池</p>
</li>
<li><p>为什么使用线程池</p>
</li>
<li><p>线程池的优势</p>
<ul>
<li>第一：降低资源消耗。通过重复利用已创建的线程降低线程创建和销毁造成的消耗。</li>
<li>第二：提高响应速度。当任务到达时，任务可以不需要的等到线程创建就能立即执行。</li>
<li>第三：提高线程的可管理性。线程是稀缺资源，如果无限制的创建，不仅会消耗系统资源，还会降低系统的稳定性，使用线程池可以进行统一的分配，调优和监控。但是要做到合理的利用线程池，必须对其原理了如指掌。</li>
</ul>
</li>
</ul>
<h3 id="Executors提供四种线程池"><a href="#Executors提供四种线程池" class="headerlink" title="Executors提供四种线程池"></a>Executors提供四种线程池</h3><ul>
<li>newCachedThreadPool创建一个可缓存线程池，如果线程池长度超过处理需要，可灵活回收空闲线程，若无可回收，则新建线程</li>
<li>newScheduledThreadPool 创建一个定长线程池，支持定时及周期性任务执行。</li>
<li>newSingleThreadExecutor 创建一个单线程化的线程池，它只会用唯一的工作线程来执行任务，保证所有任务按照指定顺序(FIFO, LIFO, 优先级)执行。</li>
</ul>
<h3 id="创建一个线程池并提交线程任务"><a href="#创建一个线程池并提交线程任务" class="headerlink" title="创建一个线程池并提交线程任务"></a>创建一个线程池并提交线程任务</h3><h3 id="线程池源码解析"><a href="#线程池源码解析" class="headerlink" title="线程池源码解析"></a>线程池源码解析</h3><h4 id="参数认识"><a href="#参数认识" class="headerlink" title="参数认识"></a>参数认识</h4><ol>
<li><p>corePoolSize : 线程池的基本大小，当提交一个任务到线程池时，线程池会创建一个线程来执行任务，即使其他空闲的基本线程能够执行新任务也会创建线程，等到需要执行的任务数大于线程池基本大小时就不再创建。如果调用了线程池的prestartAllCoreThreads方法，线程池会提前创建并启动所有基本线程。</p>
</li>
<li><p>runnableTaskQueue：任务对列，用于保存等待执行的任务的阻塞队列。可以选择以下几个阻塞队列。</p>
</li>
</ol>
<ul>
<li><p>ArrayBlockingQueue：是一个基于数组结构的有界阻塞队列，此队列按 FIFO（先进先出）原则对元素进行排序。</p>
</li>
<li><p>LinkedBlockingQueue：一个基于链表结构的阻塞队列，此队列按FIFO （先进先出） 排序元素，吞吐量通常要高于ArrayBlockingQueue。静态工厂方法Executors.newFixedThreadPool()使用了这个队列。</p>
</li>
<li><p>SynchronousQueue：一个不存储元素的阻塞队列。每个插入操作必须等到另一个线程调用移除操作，否则插入操作一直处于阻塞状态，吞吐量通常要高于LinkedBlockingQueue，静态工厂方法Executors.newCachedThreadPool使用了这个队列。</p>
</li>
<li><p>PriorityBlockingQueue：一个具有优先级得无限阻塞队列。</p>
</li>
</ul>
<ol start="3">
<li><p>maximumPoolSize：线程池最大大小，线程池允许创建的最大线程数。如果队列满了，并且已创建的线程数小于最大线程数，则线程池会再创建新的线程执行任务。值得注意的是如果使用了无界的任务队列这个参数就没什么效果。</p>
</li>
<li><p>ThreadFactory：用于设置创建线程的工厂，可以通过线程工厂给每个创建出来的线程设置更有意义的名字，Debug和定位问题时非常又帮助。</p>
</li>
<li><p>RejectedExecutionHandler（饱和策略）：当队列和线程池都满了，说明线程池处于饱和状态，那么必须采取一种策略处理提交的新任务。这个策略默认情况下是AbortPolicy，表示无法处理新任务时抛出异常。</p>
</li>
</ol>
<ul>
<li><p>CallerRunsPolicy：只用调用者所在线程来运行任务。</p>
</li>
<li><p>DiscardOldestPolicy：丢弃队列里最近的一个任务，并执行当前任务。</p>
</li>
<li><p>DiscardPolicy：不处理，丢弃掉。</p>
</li>
<li><p>当然也可以根据应用场景需要来实现RejectedExecutionHandler接口自定义策略。如记录日志或持久化不能处理的任务。</p>
</li>
</ul>
<ol start="6">
<li><p>keepAliveTime ：线程活动保持时间，线程池的工作线程空闲后，保持存活的时间。所以如果任务很多，并且每个任务执行的时间比较短，可以调大这个时间，提高线程的利用率。</p>
</li>
<li><p>TimeUnit：线程活动保持时间的单位，可选的单位有天（DAYS），小时（HOURS），分钟（MINUTES），毫秒(MILLISECONDS)，微秒(MICROSECONDS, 千分之一毫秒)和毫微秒(NANOSECONDS, 千分之一微秒)。</p>
</li>
<li><p>类中其他属性</p>
</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java">
    <span class="token comment" spellcheck="true">// 线程池的控制状态:用来表示线程池的运行状态（整型的高3位）和运行的worker数量（低29位）</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> AtomicInteger ctl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token function">ctlOf</span><span class="token punctuation">(</span>RUNNING<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 29位的偏移量</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> COUNT_BITS <span class="token operator">=</span> Integer<span class="token punctuation">.</span>SIZE <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 最大容量（2^29 - 1）</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> CAPACITY   <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> COUNT_BITS<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token comment" spellcheck="true">// runState is stored in the high-order bits</span>
    <span class="token comment" spellcheck="true">// 线程运行状态，总共有5个状态，需要3位来表示（所以偏移量的29 = 32 - 3）</span>
   <span class="token comment" spellcheck="true">/**
    * RUNNING    :    接受新任务并且处理已经进入阻塞队列的任务
    * SHUTDOWN    ：    不接受新任务，但是处理已经进入阻塞队列的任务
    * STOP        :    不接受新任务，不处理已经进入阻塞队列的任务并且中断正在运行的任务
    * TIDYING    :    所有的任务都已经终止，workerCount为0， 线程转化为TIDYING状态并且调用terminated钩子函数
    * TERMINATED:    terminated钩子函数已经运行完成
    **/</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> RUNNING    <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> COUNT_BITS<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> SHUTDOWN   <span class="token operator">=</span>  <span class="token number">0</span> <span class="token operator">&lt;&lt;</span> COUNT_BITS<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> STOP       <span class="token operator">=</span>  <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> COUNT_BITS<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> TIDYING    <span class="token operator">=</span>  <span class="token number">2</span> <span class="token operator">&lt;&lt;</span> COUNT_BITS<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> TERMINATED <span class="token operator">=</span>  <span class="token number">3</span> <span class="token operator">&lt;&lt;</span> COUNT_BITS<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 阻塞队列</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> BlockingQueue<span class="token operator">&lt;</span>Runnable<span class="token operator">></span> workQueue<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 可重入锁</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> ReentrantLock mainLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 存放工作线程集合</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> HashSet<span class="token operator">&lt;</span>Worker<span class="token operator">></span> workers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span>Worker<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 终止条件</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> Condition termination <span class="token operator">=</span> mainLock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 最大线程池容量</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> largestPoolSize<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 已完成任务数量</span>
    <span class="token keyword">private</span> <span class="token keyword">long</span> completedTaskCount<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 线程工厂</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> ThreadFactory threadFactory<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 拒绝执行处理器</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> RejectedExecutionHandler handler<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 线程等待运行时间</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 是否运行核心线程超时</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">boolean</span> allowCoreThreadTimeOut<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 核心池的大小</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> corePoolSize<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 最大线程池大小</span>
    <span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 默认拒绝执行处理器</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> RejectedExecutionHandler defaultHandler <span class="token operator">=</span>
        <span class="token keyword">new</span> <span class="token class-name">AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h4><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token function">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token keyword">int</span> corePoolSize<span class="token punctuation">,</span>
                              <span class="token keyword">int</span> maximumPoolSize<span class="token punctuation">,</span>
                              <span class="token keyword">long</span> keepAliveTime<span class="token punctuation">,</span>
                              TimeUnit unit<span class="token punctuation">,</span>
                              BlockingQueue<span class="token operator">&lt;</span>Runnable<span class="token operator">></span> workQueue<span class="token punctuation">,</span>
                              ThreadFactory threadFactory<span class="token punctuation">,</span>
                              RejectedExecutionHandler handler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>corePoolSize <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>                                                <span class="token comment" spellcheck="true">// 核心大小不能小于0</span>
            maximumPoolSize <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span>                                            <span class="token comment" spellcheck="true">// 线程池的初始最大容量不能小于0</span>
            maximumPoolSize <span class="token operator">&lt;</span> corePoolSize <span class="token operator">||</span>                                <span class="token comment" spellcheck="true">// 初始最大容量不能小于核心大小</span>
            keepAliveTime <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>                                                <span class="token comment" spellcheck="true">// keepAliveTime不能小于0</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                
        <span class="token keyword">if</span> <span class="token punctuation">(</span>workQueue <span class="token operator">==</span> null <span class="token operator">||</span> threadFactory <span class="token operator">==</span> null <span class="token operator">||</span> handler <span class="token operator">==</span> null<span class="token punctuation">)</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 初始化相应的域</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>corePoolSize <span class="token operator">=</span> corePoolSize<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>maximumPoolSize <span class="token operator">=</span> maximumPoolSize<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>workQueue <span class="token operator">=</span> workQueue<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>keepAliveTime <span class="token operator">=</span> unit<span class="token punctuation">.</span><span class="token function">toNanos</span><span class="token punctuation">(</span>keepAliveTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>threadFactory <span class="token operator">=</span> threadFactory<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>handler <span class="token operator">=</span> handler<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="提交任务"><a href="#提交任务" class="headerlink" title="提交任务"></a>提交任务</h5><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/*
* 进行下面三步
*
* 1. 如果运行的线程小于corePoolSize,则尝试使用用户定义的Runnalbe对象创建一个新的线程
*     调用addWorker函数会原子性的检查runState和workCount，通过返回false来防止在不应
*     该添加线程时添加了线程
* 2. 如果一个任务能够成功入队列，在添加一个线城时仍需要进行双重检查（因为在前一次检查后
*     该线程死亡了），或者当进入到此方法时，线程池已经shutdown了，所以需要再次检查状态，
*    若有必要，当停止时还需要回滚入队列操作，或者当线程池没有线程时需要创建一个新线程
* 3. 如果无法入队列，那么需要增加一个新线程，如果此操作失败，那么就意味着线程池已经shut
*     down或者已经饱和了，所以拒绝任务
*/</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span>Runnable command<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>command <span class="token operator">==</span> null<span class="token punctuation">)</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 获取线程池控制状态</span>
    <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">&lt;</span> corePoolSize<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// worker数量小于corePoolSize</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">addWorker</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 添加worker</span>
            <span class="token comment" spellcheck="true">// 成功则返回</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 不成功则再次获取线程池控制状态</span>
        c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment" spellcheck="true">// 线程池处于RUNNING状态，将用户自定义的Runnable对象添加进workQueue队列</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRunning</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> workQueue<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token comment" spellcheck="true">// 再次检查，获取线程池控制状态</span>
        <span class="token keyword">int</span> recheck <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 线程池不处于RUNNING状态，将自定义任务从workQueue队列中移除</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token function">isRunning</span><span class="token punctuation">(</span>recheck<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">remove</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span> 
            <span class="token comment" spellcheck="true">// 拒绝执行命令</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>recheck<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// worker数量等于0</span>
            <span class="token comment" spellcheck="true">// 添加worker</span>
            <span class="token function">addWorker</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">addWorker</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 添加worker失败</span>
        <span class="token comment" spellcheck="true">// 拒绝执行命令</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="addWorker"><a href="#addWorker" class="headerlink" title="addWorker"></a>addWorker</h5><ol>
<li><p>原子性的增加workerCount。</p>
</li>
<li><p>将用户给定的任务封装成为一个worker，并将此worker添加进workers集合中。</p>
</li>
<li><p>启动worker对应的线程，并启动该线程，运行worker的run方法。</p>
</li>
<li><p>回滚worker的创建动作，即将worker从workers集合中删除，并原子性的减少workerCount。</p>
</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">addWorker</span><span class="token punctuation">(</span>Runnable firstTask<span class="token punctuation">,</span> <span class="token keyword">boolean</span> core<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    retry<span class="token operator">:</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 外层无限循环</span>
        <span class="token comment" spellcheck="true">// 获取线程池控制状态</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 获取状态</span>
        <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// Check if queue empty only if necessary.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">>=</span> SHUTDOWN <span class="token operator">&amp;&amp;</span>            <span class="token comment" spellcheck="true">// 状态大于等于SHUTDOWN，初始的ctl为RUNNING，小于SHUTDOWN</span>
            <span class="token operator">!</span> <span class="token punctuation">(</span>rs <span class="token operator">==</span> SHUTDOWN <span class="token operator">&amp;&amp;</span>        <span class="token comment" spellcheck="true">// 状态为SHUTDOWN</span>
               firstTask <span class="token operator">==</span> null <span class="token operator">&amp;&amp;</span>        <span class="token comment" spellcheck="true">// 第一个任务为null</span>
               <span class="token operator">!</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">// worker队列不为空</span>
            <span class="token comment" spellcheck="true">// 返回</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// worker数量</span>
            <span class="token keyword">int</span> wc <span class="token operator">=</span> <span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>wc <span class="token operator">>=</span> CAPACITY <span class="token operator">||</span>                                <span class="token comment" spellcheck="true">// worker数量大于等于最大容量</span>
                wc <span class="token operator">>=</span> <span class="token punctuation">(</span>core <span class="token operator">?</span> corePoolSize <span class="token operator">:</span> maximumPoolSize<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// worker数量大于等于核心线程池大小或者最大线程池大小</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndIncrementWorkerCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>                 <span class="token comment" spellcheck="true">// 比较并增加worker的数量</span>
                <span class="token comment" spellcheck="true">// 跳出外层循环</span>
                <span class="token keyword">break</span> retry<span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 获取线程池控制状态</span>
            c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// Re-read ctl</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">!=</span> rs<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 此次的状态与上次获取的状态不相同</span>
                <span class="token comment" spellcheck="true">// 跳过剩余部分，继续循环</span>
                <span class="token keyword">continue</span> retry<span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// else CAS failed due to workerCount change; retry inner loop</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">// worker开始标识</span>
    <span class="token keyword">boolean</span> workerStarted <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// worker被添加标识</span>
    <span class="token keyword">boolean</span> workerAdded <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// </span>
    Worker w <span class="token operator">=</span> null<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 初始化worker</span>
        w <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span>firstTask<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 获取worker对应的线程</span>
        <span class="token keyword">final</span> Thread t <span class="token operator">=</span> w<span class="token punctuation">.</span>thread<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 线程不为null</span>
            <span class="token comment" spellcheck="true">// 线程池锁</span>
            <span class="token keyword">final</span> ReentrantLock mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 获取锁</span>
            mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">// Recheck while holding lock.</span>
                <span class="token comment" spellcheck="true">// Back out on ThreadFactory failure or if</span>
                <span class="token comment" spellcheck="true">// shut down before lock acquired.</span>
                <span class="token comment" spellcheck="true">// 线程池的运行状态</span>
                <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">&lt;</span> SHUTDOWN <span class="token operator">||</span>                                    <span class="token comment" spellcheck="true">// 小于SHUTDOWN</span>
                    <span class="token punctuation">(</span>rs <span class="token operator">==</span> SHUTDOWN <span class="token operator">&amp;&amp;</span> firstTask <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 等于SHUTDOWN并且firstTask为null</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">isAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// precheck that t is startable    // 线程刚添加进来，还未启动就存活</span>
                        <span class="token comment" spellcheck="true">// 抛出线程状态异常</span>
                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalThreadStateException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment" spellcheck="true">// 将worker添加到worker集合</span>
                    workers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment" spellcheck="true">// 获取worker集合的大小</span>
                    <span class="token keyword">int</span> s <span class="token operator">=</span> workers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">></span> largestPoolSize<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 队列大小大于largestPoolSize</span>
                        <span class="token comment" spellcheck="true">// 重新设置largestPoolSize</span>
                        largestPoolSize <span class="token operator">=</span> s<span class="token punctuation">;</span>
                    <span class="token comment" spellcheck="true">// 设置worker已被添加标识</span>
                    workerAdded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">// 释放锁</span>
                mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>workerAdded<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// worker被添加</span>
                <span class="token comment" spellcheck="true">// 开始执行worker的run方法</span>
                t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment" spellcheck="true">// 设置worker已开始标识</span>
                workerStarted <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> workerStarted<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// worker没有开始</span>
            <span class="token comment" spellcheck="true">// 添加worker失败</span>
            <span class="token function">addWorkerFailed</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> workerStarted<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="执行任务"><a href="#执行任务" class="headerlink" title="执行任务"></a>执行任务</h4><p>runWorker函数中会实际执行给定任务（即调用用户重写的run方法），并且当给定任务完成后，会继续从阻塞队列中取任务，直到阻塞队列为空（即任务全部完成）。在执行给定任务时，会调用钩子函数，利用钩子函数可以完成用户自定义的一些逻辑。在runWorker中会调用到getTask函数和processWorkerExit钩子函数</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">runWorker</span><span class="token punctuation">(</span>Worker w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// 获取当前线程</span>
    Thread wt <span class="token operator">=</span> Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 获取w的firstTask</span>
    Runnable task <span class="token operator">=</span> w<span class="token punctuation">.</span>firstTask<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 设置w的firstTask为null</span>
    w<span class="token punctuation">.</span>firstTask <span class="token operator">=</span> null<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 释放锁（设置state为0，允许中断）</span>
    w<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// allow interrupts</span>
    <span class="token keyword">boolean</span> completedAbruptly <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>task <span class="token operator">!=</span> null <span class="token operator">||</span> <span class="token punctuation">(</span>task <span class="token operator">=</span> <span class="token function">getTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 任务不为null或者阻塞队列还存在任务</span>
            <span class="token comment" spellcheck="true">// 获取锁</span>
            w<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// If pool is stopping, ensure thread is interrupted;</span>
            <span class="token comment" spellcheck="true">// if not, ensure thread is not interrupted.  This</span>
            <span class="token comment" spellcheck="true">// requires a recheck in second case to deal with</span>
            <span class="token comment" spellcheck="true">// shutdownNow race while clearing interrupt</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">runStateAtLeast</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> STOP<span class="token punctuation">)</span> <span class="token operator">||</span>    <span class="token comment" spellcheck="true">// 线程池的运行状态至少应该高于STOP</span>
                 <span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">interrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>                <span class="token comment" spellcheck="true">// 线程被中断</span>
                  <span class="token function">runStateAtLeast</span><span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> STOP<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>    <span class="token comment" spellcheck="true">// 再次检查，线程池的运行状态至少应该高于STOP</span>
                <span class="token operator">!</span>wt<span class="token punctuation">.</span><span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token comment" spellcheck="true">// wt线程（当前线程）没有被中断</span>
                wt<span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment" spellcheck="true">// 中断wt线程（当前线程）</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">// 在执行之前调用钩子函数</span>
                <span class="token function">beforeExecute</span><span class="token punctuation">(</span>wt<span class="token punctuation">,</span> task<span class="token punctuation">)</span><span class="token punctuation">;</span>
                Throwable thrown <span class="token operator">=</span> null<span class="token punctuation">;</span>
                <span class="token keyword">try</span> <span class="token punctuation">{</span>
                    <span class="token comment" spellcheck="true">// 运行给定的任务</span>
                    task<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    thrown <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token keyword">throw</span> x<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Error</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    thrown <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token keyword">throw</span> x<span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    thrown <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                    <span class="token comment" spellcheck="true">// 执行完后调用钩子函数</span>
                    <span class="token function">afterExecute</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> thrown<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                task <span class="token operator">=</span> null<span class="token punctuation">;</span>
                <span class="token comment" spellcheck="true">// 增加给worker完成的任务数量</span>
                w<span class="token punctuation">.</span>completedTasks<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token comment" spellcheck="true">// 释放锁</span>
                w<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        completedAbruptly <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 处理完成后，调用钩子函数</span>
        <span class="token function">processWorkerExit</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> completedAbruptly<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>此函数用于从workerQueue阻塞队列中获取Runnable对象，由于是阻塞队列，所以支持有限时间等待（poll）和无限时间等待（take）。在该函数中还会响应shutDown和、shutDownNow函数的操作，若检测到线程池处于SHUTDOWN或STOP状态，则会返回null，而不再返回阻塞队列中的Runnalbe对象。</p>
<pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">private</span> Runnable <span class="token function">getTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> timedOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// Did the last poll() time out?</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 无限循环，确保操作成功</span>
            <span class="token comment" spellcheck="true">// 获取线程池控制状态</span>
            <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 运行的状态</span>
            <span class="token keyword">int</span> rs <span class="token operator">=</span> <span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// Check if queue empty only if necessary.</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">>=</span> SHUTDOWN <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>rs <span class="token operator">>=</span> STOP <span class="token operator">||</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 大于等于SHUTDOWN（表示调用了shutDown）并且（大于等于STOP（调用了shutDownNow）或者worker阻塞队列为空）</span>
                <span class="token comment" spellcheck="true">// 减少worker的数量</span>
                <span class="token function">decrementWorkerCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment" spellcheck="true">// 返回null，不执行任务</span>
                <span class="token keyword">return</span> null<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment" spellcheck="true">// 获取worker数量</span>
            <span class="token keyword">int</span> wc <span class="token operator">=</span> <span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// Are workers subject to culling?</span>
            <span class="token keyword">boolean</span> timed <span class="token operator">=</span> allowCoreThreadTimeOut <span class="token operator">||</span> wc <span class="token operator">></span> corePoolSize<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 是否允许coreThread超时或者workerCount大于核心大小</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>wc <span class="token operator">></span> maximumPoolSize <span class="token operator">||</span> <span class="token punctuation">(</span>timed <span class="token operator">&amp;&amp;</span> timedOut<span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">// worker数量大于maximumPoolSize</span>
                <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>wc <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">||</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// workerCount大于1或者worker阻塞队列为空（在阻塞队列不为空时，需要保证至少有一个wc）</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compareAndDecrementWorkerCount</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">// 比较并减少workerCount</span>
                    <span class="token comment" spellcheck="true">// 返回null，不执行任务，该worker会退出</span>
                    <span class="token keyword">return</span> null<span class="token punctuation">;</span>
                <span class="token comment" spellcheck="true">// 跳过剩余部分，继续循环</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                Runnable r <span class="token operator">=</span> timed <span class="token operator">?</span>
                    workQueue<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span>keepAliveTime<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>NANOSECONDS<span class="token punctuation">)</span> <span class="token operator">:</span>    <span class="token comment" spellcheck="true">// 等待指定时间</span>
                    workQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                        <span class="token comment" spellcheck="true">// 一直等待，直到有元素</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">!=</span> null<span class="token punctuation">)</span>
                    <span class="token keyword">return</span> r<span class="token punctuation">;</span>
                <span class="token comment" spellcheck="true">// 等待指定时间后，没有获取元素，则超时</span>
                timedOut <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> retry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">// 抛出了被中断异常，重试，没有超时</span>
                timedOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>processWorkerExit函数是在worker退出时调用到的钩子函数，而引起worker退出的主要因素如下</p>
<ol>
<li><p>阻塞队列已经为空，即没有任务可以运行了。</p>
</li>
<li><p>调用了shutDown或shutDownNow函数</p>
</li>
</ol>
<p>此函数会根据是否中断了空闲线程来确定是否减少workerCount的值，并且将worker从workers集合中移除并且会尝试终止线程池。</p>
<pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">processWorkerExit</span><span class="token punctuation">(</span>Worker w<span class="token punctuation">,</span> <span class="token keyword">boolean</span> completedAbruptly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>completedAbruptly<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 如果被中断，则需要减少workCount    // If abrupt, then workerCount wasn't adjusted</span>
            <span class="token function">decrementWorkerCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 获取可重入锁</span>
        <span class="token keyword">final</span> ReentrantLock mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 获取锁</span>
        mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// 将worker完成的任务添加到总的完成任务中</span>
            completedTaskCount <span class="token operator">+=</span> w<span class="token punctuation">.</span>completedTasks<span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 从workers集合中移除该worker</span>
            workers<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// 释放锁</span>
            mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment" spellcheck="true">// 尝试终止</span>
        <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 获取线程池控制状态</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">runStateLessThan</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> STOP<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 小于STOP的运行状态</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>completedAbruptly<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">int</span> min <span class="token operator">=</span> allowCoreThreadTimeOut <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> corePoolSize<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>min <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 允许核心超时并且workQueue阻塞队列不为空</span>
                    min <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">>=</span> min<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// workerCount大于等于min</span>
                    <span class="token comment" spellcheck="true">// 直接返回</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// replacement not needed</span>
            <span class="token punctuation">}</span>
            <span class="token comment" spellcheck="true">// 添加worker</span>
            <span class="token function">addWorker</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="关闭线程池"><a href="#关闭线程池" class="headerlink" title="关闭线程池"></a>关闭线程池</h4><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> ReentrantLock mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
        mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// 检查shutdown权限</span>
            <span class="token function">checkShutdownAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 设置线程池控制状态为SHUTDOWN</span>
            <span class="token function">advanceRunState</span><span class="token punctuation">(</span>SHUTDOWN<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 中断空闲worker</span>
            <span class="token function">interruptIdleWorkers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 调用shutdown钩子函数</span>
            <span class="token function">onShutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// hook for ScheduledThreadPoolExecutor</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment" spellcheck="true">// 尝试终止</span>
        <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">tryTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 无限循环，确保操作成功</span>
            <span class="token comment" spellcheck="true">// 获取线程池控制状态</span>
            <span class="token keyword">int</span> c <span class="token operator">=</span> ctl<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRunning</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">||</span>                                            <span class="token comment" spellcheck="true">// 线程池的运行状态为RUNNING</span>
                <span class="token function">runStateAtLeast</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> TIDYING<span class="token punctuation">)</span> <span class="token operator">||</span>                            <span class="token comment" spellcheck="true">// 线程池的运行状态最小要大于TIDYING</span>
                <span class="token punctuation">(</span><span class="token function">runStateOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">==</span> SHUTDOWN <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span> workQueue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// 线程池的运行状态为SHUTDOWN并且workQueue队列不为null</span>
                <span class="token comment" spellcheck="true">// 不能终止，直接返回</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">workerCountOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 线程池正在运行的worker数量不为0    // Eligible to terminate</span>
                <span class="token comment" spellcheck="true">// 仅仅中断一个空闲的worker</span>
                <span class="token function">interruptIdleWorkers</span><span class="token punctuation">(</span>ONLY_ONE<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment" spellcheck="true">// 获取线程池的锁</span>
            <span class="token keyword">final</span> ReentrantLock mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">// 获取锁</span>
            mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ctl<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token function">ctlOf</span><span class="token punctuation">(</span>TIDYING<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 比较并设置线程池控制状态为TIDYING</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token comment" spellcheck="true">// 终止，钩子函数</span>
                        <span class="token function">terminated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                        <span class="token comment" spellcheck="true">// 设置线程池控制状态为TERMINATED</span>
                        ctl<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token function">ctlOf</span><span class="token punctuation">(</span>TERMINATED<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment" spellcheck="true">// 释放在termination条件上等待的所有线程</span>
                        termination<span class="token punctuation">.</span><span class="token function">signalAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">return</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">// 释放锁</span>
                mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment" spellcheck="true">// else retry on failed CAS</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">interruptIdleWorkers</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> onlyOne<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 线程池的锁</span>
        <span class="token keyword">final</span> ReentrantLock mainLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>mainLock<span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 获取锁</span>
        mainLock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>Worker w <span class="token operator">:</span> workers<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 遍历workers队列</span>
                <span class="token comment" spellcheck="true">// worker对应的线程</span>
                Thread t <span class="token operator">=</span> w<span class="token punctuation">.</span>thread<span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>t<span class="token punctuation">.</span><span class="token function">isInterrupted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> w<span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 线程未被中断并且成功获得锁</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token comment" spellcheck="true">// 中断线程</span>
                        t<span class="token punctuation">.</span><span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SecurityException</span> ignore<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
                        <span class="token comment" spellcheck="true">// 释放锁</span>
                        w<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>onlyOne<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 若只中断一个，则跳出循环</span>
                    <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// 释放锁</span>
            mainLock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><h3 id="StampedLock"><a href="#StampedLock" class="headerlink" title="StampedLock"></a>StampedLock</h3><ul>
<li>乐观锁（tryOptimisticRead），读写不互斥</li>
<li>悲观锁，读写互斥</li>
</ul>
<p>怎么保证读写同步</p>
<p>读后发现有写重新读取</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
   <span class="token keyword">private</span> <span class="token keyword">double</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token keyword">final</span> StampedLock sl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StampedLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">void</span> <span class="token function">move</span><span class="token punctuation">(</span><span class="token keyword">double</span> deltaX<span class="token punctuation">,</span> <span class="token keyword">double</span> deltaY<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// an exclusively locked method</span>
     <span class="token keyword">long</span> stamp <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">try</span> <span class="token punctuation">{</span>
       x <span class="token operator">+=</span> deltaX<span class="token punctuation">;</span>
       y <span class="token operator">+=</span> deltaY<span class="token punctuation">;</span>
     <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
       sl<span class="token punctuation">.</span><span class="token function">unlockWrite</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
  <span class="token comment" spellcheck="true">//下面看看乐观读锁案例</span>
   <span class="token keyword">double</span> <span class="token function">distanceFromOrigin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// A read-only method</span>
     <span class="token keyword">long</span> stamp <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">tryOptimisticRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获得一个乐观读锁</span>
     <span class="token keyword">double</span> currentX <span class="token operator">=</span> x<span class="token punctuation">,</span> currentY <span class="token operator">=</span> y<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//将两个字段读入本地局部变量</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>sl<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//检查发出乐观读锁后同时是否有其他写锁发生？</span>
        stamp <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//如果没有，我们再次获得一个读悲观锁</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          currentX <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将两个字段读入本地局部变量</span>
          currentY <span class="token operator">=</span> y<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将两个字段读入本地局部变量</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
           sl<span class="token punctuation">.</span><span class="token function">unlockRead</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
     <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>currentX <span class="token operator">*</span> currentX <span class="token operator">+</span> currentY <span class="token operator">*</span> currentY<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">//下面是悲观读锁案例</span>
   <span class="token keyword">void</span> <span class="token function">moveIfAtOrigin</span><span class="token punctuation">(</span><span class="token keyword">double</span> newX<span class="token punctuation">,</span> <span class="token keyword">double</span> newY<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// upgrade</span>
     <span class="token comment" spellcheck="true">// Could instead start with optimistic, not read mode</span>
     <span class="token keyword">long</span> stamp <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">try</span> <span class="token punctuation">{</span>
       <span class="token keyword">while</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token number">0.0</span> <span class="token operator">&amp;&amp;</span> y <span class="token operator">==</span> <span class="token number">0.0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//循环，检查当前状态是否符合</span>
         <span class="token keyword">long</span> ws <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">tryConvertToWriteLock</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//将读锁转为写锁</span>
         <span class="token keyword">if</span> <span class="token punctuation">(</span>ws <span class="token operator">!=</span> 0L<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//这是确认转为写锁是否成功</span>
           stamp <span class="token operator">=</span> ws<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//如果成功 替换票据</span>
           x <span class="token operator">=</span> newX<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//进行状态改变</span>
           y <span class="token operator">=</span> newY<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//进行状态改变</span>
           <span class="token keyword">break</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
         <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//如果不能成功转换为写锁</span>
           sl<span class="token punctuation">.</span><span class="token function">unlockRead</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//我们显式释放读锁</span>
           stamp <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//显式直接进行写锁 然后再通过循环再试</span>
         <span class="token punctuation">}</span>
       <span class="token punctuation">}</span>
     <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
       sl<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//释放读锁或写锁</span>
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
 <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="阶段二：多线程设计模式详细介绍"><a href="#阶段二：多线程设计模式详细介绍" class="headerlink" title="阶段二：多线程设计模式详细介绍"></a>阶段二：多线程设计模式详细介绍</h1><h2 id="七钟单例模式"><a href="#七钟单例模式" class="headerlink" title="七钟单例模式"></a>七钟单例模式</h2><ol>
<li><p>饿汉式；</p>
</li>
<li><p>懒汉式；</p>
</li>
<li><p>synchronize method</p>
</li>
<li><p>synchronize block</p>
</li>
<li><p>volatile 解决重排序</p>
</li>
<li><p>Holder方式 【推荐】</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonObject6</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token function">SingletonObject6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">InstanceHolder</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// static 只执行一次，并严格保证按照顺序执行</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> SingletonObject6 instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonObject6</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> SingletonObject6 <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> InstanceHolder<span class="token punctuation">.</span>instance<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>枚举</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SingletonObject7</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token function">SingletonObject7</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">enum</span> Singleton <span class="token punctuation">{</span>
        INSTANCE<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> SingletonObject7 instance<span class="token punctuation">;</span>
        <span class="token function">Singleton</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            instance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SingletonObject7</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">public</span> SingletonObject7 <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> instance<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> SingletonObject7 <span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> Singleton<span class="token punctuation">.</span>INSTANCE<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        IntStream<span class="token punctuation">.</span><span class="token function">rangeClosed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>i <span class="token operator">-</span><span class="token operator">></span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>SingletonObject7<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h2 id="WaitSet"><a href="#WaitSet" class="headerlink" title="WaitSet"></a>WaitSet</h2><ol>
<li>所有的对象都会有一个wait set,用来存放调用了该对象wait方法之后进入block状态线程</li>
<li>线程被notify之后，不一定立即得到执行</li>
<li>线程从wait set中被唤醒顺序不一定是FIFO.</li>
<li>线程被唤醒后，必须重新获取锁</li>
</ol>
<h2 id="volatile-最好的例子"><a href="#volatile-最好的例子" class="headerlink" title="volatile 最好的例子"></a>volatile 最好的例子</h2><h3 id="缓存不一致问题"><a href="#缓存不一致问题" class="headerlink" title="缓存不一致问题"></a>缓存不一致问题</h3><ol>
<li><p>内存模型，由于cpu和内存频率不同存在cpu 高速缓存</p>
<p><img src="http://cdn.linz.tech/volatile-1554818576765.png" alt="volatile"></p>
</li>
<li><p>由于Java优化，检测到线程没有写操作，就不需要去主线程中拿更新变量</p>
</li>
</ol>
<h4 id="解决缓存不一致问题"><a href="#解决缓存不一致问题" class="headerlink" title="解决缓存不一致问题"></a>解决缓存不一致问题</h4><pre class="line-numbers language-java"><code class="language-java">i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//两个线程同步执行 </span>
i<span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
cpu1 <span class="token operator">-</span><span class="token operator">></span> main memory <span class="token operator">-</span><span class="token operator">></span> i <span class="token operator">-</span><span class="token operator">></span> cache i<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">cache</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> main <span class="token function">memory</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
cpu2 <span class="token operator">-</span><span class="token operator">></span> main memory <span class="token operator">-</span><span class="token operator">></span> i <span class="token operator">-</span><span class="token operator">></span> cache i<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">cache</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> main <span class="token function">memory</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>两种方案</p>
<ol>
<li>给数据总线（数据总线，地址总线，控制总线）加锁</li>
<li>CPU高速缓存一致性协议（Intel MESI）</li>
</ol>
<blockquote>
<p>核心思想：</p>
<ol>
<li>当CPU写入数据的时候，如果发现该变量被共享（其他CPU存在该变量的副本），会发出一个信号，通知其他CPU该变量缓存无效；</li>
<li>其他的CPU访问该变量的时候，重新到主内存中获取</li>
</ol>
</blockquote>
<h3 id="指令重排-amp-happens-before规则"><a href="#指令重排-amp-happens-before规则" class="headerlink" title="指令重排&amp;happens-before规则"></a>指令重排&amp;happens-before规则</h3><h3 id="三个重要概念"><a href="#三个重要概念" class="headerlink" title="三个重要概念"></a>三个重要概念</h3><p>原子性，可见性，有序性</p>
<ol>
<li><p>原子性： 对基本数据类型的变量读取和赋值是保证原子性的，要么成功，要么失败，这些操作不可中断</p>
<pre class="line-numbers language-java"><code class="language-java">a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> 原子性
b <span class="token operator">=</span> a<span class="token punctuation">;</span> 不满足， <span class="token number">1</span><span class="token punctuation">.</span> read a <span class="token punctuation">;</span> <span class="token number">2</span><span class="token punctuation">.</span> assign b<span class="token punctuation">;</span>
c<span class="token operator">++</span><span class="token punctuation">;</span>   不满足    <span class="token number">1</span><span class="token punctuation">.</span> read c<span class="token punctuation">;</span> <span class="token number">2</span><span class="token punctuation">.</span> add<span class="token punctuation">;</span> <span class="token number">3</span><span class="token punctuation">.</span> assign to c<span class="token punctuation">;</span>
c <span class="token operator">=</span> c<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> 不满足 <span class="token number">1</span><span class="token punctuation">.</span> read c<span class="token punctuation">;</span> <span class="token number">2</span><span class="token punctuation">.</span> add<span class="token punctuation">;</span> <span class="token number">3</span><span class="token punctuation">.</span> assign to c<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>可见性</p>
</li>
<li><p>有序性<br><img src="http://cdn.linz.tech/%E6%9C%89%E5%BA%8F%E6%80%A7.png" alt="有序性"></p>
</li>
</ol>
<h3 id="volatile-关键字作用"><a href="#volatile-关键字作用" class="headerlink" title="volatile 关键字作用"></a>volatile 关键字作用</h3><ol>
<li>保证重排序循序；</li>
<li>强制对缓存的修改立刻更新到主存；</li>
<li>如果有写操作，其他CPU中的缓存失效；</li>
</ol>
<h3 id="volatile实践"><a href="#volatile实践" class="headerlink" title="volatile实践"></a>volatile实践</h3><ol>
<li>volatile读操作和非volatile一样，写操作开销比读多得多，但是volatile 的总开销仍然要比锁获取低<br>==&gt; 如果读操作的次数要远远超过写操作，与锁相比，volatile 变量通常能够减少同步的性能开销。</li>
</ol>
<h3 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h3><ol>
<li><a href="https://blog.csdn.net/vernonzheng/article/details/8201744" target="_blank" rel="noopener">Java多线程（一）之volatile深入分析</a></li>
<li><a href="https://www.ibm.com/developerworks/cn/java/j-jtp06197.html" target="_blank" rel="noopener">正确使用 Volatile 变量 【重点】</a> EverNote有笔记</li>
</ol>
<h2 id="观察者模式"><a href="#观察者模式" class="headerlink" title="观察者模式"></a>观察者模式</h2><pre class="line-numbers language-java"><code class="language-java">design_pattern<span class="token operator">/</span>ObserverClient<span class="token punctuation">.</span>java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="一个人通过"><a href="#一个人通过" class="headerlink" title="一个人通过"></a>一个人通过</h2><blockquote>
<p>共享资源</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java">design_pattern<span class="token operator">/</span>gate<span class="token punctuation">.</span>java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="读写锁分离"><a href="#读写锁分离" class="headerlink" title="读写锁分离"></a>读写锁分离</h2><pre class="line-numbers language-java"><code class="language-java">design_pattern<span class="token operator">/</span>chapter03_readwrite_lock<span class="token operator">/</span>ReaderWorker<span class="token punctuation">.</span>java<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="不可变类-Immutable"><a href="#不可变类-Immutable" class="headerlink" title="不可变类 Immutable"></a>不可变类 Immutable</h2><p>chapter 07</p>
<blockquote>
<p>作用： 多线不用加锁，提高程效率</p>
</blockquote>
<p>简单的不可变操作</p>
<ol>
<li>返回List用<code>Collections.unmodifiableList(list)</code></li>
<li>返回对象用clone</li>
</ol>
<h2 id="Future-Design-Pattern"><a href="#Future-Design-Pattern" class="headerlink" title="Future Design Pattern"></a>Future Design Pattern</h2><blockquote>
<p>设计逻辑： 在不堵塞主线程的情况下，主线程做其他的事情，然后在去取结果</p>
</blockquote>
<p>chapter08</p>
<pre class="line-numbers language-java"><code class="language-java">Future        <span class="token operator">-</span><span class="token operator">></span>代表的是未来的一个凭据
FutureTask    <span class="token operator">-</span><span class="token operator">></span>将你的调用逻辑进行了隔离
FutureService <span class="token operator">-</span><span class="token operator">></span>桥接 Future和 FutureTask<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="Guarded-Suspension-design-pattern"><a href="#Guarded-Suspension-design-pattern" class="headerlink" title="Guarded Suspension design pattern"></a>Guarded Suspension design pattern</h2><blockquote>
<p>chapter09</p>
</blockquote>
<h3 id="实际生活中的例子"><a href="#实际生活中的例子" class="headerlink" title="实际生活中的例子"></a>实际生活中的例子</h3><p>等我一下，我一会就来 ==&gt; 任务太多，把任务缓存到队列中，后面在处理</p>
<pre class="line-numbers language-shell"><code class="language-shell">我正在厨房做饭
快递员敲门，说你的快递来了，要求开门<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="The-Thread-Specific-Storage"><a href="#The-Thread-Specific-Storage" class="headerlink" title="The Thread-Specific Storage"></a>The Thread-Specific Storage</h2><blockquote>
<p>线程保险箱， chapter11</p>
</blockquote>
<ol>
<li>ThreadLocal  早期实现原理 </li>
</ol>
<pre class="line-numbers language-java"><code class="language-java">Map<span class="token operator">&lt;</span>Thread<span class="token punctuation">,</span>T<span class="token operator">></span> storage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HassMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="2">
<li><p>应用在同一线程中做上下文设计模式</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queryAction<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The name query successful"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        httpAction<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The card id query successful"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//Context 为ThreadLocal 实现的单例模式用于run内部数据储存</span>
        Context context <span class="token operator">=</span> ActionContext<span class="token punctuation">.</span><span class="token function">getActionContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"The Name is "</span> <span class="token operator">+</span> context<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                           <span class="token operator">+</span> <span class="token string">" and CardId "</span> <span class="token operator">+</span>         context<span class="token punctuation">.</span><span class="token function">getCardId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h2 id="Balking-pattern"><a href="#Balking-pattern" class="headerlink" title="Balking pattern"></a>Balking pattern</h2><blockquote>
<p>执行到某个状态，终端执行</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>changed<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 设计模式核心重点，当发现事情已经被其他线程干完，不在往下执行</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">doSave</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>changed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Producer-and-Consumer-pattern"><a href="#Producer-and-Consumer-pattern" class="headerlink" title="Producer and Consumer pattern"></a>Producer and Consumer pattern</h2><h3 id="BlockingQueue-实现"><a href="#BlockingQueue-实现" class="headerlink" title="BlockingQueue 实现"></a>BlockingQueue 实现</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">final</span> BlockingQueue<span class="token operator">&lt;</span>Integer<span class="token operator">></span> blockingQueue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBlockingQueue</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//生产</span>
blockingQueue<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//消费</span>
blockingQueue<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Semaphore-实现"><a href="#Semaphore-实现" class="headerlink" title="Semaphore 实现"></a>Semaphore 实现</h3><pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">final</span> Semaphore notFull <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Semaphore</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//计数</span>
  <span class="token keyword">final</span> Semaphore notEmpty <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Semaphore</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//计数</span>
  <span class="token keyword">final</span> Semaphore mutex <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Semaphore</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 锁的效果</span>

<span class="token comment" spellcheck="true">// Producer.java</span>
 <span class="token keyword">try</span> <span class="token punctuation">{</span>
     notFull<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     mutex<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     count<span class="token operator">++</span><span class="token punctuation">;</span>
     System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token operator">+</span> <span class="token string">"生产者生产，目前总共有"</span> <span class="token operator">+</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
     mutex<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     notEmpty<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">//Cusomer.java</span>
 <span class="token keyword">try</span> <span class="token punctuation">{</span>
     notEmpty<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     mutex<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     count<span class="token operator">--</span><span class="token punctuation">;</span>
     System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                        <span class="token operator">+</span> <span class="token string">"消费者消费，目前总共有"</span> <span class="token operator">+</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
     mutex<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     notFull<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="synchronized"><a href="#synchronized" class="headerlink" title="synchronized"></a>synchronized</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">push</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count <span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">take</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count <span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="ReentrantLock实现"><a href="#ReentrantLock实现" class="headerlink" title="ReentrantLock实现"></a>ReentrantLock实现</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//创建一个锁对象</span>
<span class="token keyword">private</span> Lock lock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReentrantLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//创建两个条件变量，一个为缓冲区非满，一个为缓冲区非空</span>
<span class="token keyword">private</span> <span class="token keyword">final</span> Condition notFull <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">final</span> Condition notEmpty <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">//Producer.java</span>
  lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span><span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>count <span class="token operator">==</span> FULL<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            notFull<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        count <span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//唤醒消费者</span>
         notEmpty<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">//Consumer.java</span>
lock<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        notEmpty<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    notFull<span class="token punctuation">.</span><span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    lock<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token keyword">final</span> Message message<span class="token punctuation">)</span> <span class="token keyword">throws</span> InterruptedException <span class="token punctuation">{</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>queue<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// multi-thread lock </span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// out over limit wait</span>
            queue<span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        queue<span class="token punctuation">.</span><span class="token function">addLast</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// first in last out </span>
        queue<span class="token punctuation">.</span><span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Count-Donw-pattern"><a href="#Count-Donw-pattern" class="headerlink" title="Count Donw pattern"></a>Count Donw pattern</h2><ol>
<li><p>JDK CountDownLatch </p>
<pre class="line-numbers language-java"><code class="language-java"> CountDownLatch latch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      latch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      latch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>模仿</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">public</span> <span class="token function">CountDown</span><span class="token punctuation">(</span><span class="token keyword">int</span> total<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> total<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>counter<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">notifyAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> InterruptedException <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>counter <span class="token operator">!=</span> total<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h2 id="Two-Phase-Termination-Design-Pattern"><a href="#Two-Phase-Termination-Design-Pattern" class="headerlink" title="Two-Phase Termination Design Pattern"></a>Two-Phase Termination Design Pattern</h2><blockquote>
<p>线程执行完毕，在线程中关闭一次，还需要手动清理一下资源</p>
</blockquote>
<h2 id="Work-Thread-Design-Pattern"><a href="#Work-Thread-Design-Pattern" class="headerlink" title="Work Thread Design Pattern"></a>Work Thread Design Pattern</h2><blockquote>
<p>流水线工人，流水线一直开着，有固定工人组装，运输工人负责运输添加流水线的货物</p>
</blockquote>
<h2 id="Active-Object"><a href="#Active-Object" class="headerlink" title="Active Object"></a>Active Object</h2><blockquote>
<p>（Chapter18）接受异步消息的主动方法</p>
</blockquote>
<h1 id="阶段三：并发包详情介绍"><a href="#阶段三：并发包详情介绍" class="headerlink" title="阶段三：并发包详情介绍"></a>阶段三：并发包详情介绍</h1><h2 id="1-原子类型详细讲解"><a href="#1-原子类型详细讲解" class="headerlink" title="1. 原子类型详细讲解"></a>1. 原子类型详细讲解</h2><h3 id="1-1-Atomic"><a href="#1-1-Atomic" class="headerlink" title="1.1 Atomic*"></a>1.1 Atomic*</h3><blockquote>
<ol>
<li>volatile 修饰的变量</li>
<li>CAS算法， 也就是CPU级别的同步命令进程间通信</li>
</ol>
</blockquote>
<h3 id="1-2-AtomicReference-ABA问题"><a href="#1-2-AtomicReference-ABA问题" class="headerlink" title="1.2 AtomicReference ABA问题"></a>1.2 AtomicReference ABA问题</h3><p>缺点：</p>
<p>CAS轻量级锁，带来的一个严重问题，ABA问题， 问题描述，当T2从A回到A状态可以有各种条件的变化，而T1的判断条件可能导致无法感知到T2的多种状态变化而产生问题</p>
<pre class="line-numbers language-shell"><code class="language-shell">T1            T2
A->C        A->B->A<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>解决方案是加版本标签，官方提供的解决类<code>AtomicStampedReference</code></p>
<p>AtomicLong 如果是64位的情况下可能会有高位低位分别传输的问题导致非原子性；</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">compareAndSet</span><span class="token punctuation">(</span>V   expectedReference<span class="token punctuation">,</span>
                                 V   newReference<span class="token punctuation">,</span>
                                 <span class="token keyword">int</span> expectedStamp<span class="token punctuation">,</span>
                                 <span class="token keyword">int</span> newStamp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Pair<span class="token operator">&lt;</span>V<span class="token operator">></span> current <span class="token operator">=</span> pair<span class="token punctuation">;</span>
        <span class="token keyword">return</span>
            expectedReference <span class="token operator">==</span> current<span class="token punctuation">.</span>reference <span class="token operator">&amp;&amp;</span>
            expectedStamp <span class="token operator">==</span> current<span class="token punctuation">.</span>stamp <span class="token operator">&amp;&amp;</span>
            <span class="token punctuation">(</span><span class="token punctuation">(</span>newReference <span class="token operator">==</span> current<span class="token punctuation">.</span>reference <span class="token operator">&amp;&amp;</span>
              newStamp <span class="token operator">==</span> current<span class="token punctuation">.</span>stamp<span class="token punctuation">)</span> <span class="token operator">||</span>
             <span class="token function">casPair</span><span class="token punctuation">(</span>current<span class="token punctuation">,</span> Pair<span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>newReference<span class="token punctuation">,</span> newStamp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="1-2-Atomic-FieldUpdater使用场景"><a href="#1-2-Atomic-FieldUpdater使用场景" class="headerlink" title="1.2  Atomic*FieldUpdater使用场景"></a>1.2  Atomic*FieldUpdater使用场景</h3><ol>
<li><p>想要类的属性操作具备原子性</p>
<ul>
<li>volatile</li>
<li>非private，protected（保证可访问）</li>
<li>类型一致</li>
</ul>
</li>
<li><p>不想使用锁（包括显式锁或者重量级锁synchronized）</p>
<ol>
<li>大量需要原子类型修饰的对象，相对比较耗费内存，案例ConcurrentSkipListMap</li>
</ol>
<pre class="line-numbers language-java"><code class="language-java">Node<span class="token punctuation">{</span>
    pre<span class="token operator">:</span>Node<span class="token punctuation">;</span>
    next<span class="token operator">:</span>Node<span class="token punctuation">;</span>
    value<span class="token operator">:</span>Objecct<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="1-3-Unsafe"><a href="#1-3-Unsafe" class="headerlink" title="1.3 Unsafe"></a>1.3 Unsafe</h3><blockquote>
<p>Unsafe是Java中一个底层类，包含了很多基础的操作，比如数组操作、对象操作、内存操作、CAS操作、线程(park)操作、栅栏（Fence）操作，JUC包、一些三方框架都使用Unsafe类来保证并发安全。</p>
<pre><code>Java is a safe programming language and prevents programmer from doing
a lot of stupid mistakes, most of which based on memory management.
But, there is a way to do such mistakes intentionally, using Unsafe class</code></pre></blockquote>
<ul>
<li>park/unpark LockSupport 依赖park/unpark 实现</li>
</ul>
<h4 id="Java-调用C-C-代码"><a href="#Java-调用C-C-代码" class="headerlink" title="Java 调用C/C++ 代码"></a>Java 调用C/C++ 代码</h4><p>Hello.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hello</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token punctuation">{</span>
    System<span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">native</span> <span class="token keyword">void</span> <span class="token function">hi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>编译Hello.java <code>javac Hello.java</code></p>
<p>生成Jni头文件 <code>javah -jni Hello</code></p>
<p>编写C代码<br>Hello.c</p>
<pre class="line-numbers language-c"><code class="language-c"><span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;jni.h></span></span>
<span class="token macro property">#<span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span>
<span class="token comment" spellcheck="true">/* Header for class Hello */</span>

<span class="token macro property">#<span class="token directive keyword">ifndef</span> _Included_Hello</span>
<span class="token macro property">#<span class="token directive keyword">define</span> _Included_Hello</span>
<span class="token macro property">#<span class="token directive keyword">ifdef</span> __cplusplus</span>
<span class="token keyword">extern</span> <span class="token string">"C"</span> <span class="token punctuation">{</span>
<span class="token macro property">#<span class="token directive keyword">endif</span></span>
<span class="token comment" spellcheck="true">/*
 * Class:     Hello
 * Method:    hi
 * Signature: ()V
 */</span>
JNIEXPORT <span class="token keyword">void</span> JNICALL <span class="token function">Java_Hello_hi</span>
  <span class="token punctuation">(</span>JNIEnv <span class="token operator">*</span> env<span class="token punctuation">,</span> jobject o<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"Hello Jni\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token macro property">#<span class="token directive keyword">ifdef</span> __cplusplus</span>
<span class="token punctuation">}</span>
<span class="token macro property">#<span class="token directive keyword">endif</span></span>
<span class="token macro property">#<span class="token directive keyword">endif</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>编译C<code>gcc -fPIC -D_REENETRANT -I "$JAVA_HOME/include" -I "$JAVA_HOME/include/linux" -c Hello.c</code></p>
<p>生成连接库 <code>gcc -shared Hello.o -o libhello.so</code></p>
<p>运行java Hello 如下异常，需配置<code>LD_LIBRARY_PATH</code>为当前路径</p>
<p> <code>export LD_LIBRARY_PATH=./lib:$LD_LIBRARY_PATH</code></p>
<pre class="line-numbers language-java"><code class="language-java">Exception in thread <span class="token string">"main"</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>UnsatisfiedLinkError<span class="token operator">:</span> no hello in java<span class="token punctuation">.</span>library<span class="token punctuation">.</span>path
        at java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ClassLoader<span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span>ClassLoader<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1867</span><span class="token punctuation">)</span>
        at java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Runtime<span class="token punctuation">.</span><span class="token function">loadLibrary0</span><span class="token punctuation">(</span>Runtime<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">870</span><span class="token punctuation">)</span>
        at java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>System<span class="token punctuation">.</span><span class="token function">loadLibrary</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1122</span><span class="token punctuation">)</span>
        at Hello<span class="token punctuation">.</span>&lt;clinit<span class="token operator">></span><span class="token punctuation">(</span>Hello<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="unsafe常用方法"><a href="#unsafe常用方法" class="headerlink" title="unsafe常用方法"></a>unsafe常用方法</h4><pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**
     * 绕过初始化
     */</span>
    Simple simple2 <span class="token operator">=</span> <span class="token punctuation">(</span>Simple<span class="token punctuation">)</span> unsafe<span class="token punctuation">.</span><span class="token function">allocateInstance</span><span class="token punctuation">(</span>Simple<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>simple2<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    Guard guard <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Guard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    guard<span class="token punctuation">.</span><span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">/**
     * 直接修改guard内存
     */</span>
    Field field <span class="token operator">=</span> guard<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">"ACCESS_ALLOWED"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    unsafe<span class="token punctuation">.</span><span class="token function">putInt</span><span class="token punctuation">(</span>guard<span class="token punctuation">,</span> unsafe<span class="token punctuation">.</span><span class="token function">objectFieldOffset</span><span class="token punctuation">(</span>field<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    guard<span class="token punctuation">.</span><span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">/**
     * 定义类
     */</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token function">loadClassContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Class<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> aClass <span class="token operator">=</span> unsafe<span class="token punctuation">.</span><span class="token function">defineClass</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> bytes<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bytes<span class="token punctuation">.</span>length<span class="token punctuation">,</span>null<span class="token punctuation">,</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> v <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> aClass<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">"get"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>aClass<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"defineClass:"</span> <span class="token operator">+</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">/**
     * 获取类的size
     */</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">sizeOf</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Simple</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="2-Java并发包工具"><a href="#2-Java并发包工具" class="headerlink" title="2. Java并发包工具"></a>2. Java并发包工具</h2><h3 id="2-1-CountDownLatch"><a href="#2-1-CountDownLatch" class="headerlink" title="2.1 CountDownLatch"></a>2.1 CountDownLatch</h3><blockquote>
<ol>
<li>并行转窜行，等到最后结果，离散平行任务增加逻辑层次关系</li>
<li>有一个任务执行的时候发现可以交给其他线程执行；</li>
</ol>
</blockquote>
<h3 id="2-2-CyclicBarrier"><a href="#2-2-CyclicBarrier" class="headerlink" title="2.2 CyclicBarrier"></a>2.2 CyclicBarrier</h3><p>API</p>
<pre class="line-numbers language-java"><code class="language-java"> CyclicBarrier barrier <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CyclicBarrier</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment" spellcheck="true">//当所有线程线程写入操作完毕之后，所有线程就继续进行后续的操作了</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
barrier<span class="token punctuation">.</span><span class="token function">getNumberWaiting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//获取当前等待数量</span>
barrier<span class="token punctuation">.</span><span class="token function">getParties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
barrier<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 当getNumberWaiting !=0 的时候, reset会导致正在等待的线程报BrokenBarrierException 异常</span>

即reset <span class="token operator">==</span> initial <span class="token operator">==</span> finish；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>CountDownLatch VS CyclicBarrier</p>
<ol>
<li>CountDownLatch 不能reset，而CyclicBarrier是可以循环使用的；</li>
<li>latch 工作线程互不关系， barrier工作线程必须等到</li>
</ol>
<h3 id="2-3-Semaphore"><a href="#2-3-Semaphore" class="headerlink" title="2.3 Semaphore"></a>2.3 Semaphore</h3><blockquote>
<p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Semaphore.html" target="_blank" rel="noopener">Semaphore Api</a></p>
</blockquote>
<p>官方demo</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">class</span> <span class="token class-name">Pool</span> <span class="token punctuation">{</span>
   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> MAX_AVAILABLE <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
   <span class="token keyword">private</span> <span class="token keyword">final</span> Semaphore available <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Semaphore</span><span class="token punctuation">(</span>MAX_AVAILABLE<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">public</span> Object <span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> InterruptedException <span class="token punctuation">{</span>
     available<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">return</span> <span class="token function">getNextAvailableItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">putItem</span><span class="token punctuation">(</span>Object x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">markAsUnused</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
       available<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token comment" spellcheck="true">// Not a particularly efficient data structure; just for demo</span>
   <span class="token keyword">protected</span> Object<span class="token punctuation">[</span><span class="token punctuation">]</span> items <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> whatever kinds of items being managed
   <span class="token keyword">protected</span> <span class="token keyword">boolean</span><span class="token punctuation">[</span><span class="token punctuation">]</span> used <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">boolean</span><span class="token punctuation">[</span>MAX_AVAILABLE<span class="token punctuation">]</span><span class="token punctuation">;</span>

   <span class="token keyword">protected</span> <span class="token keyword">synchronized</span> Object <span class="token function">getNextAvailableItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> MAX_AVAILABLE<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>used<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          used<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
     <span class="token keyword">return</span> null<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// not reached</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">protected</span> <span class="token keyword">synchronized</span> <span class="token keyword">boolean</span> <span class="token function">markAsUnused</span><span class="token punctuation">(</span>Object item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> MAX_AVAILABLE<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>item <span class="token operator">==</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>used<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            used<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
     <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
 <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Semaphore.html#acquireUninterruptibly--" target="_blank" rel="noopener">acquireUninterruptibly</a> 不处理中断</p>
</li>
<li><p><strong>acquire</strong>(int permits) 同时获取多个中断</p>
</li>
<li><p><strong>release</strong>(int permits) 同时释放多个中断</p>
</li>
<li><p>drainPermits() Acquires and returns all permits that are immediately available.</p>
</li>
</ul>
<h3 id="2-4-ReentrantLock"><a href="#2-4-ReentrantLock" class="headerlink" title="2.4 ReentrantLock"></a>2.4 ReentrantLock</h3><blockquote>
<h3 id="ReentrantLock-API"><a href="#ReentrantLock-API" class="headerlink" title="ReentrantLock API"></a><a href="https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/locks/ReentrantLock.html" target="_blank" rel="noopener">ReentrantLock API</a></h3><ol>
<li>getOwner() 尝试拿到这个锁，那不到的时候尝试中断</li>
</ol>
</blockquote>
<ul>
<li><p>ConditionObject 具体实现类</p>
<blockquote>
<p> 维护一个单向列表，await向等待队列插入Node，叫醒向等待队列头部移除一个节点，放人同步队列中竞争CPU资源</p>
</blockquote>
<ul>
<li>同步队列</li>
<li>等待队列</li>
</ul>
</li>
</ul>
<h3 id="2-5-Exchanger"><a href="#2-5-Exchanger" class="headerlink" title="2.5 Exchanger"></a>2.5 Exchanger</h3><blockquote>
<p><a href="https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Exchanger.html" target="_blank" rel="noopener">Exchanger API</a></p>
</blockquote>
<p>注意：</p>
<ol>
<li>exchanger的值指向的是同一个堆内存，如果修改两边都会变动，如操作某些List =&gt; 代码ExchangerExample。 </li>
</ol>
<p>官网Demo</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">FillAndEmpty</span> <span class="token punctuation">{</span>
   Exchanger<span class="token operator">&lt;</span>DataBuffer<span class="token operator">></span> exchanger <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Exchanger</span><span class="token operator">&lt;</span>DataBuffer<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   DataBuffer initialEmptyBuffer <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> a made<span class="token operator">-</span>up type
   DataBuffer initialFullBuffer <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

   <span class="token keyword">class</span> <span class="token class-name">FillingLoop</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       DataBuffer currentBuffer <span class="token operator">=</span> initialEmptyBuffer<span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
         <span class="token keyword">while</span> <span class="token punctuation">(</span>currentBuffer <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token function">addToBuffer</span><span class="token punctuation">(</span>currentBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">if</span> <span class="token punctuation">(</span>currentBuffer<span class="token punctuation">.</span><span class="token function">isFull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
             currentBuffer <span class="token operator">=</span> exchanger<span class="token punctuation">.</span><span class="token function">exchange</span><span class="token punctuation">(</span>currentBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> handle <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">class</span> <span class="token class-name">EmptyingLoop</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>
     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       DataBuffer currentBuffer <span class="token operator">=</span> initialFullBuffer<span class="token punctuation">;</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
         <span class="token keyword">while</span> <span class="token punctuation">(</span>currentBuffer <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
           <span class="token function">takeFromBuffer</span><span class="token punctuation">(</span>currentBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">if</span> <span class="token punctuation">(</span>currentBuffer<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
             currentBuffer <span class="token operator">=</span> exchanger<span class="token punctuation">.</span><span class="token function">exchange</span><span class="token punctuation">(</span>currentBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> handle <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FillingLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EmptyingLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
 <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>博文：<a href="https://www.jianshu.com/p/c523826b2c94" target="_blank" rel="noopener">【死磕Java并发】—–J.U.C之并发工具类：Exchanger</a></p>
<h3 id="2-6-ReadWriteLock"><a href="#2-6-ReadWriteLock" class="headerlink" title="2.6 ReadWriteLock"></a>2.6 ReadWriteLock</h3><h3 id="2-7-Condition"><a href="#2-7-Condition" class="headerlink" title="2.7 Condition"></a>2.7 Condition</h3><h3 id="2-8-StampedLock"><a href="#2-8-StampedLock" class="headerlink" title="2.8 StampedLock"></a>2.8 StampedLock</h3><blockquote>
<p>读的时候也能写</p>
</blockquote>
<p>最简单案例</p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> stamped <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      stamped <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      lock<span class="token punctuation">.</span><span class="token function">unlockRead</span><span class="token punctuation">(</span>stamped<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">long</span> stamped <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      stamped <span class="token operator">=</span> lock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      lock<span class="token punctuation">.</span><span class="token function">unlockWrite</span><span class="token punctuation">(</span>stamped<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>官网demo</p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">class</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">double</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> StampedLock sl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StampedLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">move</span><span class="token punctuation">(</span><span class="token keyword">double</span> deltaX<span class="token punctuation">,</span> <span class="token keyword">double</span> deltaY<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// an exclusively locked method</span>
      <span class="token keyword">long</span> stamp <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        x <span class="token operator">+=</span> deltaX<span class="token punctuation">;</span>
        y <span class="token operator">+=</span> deltaY<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        sl<span class="token punctuation">.</span><span class="token function">unlockWrite</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">double</span> <span class="token function">distanceFromOrigin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// A read-only method</span>
      <span class="token keyword">long</span> stamp <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">tryOptimisticRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">double</span> currentX <span class="token operator">=</span> x<span class="token punctuation">,</span> currentY <span class="token operator">=</span> y<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>sl<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         stamp <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">try</span> <span class="token punctuation">{</span>
           currentX <span class="token operator">=</span> x<span class="token punctuation">;</span>
           currentY <span class="token operator">=</span> y<span class="token punctuation">;</span>
         <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            sl<span class="token punctuation">.</span><span class="token function">unlockRead</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>currentX <span class="token operator">*</span> currentX <span class="token operator">+</span> currentY <span class="token operator">*</span> currentY<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">moveIfAtOrigin</span><span class="token punctuation">(</span><span class="token keyword">double</span> newX<span class="token punctuation">,</span> <span class="token keyword">double</span> newY<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// upgrade</span>
      <span class="token comment" spellcheck="true">// Could instead start with optimistic, not read mode</span>
      <span class="token keyword">long</span> stamp <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">readLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>x <span class="token operator">==</span> <span class="token number">0.0</span> <span class="token operator">&amp;&amp;</span> y <span class="token operator">==</span> <span class="token number">0.0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">long</span> ws <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">tryConvertToWriteLock</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>ws <span class="token operator">!=</span> 0L<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stamp <span class="token operator">=</span> ws<span class="token punctuation">;</span>
            x <span class="token operator">=</span> newX<span class="token punctuation">;</span>
            y <span class="token operator">=</span> newY<span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">else</span> <span class="token punctuation">{</span>
            sl<span class="token punctuation">.</span><span class="token function">unlockRead</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
            stamp <span class="token operator">=</span> sl<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        sl<span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span>stamp<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="2-9-Forkjoin"><a href="#2-9-Forkjoin" class="headerlink" title="2.9 Forkjoin"></a>2.9 Forkjoin</h3><blockquote>
<p>任务分解框架</p>
</blockquote>
<ol>
<li>RecursiveTask  有返回值</li>
<li>RecursiveAction 无返回值</li>
</ol>
<h3 id="3-0-Phaser"><a href="#3-0-Phaser" class="headerlink" title="3.0 Phaser"></a>3.0 Phaser</h3><blockquote>
<p><a href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/Phaser.html" target="_blank" rel="noopener">Phaser API</a></p>
</blockquote>
<ol>
<li><p>通过 phaser.register() 可以动态添加；</p>
</li>
<li><p>可以循环使用</p>
</li>
<li><p>arriveAndAwaitAdvance Arrives at this phaser and awaits others.</p>
</li>
<li><p>arriveAndDeregister  动态的–；我退出你 们不用等我了</p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token comment" spellcheck="true">/**
     * Arrives at this phaser and deregisters from it without waiting
     * for others to arrive. Deregistration reduces the number of
     * parties required to advance in future phases.  If this phaser
     * has a parent, and deregistration causes this phaser to have
     * zero parties, this phaser is also deregistered from its parent.
     *
     * &lt;p>It is a usage error for an unregistered party to invoke this
     * method.  However, this error may result in an {@code
     * IllegalStateException} only upon some subsequent operation on
     * this phaser, if ever.
     *
     * @return the arrival phase number, or a negative value if terminated
     * @throws IllegalStateException if not terminated and the number
     * of registered or unarrived parties would become negative
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">arriveAndDeregister</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">doArrive</span><span class="token punctuation">(</span>ONE_DEREGISTER<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<ol start="5">
<li><p>arrive</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token comment" spellcheck="true">/**
     * Arrives at this phaser, without waiting for others to arrive.
     *
     * &lt;p>It is a usage error for an unregistered party to invoke this
     * method.  However, this error may result in an {@code
     * IllegalStateException} only upon some subsequent operation on
     * this phaser, if ever.
     *
     * @return the arrival phase number, or a negative value if terminated
     * @throws IllegalStateException if not terminated and the number
     * of unarrived parties would become negative
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">arrive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">doArrive</span><span class="token punctuation">(</span>ONE_ARRIVAL<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<ol start="6">
<li>bulkRegister 注册多个</li>
</ol>
<p>状态判断</p>
<ol>
<li>getRegisteredParties</li>
<li>getArrivedParties</li>
<li>getUnarrivedParties</li>
</ol>
<p>控制</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//根据条件控制是否终止Phaser   </span>
<span class="token keyword">final</span> Phaser phaser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phaser</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span> <span class="token keyword">protected</span> <span class="token keyword">boolean</span> <span class="token function">onAdvance</span><span class="token punctuation">(</span><span class="token keyword">int</span> phase<span class="token punctuation">,</span> <span class="token keyword">int</span> registeredParties<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"phase:"</span> <span class="token operator">+</span> phase <span class="token operator">+</span> <span class="token string">"\tregisteredParties :"</span> <span class="token operator">+</span> registeredParties<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//return super.onAdvance(phase, registeredParties);</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true">/*终止*/</span><span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">/*不终止*/</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>强制终止</p>
<pre class="line-numbers language-java"><code class="language-java">phaser<span class="token punctuation">.</span><span class="token function">forceTermination</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>awaitAdvance(phase phase) 案例</p>
<p>终止等待的两个条件</p>
<ul>
<li>current phase is not equal to the given phase value</li>
<li>this phaser is terminated.</li>
</ul>
<p>demo: F:\Source\javaBase\src\main\java\com\sample\current\phaser\PhaserExample6.java</p>
<p>带有等待的中断</p>
<ol>
<li>awaitAdvanceInterruptibly</li>
<li>phaser.awaitAdvanceInterruptibly(0,3,TimeUnit.SECONDS); 带有超时时间</li>
</ol>
<h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><p> <a href="https://www.cnblogs.com/dolphin0520/p/3920397.html" target="_blank" rel="noopener">1. CountDownLatch、CyclicBarrier和Semaphore</a></p>
<h2 id="3-Executors框架"><a href="#3-Executors框架" class="headerlink" title="3. Executors框架"></a>3. Executors框架</h2><p>ThreadPoolExecutor</p>
<h3 id="3-1-shutdown分析"><a href="#3-1-shutdown分析" class="headerlink" title="3.1 shutdown分析"></a>3.1 shutdown分析</h3><p>shutdown</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token comment" spellcheck="true">/**
     * shutdown
     *
     * -- condition ---
     * 20 threads
     *   10 threads work
     *   10 idle
     *
     * shutdown invoked
     * -- result -- 
     * 1. 10 waiting to finished the work.
     * 2. 10 interrupted the idle works.
     * 3. 20 idle threads will exist.
     */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>shutdownNow</p>
<pre class="line-numbers language-java"><code class="language-java">    <span class="token comment" spellcheck="true">/**
     * shutdownNow
     * -- condition ---
     * 10 threads queue elements 10
     * 10 running
     * 10 stored in the blocking queue.
     *-- result --
     * 1. return list&lt;Runnable> remain 10 un handle runnable in the queue.
     * 2. interrupt all of threads in the pool.
     */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>调用shutdown后一些状态变化</p>
<pre class="line-numbers language-java"><code class="language-java">executorService<span class="token punctuation">.</span><span class="token function">isShutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// ture</span>
executorService<span class="token punctuation">.</span><span class="token function">isTerminated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// false 还有任务在执行</span>
<span class="token punctuation">(</span><span class="token punctuation">(</span>ThreadPoolExecutor<span class="token punctuation">)</span> executorService<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isTerminating</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="3-2-Executors-newWorkStealingPool"><a href="#3-2-Executors-newWorkStealingPool" class="headerlink" title="3.2 Executors.newWorkStealingPool"></a>3.2 Executors.newWorkStealingPool</h3><ol>
<li>using all available processors </li>
<li>线程工作模式为“Work-Stealing Algorithm” ，当任务队列完成后不是进入等待状态，而是主动窃取别的线程任务来做；</li>
<li>任务处理完自动停止线程池；</li>
</ol>
<h3 id="3-3-Schedule-的实现"><a href="#3-3-Schedule-的实现" class="headerlink" title="3.3 Schedule 的实现"></a>3.3 Schedule 的实现</h3><ol>
<li><p>Timer 存在问题是当任务执行超时时，影响下一个任务执行时间</p>
</li>
<li><p>crontab (linux), 每隔一分钟执行run.sh 脚本</p>
<p>run.sh</p>
<pre class="line-numbers language-shell"><code class="language-shell">#!/bin/sh
echo `date "+%Y-%m-%d %H:%M:%S"`<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><code>crontab -e</code>  edit user’s crontab </p>
<pre class="line-numbers language-shell"><code class="language-shell">#每一分钟执行一次
* * * * * sh //root/document/scripts/run.sh >> /root/document/scripts/run.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>crontab 简单说明 vi <code>/etc/crontab</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">SHELL=/bin/bash                     <==使用哪种 shell 接口 
PATH=/sbin:/bin:/usr/sbin:/usr/bin  <==执行文件搜寻路径 
MAILTO=root                         <==若有额外 STDOUT，以 email 将数据送给谁 

# Example of job definition: 
# .---------------- minute (0 - 59) 
# |  .------------- hour (0 - 23) 
# |  |  .---------- day of month (1 - 31) 
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ... 
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat 
# |  |  |  |  | 
# *  *  *  *  * user-name  command to be executed <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>quartz(推荐使用)</p>
<p>石英钟</p>
<p>相关教程<a href="https://blog.csdn.net/u010648555/article/details/54863144" target="_blank" rel="noopener">精进 Quartz—Quartz大致介绍（一）</a></p>
<p>依赖</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- https://mvnrepository.com/artifact/org.quartz-scheduler/quartz --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.quartz-scheduler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>quartz<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>最简单demo</p>
<pre class="line-numbers language-java"><code class="language-java">    JobDetail jobDetail <span class="token operator">=</span> JobBuilder<span class="token punctuation">.</span><span class="token function">newJob</span><span class="token punctuation">(</span>SimpleJob<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">withIdentity</span><span class="token punctuation">(</span><span class="token string">"job1"</span><span class="token punctuation">,</span> <span class="token string">"group1"</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Trigger trigger <span class="token operator">=</span> TriggerBuilder<span class="token punctuation">.</span><span class="token function">newTrigger</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">withIdentity</span><span class="token punctuation">(</span><span class="token string">"trigger"</span><span class="token punctuation">,</span> <span class="token string">"group1"</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">withSchedule</span><span class="token punctuation">(</span>CronScheduleBuilder<span class="token punctuation">.</span><span class="token function">cronSchedule</span><span class="token punctuation">(</span><span class="token string">"0/5 * * * * ?"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    Scheduler scheduler <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StdSchedulerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getScheduler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    scheduler<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    scheduler<span class="token punctuation">.</span><span class="token function">scheduleJob</span><span class="token punctuation">(</span>jobDetail<span class="token punctuation">,</span> trigger<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>SimpleJob.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SimpleJob</span> <span class="token keyword">implements</span> <span class="token class-name">Job</span> <span class="token punctuation">{</span>
  <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span>JobExecutionContext jobExecutionContext<span class="token punctuation">)</span>
      <span class="token keyword">throws</span> JobExecutionException <span class="token punctuation">{</span>
    SimpleDateFormat dt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-mm-dd hh:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"======"</span> <span class="token operator">+</span> dt<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"======"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>ScheduledExecutorService</p>
<blockquote>
<p>如果执行任务时长超过周期，那么周期按照任务时长算</p>
</blockquote>
</li>
</ol>
<h3 id="3-4-异常处理"><a href="#3-4-异常处理" class="headerlink" title="3.4 异常处理"></a>3.4 异常处理</h3><p>   方案一：增加守护线程并设置异常捕获类<code>setUncaughtExceptionHandler</code>，缺点当获取不到详细的线程状态<br>   方案二：通过自定义Runnable捕捉异常,模板如下：</p>
<pre class="line-numbers language-java"><code class="language-java">   <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">MyTask</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>

     <span class="token keyword">protected</span> <span class="token keyword">final</span> String name <span class="token punctuation">;</span>

     <span class="token keyword">public</span> <span class="token function">MyTask</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
     <span class="token punctuation">}</span>

     <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">try</span> <span class="token punctuation">{</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>

     <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">error</span><span class="token punctuation">(</span>Throwable e<span class="token punctuation">)</span><span class="token punctuation">;</span>

     <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

     <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">doExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

     <span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">doInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="3-5-拒绝策略（RejectedExecutionHandler）"><a href="#3-5-拒绝策略（RejectedExecutionHandler）" class="headerlink" title="3.5 拒绝策略（RejectedExecutionHandler）"></a>3.5 拒绝策略（RejectedExecutionHandler）</h3><h3 id="3-6-API详解"><a href="#3-6-API详解" class="headerlink" title="3.6 API详解"></a>3.6 API详解</h3><blockquote>
<p>F:\Source\javaBase\src\main\java\com\sample\current\executor\ExecutorServiceExampleApi.java</p>
</blockquote>
<p> Core Thread Timeout 设置核心线程超时时间，超时关闭核心线程池</p>
<pre class="line-numbers language-java"><code class="language-java">executorServices<span class="token punctuation">.</span><span class="token function">setKeepAliveTime</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
executorServices<span class="token punctuation">.</span><span class="token function">allowCoreThreadTimeOut</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>带返回值的方法</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>T<span class="token operator">></span> List<span class="token operator">&lt;</span>Future<span class="token operator">&lt;</span>T<span class="token operator">>></span> <span class="token function">invokeAll</span><span class="token punctuation">(</span>Collection<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Callable</span><span class="token operator">&lt;</span>T<span class="token operator">>></span> tasks<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> InterruptedException<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//代超时时间</span>
<span class="token operator">&lt;</span>T<span class="token operator">></span> List<span class="token operator">&lt;</span>Future<span class="token operator">&lt;</span>T<span class="token operator">>></span> <span class="token function">invokeAll</span><span class="token punctuation">(</span>Collection<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Callable</span><span class="token operator">&lt;</span>T<span class="token operator">>></span> tasks<span class="token punctuation">,</span>
                                  <span class="token keyword">long</span> timeout<span class="token punctuation">,</span> TimeUnit unit<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> InterruptedException<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/**
* return {@code false}
* if all core threads have already been started.
*/</span>
<span class="token keyword">boolean</span> <span class="token function">prestartCoreThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>prestartAllCoreThreads</code>  预启动所有的coreThread</p>
<p><code>before/after</code> 在每个任务启动开始和结束时调用</p>
<pre class="line-numbers language-java"><code class="language-java">    <span class="token annotation punctuation">@Override</span> <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">beforeExecute</span><span class="token punctuation">(</span>Thread t<span class="token punctuation">,</span> Runnable r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--before--"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"init the "</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>MyRunnable<span class="token punctuation">)</span> r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span> <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">afterExecute</span><span class="token punctuation">(</span>Runnable r<span class="token punctuation">,</span> Throwable t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">afterExecute</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--after--"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>null <span class="token operator">==</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"successful "</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>MyRunnable<span class="token punctuation">)</span> r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
        t<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="3-7-Future-amp-Callable"><a href="#3-7-Future-amp-Callable" class="headerlink" title="3.7 Future&amp;Callable"></a>3.7 Future&amp;Callable</h3><ol>
<li><p>future.get() interrupt 是谁？  </p>
<pre class="line-numbers language-shell"><code class="language-shell">中断的是调用的线程，但是中断后runnable还能继续工作<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ol>
<ol start="2">
<li><p>future timeout 是否会继续执行？ <code>future.get(5, TimeUnit.SECONDS);</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">future中断Runnable后会继续执行，如果需要终止任务需要额外处理 如kill -9 applicationId<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ol>
<h3 id="3-8-CompletionService"><a href="#3-8-CompletionService" class="headerlink" title="3.8 CompletionService"></a>3.8 CompletionService</h3><p>解决一个问题,如下，多线程<code>futureList.get</code>的时候不知道随先完成谁后完成（<code>谁先谁后</code>），导致执行快的等执行慢的。</p>
<pre class="line-numbers language-java"><code class="language-java">List<span class="token operator">&lt;</span>Future<span class="token operator">&lt;</span>Integer<span class="token operator">>></span> futureList <span class="token operator">=</span> executorService<span class="token punctuation">.</span><span class="token function">invokeAll</span><span class="token punctuation">(</span>callableList<span class="token punctuation">)</span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>futureList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>futureList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java">completionService<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 阻塞，知道有任务完成可以获取结果</span>
completionService<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//poll直接返回，不阻塞。但是没有完成的任务则返回null</span>
completionService<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span>TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//阻塞等待指定时间，如果有完成结果返回，没有的直接返回null</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>获取最先完成的任务</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>future <span class="token operator">=</span> completionService<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>future<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="3-9-CompletableFuture"><a href="#3-9-CompletableFuture" class="headerlink" title="3.9 CompletableFuture"></a>3.9 CompletableFuture</h3><h4 id="入门体验"><a href="#入门体验" class="headerlink" title="入门体验"></a>入门体验</h4><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletableFuture.html" target="_blank" rel="noopener">Java Doc Api </a></p>
<blockquote>
<p>ExecutorService + future 当任务执行完成的时候通知调动者</p>
<p>解决future的缺点：</p>
<ol>
<li>多个future不知道谁先执行完</li>
<li>future需要主动去拿而且future.get() 会阻塞</li>
<li>future获取的结果在放入线程池需要new callback，达不到极连</li>
</ol>
<p>解决案例：<br>F:\Source\javaBase\src\main\java\com\sample\current\executor\CompletableFutureExample.java</p>
</blockquote>
<p>知识点：</p>
<ol>
<li>CompletableFuture 默认的线程是守护线程当调用者退出，默认直接退出；</li>
</ol>
<h4 id="多个CompletableFuture的组合"><a href="#多个CompletableFuture的组合" class="headerlink" title="多个CompletableFuture的组合"></a>多个CompletableFuture的组合</h4><h3 id="实战经验"><a href="#实战经验" class="headerlink" title="实战经验"></a>实战经验</h3><h4 id="1-任务超时无法shutdown"><a href="#1-任务超时无法shutdown" class="headerlink" title="1. 任务超时无法shutdown"></a>1. 任务超时无法shutdown</h4><blockquote>
<p>当有runnable访问某个资源，网络请求，某个db特别慢任务过重的时候，shutdown/shutdownNow 无法使用</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java">   <span class="token comment" spellcheck="true">//新建线程池时，使用守护线程的方式</span>
   <span class="token keyword">new</span> <span class="token class-name">ThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> Thread <span class="token function">newThread</span><span class="token punctuation">(</span>Runnable r<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
           Thread thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
           thread<span class="token punctuation">.</span><span class="token function">setDaemon</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token keyword">return</span> thread<span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
       <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="2-ExecutorService中的陷阱"><a href="#2-ExecutorService中的陷阱" class="headerlink" title="2. ExecutorService中的陷阱"></a>2. ExecutorService中的陷阱</h4><blockquote>
<p> 线程池中执行完一段时间（20s），shutdown线程，然后记录下未完成的任务<br> 答案： F:\Source\javaBase\src\main\java\com\sample\current\executor\ComplexExample.java</p>
</blockquote>
<p>   <code>使用CompletionService + shutdownNow 返回未完成值的方式</code>, 容易犯的问题：</p>
<ol>
<li>ExecutorCompletionService 把runable重新封装，shutdownNow 返回私有类无法使用</li>
<li>shutdownNow 没有包括中断的任务</li>
</ol>
<h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><p><img src="http://cdn.linz.tech/threads-executor.png" alt="1559003770862"></p>
<h2 id="4-并发集合"><a href="#4-并发集合" class="headerlink" title="4. 并发集合"></a>4. 并发集合</h2><p>常用的并发集合类</p>
<pre class="line-numbers language-java"><code class="language-java"> ConcurrentHashMap    
 ConcurrentSkipListMap
 ConcurrentLinkedQueue
 ConcurrentLinkedDeque
 CopyOnWriteArraySet  
 CopyOnWriteArrayList 

 ArrayBlockingQueue   
 PriorityBlockingQueue
 LinkedBlockingQueue  
 SynchronousQueue     
 DelayQueue           
 LinkedTransferQueue  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="1-LinkedList-实现"><a href="#1-LinkedList-实现" class="headerlink" title="1. LinkedList  实现"></a>1. LinkedList  实现</h3><pre class="line-numbers language-shell"><code class="language-shell">LinkedList                                            Binary search treee
1. 单向LinkedList            Stack                    B+ tree
2. 单项有序          ==>      Queue     由树的平衡性    Red Black tree
3. 双向                      Binary Tree ==>          AVL
4. 双向有序                                           2-3-4 Tree 
                                                     Spary's Tree<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>无序 F:\Source\javaBase\src\main\java\com\sample\current\collections\LinkedList.java</li>
<li>有序 F:\Source\javaBase\src\main\java\com\sample\current\collections\PriorityLinkedList.java</li>
</ul>
<h3 id="2-SkipList跳表数据结构实现"><a href="#2-SkipList跳表数据结构实现" class="headerlink" title="2. SkipList跳表数据结构实现"></a>2. SkipList跳表数据结构实现</h3><blockquote>
<p>F:\Source\javaBase\src\main\java\com\sample\current\collections\SimpleSkipList.java</p>
</blockquote>
<p>跳表的实现</p>
<p>跳表的技术特点</p>
<ol>
<li>一种随机的数据结构</li>
<li>最底层包含整个跳表的所有元素</li>
<li>典型的空间换时间的算法</li>
<li>由于对比效率高，查找删除快</li>
</ol>
<h3 id="3-ArrayBlockingQueue"><a href="#3-ArrayBlockingQueue" class="headerlink" title="3. ArrayBlockingQueue"></a>3. ArrayBlockingQueue</h3><p>插入队列方法(主要区分是队列满时应该怎么反应，异常，等待，返回值)</p>
<table>
<thead>
<tr>
<th align="center">方法名称</th>
<th align="center">参数描述</th>
<th align="center">返回值</th>
<th align="center">异常信息</th>
</tr>
</thead>
<tbody><tr>
<td align="center">add</td>
<td align="center">插入对象</td>
<td align="center">ture代表插入成功，如果队列已满，抛出异常</td>
<td align="center">IllegalStateException(“Queue full”)异常——AbstractQueue</td>
</tr>
<tr>
<td align="center">offer</td>
<td align="center">插入对象</td>
<td align="center">true代表插入成功，队列已满直接返回false</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">offer</td>
<td align="center">插入对象，等待时间</td>
<td align="center">true代表插入成功，队列已满<code>等待</code>一段时间后仍没有空间则返回false</td>
<td align="center">无</td>
</tr>
<tr>
<td align="center">put</td>
<td align="center">插入对象</td>
<td align="center">true代表插入成功，如果队列已满则<code>阻塞</code>线程等待队列为空的时候插入</td>
<td align="center"></td>
</tr>
</tbody></table>
<p>获取队列内容</p>
<table>
<thead>
<tr>
<th align="center">方法名称</th>
<th align="center">参数描述</th>
<th align="center">返回值</th>
<th align="center">异常信息</th>
</tr>
</thead>
<tbody><tr>
<td align="center">remove</td>
<td align="center">无</td>
<td align="center">返回队首数据并移除，队列已空则抛出异常信息</td>
<td align="center">NoSuchElementException()异常——AbstractQueue</td>
</tr>
<tr>
<td align="center">poll</td>
<td align="center">无</td>
<td align="center">列不为空时返回队<code>首值</code>并移除；队列为空时返回null。<code>非阻塞</code>立即返回。</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">poll</td>
<td align="center">等待时间</td>
<td align="center">设定等待的时间，如果在指定时间内队列还未孔则返回null，不为空则返回队首值</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">take</td>
<td align="center">无</td>
<td align="center">队列不为空返回队首值并移除；当队列为空时会阻塞等待，一直等到队列不为空时再返回队首值。</td>
<td align="center"></td>
</tr>
</tbody></table>
<p>参考：</p>
<p><a href="https://www.battleheart.cn/2019/04/06/arrayblockingqueue-principle/#" target="_blank" rel="noopener">ArrayBlockingQueue原理详解</a></p>
<h2 id="JDK-新特性"><a href="#JDK-新特性" class="headerlink" title="JDK 新特性"></a>JDK 新特性</h2><h3 id="LongAddr"><a href="#LongAddr" class="headerlink" title="LongAddr"></a>LongAddr</h3><blockquote>
<p>Atomctic 的不同之处</p>
</blockquote>
<ul>
<li>竞争多个资源（拆分为Cell数组）</li>
<li>动态扩容</li>
</ul>
<p>缺点： </p>
<p>LongAdder在统计的时候如果有并发更新，可能导致统计的数据有误差java</p>
<h4 id="提供的方法"><a href="#提供的方法" class="headerlink" title="提供的方法"></a>提供的方法</h4><ol>
<li>add()：增加指定的数值；</li>
<li>increament()：增加1；</li>
<li>decrement()：减少1；</li>
<li>intValue()/floatValue()/doubleValue()：得到最终计数后的结果</li>
<li>sum()：求和，得到最终计数结果</li>
<li>sumThenReset()：求和得到最终计数结果，并重置value。</li>
</ol>
<h1 id="阶段四-并发深入探讨"><a href="#阶段四-并发深入探讨" class="headerlink" title="阶段四: 并发深入探讨"></a>阶段四: 并发深入探讨</h1><h2 id="第1节-锁"><a href="#第1节-锁" class="headerlink" title="第1节 锁"></a>第1节 锁</h2><p>•轻量级锁</p>
<p>•重量级锁</p>
<p>•重入锁</p>
<p>•自旋锁</p>
<p>•共享锁</p>
<p>•独占锁</p>
<p>•排他锁</p>
<p>•读写锁</p>
<p>•公平锁</p>
<p>•非公平锁</p>
<p>•死锁</p>
<p>•活锁</p>
<h3 id="1-1-死锁"><a href="#1-1-死锁" class="headerlink" title="1.1 死锁"></a>1.1 死锁</h3><p><a href="https://blog.csdn.net/hd12370/article/details/82814348" target="_blank" rel="noopener">死锁面试题（什么是死锁，产生死锁的原因及必要条件）</a></p>
<blockquote>
<p> Jconsole -&gt; 线程-&gt; 有<code>检测死锁</code>的工具</p>
</blockquote>
<h4 id="1-1-1-死锁的分类"><a href="#1-1-1-死锁的分类" class="headerlink" title="1.1.1 死锁的分类"></a>1.1.1 死锁的分类</h4><ol>
<li><p>1 顺序死锁，A调用<code>leftRight()</code>，B调用<code>rightLeft()</code> （厕所内有坑，厕所外有纸，相互缺少）</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LeftRightDeadlock</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> Object left <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> Object right <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">leftRight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 得到left锁</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// 得到right锁</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rightLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 得到right锁</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// 得到left锁</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">doSomethingElse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre><code></code></pre></li>
<li><p>2 动态死锁，进来锁定自己的账户，相互等待。</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token comment" spellcheck="true">// 转账</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">transferMoney</span><span class="token punctuation">(</span>Account fromAccount<span class="token punctuation">,</span>
                                     Account toAccount<span class="token punctuation">,</span>
                                     DollarAmount amount<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> InsufficientFundsException <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 锁定汇账账户</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>fromAccount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">// 锁定来账账户</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>toAccount<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">// 判余额是否大于0</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>fromAccount<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InsufficientFundsException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    <span class="token comment" spellcheck="true">// 汇账账户减钱</span>
                    fromAccount<span class="token punctuation">.</span><span class="token function">debit</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment" spellcheck="true">// 来账账户增钱</span>
                    toAccount<span class="token punctuation">.</span><span class="token function">credit</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>如果两个线程<strong>同时</strong>调用<code>transferMoney()</code></li>
<li>线程A从X账户向Y账户转账</li>
<li>线程B从账户Y向账户X转账，产生死锁。</li>
</ul>
</li>
<li><p>3 协作对象之间</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CooperatingDeadlock</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// Warning: deadlock-prone!</span>
    <span class="token keyword">class</span> <span class="token class-name">Taxi</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@GuardedBy</span><span class="token punctuation">(</span><span class="token string">"this"</span><span class="token punctuation">)</span> <span class="token keyword">private</span> Point location<span class="token punctuation">,</span> destination<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> Dispatcher dispatcher<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">Taxi</span><span class="token punctuation">(</span>Dispatcher dispatcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>dispatcher <span class="token operator">=</span> dispatcher<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">synchronized</span> Point <span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> location<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">// setLocation 需要Taxi内置锁</span>
        <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">setLocation</span><span class="token punctuation">(</span>Point location<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>location <span class="token operator">=</span> location<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>location<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>destination<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment" spellcheck="true">// 调用notifyAvailable()需要Dispatcher内置锁</span>
                dispatcher<span class="token punctuation">.</span><span class="token function">notifyAvailable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">synchronized</span> Point <span class="token function">getDestination</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> destination<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">setDestination</span><span class="token punctuation">(</span>Point destination<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>destination <span class="token operator">=</span> destination<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">class</span> <span class="token class-name">Dispatcher</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@GuardedBy</span><span class="token punctuation">(</span><span class="token string">"this"</span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">final</span> Set<span class="token operator">&lt;</span>Taxi<span class="token operator">></span> taxis<span class="token punctuation">;</span>
        <span class="token annotation punctuation">@GuardedBy</span><span class="token punctuation">(</span><span class="token string">"this"</span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">final</span> Set<span class="token operator">&lt;</span>Taxi<span class="token operator">></span> availableTaxis<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">Dispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            taxis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span>Taxi<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            availableTaxis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span>Taxi<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">notifyAvailable</span><span class="token punctuation">(</span>Taxi taxi<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            availableTaxis<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>taxi<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">// 调用getImage()需要Dispatcher内置锁</span>
        <span class="token keyword">public</span> <span class="token keyword">synchronized</span> Image <span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Image image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>Taxi t <span class="token operator">:</span> taxis<span class="token punctuation">)</span>
                <span class="token comment" spellcheck="true">// 调用getLocation()需要Taxi内置锁</span>
                image<span class="token punctuation">.</span><span class="token function">drawMarker</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> image<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">class</span> <span class="token class-name">Image</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">drawMarker</span><span class="token punctuation">(</span>Point p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><code>Dispatcher</code>的getImage() 及<code>Taxi</code>的setLocation有相互锁的可能性</p>
</li>
</ol>
<h4 id="1-1-2-避免死锁"><a href="#1-1-2-避免死锁" class="headerlink" title="1.1.2 避免死锁"></a>1.1.2 避免死锁</h4><ul>
<li><strong>固定加锁的顺序</strong>(针对锁顺序死锁)</li>
<li><strong>开放调用</strong>(针对对象之间协作造成的死锁)</li>
<li><strong>使用定时锁</strong>–&gt;<code>tryLock()</code></li>
</ul>
<h5 id="2-1-固定锁顺序避免死锁"><a href="#2-1-固定锁顺序避免死锁" class="headerlink" title="2.1 固定锁顺序避免死锁"></a>2.1 固定锁顺序避免死锁</h5><blockquote>
<p>用HashCode 固定顺序</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InduceLockOrder</span> <span class="token punctuation">{</span>

    <span class="token comment" spellcheck="true">// 额外的锁、避免两个对象hash值相等的情况(即使很少)</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> Object tieLock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transferMoney</span><span class="token punctuation">(</span><span class="token keyword">final</span> Account fromAcct<span class="token punctuation">,</span>
                              <span class="token keyword">final</span> Account toAcct<span class="token punctuation">,</span>
                              <span class="token keyword">final</span> DollarAmount amount<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> InsufficientFundsException <span class="token punctuation">{</span>
        <span class="token keyword">class</span> <span class="token class-name">Helper</span> <span class="token punctuation">{</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> InsufficientFundsException <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>fromAcct<span class="token punctuation">.</span><span class="token function">getBalance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">InsufficientFundsException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    fromAcct<span class="token punctuation">.</span><span class="token function">debit</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    toAcct<span class="token punctuation">.</span><span class="token function">credit</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment" spellcheck="true">// 得到锁的hash值</span>
        <span class="token keyword">int</span> fromHash <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">identityHashCode</span><span class="token punctuation">(</span>fromAcct<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> toHash <span class="token operator">=</span> System<span class="token punctuation">.</span><span class="token function">identityHashCode</span><span class="token punctuation">(</span>toAcct<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// 根据hash值来上锁</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>fromHash <span class="token operator">&lt;</span> toHash<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>fromAcct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>toAcct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">new</span> <span class="token class-name">Helper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>fromHash <span class="token operator">></span> toHash<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 根据hash值来上锁</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>toAcct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>fromAcct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">new</span> <span class="token class-name">Helper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment" spellcheck="true">// 额外的锁、避免两个对象hash值相等的情况(即使很少)</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>tieLock<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>fromAcct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span>toAcct<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">new</span> <span class="token class-name">Helper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">transfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="2-2-开放调用避免死锁"><a href="#2-2-开放调用避免死锁" class="headerlink" title="2.2 开放调用避免死锁"></a>2.2 开放调用避免死锁</h5><blockquote>
<p><strong>如果在调用某个方法时不需要持有锁，那么这种调用被称为开放调用</strong>！</p>
<p>用局部代码块锁代替整个方法的锁</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">CooperatingNoDeadlock</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@ThreadSafe</span>
    <span class="token keyword">class</span> <span class="token class-name">Taxi</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@GuardedBy</span><span class="token punctuation">(</span><span class="token string">"this"</span><span class="token punctuation">)</span> <span class="token keyword">private</span> Point location<span class="token punctuation">,</span> destination<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> Dispatcher dispatcher<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">Taxi</span><span class="token punctuation">(</span>Dispatcher dispatcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>dispatcher <span class="token operator">=</span> dispatcher<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">synchronized</span> Point <span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> location<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">setLocation</span><span class="token punctuation">(</span>Point location<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">boolean</span> reachedDestination<span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// 加Taxi内置锁</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>location <span class="token operator">=</span> location<span class="token punctuation">;</span>
                reachedDestination <span class="token operator">=</span> location<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>destination<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment" spellcheck="true">// 执行同步代码块后完毕，释放锁</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>reachedDestination<span class="token punctuation">)</span>
                <span class="token comment" spellcheck="true">// 加Dispatcher内置锁</span>
                dispatcher<span class="token punctuation">.</span><span class="token function">notifyAvailable</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">synchronized</span> Point <span class="token function">getDestination</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> destination<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">setDestination</span><span class="token punctuation">(</span>Point destination<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>destination <span class="token operator">=</span> destination<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@ThreadSafe</span>
    <span class="token keyword">class</span> <span class="token class-name">Dispatcher</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@GuardedBy</span><span class="token punctuation">(</span><span class="token string">"this"</span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">final</span> Set<span class="token operator">&lt;</span>Taxi<span class="token operator">></span> taxis<span class="token punctuation">;</span>
        <span class="token annotation punctuation">@GuardedBy</span><span class="token punctuation">(</span><span class="token string">"this"</span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">final</span> Set<span class="token operator">&lt;</span>Taxi<span class="token operator">></span> availableTaxis<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token function">Dispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            taxis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span>Taxi<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            availableTaxis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span>Taxi<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">notifyAvailable</span><span class="token punctuation">(</span>Taxi taxi<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            availableTaxis<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>taxi<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> Image <span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            Set<span class="token operator">&lt;</span>Taxi<span class="token operator">></span> copy<span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">// Dispatcher内置锁</span>
            <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                copy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span>Taxi<span class="token operator">></span><span class="token punctuation">(</span>taxis<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment" spellcheck="true">// 执行同步代码块后完毕，释放锁</span>

            Image image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span>Taxi t <span class="token operator">:</span> copy<span class="token punctuation">)</span>
                <span class="token comment" spellcheck="true">// 加Taix内置锁</span>
                image<span class="token punctuation">.</span><span class="token function">drawMarker</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> image<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">class</span> <span class="token class-name">Image</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">drawMarker</span><span class="token punctuation">(</span>Point p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h5 id="2-3-使用定时锁"><a href="#2-3-使用定时锁" class="headerlink" title="2.3 使用定时锁"></a>2.3 使用定时锁</h5><h3 id="1-2-偏向锁-轻量级锁-重量级锁"><a href="#1-2-偏向锁-轻量级锁-重量级锁" class="headerlink" title="1.2  偏向锁/轻量级锁/重量级锁"></a>1.2  偏向锁/轻量级锁/重量级锁</h3><h3 id="1-3-独享锁-amp-共享锁"><a href="#1-3-独享锁-amp-共享锁" class="headerlink" title="1.3 独享锁 &amp; 共享锁"></a>1.3 独享锁 &amp; 共享锁</h3><p>独享锁(互斥锁)：同时只能有一个线程获得锁比如，ReentrantLock 是互斥锁，ReadWriteLock 中的写锁是互斥锁。 共享锁：可以有多个线程同时获得锁。比如，Semaphore、CountDownLatch 是共享锁，ReadWriteLock 中的读锁是共享锁。</p>
<h1 id="深度问题"><a href="#深度问题" class="headerlink" title="深度问题"></a>深度问题</h1><h2 id="Java的多路复用"><a href="#Java的多路复用" class="headerlink" title="Java的多路复用"></a>Java的多路复用</h2><ol>
<li><a href="https://www.cnblogs.com/straybirds/p/9479158.html" target="_blank" rel="noopener">常用4种IO模型（同步/异步/阻塞/非阻塞的概念）</a></li>
</ol>
<h1 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h1><h2 id="问题定位"><a href="#问题定位" class="headerlink" title="问题定位"></a>问题定位</h2><blockquote>
<p>数据+ 工具+ 经验</p>
</blockquote>
<p>操作系统–&gt; JVM 虚拟机(java提供的工具)–&gt; 数据 </p>
<h3 id="jstack-使用"><a href="#jstack-使用" class="headerlink" title="jstack 使用"></a>jstack 使用</h3><p><img src="https://img-blog.csdn.net/20160929103820068" alt="这里写图片描述"></p>
<blockquote>
<p>建议线程名字给的有意义，在排查问题时很有必要。</p>
</blockquote>
<ol>
<li><code>jps -v</code> 列出所有Java进程，拿到pid=1523</li>
<li><code>jstack 1523 &gt; 1523.log</code> 将dump文件输出到日志</li>
<li>上传到<a href="http://heaphero.io/index.jsp" target="_blank" rel="noopener">http://heaphero.io/index.jsp</a> 或使用MAT分析</li>
</ol>
<h2 id="Best-practice"><a href="#Best-practice" class="headerlink" title="Best  practice"></a>Best  practice</h2><ol>
<li><p>尽量不要在线程中做大量耗时的网络操作，如查询数据库（可以的话在一开始就将数据从从 DB 中查出准备好）【能在初始化做的耗时完成】</p>
</li>
<li><p>尽可能的减少多线程竞争锁。可以将数据分段，各个线程分别读取。</p>
</li>
<li><p>多利用 <code>CAS+自旋</code> 的方式更新数据，减少锁的使用。【待实践】</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> AtomicReference<span class="token operator">&lt;</span>Thread<span class="token operator">></span> atomicReference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>atomicReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> <span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    atomicReference<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>应用中加上 <code>-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp</code> 参数，在内存溢出时至少可以拿到内存日志。</p>
</li>
<li><p>线程池监控。如线程池大小、队列大小、最大线程数等数据，可提前做好预估。</p>
<pre class="line-numbers language-java"><code class="language-java"> ThreadPoolExecutor tpe <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>ThreadPoolExecutor<span class="token punctuation">)</span> es<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> queueSize <span class="token operator">=</span> tpe<span class="token punctuation">.</span><span class="token function">getQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前排队线程数："</span> <span class="token operator">+</span> queueSize<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> activeCount <span class="token operator">=</span> tpe<span class="token punctuation">.</span><span class="token function">getActiveCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前活动线程数："</span> <span class="token operator">+</span> activeCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">long</span> completedTaskCount <span class="token operator">=</span> tpe<span class="token punctuation">.</span><span class="token function">getCompletedTaskCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"执行完成线程数："</span> <span class="token operator">+</span> completedTaskCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">long</span> taskCount <span class="token operator">=</span> tpe<span class="token punctuation">.</span><span class="token function">getTaskCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总线程数："</span> <span class="token operator">+</span> taskCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

        Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>JVM 监控，可以看到堆内存的涨幅趋势，GC 曲线等数据，也可以提前做好准备。</p>
<ol>
<li>Linux 系统监控 查看（Linux菜鸟私房菜笔记）之  性能监控 【待实践总结】</li>
<li><code>jstat</code>     JVM监控命令(在Java基础笔记看到使用说明之监控)</li>
<li>jvisualvm  同上</li>
</ol>
</li>
</ol>
<h2 id="简易web服务器"><a href="#简易web服务器" class="headerlink" title="简易web服务器"></a>简易web服务器</h2><ul>
<li><a href="http://www.runoob.com/w3cnote/android-tutorial-http-response-header.html" target="_blank" rel="noopener">http 响应头和请求头对照表</a></li>
<li><a href="http://www.runoob.com/http/http-content-type.html" target="_blank" rel="noopener">HTTP content-type 对照表</a></li>
<li><a href="http://www.runoob.com/http/http-status-codes.html" target="_blank" rel="noopener">HTTP状态码</a></li>
</ul>
<h1 id="附录一"><a href="#附录一" class="headerlink" title="附录一"></a>附录一</h1><h2 id="推荐书籍"><a href="#推荐书籍" class="headerlink" title="推荐书籍"></a>推荐书籍</h2><ul>
<li>《Java 并发编程实战》</li>
<li>《Java并发编程的艺术》方腾飞</li>
<li>《深入理解Java虚拟机》 周志明</li>
</ul>
<h2 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h2><ul>
<li><a href="http://ifeve.com/" target="_blank" rel="noopener">java并发编程网</a></li>
</ul>
<h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><ol>
<li><a href="https://www.ibm.com/developerworks/cn/java/j-jtp04186/" target="_blank" rel="noopener">Java 理论与实践</a></li>
</ol>
<h2 id="专业名词"><a href="#专业名词" class="headerlink" title="专业名词"></a>专业名词</h2><ul>
<li>指令重排序，在不影响程序运行结果的前提下重新排序代码</li>
</ul>
<h1 id="附录二"><a href="#附录二" class="headerlink" title="附录二"></a>附录二</h1><h2 id="常用的消息队列"><a href="#常用的消息队列" class="headerlink" title="常用的消息队列"></a>常用的消息队列</h2><p><img src="https://img-blog.csdn.net/20171010212146188?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvZ3dkMTE1NDk3ODM1Mg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt=""></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>Java</tag>
        <tag>知识架构</tag>
        <tag>多线程</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker学习笔记</title>
    <url>/2019/09/10/2019-4-14-Docker-note/</url>
    <content><![CDATA[<h1 id="Container"><a href="#Container" class="headerlink" title="Container"></a>Container</h1><pre class="line-numbers language-shell"><code class="language-shell">docker build --tag=friendlyhello .
#or add version  
docker build -tag= friendlyhello:v0.0.1 .

docker image ls
docker run -p 4000:80 friendlyhello <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Docker for Linux network set</p>
<blockquote>
<p>Set proxy server, replace host:port with values for your servers</p>
<pre class="line-numbers language-shell"><code class="language-shell">ENV http_proxy host:port
ENV https_proxy host:port<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>docker dns set <code>/etc/docker/daemon.json</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">{
  "dns": ["your_dns_address", "8.8.8.8"]
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p><code>sudo service docker restart</code></p>
</blockquote>
<p>On Windows, explicitly stop the container</p>
<blockquote>
<p><code>CTRL+C</code> can’t stop image use <code>docker container ls</code> </p>
<p><code>docker container stop &lt;Container NAME or ID&gt;</code></p>
</blockquote>
<h2 id="容器的基本操作"><a href="#容器的基本操作" class="headerlink" title="容器的基本操作"></a>容器的基本操作</h2><h3 id="启动交互式容器"><a href="#启动交互式容器" class="headerlink" title="启动交互式容器"></a>启动交互式容器</h3><pre class="line-numbers language-shell"><code class="language-shell">  docker run -i -t IMAGE /bin/bash
    -i --interactive   #true|false 默认是false Keep STDIN open even if not attached
    -t --tty=true|false 默认是false # 告诉容器创建一个伪tty终端<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ul>
<li>案例： docker安装ubuntu镜像</li>
</ul>
<pre class="line-numbers language-shell"><code class="language-shell">docker search ubuntu
docker pull ubuntu
docker images 
#运行镜像并指定名称和端口映射，返回容器id
docker run -it -d --name ubuntu_test -p 8088:80 ubuntu
#查看所有启动的容器
docker ps
#根据上面id（前2个）查看容器信息
docker inspect 98
#进入镜像(或者把容器id改为容器名，也可以进入)
#新建进程执行
docker exec -it 98 /bin/bash 
# 退出容器
exit
#停止容器
docker stop id
#删除容器
docker rm <CONTAINER ID>
#制作docker镜像
docker commit 98 ubuntu_test1:1.0
#打包镜像并查看
docker save -o ubuntu_test1.tar ubuntu_test1:1.0
#交互的方式重新启动容器
docker start -i<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="守护式容器"><a href="#守护式容器" class="headerlink" title="守护式容器"></a>守护式容器</h2><pre class="line-numbers language-shell"><code class="language-shell">#使真正运行的容器后台运行
Ctrl+P  Ctrl+Q 
# 后台启动容器
docker run -d 
#查看容器日志
docker logs
#查看容器的进程
docker top
#为运行中的容器启动新进程
docker exec
# 停止一个运行中的容器 stop 等待容器正常停止，直接kill掉进程 
docker stop/kill
#使用Docker帮助文档
man docker-run
man docker-logs
man docker-top<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>完整的操作案例</p>
<pre class="line-numbers language-shell"><code class="language-shell">#自定义容器名称
docker run --name dc -d ubuntu /bin/sh -c "while true;do echo hello world; sleep 1;done"
#查看container信息
docker ps 
#进入后台运行的容器
docker attach id
docker logs `
    -f follow -t 时间
docker logs -tf --tail  10 container_name
docker top container_name
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>设置容器的端口映射</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker run -p 80 --name web -it ubuntu /bin/bash
#容器初始化之前需求 apt-get update 更新一下
apt-get install -y nginx
apt-get install -y vim 
mkdir -p /var/www/html
vim index.html
whereis nginx 
vim /etc/nginx/sites-enabled/default root 改为 /var/www/html 位置
#查看niginx运行情况
ps -ef 
# 非docker环境下
docker port web # 80/tcp -> 0.0.0.0:32768 localhost：32768 直接访问
`每次重启容器的IP和端口号会变`<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>停止并且删除容器</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker container stop wildfly
docker container rm wildfly<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>其他方式<code>docker container rm -f wildfly</code></p>
<h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><pre class="line-numbers language-shell"><code class="language-shell">  #停止指定容器
  docker container stop `docker container ps | grep wildfly | awk '{print $1}'`
  #删除所有运行的container
  docker container stop $(docker container ps -q)
  #删除所有container
  docker container rm $(docker container ps -aq)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h1><blockquote>
<p>镜像相关</p>
</blockquote>
<h2 id="镜像信息查看命令"><a href="#镜像信息查看命令" class="headerlink" title="镜像信息查看命令"></a>镜像信息查看命令</h2><p><code>docker info</code> 能查看docker镜像存储位置 一般为<code>/var/lib/docker</code><br><code>docker system df</code>  查看镜像、容器、数据卷所占用的空间<br><code>docker image history jboss/wildfly</code>  查看镜像更详细的信息</p>
<h2 id="镜像的查看于删除"><a href="#镜像的查看于删除" class="headerlink" title="镜像的查看于删除"></a>镜像的查看于删除</h2><pre class="line-numbers language-shell"><code class="language-shell">docker images 
    -a  #all
    -f  #filter
    --no-trunc #不使用阶段的形式
    -q #只显示镜像的唯一id
#列出仓库名为centos的所有镜像 
docker images centos  
#查看镜像信息
docker inspect ubuntu:14.0
docker inspect <images_id>
#删除镜像
docker rmi
    -f 
    --no-prune  #Do not delete untagged parents
#删除多个
docker rmi ubuntu:14.0 ubuntu:precise
#删除ubuntu中的所有镜像
docker rmi $(docker images ubuntu -q)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="官网案例-Share-Image"><a href="#官网案例-Share-Image" class="headerlink" title="官网案例 Share Image"></a>官网案例 Share Image</h2><p>官网： <a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">docker build -t friendlyhello .  # Create image using this directory's Dockerfile
docker run -p 4000:80 friendlyhello  # Run "friendlyname" mapping port 4000 to 80
docker run -d -p 4000:80 friendlyhello         # Same thing, but in detached mode
docker run -it --rm ubuntu /bin/bash           #退出后删除容器
docker container ls                                # List all running containers
docker container ls -a             # List all containers, even those not running
docker container stop <hash>           # Gracefully stop the specified container
docker container kill <hash>         # Force shutdown of the specified container
docker container rm <hash>        # Remove specified container from this machine
docker container rm $(docker container ls -a -q)         # Remove all containers
docker image ls -a                             # List all images on this machine
docker image rm <image id>            # Remove specified image from this machine
docker image rm $(docker image ls -a -q)   # Remove all images from this machine
docker login             # Log in this CLI session using your Docker credentials
#docker image ls 列出所有image，docker tag 给image打标签
docker tag <image> username/repository:tag  # Tag <image> for upload to registry
#例如：把本地名为`android_sdk_27:v0.0.1`的镜像重命名为分享格式
docker tag android_sdk_27:v0.0.1  dockerlinz/android-sdk:27
#分享image到dockerlinz
docker push dockerlinz/android-sdk:27

docker push username/repository:tag            # Upload tagged image to registry
docker run username/repository:tag                   # Run image from a registry<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="镜像的获取和推送"><a href="#镜像的获取和推送" class="headerlink" title="镜像的获取和推送"></a>镜像的获取和推送</h2><p><strong>Ubuntu 14.04、Debian 7 Wheezy</strong></p>
<pre class="line-numbers language-shell"><code class="language-shell">docker search 

#镜像的拉取
docker pull 
#使用国内镜像 www.daocloud.io
--registry-mirror
# 1. 修改 /etc/default/docker
# or 2. 添加 DOCKER_OPTS = "--registry-mirror=http://mirror-addr" 
sudo service docker restart
#查看是否生效
docker info<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><a href="https://yeasy.gitbooks.io/docker_practice/install/mirror.html" target="_blank" rel="noopener">镜像加速器 参考文档</a></li>
</ul>
<p>常用国内镜像</p>
<ul>
<li><a href="https://docs.docker.com/registry/recipes/mirror/#use-case-the-china-registry-mirror" target="_blank" rel="noopener">Docker 官方提供的中国 registry mirror <code>https://registry.docker-cn.com</code></a></li>
<li><a href="https://www.jianshu.com/p/1a4025c5f186" target="_blank" rel="noopener">Docker 国内镜像库加速</a></li>
<li><a href="https://cr.console.aliyun.com/cn-hangzhou/mirrors" target="_blank" rel="noopener">阿里云加速器(需登录账号获取)</a></li>
<li><a href="https://kirk-enterprise.github.io/hub-docs/#/user-guide/mirror" target="_blank" rel="noopener">七牛云加速器 <code>https://reg-mirror.qiniu.com/</code></a></li>
</ul>
<p><strong>Ubuntu 16.04+、Debian 8+、CentOS 7</strong></p>
<p>修改<code>/etc/docker/daemon.json</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">{
    "registry-mirrors": ["https://yourcode.mirror.aliyuncs.com"]
      # "registry-mirrors": ["https://registry.docker-cn.com"]
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>重启</p>
<pre class="line-numbers language-shell"><code class="language-shell">$ sudo systemctl daemon-reload
$ sudo systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="构建镜像与仓库"><a href="#构建镜像与仓库" class="headerlink" title="构建镜像与仓库"></a>构建镜像与仓库</h2><blockquote>
<p>commit 在原有镜像的基础上，再叠加上容器的存储层，并构成新的镜像，尽量减少使用commit因为每次叠加，慎用 <code>docker commit</code></p>
</blockquote>
<ul>
<li><code>docker diff &lt;container_id&gt;</code> 比较上一次修改了哪些文件</li>
</ul>
<pre class="line-numbers language-shell"><code class="language-shell">#Commit构建镜像
docker commit [OPTIONS] CONTAINER [REPOSITORY:[TAG]]
    -a, --author="Jobhn Hannibal Smith hannibal@a-team.com"
    -m, --message="" Commit message
    -p, --pause=true Pause container during comit # commit 指令会暂停容器，-p则不停止
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="案例commit-方式"><a href="#案例commit-方式" class="headerlink" title="案例commit 方式"></a><strong>案例commit 方式</strong></h3><pre class="line-numbers language-shell"><code class="language-shell"> docker run -it -p 80 --name comit_test ubuntu /bin/bash
 apt-get update 
 apt-get install nginx 
 exit
 docker ps -l 
 docker commit -a 'Dockerlinz press' -m 'nigix' commit_test dockerlinz/commit_test1
 docker images 
 docker run -d --name nginx_web1 dockerlinz/commit_test1 nginx -g "daemon off;" #nginx 后台运行
 # 发现没有映射端口
docker run -d --name nginx_web1 -p 80 dockerlinz/commit_test1 nginx -g "daemon off;"
curl localhost:port
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="DockerFile构建镜像"><a href="#DockerFile构建镜像" class="headerlink" title="DockerFile构建镜像"></a><strong>DockerFile构建镜像</strong></h3><p>DockerFile demo </p>
<pre class="line-numbers language-shell"><code class="language-shell">  #First Dockerfile
  FROM ubuntu:14:04
  MAINTAINER dormancypress "dormancypress@outlook.com"
  RUN apt-get update
  RUN apt-get install -y nginx 
  EXPOSE 80<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>docker build docke</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker build [OPTIONS] PATH | URL
    --force-rm
    --no-cache
    --pull
    -q # 不显示过程
    --rm 
    -t #TAG

docker build -t="dockerlinz/df_test"
docker run -d --name nginx_web1 -p 80 dockerlinz/df_test nginx -g "daemon off;"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><p>DockerFile指令vim</p>
<pre class="line-numbers language-shell"><code class="language-shell">ARG <参数名>[=<默认值>] # docker build --build-arg <参数名>=<值>
#COPY [--chown=<user>:<group>] <源路径>... <目标路径>
COPY package.json /usr/src/app/
COPY hom* /mydir/
#和copy类似带解压功能
ADD ubuntu-xenial-core-cloudimg-amd64-root.tar.gz /
# MAINTAINER <name> 包含镜像所有者和联系信息
MAINTAINER dormancypress "dormancypress@gmail.com"
#ENV 设置环境变量
ENV <key> <value>
ENV <key1>=<value1> <key2>=<value2>...\
<key1>=<value1>
#USER 指定当前用户
USER <用户名>[:<用户组>]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><p>CMD的三种模式</p>
<pre class="line-numbers language-shell"><code class="language-shell">#1. CMD ["exe","param1","param2"] （exec模式）
#2. CMD ls -a (shell模式)
CMD [ "sh", "-c", "echo $HOME" ]
#3. CMD ["param1","param2"] (ENTRYPOINT 指令的默认参数)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>ENTRYPOINT  <code>可以使用docker run --entrypoint覆盖</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">#1. ENTRYPOINT ["exe","param1","param2"] （exec模式）
#2. ENTRYPOINT ls -a (shell模式)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ul>
</li>
<li><p>DockerFile 构建过程<br>run image -&gt; exec cmd -&gt;commit-&gt; exec cmd -&gt; commit </p>
<pre class="line-numbers language-shell"><code class="language-shell">#调试具体步骤
构建DockerFile的时候可以运行中间层镜像，可以调试具体步骤
# 默认缓存，不缓存
docker build --no-cache 
# 局部缓存刷新，修改日期后下面的操作刷新缓存
ENV REFRESH_DATA 2019-1-30
# 显示一个镜像的构建过程
docker history <image><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h1 id="Services"><a href="#Services" class="headerlink" title="Services"></a>Services</h1><pre class="line-numbers language-shell"><code class="language-shell">docker stack ls                                            # List stacks or apps
docker stack deploy -c <composefile> <appname>  # Run the specified Compose file
docker service ls                 # List running services associated with an app
docker service ps <service>                  # List tasks associated with an app
docker inspect <task or container>                   # Inspect task or container
docker container ls -q                                      # List container IDs
#docker stack ls 
docker stack rm <appname>                             # Tear down an application
docker swarm leave --force      # Take down a single node swarm from the manager
#更新端口
docker service update --publish-rm 8080:5000 --publish-add 8088:5000 web
#更新image
docker service  update --image xiaopeng163/python-flask-demo:2.0 web<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>this node is not a swarm manager. Use “docker swarm init” or “docker swarm join” to connect this node to swarm and try again<br>用：<code>docker swarm init</code> 解决</p>
</blockquote>
<h3 id="Remote-API"><a href="#Remote-API" class="headerlink" title="Remote API"></a>Remote API</h3><p>连接三种方式</p>
<pre class="line-numbers language-shell"><code class="language-shell">unix:///var/run/docker.sock
tcp://host:port
fd://socketfd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>nc -U /var/run/docker.sock</p>
<h3 id="docker-守护进程配置和操作"><a href="#docker-守护进程配置和操作" class="headerlink" title="docker 守护进程配置和操作"></a>docker 守护进程配置和操作</h3><pre class="line-numbers language-shell"><code class="language-shell"># 查看运行状态
ps -ef | grep docker 
sudo status docker 
#
sudo service docker stop/start/restart
# 与运行相关：
docker -d [OPTIONS]
    -D #调试模式
    -e,--exec-driver="native" #docker 运行的驱动
    -l,--log-level="info" #日志级别
    -g,--graph="/var/lib/docker" #目录
    -p,--pidfile="/var/rundocker.pid"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><p>Docker服务器链接相关</p>
<pre class="line-numbers language-shell"><code class="language-shell">-G,--group="docker" #用户组
-H,--host=[]
--tls=false
--tlscacert="/home/sven/.docker/ca.pem"
--tlscert="/home/sven/.docker/cert.pem"
--tlskey="/home/sven/.docker/key.pem"
--tlsverify=false<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><code>/etc/defalt/docker</code> </p>
</li>
</ul>
<h1 id="Swarms"><a href="#Swarms" class="headerlink" title="Swarms"></a>Swarms</h1><p><a href="https://docs.docker.com/get-started/part4/" target="_blank" rel="noopener">https://docs.docker.com/get-started/part4/</a></p>
<h2 id="常用命令-1"><a href="#常用命令-1" class="headerlink" title="常用命令"></a>常用命令</h2><pre class="line-numbers language-shell"><code class="language-shell">docker stack deploy --compose-file=docker-compose.yml <NAME>
docker stack ls 
docker stack rm <NAME>
#初始化当前节点为manager
docker swarm init --advertise-addr 192.168.99.100:2377
#获取加入manager的token
docker swarm join-token manager
#加入manager的集群
docker swarm join --token SWMTKN-1-2abs9211jijp6pmxc7b20v4vc6apbznnxgh48th36lxttud5ue-andtd5ira0z17ht6psxg9xo8j 192.168.208.137:2377
#强行退出swarm
docker swarm leave --force
docker node ls # 列出当前节点<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="docker-machine"><a href="#docker-machine" class="headerlink" title="docker-machine"></a>docker-machine</h2><pre class="line-numbers language-shell"><code class="language-shell">docker-machine create --driver virtualbox myvm1
docker-machine create --driver virtualbox myvm2
docker-machine ls
myvm1   -        virtualbox   Running   tcp://192.168.99.100:2376           v17.06.2-ce
myvm2   -        virtualbox   Running   tcp://192.168.99.101:2376           v17.06.2-ce
docker-machine ssh myvm1 "docker swarm init --advertise-addr 192.168.99.100:2377"
docker-machine ssh myvm2 "docker swarm join \
--token <token> \
<ip>:2377"
docker-machine ssh myvm1 "docker node ls"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Configuration-docker-machine"><a href="#Configuration-docker-machine" class="headerlink" title="Configuration docker-machine"></a>Configuration docker-machine</h3><pre class="line-numbers language-shell"><code class="language-shell">docker-machine env myvm1
export DOCKER_TLS_VERIFY="1"
export DOCKER_HOST="tcp://192.168.99.100:2376"
export DOCKER_CERT_PATH="/Users/sam/.docker/machine/machines/myvm1"
export DOCKER_MACHINE_NAME="myvm1"
# Run this command to configure your shell:
 eval $(docker-machine env myvm1)

 eval $(docker-machine env -u)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Deploy-the-app-on-the-swarm-manager"><a href="#Deploy-the-app-on-the-swarm-manager" class="headerlink" title="Deploy the app on the swarm manager"></a>Deploy the app on the swarm manager</h3><pre class="line-numbers language-shell"><code class="language-shell">docker stack deploy -c docker-compose.yml getstartedlab
docker stack rm getstartedlab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="swarm-连接数据库"><a href="#swarm-连接数据库" class="headerlink" title="swarm 连接数据库"></a>swarm 连接数据库</h3><p>connection-url 连接</p>
<pre class="line-numbers language-yml"><code class="language-yml">swarm:
  datasources:
    data-sources:
      ExampleDS:
        driver-name: mysql
        connection-url: jdbc:mysql://db:3306/employees
        user-name: mysql
        password: mysql
  jaeger:
    service-name: jaeger
    reporter-log-spans: true
    sampler-type: const
    sampler-parameter: 1
    agent-host: jaeger
  opentracing:
    servlet:
      skipPattern: /metrics<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>通过镜像连接</p>
<pre class="line-numbers language-yml"><code class="language-yml">version: '3.3'
services:
  db:
    container_name: db
    image: mysql:8
    environment:
      MYSQL_DATABASE: employees
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
      MYSQL_ROOT_PASSWORD: supersecret
    ports:
      - 3306:3306
  web:
    image: arungupta/docker-javaee:dockerconeu17
    ports:
      - 8080:8080
      - 9990:9990
    depends_on:
      - db<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><pre class="line-numbers language-shell"><code class="language-shell">docker-machine create --driver virtualbox myvm1 # Create a VM (Mac, Win7, Linux)
docker-machine create -d hyperv --hyperv-virtual-switch "myswitch" myvm1 # Win10
docker-machine env myvm1                # View basic information about your node
docker-machine ssh myvm1 "docker node ls"         # List the nodes in your swarm
docker-machine ssh myvm1 "docker node inspect <node ID>"        # Inspect a node
docker-machine ssh myvm1 "docker swarm join-token -q worker"   # View join token
docker-machine ssh myvm1   # Open an SSH session with the VM; type "exit" to end
docker node ls                # View nodes in swarm (while logged on to manager)
docker-machine ssh myvm2 "docker swarm leave"  # Make the worker leave the swarm
docker-machine ssh myvm1 "docker swarm leave -f" # Make master leave, kill swarm
docker-machine ls # list VMs, asterisk shows which VM this shell is talking to
docker-machine start myvm1            # Start a VM that is currently not running
docker-machine env myvm1      # show environment variables and command for myvm1
eval $(docker-machine env myvm1)         # Mac command to connect shell to myvm1
& "C:\Program Files\Docker\Docker\Resources\bin\docker-machine.exe" env myvm1 | Invoke-Expression   # Windows command to connect shell to myvm1
docker stack deploy -c <file> <app>  # Deploy an app; command shell must be set to talk to manager (myvm1), uses local Compose file
docker-machine scp docker-compose.yml myvm1:~ # Copy file to node's home dir (only required if you use ssh to connect to manager and deploy the app)
docker-machine ssh myvm1 "docker stack deploy -c <file> <app>"   # Deploy an app using ssh (you must have first copied the Compose file to myvm1)
eval $(docker-machine env -u)     # Disconnect shell from VMs, use native docker
docker-machine stop $(docker-machine ls -q)               # Stop all running VMs
docker-machine rm $(docker-machine ls -q) # Delete all VMs and their disk images<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Stacks"><a href="#Stacks" class="headerlink" title="Stacks"></a>Stacks</h2><pre class="line-numbers language-shell"><code class="language-shell">docker stack deploy -c docker-compose.yml getstartedlab
docker stack ps getstartedlab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>help</p>
<pre class="line-numbers language-shell"><code class="language-shell">deploy      Deploy a new stack or update an existing stack
ls          List stacks
ps          List the tasks in the stack
rm          Remove one or more stacks
services    List the services in the stack<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>不支持 stack deploy 的compose关键字</p>
<ul>
<li><a href="https://docs.docker.com/compose/compose-file/#build" target="_blank" rel="noopener">build</a></li>
<li><a href="https://docs.docker.com/compose/compose-file/#cgroup_parent" target="_blank" rel="noopener">cgroup_parent</a></li>
<li><a href="https://docs.docker.com/compose/compose-file/#container_name" target="_blank" rel="noopener">container_name</a></li>
<li><a href="https://docs.docker.com/compose/compose-file/#devices" target="_blank" rel="noopener">devices</a></li>
<li><a href="https://docs.docker.com/compose/compose-file/#tmpfs" target="_blank" rel="noopener">tmpfs</a></li>
<li><a href="https://docs.docker.com/compose/compose-file/#external_links" target="_blank" rel="noopener">external_links</a></li>
<li><a href="https://docs.docker.com/compose/compose-file/#links" target="_blank" rel="noopener">links</a></li>
<li><a href="https://docs.docker.com/compose/compose-file/#network_mode" target="_blank" rel="noopener">network_mode</a></li>
<li><a href="https://docs.docker.com/compose/compose-file/#restart" target="_blank" rel="noopener">restart</a></li>
<li><a href="https://docs.docker.com/compose/compose-file/#security_opt" target="_blank" rel="noopener">security_opt</a></li>
<li><a href="https://docs.docker.com/compose/compose-file/#sysctls" target="_blank" rel="noopener">sysctls</a></li>
<li><a href="https://docs.docker.com/compose/compose-file/#userns_mode" target="_blank" rel="noopener">userns_mode</a></li>
</ul>
<p>redis sample</p>
<pre class="line-numbers language-shell"><code class="language-shell">version: "3"
services:
  web:
    # replace username/repo:tag with your name and image details
    image: dockerlinz/get-started:part2
    deploy:
      replicas: 5
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
    ports:
      - "80:80"
    networks:
      - webnet
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - "/home/docker/data:/data"
    deploy:
      placement:
        constraints: [node.role == manager]
    command: redis-server --appendonly yes
    networks:
      - webnet
networks:
  webnet:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="deploy-详解"><a href="#deploy-详解" class="headerlink" title="deploy 详解"></a>deploy 详解</h2><pre class="line-numbers language-shell"><code class="language-shell">    deploy:
      replicas: 5
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
       placement:
        constraints:
          - node.role == manager
          - node.id==2ivku8v2gvtg4
          - node.hostname!=node-2
          - node.labels.security==high
          - engine.labels.operatingsystem == ubuntu 14.04
        preferences:
          - spread: node.labels.zone
       update_config:
          parallelism: 2
          delay: 10s
          order: stop-first<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参考： <a href="https://docs.docker.com/engine/reference/commandline/service_create/#specify-service-constraints-constraint" target="_blank" rel="noopener">constraints</a> and <a href="https://docs.docker.com/engine/reference/commandline/service_create/#specify-service-placement-preferences-placement-pref" target="_blank" rel="noopener">preferences</a>.</p>
<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><pre class="line-numbers language-shell"><code class="language-shell">docker-machine create --driver virtualbox myvm1 # Create a VM (Mac, Win7, Linux)
docker-machine create -d hyperv --hyperv-virtual-switch "myswitch" myvm1 # Win10
docker-machine env myvm1                # View basic information about your node
docker-machine ssh myvm1 "docker node ls"         # List the nodes in your swarm
docker-machine ssh myvm1 "docker node inspect <node ID>"        # Inspect a node
docker-machine ssh myvm1 "docker swarm join-token -q worker"   # View join token
docker-machine ssh myvm1   # Open an SSH session with the VM; type "exit" to end
docker node ls                # View nodes in swarm (while logged on to manager)
docker-machine ssh myvm2 "docker swarm leave"  # Make the worker leave the swarm
docker-machine ssh myvm1 "docker swarm leave -f" # Make master leave, kill swarm
docker-machine ls # list VMs, asterisk shows which VM this shell is talking to
docker-machine start myvm1            # Start a VM that is currently not running
docker-machine env myvm1      # show environment variables and command for myvm1
eval $(docker-machine env myvm1)         # Mac command to connect shell to myvm1
& "C:\Program Files\Docker\Docker\Resources\bin\docker-machine.exe" env myvm1 | Invoke-Expression   # Windows command to connect shell to myvm1
docker stack deploy -c <file> <app>  # Deploy an app; command shell must be set to talk to manager (myvm1), uses local Compose file
docker-machine scp docker-compose.yml myvm1:~ # Copy file to node's home dir (only required if you use ssh to connect to manager and deploy the app)
docker-machine ssh myvm1 "docker stack deploy -c <file> <app>"   # Deploy an app using ssh (you must have first copied the Compose file to myvm1)
eval $(docker-machine env -u)     # Disconnect shell from VMs, use native docker

docker-machine start $(docker-machine ls -q)               # Stop all running VMs
docker-machine stop $(docker-machine ls -q)               # Stop all running VMs
docker-machine rm $(docker-machine ls -q) # Delete all VMs and their disk images<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="监控-monitoring"><a href="#监控-monitoring" class="headerlink" title="监控 monitoring"></a>监控 monitoring</h1><h2 id="Docker-CLi"><a href="#Docker-CLi" class="headerlink" title="Docker CLi"></a>Docker CLi</h2><pre class="line-numbers language-shell"><code class="language-shell">#容器使用资源情况，如cpu，men，i/o 
docker stats <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>显示指定的内容，:</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker container stats --format "{{.Container}}: {{.CPUPerc}}"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-shell"><code class="language-shell">55198043b6aa: 0.10%
5b5dd33b675d: 0.11%
6e98a9597e6a: 0.10%<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>类似：</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker container stats --format "table {{.Name}}\t{{.CPUPerc}}\t{{.MemUsage}}"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="Docker-Remote-API"><a href="#Docker-Remote-API" class="headerlink" title="Docker Remote API"></a>Docker Remote API</h2><pre class="line-numbers language-shell"><code class="language-shell">curl --unix-socket /var/run/docker.sock http://localhost/containers/<name>/stats<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="Docker-events"><a href="#Docker-events" class="headerlink" title="Docker events"></a>Docker events</h2><p><a href="https://docs.docker.com/engine/reference/commandline/events/" target="_blank" rel="noopener">https://docs.docker.com/engine/reference/commandline/events/</a><br><code>docker events [OPTIONS]</code></p>
<blockquote>
<p>启动Docker events 后Terminal进入等待状态， 当有docker 事件的时候打印事件详情</p>
</blockquote>
<h2 id="Prometheus"><a href="#Prometheus" class="headerlink" title="Prometheus"></a>Prometheus</h2><ul>
<li><a href="https://prometheus.io/docs/operating/configuration/" target="_blank" rel="noopener">Prometheus configuration file</a></li>
<li><a href="https://prometheus.io/" target="_blank" rel="noopener">Prometheus 官网</a></li>
<li><a href="https://github.com/docker/labs/blob/master/developer-tools/java/chapters/ch10-monitoring.adoc#Prometheus" target="_blank" rel="noopener">Docker metrics for Prometheus</a></li>
</ul>
<h2 id="cAdvisor"><a href="#cAdvisor" class="headerlink" title="cAdvisor"></a>cAdvisor</h2><ul>
<li><a href="https://github.com/google/cadvisor" target="_blank" rel="noopener">cAdvisor</a></li>
</ul>
<pre class="line-numbers language-shell"><code class="language-shell">docker container run \
  --volume=/:/rootfs:ro \
  --volume=/var/run:/var/run:rw \
  --volume=/sys:/sys:ro \
  --volume=/var/lib/docker/:/var/lib/docker:ro \
  --publish=8080:8080 \
  --detach=true \
  --name=cadvisor \
  google/cadvisor:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="How-to-setup-Docker-monitoring"><a href="#How-to-setup-Docker-monitoring" class="headerlink" title="How to setup Docker monitoring"></a>How to setup Docker monitoring</h2><ul>
<li><a href="https://www.brianchristner.io/how-to-setup-docker-monitoring/" target="_blank" rel="noopener">How to setup Docker monitoring</a>. </li>
<li>项目文件： <a href="https://github.com/vegasbrianc/docker-monitoring" target="_blank" rel="noopener">docker-monitoring</a></li>
<li><a href="https://hub.docker.com/r/google/cadvisor/" target="_blank" rel="noopener">cadvisor</a></li>
<li><a href="https://registry.hub.docker.com/u/tutum/influxdb/" target="_blank" rel="noopener"><strong>InfluxDB</strong></a></li>
<li><a href="https://registry.hub.docker.com/u/grafana/grafana/" target="_blank" rel="noopener"><strong>Grafana Metrics Dashboard</strong></a> </li>
</ul>
<h3 id="案例一"><a href="#案例一" class="headerlink" title="案例一"></a>案例一</h3><ol>
<li> docker-compose.yml  <code>docker-compose up -d</code></li>
</ol>
<pre class="line-numbers language-shell"><code class="language-shell">version: '2'
#https://www.brianchristner.io/how-to-setup-docker-monitoring/
services:
 influxdbData:
  image: busybox
  volumes:
    - ./data/influxdb:/data
#  对应的命令行
#  sudo docker run -d -p 8083:8083 -p 8086:8086 --expose 8090 --expose 8099 --name influxsrv tutum/influxdb

 influxdb:
  image: tutum/influxdb:0.9
  restart: always
  environment:
    - PRE_CREATE_DB=cadvisor
  ports:
    - "8083:8083"
    - "8086:8086"
  expose:
    - "8090"
    - "8099"
  volumes_from:
    - "influxdbData"
# 对应的命令行
# sudo docker run --volume=/:/rootfs:ro --volume=/var/run:/var/run:rw
#  --volume=/sys:/sys:ro --volume=/var/lib/docker/:/var/lib/docker:ro
#  --publish=8080:8080
#   --detach=true
#   --link influxsrv:influxsrv --name=cadvisor google/cadvisor:latest
#   -storage_driver_db=influxdb
#   -storage_driver_host=influxsrv:8086
 cadvisor:
  image: google/cadvisor:v0.29.0
  links:
    - influxdb:influxsrv
  command: -storage_driver=influxdb -storage_driver_db=cadvisor -storage_driver_host=influxsrv:8086
  restart: always
  ports:
    - "8081:8080"
  volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker/:/var/lib/docker:ro
#  sudo docker run -d -p 3000:3000 -e INFLUXDB_HOST=localhost -e INFLUXDB_PORT=8086 -e INFLUXDB_NAME=cadvisor -e INFLUXDB_USER=root -e INFLUXDB_PASS=root
#   --link influxsrv:influxsrv --name grafana grafana/grafana
 grafana:
  image: grafana/grafana
  restart: always
  links:
    - influxdb:influxsrv
  ports:
    - "3001:3000"
  environment:
    - HTTP_USER=admin
    - HTTP_PASS=admin
    - INFLUXDB_HOST=influxsrv
    - INFLUXDB_PORT=8086
    - INFLUXDB_NAME=cadvisor
    - INFLUXDB_USER=root
    - INFLUXDB_PASS=root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>InfluxDB操作</li>
</ol>
<p>UI操作界面：<a href="http://47.107.130.109:8083" target="_blank" rel="noopener">http://47.107.130.109:8083</a></p>
<blockquote>
<p>注意：外网需打开InfluxDB打开防火墙的端口，如上，8083,8086<br>8083用于WEB访问</p>
<p>8086用于数据库操作</p>
</blockquote>
<pre class="line-numbers language-shell"><code class="language-shell">#Quaery
CREATE DATABASE "cadvisor"
#连接设置-> 点击设置icon 设置username，password<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li>OPITION（可选）：开启 cAdvisor外网访问端口</li>
</ol>
<p><a href="http://47.107.130.109:8081" target="_blank" rel="noopener">http://47.107.130.109:8081</a>  </p>
<pre class="line-numbers language-shell"><code class="language-shell">docker run -p 8081:3000 grafana/grafan<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ol start="4">
<li>grafana 配置，详情参考：<a href="http://blog.51cto.com/ganbing/2083389" target="_blank" rel="noopener">docker：快速构建容器监控系统cAdvisor+InfluxDB+Grafana</a><br><a href="http://47.107.130.109:3001" target="_blank" rel="noopener">http://47.107.130.109:3001</a><br>![](E:\MyDocument\img\grafana 设置图片_20190217180332.png)</li>
</ol>
<ul>
<li>导入久工程设置，<br>JSONdashboard -&gt; 设置-&gt;JSON Model -&gt; <a href="https://github.com/vegasbrianc/docker-monitoring/blob/master/docker-monitoring-0.9.json" target="_blank" rel="noopener">docker-monitoring-0.9.json</a></li>
</ul>
<h3 id="案例二"><a href="#案例二" class="headerlink" title="案例二"></a>案例二</h3><ul>
<li><img src="https://raw.githubusercontent.com/starsliao/Prometheus/master/screenshot.jpg" alt=""></li>
</ul>
<h3 id="更多图表显示"><a href="#更多图表显示" class="headerlink" title="更多图表显示"></a>更多图表显示</h3><ul>
<li><a href="https://grafana.com/dashboards" target="_blank" rel="noopener">dashboards 官网插件</a></li>
</ul>
<h2 id="Monitor-Java-Applications"><a href="#Monitor-Java-Applications" class="headerlink" title="Monitor Java Applications"></a>Monitor Java Applications</h2><h1 id="Docker-Network"><a href="#Docker-Network" class="headerlink" title="Docker Network"></a>Docker Network</h1><h2 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h2><p><a href="https://docs.docker.com/compose/networking/#specify-custom-networks" target="_blank" rel="noopener">Networking in Compose</a></p>
<h3 id="Docker网络模式"><a href="#Docker网络模式" class="headerlink" title="Docker网络模式"></a>Docker网络模式</h3><ul>
<li>自动创建 bridge（创建容器默认连接到此网络，也就是在不使用–network参数时）、 none 、host</li>
<li>自定义模式：bridge、overlay、macvlan。</li>
</ul>
<pre class="line-numbers language-shell"><code class="language-shell">host：容器将不会虚拟出自己的网卡，配置自己的IP等，而是使用宿主机的IP和端口。
Container：创建的容器不会创建自己的网卡，配置自己的IP，而是和一个指定的容器共享IP、端口范围。
None：该模式关闭了容器的网络功能。
Bridge：此模式会为每一个容器分配、设置IP等，并将容器连接到一个docker0虚拟网桥，通过docker0网桥以及Iptables nat表配置与宿主机通信。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>官方对选择网络模式的总结</p>
<ul>
<li><strong>User-defined bridge networks</strong> are best when you need multiple containers to communicate on the same Docker host. 【同docker host】</li>
<li><strong>Host networks</strong> are best when the network stack should not be isolated from the Docker host, but you want other aspects of the container to be isolated. 【与docker host是否隔离】</li>
<li><strong>Overlay networks</strong> are best when you need containers running on different Docker hosts to communicate, or when multiple applications work together using swarm services. 【集群适用多docker host】</li>
<li><strong>Macvlan networks</strong> are best when you are migrating from a VM setup or need your containers to look like physical hosts on your network, each with a unique MAC address. 【模拟真实网络】</li>
<li><strong>Third-party network plugins</strong> allow you to integrate Docker with specialized network stacks. 【指定不同网络类型】</li>
</ul>
<p>配置文件</p>
<p>容器中主机名和DNS配置信息都是通过三个系统配置文件来维护的：/etc/resolv.conf、/etc/hostname和/etc/hosts。</p>
<h2 id="常用命令-2"><a href="#常用命令-2" class="headerlink" title="常用命令"></a>常用命令</h2><pre class="line-numbers language-shell"><code class="language-shell">#使container_nginx 连接到app_net 网络
docker network connect app_net container_nginx <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>网络问题检测工具箱</p>
<p><a href="https://github.com/nicolaka/netshoot" target="_blank" rel="noopener"><strong>netshoot</strong></a></p>
<h2 id="2个docker-compose组网"><a href="#2个docker-compose组网" class="headerlink" title="2个docker-compose组网"></a>2个docker-compose组网</h2><p>建立网络组</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker network create app_net<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>每个服务都增加 </p>
<pre class="line-numbers language-shell"><code class="language-shell">networks:
    - custom_net<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>如下：</p>
<p>docker-compose-demo1.yml</p>
<pre class="line-numbers language-shell"><code class="language-shell">ersion: "3"
services:

  app:
    build: .
    networks:
      - custom_net
  db:
    image: postgres
    networks:
      - custom_net
networks:
   custom_net:
      external:
         name: app_net<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>两个compose公用external网络,如上设置网络</p>
<h2 id="external-links-compose-实现容器单向连接"><a href="#external-links-compose-实现容器单向连接" class="headerlink" title="external_links compose 实现容器单向连接"></a>external_links compose 实现容器单向连接</h2><p> nginx-net.yml</p>
<pre class="line-numbers language-shell"><code class="language-shell">#必须先于 nginx-net-external-links.yml
version: "3"
services:
  nginx2:
    image: nginx
    container_name: nginx2
    network_mode: bridge<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>nginx-net-enternal.yml</p>
<pre class="line-numbers language-yml"><code class="language-yml">version: "3"
services:
  nginx1:
    image: nginx
    external_links:
      - nginx2
    container_name: nginx1
    network_mode: bridge<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>测试</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker exec -it nginx1 ping nginx2 #可以ping通
docker exec -it nginx2 ping nginx1 #不可以ping通<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="Docker0-的概述"><a href="#Docker0-的概述" class="headerlink" title="Docker0 的概述"></a>Docker0 的概述</h2><blockquote>
<p> 网桥: 属于OSI 七层模型中的数据链路层</p>
</blockquote>
<ol>
<li>Linxu 虚拟网桥的特点：<ol>
<li>可以设置IP地址，Linux就可以通过路由表或者IP表规则在网络层定位网桥地址</li>
<li>相当于一个隐藏的虚拟网卡</li>
</ol>
</li>
</ol>
<p>Docker0的默认地址划分：</p>
<pre class="line-numbers language-shell"><code class="language-shell">IP: 172.17.42.1 子网掩码： 255.255.0.0
MAC：02:42:ac:11:00:00 到 02:42:ac:11:ff:ff
共提供了65534个地址<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="自义定网桥"><a href="#自义定网桥" class="headerlink" title="自义定网桥"></a>自义定网桥</h3><blockquote>
<p>有空搜索关键字研究，配置失败，配置</p>
</blockquote>
<pre class="line-numbers language-shell"><code class="language-shell">#安装工具
sudo apt-get -f install bridge-utils    
#增加虚拟网桥
sudo brctl addbr br0
# 每次修改，需要重启docker才能生效
sudo ifconfig br0 192.168.100.1 netmask 255.255.255.0
#验证是否成功 br0
ifconfig <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>自定义默认网桥 docker0</strong></p>
<pre class="line-numbers language-shell"><code class="language-shell">#新的网桥
sudo brctl addbr bridge0
sudo ip addr add 192.168.208.1/16 dev bridge0
sudo ip link set dev bridge0 up
#查看配置
ip addr show bridge0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在 Docker 配置文件<code>/etc/docker/daemon.json</code></p>
<pre class="line-numbers language-shell"><code class="language-shell"> { 
     "bridge": "bridge0", 
 }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>再次启动docker服务</p>
<pre class="line-numbers language-shell"><code class="language-shell"> # 重启
systemctl daemon-reload
systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="Docker-容器的互联"><a href="#Docker-容器的互联" class="headerlink" title="Docker 容器的互联"></a>Docker 容器的互联</h2><h3 id="–icc-true-允许所有容器互联"><a href="#–icc-true-允许所有容器互联" class="headerlink" title="–icc=true 允许所有容器互联"></a>–icc=true 允许所有容器互联</h3><blockquote>
<p>–icc=true 运行容器互相连接</p>
</blockquote>
<p>Dockerfille</p>
<pre class="line-numbers language-java"><code class="language-java">FROM ubuntu<span class="token operator">:</span><span class="token number">14.04</span>
RUN apt<span class="token operator">-</span>get install <span class="token operator">-</span>y ping 
RUN apt<span class="token operator">-</span>get update
RUN apt<span class="token operator">-</span>get install <span class="token operator">-</span>y nginx
RUN apt<span class="token operator">-</span>get install <span class="token operator">-</span>y curl 
EXPOSE <span class="token number">80</span>
CMD <span class="token operator">/</span>bin<span class="token operator">/</span>bash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>编译及运行</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker build -t dormancypress/cct .
docker run -it --name cct1 dormancypress/cct
#进入cct1，启动nginx
nginx 
docker run -it --name cct2 dormancypress/cct
nginx 
#查看相互的ip,尝试在不同的container中，ping
docker attach cct1 
#nginx访问
curl <ip><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>重启镜像ip会改变 【待验证】</p>
</blockquote>
<h4 id="–link"><a href="#–link" class="headerlink" title="–link"></a>–link</h4><pre class="line-numbers language-shell"><code class="language-shell">docker run --link=[container_name]:[alias] [image] [cmd]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>实践案例</p>
<p>启动cct3并连接到cct1</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker run -it --name cct3 --link=cct1:webtest dormancypress/cct
#测试是否正常连接
ping webtest <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="–icc-true-拒绝所有容器互联"><a href="#–icc-true-拒绝所有容器互联" class="headerlink" title="–icc=true 拒绝所有容器互联"></a>–icc=true 拒绝所有容器互联</h3><blockquote>
<p>拒绝所有容器间的访问</p>
</blockquote>
<h3 id="允许特定容器访间的连接"><a href="#允许特定容器访间的连接" class="headerlink" title="允许特定容器访间的连接"></a>允许特定容器访间的连接</h3><h2 id="Docker容器与外部网络的连接"><a href="#Docker容器与外部网络的连接" class="headerlink" title="Docker容器与外部网络的连接"></a>Docker容器与外部网络的连接</h2><ol>
<li><p>ip_forward 是否允许流量转发 1 允许，查看 <code>sudo sysctl net.ipv4.conf.all.forwarding</code></p>
</li>
<li><p>iptables Linux包过滤防火墙系统</p>
<ol>
<li>talbe</li>
<li>chain</li>
<li>rule （accept, reject, drop）</li>
</ol>
<p>实战，filter表包含连接：（INPUT, OUTPUT, FORWARD）</p>
<pre class="line-numbers language-shell"><code class="language-shell">sudo iptables -t filter -L -n 
# -I 规则 -s 指定地址 -d 目的地址 ==> 阻止10.211.55.3访问172.17.0.1
sudo iptables -I DOCKER -s 10.211.55.3 -d 172.17.0.1 -p TCP --dport 80 j DROP <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>注解：<a href="https://blog.csdn.net/u011537073/article/details/82685586" target="_blank" rel="noopener">iptable 命令详解</a></p>
</li>
</ol>
<h2 id="Docker容器的跨主机访问"><a href="#Docker容器的跨主机访问" class="headerlink" title="Docker容器的跨主机访问"></a>Docker容器的跨主机访问</h2><p><img src="http://cdn.linz.tech/threads-gateway-2019-6-13.png" alt=""></p>
<h3 id="网桥实现"><a href="#网桥实现" class="headerlink" title="网桥实现"></a>网桥实现</h3><pre class="line-numbers language-shell"><code class="language-shell">sudo apt-get install bridge-utils <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>静态配置IP，防止IP重启后变动 <code>vim /etc/network/interfaces</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">auto lo
iface lo inet loopback

# The primary network interface
auto br0 # 指定网关
iface br0 inet static
　　address 192.168.0.42
　　network 192.168.0.0
　　netmask 255.255.255.0
#　　broadcast 192.168.0.255
　　gateway 192.168.0.1
bridge_ports eth0 #指定本地的物理网卡<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>配置docker默认选项 （旧办版本有效）<code>vim  /etc/default/docker</code> </p>
<pre class="line-numbers language-shell"><code class="language-shell"># --fixed-cidr 限制IP地址使用范围
DOCKER_OPTS= -b=br0 --fixed-cidr='10.211.55.04/26'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>重启生效 <code>reboot</code></p>
<h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><ol>
<li>有点： 配置简单，不依赖第三方软件</li>
<li>缺点： <ol>
<li>与主机在同网段，需要小心划分IP地址</li>
<li>需要网段的控制权限，生产环境不易实现</li>
<li>不容易管理，兼容性不佳</li>
</ol>
</li>
</ol>
<h3 id="Open-vSwitch（ovs）"><a href="#Open-vSwitch（ovs）" class="headerlink" title="Open vSwitch（ovs）"></a>Open vSwitch（ovs）</h3><h4 id="原理解析"><a href="#原理解析" class="headerlink" title="原理解析"></a>原理解析</h4><blockquote>
<p> Open vSwitch 是一个高质量的、多层虚拟交换机</p>
</blockquote>
<p>原理图</p>
<p><img src="http://cdn.linz.tech/1555683876672.png" alt="1555683876672"></p>
<p>原理解析：</p>
<blockquote>
<p>GRE：通用路由协议封装。 </p>
<p>隧道技术（Tunneling）一种使用互联网基础设施在网络传输数据的方式，支持不同协议的数据，并每个帧头有路由寻址信息。即隧道技术是提供是点对点再封装的技术；</p>
</blockquote>
<h4 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h4><blockquote>
<ul>
<li>建立ovs连接</li>
<li>添加gre连接</li>
<li>配置docker容器虚拟网桥</li>
<li>为虚拟网桥添加ovs接口</li>
<li>添加不同的Docker网段路由</li>
</ul>
</blockquote>
<ol>
<li>配置安装</li>
</ol>
<pre class="line-numbers language-shell"><code class="language-shell">#安装工具
sudo apt-get install openvswitch-switch
sudo apt-get install bridge-utils
#查看版本
sudo ovs-vsctl show
#创建网桥
sudo ovs-vsctl add-br obr0
#添加GRE接口
sudo ovs-vsctl add-port obr0 gre0
#interface remote_ip 指定远程服务器地址（为另一台虚拟机地址）192.168.208.132
sudo ovs-vsctl set interface gre0 type=gre options:remote_ip=192.168.59.104
#查看新建状态，确认修改成功
sudo ovs-vsctl show
#新建网桥
sudo brctl addbr br0
#配置网桥
sudo ifconfig br0 192.168.1.1 netmask 255.255.255.0
#添加osv网桥连接
sudo brctl addif br0 obr0
#查看当前网桥的连接状态
sudo brctl show
#修改Docker默认的网桥 "bridge":"br0"
vim /etc/docker/daemon.json 
sudo systemctl daemon-reload
sudo systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li>验证是否安装成功</li>
</ol>
<pre class="line-numbers language-shell"><code class="language-shell">docker run -it ubuntu /bin/bash if
#ping 另一台主机是否成功
ping 192.168.59.104<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li><p>同步骤1，但是该网桥<code>sudo ifconfig br0 192.168.2.1 netmask 255.255.255.0</code></p>
</li>
<li><p>配置好后两个镜像还是不能ping通，添加路由表</p>
<p>查看路由边信息 192.168.208.132</p>
<pre class="line-numbers language-shell"><code class="language-shell">Kernel IP routing table
Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
default         192.168.208.2   0.0.0.0         UG    100    0        0 ens33
link-local      *               255.255.0.0     U     1000   0        0 ens33
172.17.0.0      *               255.255.0.0     U     0      0        0 docker0
192.168.208.0   *               255.255.255.0   U     100    0        0 ens33<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>添加路由</p>
<pre class="line-numbers language-shell"><code class="language-shell">#添加192.168.2.0/2路由信息，在192.168.59.104能找到指定设备eth0 
sudo ip route add 192.168.2.0/24 via 192.168.59.104 dev eth0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ol>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://www.sdnlab.com/3166.html" target="_blank" rel="noopener">Open vSwitch2.3.0版本安装部署及基本操作</a></li>
<li><a href="http://www.imooc.com/article/278645" target="_blank" rel="noopener">笔记</a></li>
</ul>
<h3 id="Weave"><a href="#Weave" class="headerlink" title="Weave"></a>Weave</h3><h4 id="实战-1"><a href="#实战-1" class="headerlink" title="实战"></a>实战</h4><p>`Weave 的安装</p>
<pre class="line-numbers language-shell"><code class="language-shell">sudo curl -L git.io/weave -o /usr/local/bin/weave  #下载
sudo chmod a+x /usr/local/bin/weave  #赋予执行权限
weave version   #查看weave版本
weave status     #查看weave状态<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>运行</p>
<pre class="line-numbers language-shell"><code class="language-shell"># docker1 主机
weave launcn 192.168.208.134  # 192.168.208.134 需要连接主机地址
# 后台运行一个镜像
docker run -it dockerlinz/cct 
#为镜像分配IP地址
weave attach 192.168.1.2/24 <ContainerId>
#docker2 主机同上配置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>测试</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker exec  -it  <ContainerId> /bin/bash
ping ip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="常用命令-3"><a href="#常用命令-3" class="headerlink" title="常用命令"></a>常用命令</h4><pre class="line-numbers language-shell"><code class="language-shell">weave --help  #查看帮助
weave ps #查看weave路由状态：weave ps
weave connect  OTHER_HOST  #可以把一台主机连接到weave网络
weave attach #动态添加网络对于不是通过weave启动的容器，可以通过weave attach 10.0.1.1/24  $ContainerId来添加网络（weave  detach删除网络）
weave expose #不使用docker的原生网络容器和宿主机之间是无法互通的 , weave expose ip/24这个命令会把宿主机加入到weave 网络中, 宿主机就可以和容器之间自由通信了
weave launch -password #安全性：可以通过weave launch -password wEaVe设置一个密码用于weave peers之间加密通信<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Weave Network Plugin</p>
<p><a href="https://www.weave.works/docs/net/latest/introducing-weave/" target="_blank" rel="noopener">Weave Network Plugin</a></p>
<h3 id="Overlay"><a href="#Overlay" class="headerlink" title="Overlay"></a>Overlay</h3><p><a href="https://www.cnblogs.com/bigberg/p/8521542.html" target="_blank" rel="noopener">Docker容器跨主机通信–overlay网络</a></p>
<p>参考： <a href="https://www.jianshu.com/p/ae3e6132a3bd" target="_blank" rel="noopener">自定义默认网桥 docker0</a></p>
<p>操作案例<code>Ingress Network / lvs</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">#查看路由列表
iptables -nL -t nat
yum install bridge-utils -y
# 查看网关
brctl show 
docker network ls<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h2><p><a href="https://success.docker.com/article/networking" target="_blank" rel="noopener">Designing Scalable, Portable Docker Container Networks</a></p>
<h1 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-shell"><code class="language-shell">curl -L https://get.daocloud.io/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="官方配置文档"><a href="#官方配置文档" class="headerlink" title="官方配置文档"></a>官方配置文档</h2><p><a href="https://docs.docker.com/compose/compose-file/" target="_blank" rel="noopener"> 官网 docker-compose.yml 文件参考</a> </p>
<p><a href="https://blog.csdn.net/qq_36148847/article/details/79427878" target="_blank" rel="noopener">docker-compose.yml 配置文件编写详解</a></p>
<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><pre class="line-numbers language-shell"><code class="language-shell"># one-off
docker-compose run 
# 启动并在后台运行
docker-compose up -d
# 停止container
docker-compose stop 
# bring everything down, remove the container 
docker-compose down 
# remove the data 
docker-compose down --volumes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="常用参数详解"><a href="#常用参数详解" class="headerlink" title="常用参数详解"></a>常用参数详解</h2><p>epends_on</p>
<p>example:</p>
<pre class="line-numbers language-shell"><code class="language-shell">version: "3.7"
services:
  web:
    build: .
    depends_on:
      - db
      - redis
  redis:
    image: redis
  db:
    image: postgres<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>depends_on 只是service的启动顺序, 而不是等待db,redis 准备好之后在启动，这就会有一个问题就是，web 启动后db,redis 没有准备好，导致web启动失败，官网解决方案</p>
<pre class="line-numbers language-shell"><code class="language-shell"> depends_on:
      - "db"
    command: ["./wait-for-it.sh", "db:5432", "--", "python", "app.py"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>wait-for-it.sh 使用脚本进行重连</p>
<pre class="line-numbers language-shell"><code class="language-shell">#!/bin/sh
# wait-for-postgres.sh

set -e

host="$1"
shift
cmd="$@"

until PGPASSWORD=$POSTGRES_PASSWORD psql -h "$host" -U "postgres" -c '\q'; do
  >&2 echo "Postgres is unavailable - sleeping"
  sleep 1
done

>&2 echo "Postgres is up - executing command"
exec $cmd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="用docker-compose-配置环境"><a href="#用docker-compose-配置环境" class="headerlink" title="用docker-compose 配置环境"></a>用docker-compose 配置环境</h2><p>docker-compose-pull-images.yml</p>
<pre class="line-numbers language-yml"><code class="language-yml">version: '3'
services:
  ubuntu:
    image: ubuntu:latest
  busybox:
    image: busybox:latest
  openjdk:
    image: openjdk:latest
  wildfly:
    image: jboss/wildfly:latest
  javaee7-hol:
    image: arungupta/javaee7-hol:latest
  docker-javaee:
    image: arungupta/docker-javaee:dockerconeu17
  mysql:
    image: mysql:8
  hadoop:
    image: tailtarget/hadoop:2.7.2
  jenkins:
    image: jenkins/jenkins:lts
  prometheus:
    image: prom/prometheus:latest
  node-exporter:
    image: prom/node-exporter
  cadvisor:
    image: google/cadvisor:latest
  grafana:
    image: grafana/grafana
  debian:
    image: debian:stable-slim
  alpine:
    image: alpine:3.6
  openjdk-slim:
    image: openjdk:9-jdk-slim<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>Pulls images for services defined in a Compose file, but does not start the containers.</p>
</blockquote>
<pre class="line-numbers language-yml"><code class="language-yml">#add sudo for linux 
docker-compose -f docker-compose-pull-images.yml pull --parallel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>yml文件更新</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker stack deploy wordpress --compose-file=docker-compose.yml <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h3><h4 id="FastFDS"><a href="#FastFDS" class="headerlink" title="FastFDS"></a>FastFDS</h4><ol>
<li><a href="https://github.com/happyfish100/fastdfs" target="_blank" rel="noopener"><strong>fastdfs 官网</strong></a><ol>
<li><a href="https://github.com/qbanxiaoli/fastdfs" target="_blank" rel="noopener">docker-compose  和Dockerfile  生成fastdfs 学习案例</a></li>
<li><a href="https://github.com/Guu-mc/fastdfs" target="_blank" rel="noopener">moocu/fastdfs source </a></li>
</ol>
</li>
</ol>
<h2 id="Network-in-compose"><a href="#Network-in-compose" class="headerlink" title="Network in compose"></a>Network in compose</h2><p><a href="https://docs.docker.com/compose/networking/#links" target="_blank" rel="noopener">Networking in Compose</a></p>
<p>同一个compose app 相互连通</p>
<pre class="line-numbers language-shell"><code class="language-shell">version: "3"
services:
  linux:
    image: ubuntu
  db:
    image: postgres
    ports:
      - "8001:5432"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li>compose 用linux 和 db 作为主机地址,<code>docker exec -it linux ping db</code>  可以ping通</li>
<li>compose内部使用默认端口而不是映射端口， 如当linux 使用db数据库是使用端口5432可以直接访问，而不是外部映射端口8001</li>
</ol>
<h1 id="Docker-安全"><a href="#Docker-安全" class="headerlink" title="Docker 安全"></a>Docker 安全</h1><h2 id="docker-Secret"><a href="#docker-Secret" class="headerlink" title="docker Secret"></a>docker Secret</h2><p><strong>官方文档详细介绍</strong>： <a href="https://docs.docker.com/engine/swarm/secrets/" target="_blank" rel="noopener">Manage sensitive data with Docker secrets</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">#新建一个名称为my-pw 值为 password 的secret
docker secret create my-pw password
#不产生文件
printf <secret> | docker secret create my_secret -
#查看secret
docker secret ls

#查看运行中的容器，是否存在secret文件
docker container exec $(docker ps --filter name=redis -q) ls -l /run/secrets
#查看secret内容
docker container exec $(docker ps --filter name=redis -q) cat /run/secrets/my_secret_data
#删除
docker service update --secret-rm my_secret_data redis
#Add or update a secret on a service
docker service update  --secret-add secret                  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>yml文件中使用</p>
<pre><code>services:
   db:
     image: mysql:latest
     environment:
       MYSQL_ROOT_PASSWORD_FILE: /run/secrets/my_secret
       MYSQL_DATABASE: wordpress
     secrets:
       - my_secret</code></pre><pre class="line-numbers language-yml"><code class="language-yml">web：
    image: wordpress
    ports:
        - 8080:80
    secrets:
        - my-pw
    environment:
        WORDPRESS_DB_HOST: mysql
        WORDPRESS_DB_PASSWORD_FILE: /run/secrets/my-pw<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>docker run 使用</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker service create --name client --secret my-pw busybox sh -c "while true: do sleep 3600;done"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="进阶学习"><a href="#进阶学习" class="headerlink" title="进阶学习"></a>进阶学习</h1><h2 id="storage"><a href="#storage" class="headerlink" title="storage"></a>storage</h2><h3 id="Volumes"><a href="#Volumes" class="headerlink" title="Volumes"></a>Volumes</h3><ul>
<li><a href="https://docs.docker.com/storage/volumes/" target="_blank" rel="noopener">compose file reference Use volumes</a> 一下Volumes最常用的操作</li>
</ul>
<p>container sharing volumes</p>
<pre class="line-numbers language-shell"><code class="language-shell">sudo docker run -it -v /usr/lib:/usr/lib/dbdata --name dbcontainer-192.168.1.184 ubuntu:14.04

sudo docker run -it --volumes-from dbcontainer-192.168.1.184 --name 

mastercontainer-192.168.1.180 ubuntu:14.04<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="plugin"><a href="#plugin" class="headerlink" title="plugin"></a>plugin</h2><h2 id="docker-inspect"><a href="#docker-inspect" class="headerlink" title="docker inspect"></a>docker inspect</h2><ul>
<li><a href="https://www.cnblogs.com/mumengyun/p/10038145.html" target="_blank" rel="noopener">docker inspect获取详细参数的两种方法</a></li>
</ul>
<h2 id="Kubernetes"><a href="#Kubernetes" class="headerlink" title="Kubernetes"></a>Kubernetes</h2><ul>
<li><a href="https://www.kubernetes.org.cn/4387.html" target="_blank" rel="noopener">Ubuntu 18.04 离线安装Kubernetes v1.11.1</a></li>
</ul>
<h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><ul>
<li><p><strong>portainer</strong> 是一个开源、轻量级Docker<br>管理用户界面官方网站：<a href="https://portainer.io/" target="_blank" rel="noopener">https://portainer.io/</a><br>官方文档：<a href="https://portainer.readthedocs.io/" target="_blank" rel="noopener">https://portainer.readthedocs.io/</a><br>演示网址：<a href="http://demo.portainer.io/" target="_blank" rel="noopener">http://demo.portainer.io</a> 账号admin 密码 tryportainer<br>安装命令</p>
<pre class="line-numbers language-shell"><code class="language-shell"># 下载镜像
docker pull portainer/portainer:latest
docker run -d -p 9000:9000 \
    --restart=always \
    -v /var/run/docker.sock:/var/run/docker.sock \
    --name prtainer \
    portainer/portainer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>问题解决</p>
</li>
</ul>
<p><em>问题1</em>： Unable to connect to the Docker endpoint</p>
<p><code>--privileged</code> 即</p>
<pre><code>$ docker run -d -p 9000:9000 --privileged -v /var/run/docker.sock:/var/run/docker.sock --name portainer portainer/portainer</code></pre><p>解决方案：</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker run -d -p 9000:9000 \
    --restart=always \
    --privileged -v /var/run/docker.sock:/var/run/docker.sock \
    --name prtainer \
    portainer/portainer<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>问题2. 设置密码后 选择<code>Local</code> -&gt; <code>conect</code> 报错</p>
</blockquote>
<pre class="line-numbers language-shell"><code class="language-shell">Failure
Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/_ping: dial unix /var/run/docker.sock: connect: permission denied<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><strong>解决方案</strong></p>
<ul>
<li>原因<br>SELinux开启 主要作用就是最大限度地减小系统中服务进程可访问的资源（最小权限原则）</li>
<li>解决<pre class="line-numbers language-shell"><code class="language-shell"># 第一步
etenforce 0
#第二步
修改/etc/selinux/config 文件
将SELINUX=enforcing改为SELINUX=disabled
重启机器即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h2 id="Docker-传参"><a href="#Docker-传参" class="headerlink" title="Docker 传参"></a>Docker 传参</h2><h3 id="直接用-docker-inspect-lt-container-id-gt-查看"><a href="#直接用-docker-inspect-lt-container-id-gt-查看" class="headerlink" title="直接用 docker inspect <container-id> 查看"></a>直接用 <code>docker inspect &lt;container-id&gt;</code> 查看</h3><p>Dockerfile </p>
<pre class="line-numbers language-shell"><code class="language-shell">ENTRYPOINT java -Xmx256M -jar /app.jar
CMD ["echo", "hello"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>docker inspect <container-id>  实际启动的命令及参数</container-id></p>
<pre class="line-numbers language-shell"><code class="language-shell">  "Path": "/bin/sh",
    "Args": [
        "-c",
        "java -Xmx256M -jar /app.jar",
        "echo",
        "hello"
    ]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="ENTRYPOINT-CMD"><a href="#ENTRYPOINT-CMD" class="headerlink" title="ENTRYPOINT / CMD"></a>ENTRYPOINT / CMD</h3><p>有ENTRYPOINT 优先</p>
<h3 id="取参"><a href="#取参" class="headerlink" title="$取参"></a>$取参</h3><p>Dockerfile</p>
<pre class="line-numbers language-shell"><code class="language-shell">FROM ubuntu
ENTRYPOINT echo hello $0 $2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>运行</p>
<pre class="line-numbers language-shell"><code class="language-shell">#编译
docker build -t test .
#运行
docker run test 111 2222 333
#输出
hello 111 333<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Dockerfile2</p>
<pre class="line-numbers language-shell"><code class="language-shell">ENTRYPOINT echo hello $0 $@
#运行
docker run test 111 2222 333
#输出
hello 111 2222 333<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="环境变量方式"><a href="#环境变量方式" class="headerlink" title="环境变量方式"></a>环境变量方式</h3><p>Dockerfile </p>
<pre class="line-numbers language-shell"><code class="language-shell">FROM ubuntu
ENTRYPOINT echo hello $0 ${OPT}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>编译 tag=test， 运行<code>docker run -e OPT="-Xmx5G -Xms2G" test aa bb</code>,输出</p>
<pre class="line-numbers language-shell"><code class="language-shell">hello aa -Xmx5G -Xms2G<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="Alpine-Linux"><a href="#Alpine-Linux" class="headerlink" title="Alpine Linux"></a><strong>Alpine</strong> Linux</h2><blockquote>
<p>alpine linux 是一个基于安全的轻量级 Linux 发行版，基于 musl libc 和 busybox。alpine linux 由于简单安全，非常适合 docker 的 linux 发行版，并且被 docker 官方所推荐用来取代 ubuntu。它不但非常小，仅有 5m 左右，而且经过优化可以在 RAM 中运行  <a href="https://wiki.alpinelinux.org/wiki/Main_Page" target="_blank" rel="noopener">官方说明文档</a></p>
</blockquote>
<h3 id="软件管理-package-management"><a href="#软件管理-package-management" class="headerlink" title="软件管理 package management"></a>软件管理 package management</h3><p><a href="https://wiki.alpinelinux.org/wiki/Alpine_Linux_package_management" target="_blank" rel="noopener">Package management 官方详细说明</a> 包含详细的命令案例</p>
<p>命令列表</p>
<pre class="line-numbers language-shell"><code class="language-shell">
add    Add new packages to the running system
del    Delete packages from the running system
fix    Attempt to repair or upgrade an installed package
update    Update the index of available packages
info    Prints information about installed or available packages
search    Search for packages or descriptions with wildcard patterns
upgrade    Upgrade the currently installed packages
cache    Maintenance operations for locally cached package repository
version    Compare version differences between installed and available packages
index    create a repository index from a list of packages
fetch    download (but not install) packages
audit    List changes to the file system from pristine package install state
verify    Verify a package signature
dot    Create a graphviz graph description for a given package
policy    Display the repository that updates a given package, plus repositories that also offer the package
stats    Display statistics, including number of packages installed and available, number of directories and files, etc.
manifest    Display checksums for files contained in a given package<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="软件仓库"><a href="#软件仓库" class="headerlink" title="软件仓库"></a>软件仓库</h4><p><a href="https://pkgs.alpinelinux.org/packages" target="_blank" rel="noopener">官方软件仓库</a> <a href="https://pkgs.alpinelinux.org/packages" target="_blank" rel="noopener">https://pkgs.alpinelinux.org/packages</a>  可以搜索安装</p>
<p><a href="http://dl-cdn.alpinelinux.org/alpine/latest-stable/community/" target="_blank" rel="noopener">社区最新稳定软件列表</a> 能找到官方仓库没有的软件</p>
<h4 id="参考-2"><a href="#参考-2" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="http://www.imooc.com/article/287437?block_id=tuijian_wz" target="_blank" rel="noopener"><strong>alpine linux 环境中安装 docker</strong></a></li>
</ul>
<h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><h2 id="本地打包Image，解压分析到其他服务器"><a href="#本地打包Image，解压分析到其他服务器" class="headerlink" title="本地打包Image，解压分析到其他服务器"></a>本地打包Image，解压分析到其他服务器</h2><pre class="line-numbers language-shell"><code class="language-shell">docker image save helloworld > helloworld.tar
docker image load -i helloworld.tar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h2><h3 id="Running-Docker-in-Jenkins"><a href="#Running-Docker-in-Jenkins" class="headerlink" title="*Running Docker in Jenkins *"></a>*<em>Running Docker in Jenkins *</em></h3><p><a href="https://container-solutions.com/running-docker-in-jenkins-in-docker/" target="_blank" rel="noopener">https://container-solutions.com/running-docker-in-jenkins-in-docker/</a></p>
<p>Dockerfile</p>
<pre class="line-numbers language-shell"><code class="language-shell">#不加latest自动选择最新的：FROM jenkins:latest
FROM jenkins
USER root
#清除了基础镜像设置的源，切换成阿里云的jessie源
RUN echo '' > /etc/apt/sources.list.d/jessie-backports.list \
  && echo "deb http://mirrors.aliyun.com/debian jessie main contrib non-free" > /etc/apt/sources.list \
  && echo "deb http://mirrors.aliyun.com/debian jessie-updates main contrib non-free" >> /etc/apt/sources.list \
  && echo "deb http://mirrors.aliyun.com/debian-security jessie/updates main contrib non-free" >> /etc/apt/sources.list

RUN apt-get update \
        && apt-get install -y sudo \
        #解决docker 命令找不到libltdl7库的问题
        && apt-get install -y libltdl7 \
        && rm -rf /var/lib/apt/lists/*
#增加sudo 权限
RUN echo "jenkins ALL=NOPASSWD: ALL" >> /etc/sudoers
#不用sudo运行docker
ARG dockerGid=999
RUN echo "docker:x:${dockerGid}:jenkins" >> /etc/group

USER jenkins
COPY plugins.txt /usr/share/jenkins/plugins.txt
RUN /usr/local/bin/plugins.sh /usr/share/jenkins/plugins.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>plugins.txt</p>
<pre class="line-numbers language-shell"><code class="language-shell">$ cat plugins.txt
scm-api:latest
git-client:latest
git:latest
greenballs:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>shell </p>
<pre class="line-numbers language-shell"><code class="language-shell">$ docker build -t myjenk .
...
Successfully built 471fc0d22bff
$ docker run -d -v /var/run/docker.sock:/var/run/docker.sock \
                -v $(which docker):/usr/bin/docker -p 8080:8080 myjenk
docker exec -it 471fc0d22bff /bin/bash 
# in jenkins 
jenkins@e8a57cd15581:/$ cat /var/jenkins_home/secrets/initialAdminPassword<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>增加时区和时间</p>
<pre class="line-numbers language-shell"><code class="language-shell">-v /etc/timezone:/etc/timezone -v /etc/localtime:/etc/localtime<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>挂载本地的设置，不用每次都需重新设置</p>
<pre class="line-numbers language-shell"><code class="language-shell">-v /var/docker_data/jenkins/jenkins_home:/var/jenkins_home 
-v /var/docker_data/jenkins/settings:/var/settings <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>Jenkins Operation </p>
<ul>
<li>Open the Jenkins home page in a browser and click the “create new jobs” link.</li>
<li>Enter the item name (e.g. “docker-test”), select “Freestyle project” and click OK.</li>
<li>On the configuration page, click “Add build step” then “Execute shell”.</li>
<li>In the command box enter “sudo docker run hello-world”</li>
<li>Click “Save”.</li>
<li>Click “Build Now”.</li>
</ul>
<p><strong>可能出现的问题 - 找不到某些library</strong></p>
<pre class="line-numbers language-shell"><code class="language-shell">docker: error while loading shared libraries: libltdl.so.7: cannot open shared object file: No such file or directory
Build step 'Execute shell' marked build as failure<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>原因Jenkins容器内没有这个库，解决，增加对应库的映射<code>-v /usr/lib/x86_64-linux-gnu/libltdl.so.7:/usr/lib/x86_64-linux-gnu/libltdl.so.7</code></p>
<pre><code>docker run -d -v /var/run/docker.sock:/var/run/docker.sock   -v $(which docker):/usr/bin/docker -v /usr/lib/x86_64-linux-gnu/libltdl.so.7:/usr/lib/x86_64-linux-gnu/libltdl.so.7 -p 8086:8080 myjenk</code></pre><h2 id="Tengine-容器化"><a href="#Tengine-容器化" class="headerlink" title="Tengine 容器化"></a>Tengine 容器化</h2><h3 id="Tengine-TCMalloc"><a href="#Tengine-TCMalloc" class="headerlink" title="Tengine + TCMalloc"></a>Tengine + TCMalloc</h3><p>其中<code>libunwind-1.2</code>和 <code>gperftools-2.7</code> 由于网络问题缓存在本地 <code>E:\software\2.coder\env\</code></p>
<p>Dockderfile</p>
<pre class="line-numbers language-shell"><code class="language-shell">#Dockerfile for tnegine
FROM centos:latest

MAINTAINER zhilin "zhilinchn@126.ocm"

ENV NGINX_VERSION 2.3.0


WORKDIR /usr/src/

ADD https://github.com/alibaba/tengine/archive/${NGINX_VERSION}.tar.gz tengine.tar.gz

# 安装依赖程序包
RUN yum -y update && yum -y upgrade &&\
    yum -y install gcc gcc-c++ openssl-devel \
        pcre-devel \
        zlib-devel \
        make \
        wget \
        ibxml2-devel \
        gd-devel \
        GeoIP-devel \
        google-perftools-devel \
        libatomic_ops-devel \
        cmake
#由于网络的原因 libunwind，gperftools 本地先下好
ADD  ./libunwind-1.2 /usr/src/libunwind-1.2
ADD  ./gperftools-2.7 /usr/src/gperftools-2.7

#使用TCMalloc优化Tengine性能
RUN cd /usr/src/libunwind-1.2 &&\
        ./configure && \
        make && make install && \
        cd /usr/src/gperftools-2.7 && \
        ./configure --enable-libunwind --enable-frame-pointers --enable-emergency-malloc && \
        make && make install && \
        mkdir -pv /tmp/tcmalloc && \
        chmod -R 0777 /tmp/tcmalloc


RUN     cd /usr/src/ && \  
        tar -zxvf tengine.tar.gz  && \
                cd tengine-${NGINX_VERSION} && \
        ./configure \
        --prefix=/usr/local/tengine \
        --with-threads \
        --with-file-aio \
        #--with-force-exit \
        --with-mail \
        --with-pcre-jit \
        --with-libatomic \
        --http-log-path=/usr/local/tengine/logs/access.log \
        --with-google_perftools_module && \
        make && make install

EXPOSE 80

CMD ["/usr/local/tengine/sbin/nginx", "-g", "daemon off;"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Docker-centos-lua"><a href="#Docker-centos-lua" class="headerlink" title="Docker +centos+ lua"></a>Docker +centos+ lua</h3><p>Dockerfile </p>
<blockquote>
<p>docker + tengine + lua插件 集成</p>
</blockquote>
<pre class="line-numbers language-shell"><code class="language-shell">FROM centos:latest
MAINTAINER  becivells <becivells@gmail.com>
RUN yum -y update &&  yum  -y upgrade
RUN yum -y install gcc gcc-c+ openssl openssl-devel pcre-devel zlib-devel  make wget

ENV TENGINE_VERSION tengine-2.2.3
RUN cd /tmp/ && wget  http://tengine.taobao.org/download/${TENGINE_VERSION}.tar.gz &&\
    tar -zxvf ${TENGINE_VERSION}.tar.gz -C /tmp/ && chmod -R 777 /tmp/${TENGINE_VERSION}
#mkdir
RUN mkdir -p /var/tmp/nginx/client/ &&\
    mkdir -p /var/tmp/nginx/proxy/ &&\
    mkdir -p /var/tmp/nginx/fcgi/ &&\
    mkdir -p /var/tmp/nginx/uwsgi/ &&\
    mkdir -p /var/tmp/nginx/scgi/
#./configure

#LuaJIT
RUN cd /tmp/ && wget http://luajit.org/download/LuaJIT-2.0.4.tar.gz && \
        tar xzvf LuaJIT-2.0.4.tar.gz && \
        cd LuaJIT-2.0.4 && \
        make install PREFIX=/usr/local/LuaJIT

ENV LUAJIT_LIB=/usr/local/LuaJIT/lib
ENV LUAJIT_INC=/usr/local/LuaJIT/include/luajit-2.0

RUN cd /tmp/ && wget https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz && \
        tar -xzvf v0.3.0.tar.gz && \
        wget https://github.com/openresty/lua-nginx-module/archive/v0.10.8.tar.gz && \
        tar -xzvf v0.10.8.tar.gz

RUN cd /tmp/${TENGINE_VERSION} && ./configure \
        --prefix=/opt/${TENGINE_VERSION}/ \
        #--sbin-path=/usr/sbin/nginx \
        #--modules-path=/usr/lib64/nginx/modules \
        #--conf-path=/etc/nginx/nginx.conf \
        --error-log-path=/var/log/nginx/error.log \
        --http-log-path=/var/log/nginx/access.log \
        --pid-path=/var/run/nginx/nginx.pid  \
        --lock-path=/var/lock/nginx.lock \
        --http-client-body-temp-path=/var/tmp/nginx/client/ \
        --http-proxy-temp-path=/var/tmp/nginx/proxy/ \
        --http-fastcgi-temp-path=/var/tmp/nginx/fcgi/ \
        --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \
        --with-file-aio \
        --with-http_addition_module \
        --with-http_auth_request_module \
        --with-http_dav_module \
        --with-http_flv_module \
        --with-http_gunzip_module \
        --with-http_gzip_static_module \
        --with-http_mp4_module \
        --with-http_random_index_module \
        --with-http_realip_module \
        --with-http_secure_link_module \
        --with-http_slice_module \
        --with-http_ssl_module \
        --with-http_stub_status_module \
        --with-http_sub_module \
           --with-mail \
        --with-mail_ssl_module \
        --with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions  -fstack-protector-strong \
        --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC' \
        --with-ld-opt='-Wl,-z,relro -Wl,-z,now -pie' \
        --add-module=/tmp/lua-nginx-module-0.10.8 \
        --add-module=/tmp/ngx_devel_kit-0.3.0 \
        --with-pcre  &&\
        cd /tmp/${TENGINE_VERSION} && make -j 4 && make install && \
        rm -rf /tmp/* && yum clean all && \
        ln -s /opt/${TENGINE_VERSION}/ /opt/tengine && \
        echo "/usr/local/LuaJIT/lib" >> /etc/ld.so.conf && \
        ldconfig
EXPOSE 80
CMD ["/opt/tengine/sbin/nginx", "-g", "daemon off;"]

<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Tengine-Alpine"><a href="#Tengine-Alpine" class="headerlink" title="Tengine + Alpine"></a>Tengine + Alpine</h3><p><a href="https://github.com/Axizdkr/tengine" target="_blank" rel="noopener">https://github.com/Axizdkr/tengine</a></p>
<p>Dockerfile</p>
<pre class="line-numbers language-shell"><code class="language-shell">FROM alpine:3.9


ENV TENGINE_VERSION 2.3.0

# nginx: https://git.io/vSIyj

RUN rm -rf /var/cache/apk/* && \
    rm -rf /tmp/*

ENV CONFIG "\
        --prefix=/etc/nginx \
        --sbin-path=/usr/sbin/nginx \
        --modules-path=/usr/lib/nginx/modules \
        --conf-path=/etc/nginx/nginx.conf \
        --error-log-path=/var/log/nginx/error.log \
        --http-log-path=/var/log/nginx/access.log \
        --pid-path=/var/run/nginx.pid \
        --lock-path=/var/run/nginx.lock \
        --http-client-body-temp-path=/var/cache/nginx/client_temp \
        --http-proxy-temp-path=/var/cache/nginx/proxy_temp \
        --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \
        --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \
        --http-scgi-temp-path=/var/cache/nginx/scgi_temp \
        --user=nginx \
        --group=nginx \
        --with-http_ssl_module \
        --with-http_realip_module \
        --with-http_addition_module \
        --with-http_sub_module \
        --with-http_dav_module \
        --with-http_flv_module \
        --with-http_mp4_module \
        --with-http_gunzip_module \
        --with-http_gzip_static_module \
        --with-http_random_index_module \
        --with-http_secure_link_module \
        --with-http_stub_status_module \
        --with-http_auth_request_module \
        --with-http_xslt_module=dynamic \
        --with-http_image_filter_module=dynamic \
        --with-http_geoip_module=dynamic \
        --with-threads \
        --with-stream \
        --with-stream_ssl_module \
        --with-stream_ssl_preread_module \
        --with-stream_realip_module \
        --with-stream_geoip_module=dynamic \
        --with-http_slice_module \
        --with-mail \
        --with-mail_ssl_module \
        --with-compat \
        --with-file-aio \
        --with-http_v2_module \
        --add-module=modules/ngx_http_upstream_check_module \
        "
RUN     addgroup -S nginx \
        && adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx \
        && apk add --no-cache --virtual .build-deps \
                gcc \
                libc-dev \
                make \
                openssl-dev \
                pcre-dev \
                zlib-dev \
                linux-headers \
                curl \
                libxslt-dev \
                gd-dev \
                geoip-dev \
        && curl -L "http://tengine.taobao.org/download/tengine-$TENGINE_VERSION.tar.gz" -o tengine.tar.gz \
        && mkdir -p /usr/src \
        && tar -zxC /usr/src -f tengine.tar.gz \
        && rm tengine.tar.gz \
        && cd /usr/src/tengine-$TENGINE_VERSION \
        && ./configure $CONFIG --with-debug \
        && make -j$(getconf _NPROCESSORS_ONLN) \
        && mv objs/nginx objs/nginx-debug \
        && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \
        && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \
        && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \
        && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \
        && ./configure $CONFIG \
        && make -j$(getconf _NPROCESSORS_ONLN) \
        && make install \
        && rm -rf /etc/nginx/html/ \
        && mkdir /etc/nginx/conf.d/ \
        && mkdir -p /usr/share/nginx/html/ \
        && install -m644 html/index.html /usr/share/nginx/html/ \
        && install -m644 html/50x.html /usr/share/nginx/html/ \
        && install -m755 objs/nginx-debug /usr/sbin/nginx-debug \
        && install -m755 objs/ngx_http_xslt_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_xslt_filter_module-debug.so \
        && install -m755 objs/ngx_http_image_filter_module-debug.so /usr/lib/nginx/modules/ngx_http_image_filter_module-debug.so \
        && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \
        && install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \
        && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \
        && strip /usr/sbin/nginx* \
        && strip /usr/lib/nginx/modules/*.so \
        && rm -rf /usr/src/tengine-$NGINX_VERSION \
        \
        # Bring in gettext so we can get `envsubst`, then throw
        # the rest away. To do this, we need to install `gettext`
        # then move `envsubst` out of the way so `gettext` can
        # be deleted completely, then move `envsubst` back.
        && apk add --no-cache --virtual .gettext gettext \
        && mv /usr/bin/envsubst /tmp/ \
        \
        && runDeps="$( \
                scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \
                        | tr ',' '\n' \
                        | sort -u \
                        | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
        )" \
        && apk add --no-cache --virtual .nginx-rundeps $runDeps \
        && apk del .build-deps \
        && apk del .gettext \
        && mv /tmp/envsubst /usr/local/bin/ \
        \
        # Bring in tzdata so users could set the timezones through the environment
        # variables
        && apk add --no-cache tzdata \
        \
        # forward request and error logs to docker log collector
        && ln -sf /dev/stdout /var/log/nginx/access.log \
        && ln -sf /dev/stderr /var/log/nginx/error.log

COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 80 443

STOPSIGNAL SIGTERM

CMD ["nginx", "-g", "daemon off;"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="参考-3"><a href="#参考-3" class="headerlink" title="参考"></a>参考</h3><ul>
<li><p><a href="https://blog.csdn.net/becivells/article/details/52014957" target="_blank" rel="noopener">Dockerfile-centos:tengine</a></p>
</li>
<li><p><a href="http://www.imooc.com/article/19597" target="_blank" rel="noopener"><strong>Nginx编译安装Lua模块</strong></a></p>
</li>
<li><p><a href="https://blog.csdn.net/weixin_43865893/article/details/86520130" target="_blank" rel="noopener">Tengine+Lua插件编译安装</a></p>
</li>
</ul>
<h2 id="docker-zipkin"><a href="#docker-zipkin" class="headerlink" title="docker-zipkin"></a>docker-zipkin</h2><h3 id="zipkin-elasticsearch"><a href="#zipkin-elasticsearch" class="headerlink" title="zipkin + elasticsearch"></a>zipkin + elasticsearch</h3><p><a href="https://blog.csdn.net/xiaoluo033/article/details/80961807" target="_blank" rel="noopener">spring cloud 2.0 入门系列一 （10）分布式链路追踪-Zipkin</a></p>
<p>docker-compose.yml</p>
<pre class="line-numbers language-yml"><code class="language-yml">version: "3"
services:

  elasticsearch:
    image:  elasticsearch:latest
    container_name: elasticsearch
    restart: always
    networks:
      - elk
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
       - ../elasticsearch/data:/usr/share/elasticsearch/data

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    restart: always
    networks:
      - elk
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch

networks:
    elk:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="docker-zipkin-变量专递分析"><a href="#docker-zipkin-变量专递分析" class="headerlink" title="docker-zipkin 变量专递分析"></a>docker-zipkin 变量专递分析</h3><p><a href="https://github.com/openzipkin/docker-zipkin" target="_blank" rel="noopener"> <strong>docker-zipkin</strong></a> </p>
<p>docker-compose.yml 设置环境变量</p>
<p>zipkin/Dockerfile 调用<code>run.sh</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">WORKDIR /zipkin

RUN ["/busybox/sh", "-c", "ln -s /busybox/* /bin"]

EXPOSE 9410 9411

ENTRYPOINT ["/busybox/sh", "run.sh"]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>run.sh 根据docker-compose.yml动态设置变量</p>
<pre class="line-numbers language-shell"><code class="language-shell">#!/bin/sh

if [ -f ".${STORAGE_TYPE}_profile" ]; then
  source ${PWD}/.${STORAGE_TYPE}_profile
fi

exec java ${MODULE_OPTS} ${JAVA_OPTS} -cp . org.springframework.boot.loader.PropertiesLauncher<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>.mysql_profile</p>
<pre class="line-numbers language-shell"><code class="language-shell">#!/bin/sh
if [[ -z "$MYSQL_HOST" ]]; then
  if [[ -z "$STORAGE_PORT_3306_TCP_ADDR" ]]; then
    echo "** ERROR: You need to link with a MySQL container as 'storage' or specify MYSQL_HOST env var."
    echo "STORAGE_PORT_3306_TCP_ADDR (container link) or MYSQL_HOST should contain a MySQL hostname."
    exit 1
  fi
  MYSQL_HOST=$STORAGE_PORT_3306_TCP_ADDR
  # When there's a container named "mysql", MYSQL_PORT will have a value like tcp://172.17.0.2:3306
  export MYSQL_PORT=3306
fi

export MYSQL_HOST
export MYSQL_USER=${MYSQL_USER:=zipkin}
export MYSQL_PASS=${MYSQL_PASS:=zipkin}

echo "MySQL host: $MYSQL_HOST"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>spring boot 最终获取配置</p>
<p><code>/zipkin-server/src/main/resources/zipkin-server-shared.yml</code></p>
<pre class="line-numbers language-yml"><code class="language-yml"> mysql:
      jdbc-url: ${MYSQL_JDBC_URL:}
      host: ${MYSQL_HOST:localhost}
      port: ${MYSQL_TCP_PORT:3306}
      username: ${MYSQL_USER:}
      password: ${MYSQL_PASS:}
      db: ${MYSQL_DB:zipkin}
      max-active: ${MYSQL_MAX_CONNECTIONS:10}
      use-ssl: ${MYSQL_USE_SSL:false}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="容器使用远程storage"><a href="#容器使用远程storage" class="headerlink" title="容器使用远程storage"></a>容器使用远程storage</h2><pre class="line-numbers language-shell"><code class="language-shell">docker plugin install vieux/sshfs
docker volume create \
  -d vieux/sshfs \
  --name sshvolume \
  -o sshcmd=user@1.2.3.4:/remote \
  -o password=$(cat file_containing_password_for_remote_host)

docker run --rm -v sshvolume:/data busybox ls /data
#删除
docker volume rm sshvolume
docker plugin disable vieux/sshfs
docker plugin remove vieux/sshfs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="docker-mongo"><a href="#docker-mongo" class="headerlink" title="docker-mongo"></a>docker-mongo</h2><p>参考博文：</p>
<ul>
<li><a href="https://blog.csdn.net/u011104991/article/details/81735960" target="_blank" rel="noopener">使用Docker一键部署MongoDB</a></li>
<li><a href="https://docs.gitlab.com/omnibus/docker/#deploy-gitlab-in-a-docker-swarm" target="_blank" rel="noopener">Deploy GitLab in a Docker swarm</a></li>
<li><a href="https://hub.docker.com/_/mongo" target="_blank" rel="noopener">https://hub.docker.com/_/mongo</a></li>
</ul>
<h2 id="nacos-docker"><a href="#nacos-docker" class="headerlink" title="nacos-docker"></a>nacos-docker</h2><p><a href="https://github.com/nacos-group/nacos-docker" target="_blank" rel="noopener"><strong>nacos-docker</strong></a></p>
<h2 id="fastdfs"><a href="#fastdfs" class="headerlink" title="fastdfs"></a><strong>fastdfs</strong></h2><p><a href="https://github.com/happyfish100/fastdfs" target="_blank" rel="noopener">https://github.com/happyfish100/fastdfs</a></p>
<h1 id="更多官方学习资源"><a href="#更多官方学习资源" class="headerlink" title="更多官方学习资源"></a>更多官方学习资源</h1><ul>
<li><a href="https://docs.docker.com/samples/" target="_blank" rel="noopener">Samples</a>: Our samples include multiple examples of popular software running in containers, and some good labs that teach best practices.</li>
<li><a href="https://docs.docker.com/engine/userguide/" target="_blank" rel="noopener">User Guide</a>: The user guide has several examples that explain networking and storage in greater depth than was covered here.</li>
<li><a href="https://docs.docker.com/engine/admin/" target="_blank" rel="noopener">Admin Guide</a>: Covers how to manage a Dockerized production environment.</li>
<li><a href="https://training.docker.com/" target="_blank" rel="noopener">Training</a>: Official Docker courses that offer in-person instruction and virtual classroom environments.</li>
<li><a href="https://blog.docker.com/" target="_blank" rel="noopener">Blog</a>: Covers what’s going on with Docker lately.</li>
</ul>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="Docker-安装"><a href="#Docker-安装" class="headerlink" title="Docker 安装"></a>Docker 安装</h2><p>最简单官网方案</p>
<pre class="line-numbers language-shell"><code class="language-shell">curl -fsSL get.docker.com -o get-docker.sh
sudo sh get-docker.sh --mirror Aliyun<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>官网安装教程</p>
<p><a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce" target="_blank" rel="noopener">install-docker-ce</a></p>
<p>从入门到实战</p>
<p><a href="https://yeasy.gitbooks.io/docker_practice/install/" target="_blank" rel="noopener">install</a></p>
<h2 id="配置优化"><a href="#配置优化" class="headerlink" title="配置优化"></a>配置优化</h2><ul>
<li><p>使用国内镜像 <code>/etc/docker/daemon.json（Linux） 或者 %programdata%\docker\config\daemon.json（Windows</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">{
  "registry-mirrors": ["http://hub-mirror.c.163.com"]
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>配置全部容器的 DNS <code>/etc/docker/daemon.json</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">{
  "dns" : [
    "114.114.114.114",
    "8.8.8.8"
  ]
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<p>注意：vi /etc/docker/demo.json  <code>[Linux vi编辑后无法保存出现E212：Can't open file for writing](https://www.cnblogs.com/hujunwei/p/11335565.html)</code>  先创建路径</p>
<h2 id="Docker-网络配置"><a href="#Docker-网络配置" class="headerlink" title="Docker 网络配置"></a>Docker 网络配置</h2><blockquote>
<p>docker c/s 模式客户端和服务器通信的方式</p>
<pre class="line-numbers language-shell"><code class="language-shell">unix:///var/run/docker.sock
tcp://host:port
fd://socketfd or fd://*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>守护进程默认配置： <code>unix:///var/run/docker.sock</code></p>
</blockquote>
<p>docker 远程访问</p>
<pre class="line-numbers language-shell"><code class="language-shell"># 修改服务器标识Label
vim /etc/docker/daemon.json 
# 增加：
"labels":["name=docker_daemon_server_on_ubuntu"]
# 重启
systemctl daemon-reload
systemctl restart docker
# 验证生效 
docker info 
...
Labels:
 name=docker_daemon_server_on_ubuntu
...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>修改默认网桥 <code>vim /etc/docker/daemon.json</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">{
    "bridge": "br0"
}

# 重启生效
systemctl daemon-reload
systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="daemon-json"><a href="#daemon-json" class="headerlink" title="daemon.json"></a>daemon.json</h2><p><strong>linux版本</strong></p>
<pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>
    <span class="token property">"api-cors-header"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"authorization-plugins"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"bip"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"bridge"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"cgroup-parent"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"cluster-store"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"cluster-store-opts"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">"cluster-advertise"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"debug"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"default-gateway"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"default-gateway-v6"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"default-runtime"</span><span class="token operator">:</span> <span class="token string">"runc"</span><span class="token punctuation">,</span>
    <span class="token property">"default-ulimits"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">"disable-legacy-registry"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">"dns"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"dns-opts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"dns-search"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"exec-opts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"exec-root"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"fixed-cidr"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"fixed-cidr-v6"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"graph"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"group"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"hosts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"icc"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">"insecure-registries"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span>
    <span class="token property">"iptables"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">"ipv6"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">"ip-forward"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">"ip-masq"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">"labels"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"live-restore"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"log-driver"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"log-level"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"log-opts"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">"max-concurrent-downloads"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token property">"max-concurrent-uploads"</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token property">"mtu"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">"oom-score-adjust"</span><span class="token operator">:</span> -<span class="token number">500</span><span class="token punctuation">,</span>
    <span class="token property">"pidfile"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"raw-logs"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">"registry-mirrors"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"runtimes"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">"runc"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"runc"</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">"custom"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">"path"</span><span class="token operator">:</span> <span class="token string">"/usr/local/bin/my-runc-replacement"</span><span class="token punctuation">,</span>
            <span class="token property">"runtimeArgs"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token string">"--debug"</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">"selinux-enabled"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">"storage-driver"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"storage-opts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"swarm-default-advertise-addr"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"tls"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"tlscacert"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"tlscert"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"tlskey"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"tlsverify"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"userland-proxy"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">"userns-remap"</span><span class="token operator">:</span> <span class="token string">""</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>windows10</strong></p>
<pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>
    <span class="token property">"authorization-plugins"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"bridge"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"cluster-advertise"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"cluster-store"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"debug"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"default-ulimits"</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">"disable-legacy-registry"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">"dns"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"dns-opts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"dns-search"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"exec-opts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"fixed-cidr"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"graph"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"group"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"hosts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"insecure-registries"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"labels"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"live-restore"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">"log-driver"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"log-level"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"mtu"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token property">"pidfile"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"raw-logs"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">"registry-mirrors"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"storage-driver"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"storage-opts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">"swarm-default-advertise-addr"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"tlscacert"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"tlscert"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"tlskey"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token property">"tlsverify"</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="config"><a href="#config" class="headerlink" title="config"></a>config</h2><blockquote>
<p><a href="https://docs.docker.com/engine/swarm/configs/" target="_blank" rel="noopener">官网说明</a> 有三个详细的案例</p>
</blockquote>
<p>关键命令提取</p>
<pre class="line-numbers language-shell"><code class="language-shell"># 第一个 site.conf 为config命名， 第二个为config读取路径
docker config create site.conf ./site.conf
docker config ls<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>使用</p>
<pre class="line-numbers language-shell"><code class="language-shell">$ docker service create \
     --name nginx \
     --secret site.key \
     --secret site.crt \
     --config source=site.conf,target=/etc/nginx/conf.d/site.conf,mode=0440 \
     --publish published=3000,target=443 \
     nginx:latest \
     sh -c "exec nginx -g 'daemon off;'"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>替换 </p>
<blockquote>
<p>removing the old config and adding the new config at the same mount point within the container</p>
</blockquote>
<pre class="line-numbers language-shell"><code class="language-shell">docker config create site-v2.conf site.conf
$ docker service update \
  --config-rm site.conf \
  --config-add source=site-v2.conf,target=/etc/nginx/conf.d/site.conf,mode=0440 \
  nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>清除并退出</p>
<pre class="line-numbers language-shell"><code class="language-shell">$ docker config rm site.conf
$ docker service rm nginx
$ docker secret rm site.crt site.key
$ docker config rm site-v2.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="compose-config"><a href="#compose-config" class="headerlink" title="compose config"></a>compose config</h3><p>创建config后直接使用</p>
<pre class="line-numbers language-shell"><code class="language-shell">    configs:
    #docker config create mongod.conf ./mongod.conf
      - source: mongod.conf
        target: /etc/mongo/mongod.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>全局config</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.6"</span>
<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">gitlab</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> gitlab/gitlab<span class="token punctuation">-</span>ce<span class="token punctuation">:</span>latest
    <span class="token key atrule">environment</span><span class="token punctuation">:</span>
      <span class="token key atrule">GITLAB_OMNIBUS_CONFIG</span><span class="token punctuation">:</span> <span class="token string">"from_file('/omnibus_config.rb')"</span>
    <span class="token key atrule">configs</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">source</span><span class="token punctuation">:</span> gitlab
        <span class="token key atrule">target</span><span class="token punctuation">:</span> /omnibus_config.rb
    <span class="token key atrule">secrets</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> gitlab_root_password
  <span class="token key atrule">gitlab-runner</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> gitlab/gitlab<span class="token punctuation">-</span>runner<span class="token punctuation">:</span>alpine
    <span class="token key atrule">deploy</span><span class="token punctuation">:</span>
      <span class="token key atrule">mode</span><span class="token punctuation">:</span> replicated
      <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">4</span>
<span class="token key atrule">configs</span><span class="token punctuation">:</span>
  <span class="token key atrule">gitlab</span><span class="token punctuation">:</span>
    <span class="token key atrule">file</span><span class="token punctuation">:</span> ./gitlab.rb
<span class="token key atrule">secrets</span><span class="token punctuation">:</span>
  <span class="token key atrule">gitlab_root_password</span><span class="token punctuation">:</span>
    <span class="token key atrule">file</span><span class="token punctuation">:</span> ./root_password.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>gitlab.rb</p>
<pre class="line-numbers language-shell"><code class="language-shell">external_url 'https://my.domain.com/'
gitlab_rails['initial_root_password'] = File.read('/run/secrets/gitlab_root_password')<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h1 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h1><ul>
<li><p>Nexus 起到缓存的作用（链接到 DockerHub 中下载并缓存到 Nexus 中）</p>
<blockquote>
<p>其它的仓库创建方法请各位自己摸索，还可以创建一个 docker (proxy) 类型的仓库链接到 DockerHub 上。再创建一个 docker (group) 类型的仓库把刚才的 hosted 与 proxy 添加在一起。主机在访问的时候默认下载私有仓库中的镜像，如果没有将链接到 DockerHub 中下载并缓存到 Nexus 中。</p>
</blockquote>
</li>
<li><p><a href="https://blog.csdn.net/boling_cavalry/article/details/77623193" target="_blank" rel="noopener">使用docker修改查看JDK源码，用于深度的调试</a></p>
</li>
</ul>
<h2 id="第三方库使用"><a href="#第三方库使用" class="headerlink" title="第三方库使用"></a>第三方库使用</h2><p>Vagrant</p>
<ul>
<li><p><a href="https://www.cnblogs.com/vikings-blog/p/3953810.html" target="_blank" rel="noopener">ubuntu 安装vagrant过程</a></p>
</li>
<li><p><a href="https://www.vagrantup.com/downloads.html" target="_blank" rel="noopener">downloads</a> ubuntu: dpkg -i xx.deb</p>
</li>
</ul>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><ol>
<li>docker启动报错：WARNING: IPv4 forwarding is disabled. Networking will not work.<pre class="line-numbers language-shell"><code class="language-shell">vi /usr/lib/sysctl.d/00-system.conf
添加如下代码：
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ol>
<p>net.ipv4.ip_forward=1</p>
<p>重启network服务<br>systemctl restart network</p>
<pre><code>
2.  ubuntu：  docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post http://%2Fvar%2Frun%2Fdocker.sock/v1.39/containers/create: dial unix /var/run/docker.sock: connect: permission denied.
    See 'docker run --help'.

猜测是需ROOT权限， docker服务没有启动,解决方案

```shell
su root #切换到root用户
systemctl enable docker #设置开机自动启用docker服务
systemctl start docker #启动docker 服务</code></pre><p>或者赋予docker sudo 权限</p>
<pre class="line-numbers language-shell"><code class="language-shell">sudo groupadd docker
sudo usermod -aG docker $USER
sudo service docker restart
#实战中需要切换到root的运行过一遍 su 到root su jobs 到当前用户
# 测试
docker run hello-world 
# 或
docker version <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><p>Unable to locate package nginx</p>
<p>解决方案： apt-get update</p>
</li>
<li><p>无法获得锁 /var/lib/dpkg/lock - open<br>原因可能是上次我直接在VM切断的电源导致资源一直被占用未被释放<br>解决：(养成正常关机的习惯)</p>
<pre class="line-numbers language-shell"><code class="language-shell">sudo rm /var/cache/apt/archives/lock
sudo rm /var/lib/dpkg/lock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>docker 各种命令都报</p>
<pre class="line-numbers language-shell"><code class="language-shell">Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>systemctl status docker 出现日志如下</p>
<pre class="line-numbers language-shell"><code class="language-shell"> docker.service - Docker Application Container Engine
   Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled)
   Active: failed (Result: start-limit-hit) since 三 2019-01-30 23:47:41 CST; 1min 49s ago
     Docs: https://docs.docker.com
  Process: 3700 ExecStart=/usr/bin/dockerd -H fd:// (code=exited, status=1/FAILURE)
 Main PID: 3700 (code=exited, status=1/FAILURE)

1月 30 23:47:38 jobs-machine systemd[1]: Failed to start Docker Application Container Engine.
1月 30 23:47:38 jobs-machine systemd[1]: docker.service: Unit entered failed state.
1月 30 23:47:38 jobs-machine systemd[1]: docker.service: Failed with result 'exit-code'.
1月 30 23:47:41 jobs-machine systemd[1]: docker.service: Service hold-off time over, scheduling restart.
1月 30 23:47:41 jobs-machine systemd[1]: Stopped Docker Application Container Engine.
1月 30 23:47:41 jobs-machine systemd[1]: docker.service: Start request repeated too quickly.
1月 30 23:47:41 jobs-machine systemd[1]: Failed to start Docker Application Container Engine.
1月 30 23:47:41 jobs-machine systemd[1]: docker.service: Unit entered failed state.
1月 30 23:47:41 jobs-machine systemd[1]: docker.service: Failed with result 'start-limit-hit'.
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>解决： 原因 <code>/etc/docker/daemon.json</code> 语法错误</p>
<pre class="line-numbers language-shell"><code class="language-shell">mv /etc/docker/daemon.json /etc/docker/daemon.json.bak<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ul>
<ul>
<li><p>vagrant box 错误信息</p>
<pre class="line-numbers language-shell"><code class="language-shell">/usr/lib/ruby/2.3.0/rubygems/specification.rb:949:in `all=': undefined method `group_by' for nil:NilClass (NoMethodError)
    from /usr/lib/ruby/vendor_ruby/vagrant/bundler.rb:275:in `with_isolated_gem'
    from /usr/lib/ruby/vendor_ruby/vagrant/bundler.rb:231:in `internal_install'
    from /usr/lib/ruby/vendor_ruby/vagrant/bundler.rb:102:in `install'
    from /usr/lib/ruby/vendor_ruby/vagrant/plugin/manager.rb:62:in `block in install_plugin'
    from /usr/lib/ruby/vendor_ruby/vagrant/plugin/manager.rb:72:in `install_plugin'
    from /usr/share/vagrant/plugins/commands/plugin/action/install_gem.rb:37:in `call'
    from /usr/lib/ruby/vendor_ruby/vagrant/action/warden.rb:34:in `call'
    from /usr/lib/ruby/vendor_ruby/vagrant/action/builder.rb:116:in `call'
    from /usr/lib/ruby/vendor_ruby/vagrant/action/runner.rb:66:in `block in run'
    from /usr/lib/ruby/vendor_ruby/vagrant/util/busy.rb:19:in `busy'
    from /usr/lib/ruby/vendor_ruby/vagrant/action/runner.rb:66:in `run'
    from /usr/share/vagrant/plugins/commands/plugin/command/base.rb:14:in `action'
    from /usr/share/vagrant/plugins/commands/plugin/command/install.rb:32:in `block in execute'
    from /usr/share/vagrant/plugins/commands/plugin/command/install.rb:31:in `each'
    from /usr/share/vagrant/plugins/commands/plugin/command/install.rb:31:in `execute'
    from /usr/share/vagrant/plugins/commands/plugin/command/root.rb:56:in `execute'
    from /usr/lib/ruby/vendor_ruby/vagrant/cli.rb:42:in `execute'
    from /usr/lib/ruby/vendor_ruby/vagrant/environment.rb:268:in `cli'
    from /usr/bin/vagrant:173:in `<main>'
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>解决方案：更新vagrant到最新版本；</p>
<h2 id="COPY-failed-Forbidden-path-outside-the-build-context"><a href="#COPY-failed-Forbidden-path-outside-the-build-context" class="headerlink" title="COPY failed: Forbidden path outside the build context:"></a>COPY failed: Forbidden path outside the build context:</h2><p>原因对 build 。 的理解有问题，context 就是。 他不会向上找资源，只会向下递归查找资源，使用 。 上级目录是找不到资源的。 这样设计目的是限制生成上下文占用的资源</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker build -f dockerfile/Dockerfile .<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ul>
<h1 id="附录一"><a href="#附录一" class="headerlink" title="附录一"></a>附录一</h1><p>学习资料</p>
<ul>
<li><p><a href="https://yeasy.gitbooks.io/docker_practice/appendix/best_practices.html" target="_blank" rel="noopener">Dockerfile 最佳实践</a></p>
</li>
<li><p><a href="https://github.com/docker/labs/tree/master/developer-tools/java" target="_blank" rel="noopener">Docker for Java Developers</a></p>
</li>
</ul>
<p>学习源码</p>
<ul>
<li><a href="https://github.com/arun-gupta/docker-java-sample/" target="_blank" rel="noopener"><strong>docker-java-sample</strong></a> 有简单的Mvn 和gradle 生成docker image 的案例</li>
<li><a href="https://github.com/fabianenardon/mongo-docker-demo" target="_blank" rel="noopener"><strong>mongo-docker-demo</strong></a></li>
<li><a href="https://github.com/arun-gupta/docker-javaee" target="_blank" rel="noopener">docker-javaee</a> A simple Java EE application deployed using WildFly and accessing MySQL database <ul>
<li><a href="https://docs.helm.sh/using_helm/#installing-helm" target="_blank" rel="noopener">installing-helm</a>  </li>
</ul>
</li>
</ul>
<p>官方网站</p>
<ul>
<li><a href="https://docs.docker.com/get-started/" target="_blank" rel="noopener">Get started with Docker</a></li>
<li><a href="https://docs.docker.com/" target="_blank" rel="noopener">Docker 官网</a></li>
</ul>
<h1 id="附录二"><a href="#附录二" class="headerlink" title="附录二"></a>附录二</h1><h2 id="常用工具-1"><a href="#常用工具-1" class="headerlink" title="常用工具"></a>常用工具</h2><ul>
<li><a href="https://github.com/fabric8io/docker-maven-plugin" target="_blank" rel="noopener"><strong>docker-maven-plugin</strong></a><ul>
<li><a href="http://dmp.fabric8.io/" target="_blank" rel="noopener">document</a></li>
</ul>
</li>
<li><a href="http://dockone.io/article/442" target="_blank" rel="noopener">如何用Gradle创建Docker镜像</a></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>知识架构</tag>
      </tags>
  </entry>
  <entry>
    <title>网络编程笔记汇总</title>
    <url>/2019/09/10/2019-4-13-netwok_pragram_note/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h1><h2 id="基本术语"><a href="#基本术语" class="headerlink" title="基本术语"></a>基本术语</h2><h3 id="Socket"><a href="#Socket" class="headerlink" title="Socket"></a><strong>Socket</strong></h3><p>操作系统为软件提供输入/出的端口，链接过程Service端监听某个端口，客户端访问服务器端口；</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">int</span> <span class="token function">socket</span><span class="token punctuation">(</span><span class="token keyword">int</span> domain<span class="token punctuation">,</span> <span class="token keyword">int</span> type<span class="token punctuation">,</span> <span class="token keyword">int</span> protocol<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li>domain：协议域，又称协议族（family）。常用有AF_INET、AF_INET6、AF_LOCAL（或称AF_UNIX，Unix域Socket）、AF_ROUTE等,决定了socket的地址类型,在通信中必须采用对应的地址，如AF_INET决定了要用ipv4地址（32位的）与端口号（16位的）的组合、AF_UNIX决定了要用一个绝对路径名作为地址。</li>
<li>type ：指定Socket类型，有SOCK_STREAM、SOCK_DGRAM、SOCK_RAW、SOCK_PACKET、SOCK_SEQPACKET等。<ul>
<li>SOCK_STREAM 面向连接, 针对于面向连接的TCP服务应用 </li>
<li>SOCK_DGRAM 一种无连接, 对应于无连接的UDP服务应用</li>
</ul>
</li>
<li>protocol: 指定协议,有IPPROTO_TCP、IPPROTO_UDP、IPPROTO_STCP、IPPROTO_TIPC等 </li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://baike.baidu.com/item/socket/281150" target="_blank" rel="noopener">socket百科</a></li>
</ol>
<h3 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP/IP"></a>TCP/IP</h3><p> Transmission Control Protocol (TCP) and the Internet Protocol (IP)</p>
<blockquote>
<p>provides end-to-end data communication specifying how data should be packetized, addressed, transmitted, routed, and received.</p>
</blockquote>
<p> From lowest to highest</p>
<ul>
<li>link layer: containing communication methods for data that remains whichin a single network segment;</li>
<li>internet layer: providing internetworking between independent network;</li>
<li>transport layer: providing end-to-end comminucation services for applications;</li>
<li>applicaton layer: providing services to users and system functions; such as SMTP, FTP, SSH, HTTP</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://en.wikipedia.org/wiki/Internet_protocol_suite" target="_blank" rel="noopener">Internet protocol suite</a></li>
</ol>
<h3 id="Http协议中Cookie"><a href="#Http协议中Cookie" class="headerlink" title="Http协议中Cookie"></a>Http协议中Cookie</h3><p>Cookie总是保存在客户端中，按在客户端中的存储位置，可分为内存Cookie和硬盘Cookie,内存Cookie由浏览器维护; HTTP请求中的cookie明文，HTTPS加密，大小限制在4kB</p>
<p><strong>语法</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml">Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span> 
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; Expires=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>date</span><span class="token punctuation">></span></span>
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; Max-Age=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>non-zero-digit</span><span class="token punctuation">></span></span>
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; Domain=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>domain-value</span><span class="token punctuation">></span></span>
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; Path=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path-value</span><span class="token punctuation">></span></span>
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; Secure
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; HttpOnly

Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; SameSite=Strict
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; SameSite=Lax

// Multiple directives are also possible, for example:
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; Domain=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>domain-value</span><span class="token punctuation">></span></span>; Secure; HttpOnly<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>案例</strong><br>Server-&gt;Client</p>
<pre><code>Set-Cookie: lu=Rg3vHJZnehYLjVg7qi3bZjzg; Expires=Tue, 15 Jan 2013 21:47:38 GMT; Path=/; Domain=.169it.com; HttpOnly

Set-Cookie: made_write_conn=1295214458; Path=/; Domain=.169it.com

Set-Cookie: reg_fb_gate=deleted; Expires=Thu, 01 Jan 1970 00:00:01 GMT; Path=/; Domain=.169it.com; HttpOnly</code></pre><p>Client-&gt;Server </p>
<pre><code>GET /spec.html HTTP/1.1  

Host: www.example.org  

Cookie: name=value; name2=value2  

Accept: */*  </code></pre><h3 id="属性详解"><a href="#属性详解" class="headerlink" title="属性详解"></a>属性详解</h3><ul>
<li>cookie-name： 变量名用于获取cookie-value；</li>
<li>Expires：cookie过期时间，可以设置时间小于当前使cookie无效；</li>
<li>Path：cookie的有效范围，如Path=”/”整个域名内有效；</li>
<li>domain： cookie有效的域名；</li>
</ul>
<p>参考： </p>
<ol>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie" target="_blank" rel="noopener">Set-Cookie</a></li>
<li><a href="https://www.cnblogs.com/yanganok/p/5322411.html" target="_blank" rel="noopener">Http协议中Cookie介绍</a></li>
</ol>
<h3 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h3><blockquote>
<p>Uniform Resource Locator / 同一资源定位器</p>
</blockquote>
<p>格式</p>
<pre class="line-numbers language-xml"><code class="language-xml">scheme:[//[user[:password]@]host[:port]][/path][?query][#fragment]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>案例：</p>
<pre class="line-numbers language-url"><code class="language-url">http://www.example.com:80/path/to/myfile.html?key1=value1&key2=value2#SomewhereInTheDocument<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="浏览器处理URL完整过程"><a href="#浏览器处理URL完整过程" class="headerlink" title="浏览器处理URL完整过程"></a>浏览器处理URL完整过程</h3><p><img src="http://cdn.linz.tech/web-process-url.png" alt="1556472466987"></p>
<h2 id="网络协议"><a href="#网络协议" class="headerlink" title="网络协议"></a>网络协议</h2><h3 id="经典五层模型"><a href="#经典五层模型" class="headerlink" title="经典五层模型"></a>经典五层模型</h3><p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1561132064&amp;di=cc967a2bf193d68f4abcdebb215c85ce&amp;imgtype=jpg&amp;er=1&amp;src=http%3A%2F%2Fseo-1255598498.file.myqcloud.com%2Ffull%2Fa1b608d8a924f451f5538a13996e023be1d904f4.jpg" alt=""></p>
<h3 id="HTTP基础"><a href="#HTTP基础" class="headerlink" title="HTTP基础"></a>HTTP基础</h3><h4 id="HTTP历史"><a href="#HTTP历史" class="headerlink" title="HTTP历史"></a>HTTP历史</h4><ol>
<li><p>HTTP/1.1<br>持久连接， Pipeline（并行/串行传输），增加host命令</p>
</li>
<li><p>HTTP2</p>
<ol>
<li>所有数据进行二进制传输，带来的好处：<ul>
<li>同一个连接里面发送多个请求不需要按照顺序</li>
<li>同信息压缩以及推送等提高效率的功能<h4 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h4></li>
</ul>
</li>
</ol>
</li>
<li><p>三次握手时序图<br><img src="http://cdn.linz.tech/handshake-3-2019-6-13.png" alt=""></p>
<h4 id="HTTP报文"><a href="#HTTP报文" class="headerlink" title="HTTP报文"></a>HTTP报文</h4></li>
</ol>
<p><img src="http://cdn.linz.tech/http-message-2019-6-13.png" alt="1556350805659"></p>
<p><strong>响应状态码</strong></p>
<ul>
<li>1xx 消息，一般是告诉客户端，请求已经收到了，正在处理，别急…</li>
<li>2xx 处理成功，一般表示：请求收悉、我明白你要的、请求已受理、已经处理完成等信息.</li>
<li>3xx 重定向到其它地方。它让客户端再发起一个请求以完成整个处理。</li>
<li>4xx 处理发生错误，责任在客户端，如客户端的请求一个不存在的资源，客户端未被授权，禁止访问等。</li>
<li>5xx 处理发生错误，责任在服务端，如服务端抛出异常，路由出错，HTTP版本不支持等。</li>
</ul>
<h3 id="常见的HTTP响应报文头"><a href="#常见的HTTP响应报文头" class="headerlink" title="常见的HTTP响应报文头"></a><strong>常见的HTTP响应报文头</strong></h3><h4 id="Cache-Control"><a href="#Cache-Control" class="headerlink" title="Cache-Control  "></a><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control" target="_blank" rel="noopener"><strong>Cache-Control</strong>  </a></h4><p>Cacheability</p>
<p><strong>public</strong></p>
<p><strong>private</strong> 只有浏览器可以缓存数据，代理是不允许缓存的</p>
<p><code>no-store</code></p>
<p>The cache should not store anything about the client request or server response.</p>
<p>到期</p>
<p><code>Cache-Control: max-age=3600</code>  让客户端对响应内容缓存3600秒,如果客户再次访问该资源，直接从客户端的缓存中返回内容给客户</p>
<p><code>s-maxage=&lt;seconds&gt;</code> 代理服务器读取</p>
<p><code>max-stale=&lt;seconds&gt;</code>过期后是继续使用缓存，发起端设置</p>
<p>重新认证(revalidation and reloading)</p>
<p><code>must-revaliadate</code> </p>
<blockquote>
<p>Indicates that once a resource has become stale (e.g. <code>max-age</code> has expired), a cache must not use the response to satisfy subsequent requests for this resource without successful <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching#Cache_validation" target="_blank" rel="noopener">validation</a> on the origin server.</p>
</blockquote>
<p><code>proxy-revalidate</code></p>
<blockquote>
<p>Same as <code>must-revalidate</code>, but it only applies to shared caches (e.g., proxies) and is ignored by a private cache.</p>
</blockquote>
<p><strong>other</strong></p>
<p><code>no-transform</code> </p>
<blockquote>
<p>The Content-Encoding, Content-Range, Content-Type headers must not be modified by a proxy </p>
<p>on HTTPS is redundant  </p>
</blockquote>
<p>判断Contentg</p>
<h4 id="Keep-alive-长连接"><a href="#Keep-alive-长连接" class="headerlink" title="Keep-alive 长连接"></a>Keep-alive 长连接</h4><blockquote>
<p>Connection: keep-alive</p>
<p>Connection: close </p>
</blockquote>
<h4 id="CORS跨域"><a href="#CORS跨域" class="headerlink" title="CORS跨域"></a>CORS跨域</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">:</span> <span class="token string">'*'</span> <span class="token comment" spellcheck="true">// 所有的网站可以用</span>
<span class="token string">'Access-Control-Allow-Origin'</span><span class="token punctuation">:</span> <span class="token string">'https:www.bai.com'</span> 
<span class="token string">'Access-Control-Allow-Headers'</span><span class="token punctuation">:</span> <span class="token string">'X-text-Cors'</span>  <span class="token comment" spellcheck="true">// 允许指定头访问</span>
<span class="token string">'Access-Control-Allow-Methods'</span><span class="token punctuation">:</span> <span class="token string">'POST, PUT,DELETE    '</span>  <span class="token comment" spellcheck="true">// 允许指定方法</span>
<span class="token string">'Access-Control-Max-Age'</span><span class="token punctuation">:</span> <span class="token string">'1000'</span> <span class="token comment" spellcheck="true">// 允许以上种方式跨域的时间</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="数据协商"><a href="#数据协商" class="headerlink" title="数据协商"></a>数据协商</h4><p>·1. Accept</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token string">'Accept-Encoding'</span>
<span class="token string">'Accept-Language'</span>
<span class="token string">'User-Agent'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ol start="2">
<li><p>Content</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token string">'Content-Type'</span>
<span class="token string">'Content-Encoding'</span><span class="token punctuation">:</span><span class="token string">'gzip,br,defalte'</span>
<span class="token string">'Content-Language'</span><span class="token punctuation">:</span><span class="token string">'zh-cn'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h4 id="redirect"><a href="#redirect" class="headerlink" title="redirect"></a>redirect</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span>
http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'request come'</span><span class="token punctuation">,</span>request<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
    response<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">302</span><span class="token comment" spellcheck="true">/*每次都重定向*/</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
        <span class="token string">'Location'</span><span class="token punctuation">:</span><span class="token string">'/new'</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url <span class="token operator">==</span> <span class="token string">'new'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        response<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
            <span class="token string">'Content-Type'</span><span class="token punctuation">:</span><span class="token string">'text/html'</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8887</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>301 Sample</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">...</span>
response<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">301</span> <span class="token comment" spellcheck="true">/*告诉浏览器，如果下次在访问/ 直接重定向到/new，是永久的变更*/</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
        <span class="token string">'Location'</span><span class="token punctuation">:</span><span class="token string">'/new'</span> 
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>301 会缓存到浏览器缓存中，除非请缓存否则，浏览器不会访问旧地址，故使用的时候需非常谨慎</p>
</blockquote>
<h4 id="Content-Security-Policy（CSP）"><a href="#Content-Security-Policy（CSP）" class="headerlink" title="Content-Security-Policy（CSP）"></a>Content-Security-Policy（CSP）</h4><blockquote>
<ol>
<li>限制资源获取</li>
<li>报告资源获取越权</li>
</ol>
</blockquote>
<p>限制方式</p>
<p><code>deafault-src</code>: 限制全局</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"> <span class="token comment" spellcheck="true">//限制通过http/https的方式加载，禁止内联方式加载防止js注入</span>
<span class="token string">'Content-Security-Policy'</span><span class="token punctuation">:</span> <span class="token string">'default-src http: https:'</span>
<span class="token comment" spellcheck="true">// 限制本域名方式加载，不能限制form表单提交</span>
<span class="token string">'Content-Security-Policy'</span><span class="token punctuation">:</span> <span class="token string">'default-src \'self\''</span>
<span class="token comment" spellcheck="true">//限制form表单提交</span>
<span class="token string">'Content-Security-Policy'</span><span class="token punctuation">:</span> <span class="token string">'default-src \'self\'; from-action \'self\''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>限制特定的资源类型： <code>connect-src</code>,<code>img-src</code>,<code>font-src</code>,<code>media-src</code>,<code>style-src</code>,<code>script-src</code>,<code>frame-src</code></p>
<p><code>Content-Security-Policy-Report-Only</code>  只提交不限制</p>
<p>meta 形式</p>
<pre class="line-numbers language-xml"><code class="language-xml">&lt;meta http-equiv="", content="content-src 'self'; from-action 'self'"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>参考：</p>
<h4 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h4><ol>
<li>缓存的简单使用</li>
</ol>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">if</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url <span class="token operator">==</span> <span class="token string">'/script.js'</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 针对js文件进行缓存</span>
    response<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
        <span class="token string">'Content-Type'</span><span class="token punctuation">:</span> <span class="token string">'text/javascript'</span><span class="token punctuation">,</span>
        <span class="token string">'Cache-Control'</span><span class="token punctuation">:</span> <span class="token string">'max-age=200'</span> 
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    respone<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'console.log("script loaded twice")'</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<ol>
<li>对一下不常变动的资源进行缓存;</li>
<li>对JavaScript进行打包加入hashcode, hash 值变动不使用服务器缓存</li>
</ol>
</blockquote>
<ol start="2">
<li>验证头</li>
</ol>
<p><code>Last-Modified</code> 上次修改时间，配合<code>If-Modified-Since</code>或者<code>If-Unmodified-Since</code>使用</p>
<p><code>Etag</code> 数据签名，配合<code>If-Match</code>或者<code>If-Non_Match</code>使用，对比资源签名判断是否使用缓存</p>
<p>Sample:</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">if</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>url <span class="token operator">==</span> <span class="token string">'/script.js'</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
    <span class="token keyword">const</span> etag <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'if-none-match'</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>etag<span class="token operator">==</span><span class="token string">'777'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         response<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">304</span><span class="token comment" spellcheck="true">/*告诉浏览器使用缓存*/</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
            <span class="token string">'Content-Type'</span><span class="token punctuation">:</span> <span class="token string">'text/javascript'</span><span class="token punctuation">,</span>
            <span class="token string">'Cache-Control'</span><span class="token punctuation">:</span> <span class="token string">'max-age=2000,no-Cache'</span><span class="token punctuation">,</span> 
            <span class="token string">'Last-Modified'</span><span class="token punctuation">:</span> <span class="token string">'123'</span><span class="token punctuation">,</span>
            <span class="token string">'Etag'</span><span class="token punctuation">:</span> <span class="token string">'777'</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'123'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
         response<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">304</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
            <span class="token string">'Content-Type'</span><span class="token punctuation">:</span> <span class="token string">'text/javascript'</span><span class="token punctuation">,</span>
            <span class="token string">'Cache-Control'</span><span class="token punctuation">:</span> <span class="token string">'max-age=2000,no-Cache'</span><span class="token punctuation">,</span> 
            <span class="token string">'Last-Modified'</span><span class="token punctuation">:</span> <span class="token string">'123'</span><span class="token punctuation">,</span>
            <span class="token string">'Etag'</span><span class="token punctuation">:</span> <span class="token string">'777'</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        respone<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">'console.log("script loaded twice")'</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li><p>no-cache和no-store的区别</p>
<p>no-cache 可以在本地缓存，可以在代理服务器缓存，但是这个缓存要服务器验证才可以使用<br>no-store 彻底得禁用缓冲，本地和代理服务器都不缓冲，每次都从服务器获取</p>
</li>
<li><p>Cookie and session</p>
<pre class="line-numbers language-javascript"><code class="language-javascript">response<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
    <span class="token string">'Content-Type'</span><span class="token punctuation">:</span> <span class="token string">'text/html'</span><span class="token punctuation">,</span>
    <span class="token string">'Set-Cookie'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'id=123;max=32'</span><span class="token punctuation">,</span> <span class="token string">'abc=456'</span><span class="token punctuation">;</span> <span class="token string">'HttpOnly'</span><span class="token comment" spellcheck="true">/*禁止Js访问*/</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">// js 中读取</span>
document<span class="token punctuation">.</span>cookie <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h3><p>HTTPS 握手过程</p>
<p><img src="http://cdn.linz.tech/https-handshake.png" alt=""></p>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>签名</p>
<ul>
<li><a href="https://blog.csdn.net/t6546545/article/details/80508554" target="_blank" rel="noopener">服务器配置https协议，三种免费的方法</a></li>
<li><a href="https://www.cnblogs.com/tianhei/p/7726505.html" target="_blank" rel="noopener">阿里云 nginx配置ssl证书实现https访问</a></li>
</ul>
<h4 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h4><h3 id="HTTP2"><a href="#HTTP2" class="headerlink" title="HTTP2"></a>HTTP2</h3><h4 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h4><ol>
<li>信道复用</li>
<li>分帧传输</li>
<li>Server Push </li>
<li>压缩头</li>
<li>请求分级</li>
<li>兼容HTTP 1.0</li>
</ol>
<p>HTTP1. 1 存在的问题</p>
<p>浏览器创建连接数有限制Chrome 6个， 多于6个就等待</p>
<p>信道不复用，握手消耗大</p>
<p>不能分帧传输，只能处理完一个请求后处理另一个请求</p>
<h4 id="实战案例-1"><a href="#实战案例-1" class="headerlink" title="实战案例"></a>实战案例</h4><ol>
<li><strong>Server push 提升%8的速度</strong></li>
</ol>
<p><img src="http://cdn.linz.tech/websocket-push-2019-6-13.webp" alt="img"></p>
<pre class="line-numbers language-xml"><code class="language-xml">//通过response 响应头中添加如下
Link: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>styles.css</span><span class="token punctuation">></span></span>; rel=preload; as=style, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>example.png</span><span class="token punctuation">></span></span>; rel=preload; as=image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ol start="2">
<li><a href="https://blog.csdn.net/qq_36994771/article/details/79946711" target="_blank" rel="noopener">springboo2开启http2</a></li>
</ol>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><a href="https://blog.csdn.net/Modest/article/details/51723201" target="_blank" rel="noopener">HTTP/2.0 中英文对照</a></li>
<li><a href="https://juejin.im/post/5c789dbce51d451ecc2028e7#heading-4" target="_blank" rel="noopener">HTTP 2.0在OKHttp中的应用</a></li>
<li><a href="https://hpbn.co/http2/#header-compression" target="_blank" rel="noopener">HTTP/2</a></li>
<li><a href="https://imququ.com/post/header-compression-in-http2.html" target="_blank" rel="noopener">HTTP/2 头部压缩技术介绍</a></li>
</ul>
<h3 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h3><blockquote>
<p>WebSocket 是独立的、创建在 TCP 上的协议</p>
</blockquote>
<h4 id="基本知识-1"><a href="#基本知识-1" class="headerlink" title="基本知识"></a>基本知识</h4><p>优点</p>
<ol>
<li>较少的控制开销</li>
<li>全双工</li>
<li>更好的二进制支持</li>
<li>更好的压缩效果</li>
<li>支持网页</li>
<li>可以支持扩展</li>
</ol>
<p>扩展</p>
<ol>
<li><p>性能测试的一些测试结果</p>
<ul>
<li><a href="https://www.cnblogs.com/cnsanshao/p/4652305.html" target="_blank" rel="noopener">使用四种框架分别实现百万websocket常连接的服务器</a></li>
<li><a href="https://blog.csdn.net/huangshulang1234/article/details/78746451" target="_blank" rel="noopener">七种WebSocket框架的性能比较</a></li>
</ul>
</li>
</ol>
<h4 id="建立连接的过程"><a href="#建立连接的过程" class="headerlink" title="建立连接的过程"></a>建立连接的过程</h4><p>Client –&gt; Server 发起HTTP 1.1  GET 方法的<code>重点头部信息</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">GET / HTTP/1.1
Host: localhost:8080
Origin: http://127.0.0.1:3000
Connection: Upgrade
Upgrade: websocket
Sec-WebSocket-Version: 13
Sec-WebSocket-Key: w4v7O6xFTi36lq3RNcgctw==
...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>​    【Remark】： </p>
<ol>
<li>上面是一个标准的GET请求，省略了一下内容， 如Host、Origin、Cookie等</li>
<li>握手阶段可以进行安全限制和权限校验</li>
</ol>
</blockquote>
<p>Server response <code>101</code> switch protocols successfully</p>
<pre class="line-numbers language-javascript"><code class="language-javascript">HTTP<span class="token operator">/</span><span class="token number">1.1</span> <span class="token number">101</span> Switching Protocols
Connection<span class="token punctuation">:</span>Upgrade
Upgrade<span class="token punctuation">:</span> websocket
Sec<span class="token operator">-</span>WebSocket<span class="token operator">-</span>Accept<span class="token punctuation">:</span> Oy4NRAQ13jhfONC7bP8dTKb4PTU<span class="token operator">=</span>
<span class="token operator">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>【Remark】at the end of header must be <code>\r\n</code> , the end of request must new a empty line with <code>\r\n</code></p>
</blockquote>
<p>Where the <code>Sec-WebSocket-Accept</code> come from </p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">></span><span class="token function">toBase64</span><span class="token punctuation">(</span> <span class="token function">sha1</span><span class="token punctuation">(</span> Sec<span class="token operator">-</span>WebSocket<span class="token operator">-</span>Key <span class="token operator">+</span> 258EAFA5<span class="token operator">-</span>E914<span class="token operator">-</span>47DA<span class="token operator">-</span>95CA<span class="token operator">-</span>C5AB0DC85B11 <span class="token punctuation">)</span> <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="Base-Framing-Protocol"><a href="#Base-Framing-Protocol" class="headerlink" title="Base Framing Protocol"></a>Base Framing Protocol</h4><pre class="line-numbers language-shell"><code class="language-shell">      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-------+-+-------------+-------------------------------+
     |F|R|R|R| opcode|M| Payload len |    Extended payload length    |
     |I|S|S|S|  (4)  |A|     (7)     |             (16/64)           |
     |N|V|V|V|       |S|             |   (if payload len==126/127)   |
     | |1|2|3|       |K|             |                               |
     +-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +
     |     Extended payload length continued, if payload len == 127  |
     + - - - - - - - - - - - - - - - +-------------------------------+
     |                               |Masking-key, if MASK set to 1  |
     +-------------------------------+-------------------------------+
     | Masking-key (continued)       |          Payload Data         |
     +-------------------------------- - - - - - - - - - - - - - - - +
     :                     Payload Data continued ...                :
     + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
     |                     Payload Data continued ...                |
     +---------------------------------------------------------------+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>详细定义参考 <a href="https://tools.ietf.org/html/rfc6455#section-5.2" target="_blank" rel="noopener">RFC6455 5.2节</a> </p>
</blockquote>
<p> Masking-key algorithm</p>
<ul>
<li>original-octet-i：为原始数据的第i字节。</li>
<li>transformed-octet-i：为转换后的数据的第i字节。</li>
<li>j：为<code>i mod 4</code>的结果。</li>
<li>masking-key-octet-j：为mask key第j字节。</li>
</ul>
<pre class="line-numbers language-shell"><code class="language-shell">j = i MOD 4
transformed-octet-i = original-octet-i XOR masking-key-octet-j<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h4 id="Data-transmission"><a href="#Data-transmission" class="headerlink" title="Data transmission"></a>Data transmission</h4><blockquote>
<p>基于数据帧的传递。</p>
<p>WebSocket根据<code>opcode</code>来区分操作的类型。比如<code>0x8</code>表示断开连接，<code>0x0</code>-<code>0x2</code>表示数据交互。</p>
</blockquote>
<p>数据分片的例子</p>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers" target="_blank" rel="noopener">Writing WebSocket servers</a></p>
<h4 id="Heart-Beat"><a href="#Heart-Beat" class="headerlink" title="Heart Beat"></a>Heart Beat</h4><ul>
<li>发送方-&gt;接收方：ping</li>
<li>接收方-&gt;发送方：pong</li>
</ul>
<pre class="line-numbers language-shell"><code class="language-shell">ws.ping('', false, true);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="More"><a href="#More" class="headerlink" title="More"></a>More</h4><ol>
<li>With websocket extension we can add a lot of capability and imagination to this protocol, for example data compression,  encryption，multiplexing</li>
</ol>
<h4 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h4><ul>
<li><a href="https://blog.csdn.net/moshowgame/article/details/80275084" target="_blank" rel="noopener">SpringBoot2.0集成WebSocket，实现后台向前端推送信息</a></li>
</ul>
<h4 id="相关连接"><a href="#相关连接" class="headerlink" title="相关连接"></a>相关连接</h4><p>RFC6455：websocket规范<br><a href="https://tools.ietf.org/html/rfc6455" target="_blank" rel="noopener">https://tools.ietf.org/html/r…</a></p>
<p>规范：数据帧掩码细节<br><a href="https://tools.ietf.org/html/rfc6455#section-5.3" target="_blank" rel="noopener">https://tools.ietf.org/html/r…</a></p>
<p>规范：数据帧格式<br><a href="https://tools.ietf.org/html/rfc6455#section-5.1" target="_blank" rel="noopener">https://tools.ietf.org/html/r…</a></p>
<p>server-example<br><a href="https://github.com/websockets/ws#server-example" target="_blank" rel="noopener">https://github.com/websockets…</a></p>
<p>编写websocket服务器<br><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers" target="_blank" rel="noopener">https://developer.mozilla.org…</a></p>
<p>对网络基础设施的攻击（数据掩码操作所要预防的事情）<br><a href="https://tools.ietf.org/html/rfc6455#section-10.3" target="_blank" rel="noopener">https://tools.ietf.org/html/r…</a></p>
<p>Talking to Yourself for Fun and Profit（含有攻击描述）<br><a href="http://w2spconf.com/2011/papers/websocket.pdf" target="_blank" rel="noopener">http://w2spconf.com/2011/pape…</a></p>
<p>What is Sec-WebSocket-Key for?<br><a href="https://stackoverflow.com/questions/18265128/what-is-sec-websocket-key-for" target="_blank" rel="noopener">https://stackoverflow.com/que…</a></p>
<p>10.3. Attacks On Infrastructure (Masking)<br><a href="https://tools.ietf.org/html/rfc6455#section-10.3" target="_blank" rel="noopener">https://tools.ietf.org/html/r…</a></p>
<p>Talking to Yourself for Fun and Profit<br><a href="http://w2spconf.com/2011/papers/websocket.pdf" target="_blank" rel="noopener">http://w2spconf.com/2011/pape…</a></p>
<p>Why are WebSockets masked?<br><a href="https://stackoverflow.com/questions/33250207/why-are-websockets-masked" target="_blank" rel="noopener">https://stackoverflow.com/que…</a></p>
<p>How does websocket frame masking protect against cache poisoning?<br><a href="https://security.stackexchange.com/questions/36930/how-does-websocket-frame-masking-protect-against-cache-poisoning" target="_blank" rel="noopener">https://security.stackexchang…</a></p>
<p>What is the mask in a WebSocket frame?<br><a href="https://stackoverflow.com/questions/14174184/what-is-the-mask-in-a-websocket-frame" target="_blank" rel="noopener">https://stackoverflow.com/que…</a></p>
<h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><h3 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h3><ol>
<li>过滤报文 Analyze -&gt; display filters</li>
</ol>
<h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><h3 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h3><p>导入servers/目录下所有conf文件</p>
<pre class="line-numbers language-shell"><code class="language-shell">include servers/*.conf;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>servers/test.conf</p>
<pre class="line-numbers language-shell"><code class="language-shell">server {
    listen    80;
    server_name test.com;
    location / {
        proxy_pass http://127.0.0.1:8888;
        #设置host为浏览器的host，而不是代理host`http://127.0.0.1:8888`
        proxy_set_header Host $host;
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="代理缓存"><a href="#代理缓存" class="headerlink" title="代理缓存"></a>代理缓存</h3><p>nginx 配置缓存目录</p>
<pre class="line-numbers language-shell"><code class="language-shell">proxy_cache_path cache levels=1:2 keys_zone=my_cache:10m
...
server{
    location /{
        proxy_cache my_cache;
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>后台设置返回头</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token string">'Cache-Control'</span><span class="token punctuation">:</span><span class="token string">'max-age=2,s-maxage=20'</span><span class="token punctuation">,</span> 
<span class="token string">'Vary'</span><span class="token punctuation">:</span><span class="token string">'X-Test-Cache'</span> <span class="token comment" spellcheck="true">// 只有Vary的值是相同的情况下使用缓存</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>前端设置增加返回头</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'/data'</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
    headers<span class="token punctuation">:</span><span class="token punctuation">{</span>
        <span class="token string">'X-Test-Cache'</span><span class="token punctuation">:</span> index <span class="token operator">++</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> resp<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">{</span>
    data<span class="token punctuation">.</span>innerText <span class="token operator">=</span> text
<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>只有Vary的值是相同的情况下使用缓存</p>
<p> 应用场景</p>
<ol>
<li>使用服务器缓存，但PC端和移动端可能拿到的数据是不一样的，当Vary值是一样的时候才使用缓存， 如果不一样他们分别是不同的缓存</li>
<li>lang=zh 或者en， 是不同的缓存</li>
</ol>
</blockquote>
<p><strong>可优化</strong></p>
<p>默认nginx缓存写在磁盘上，可以写个脚本把缓存放到服务器上</p>
<p>参考：</p>
<ol>
<li><a href="https://blog.csdn.net/jek123456/article/details/71514195" target="_blank" rel="noopener">Nginx HTTP缓存设置</a></li>
<li><a href="https://blog.csdn.net/dengjiexian123/article/details/53386586" target="_blank" rel="noopener">nginx proxy_cache 缓存配置</a> 【精彩博文】</li>
</ol>
<h3 id="HTTPS配置"><a href="#HTTPS配置" class="headerlink" title="HTTPS配置"></a>HTTPS配置</h3><h4 id="支持HTTPS"><a href="#支持HTTPS" class="headerlink" title="支持HTTPS"></a>支持HTTPS</h4><pre class="line-numbers language-shell"><code class="language-shell">server{
    listen 443;
    server_name test.com;
    ssl on;
    ssl_certificate_key ../certs/localhost-privkey.pem
    ssl_certificate ../certs/localhost-cert.pem

    location / {
        proxy_cache my_cache;
        proxy_pass http://127.0.0.1:8888;
        proxy_set_header Host $host;
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="HTTP自动跳转到HTTPS"><a href="#HTTP自动跳转到HTTPS" class="headerlink" title="HTTP自动跳转到HTTPS"></a>HTTP自动跳转到HTTPS</h4><pre class="line-numbers language-shell"><code class="language-shell">server｛
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name test.com
    #https://test.com/path 
    #server_name == test.com, #request_uri = /path 
    return 302 https://$server_name$request_uri;
｝<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="HTTP2-1"><a href="#HTTP2-1" class="headerlink" title="HTTP2"></a>HTTP2</h3><ol>
<li><p>服务器返回头</p>
<pre class="line-numbers language-xml"><code class="language-xml">'Content-Type':'text/html',
'Connection':'close',
'Like':'<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>test.jpg</span><span class="token punctuation">></span></span>; as=image;rel=preload' # 服务器推送test.jpg（绝对路径）, 类型为image，repload 需要服务器的推送
Link: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>styles.css</span><span class="token punctuation">></span></span>; rel=preload; as=style, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>example.png</span><span class="token punctuation">></span></span>; rel=preload; as=image<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<ol start="2">
<li>nginx 把http2转化成http</li>
</ol>
<pre class="line-numbers language-shell"><code class="language-shell">server{
    listen 443 http2;
    server_name test.com;
    http2_push_preload on;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>使用nginx转化的原因</p>
<ol>
<li>nginx配置简单，不用修改服务器代码</li>
<li>服务器和nginx在同一个局域网使用http1，没有更多的性能问题</li>
<li>nginx 可以使用兼用HTTP2和HTTP1.1 </li>
</ol>
</blockquote>
<ol start="3">
<li><p>chrome 查看推送 <code>chrome://net-internals#http2</code> 最新版本没有<br>参考：<a href="https://docs.google.com/document/d/1Ll7T5cguj5m2DqkUTad5DWRCqtbQ3L1q9FRvTN5-Y28/edit#" target="_blank" rel="noopener">https://docs.google.com/document/d/1Ll7T5cguj5m2DqkUTad5DWRCqtbQ3L1q9FRvTN5-Y28/edit#</a><br><img src="http://cdn.linz.tech/websocket-push-proxy.png" alt=""><br>查看是否有推送</p>
</li>
<li><p>HTTP2 Demo </p>
<ol>
<li><a href="https://http2.akamai.com/demo" target="_blank" rel="noopener">HTTP1 VS HTTP2 图片加载 </a></li>
<li><a href="https://http2.akamai.com/demo/http2-lab.html" target="_blank" rel="noopener">其他对比Demo</a></li>
</ol>
</li>
<li><p>curl使用</p>
<pre class="line-numbers language-shell"><code class="language-shell">curl -v test.com #查看网址是否支持HTTP2
curl -k test.com #忽略证书问题
curl -v --http1.1 test.com # 强制使用http1.1 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h1 id="开源库分析"><a href="#开源库分析" class="headerlink" title="开源库分析"></a>开源库分析</h1><h2 id="OkHttp-3-7源码分析"><a href="#OkHttp-3-7源码分析" class="headerlink" title="OkHttp 3.7源码分析"></a>OkHttp 3.7源码分析</h2><h3 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h3><p><img src="http://cdn.linz.tech/network-pragram-note-2.png" alt=""></p>
<h3 id="整体架构分析"><a href="#整体架构分析" class="headerlink" title="整体架构分析"></a>整体架构分析</h3><p><img src="http://ata2-img.cn-hangzhou.img-pub.aliyun-inc.com/f6e2ac304ee22891eca4ad1218602044.png" alt=""></p>
<h3 id="Interceptor功能分析"><a href="#Interceptor功能分析" class="headerlink" title="Interceptor功能分析"></a>Interceptor功能分析</h3><p><img src="http://ata2-img.cn-hangzhou.img-pub.aliyun-inc.com/e67029972070a7dd84206023b179dbd1.png" alt=""></p>
<p>RetryAndFollowUpInterceptor</p>
<ul>
<li>在网络请求失败后进行重试</li>
<li>当服务器返回当前请求需要进行重定向时直接发起新的请求，并在条件允许情况下复用当前连接</li>
</ul>
<p>BridgeInterceptor</p>
<ul>
<li>设置其他报头</li>
<li>设置gzip压缩</li>
</ul>
<p>CacheInterceptor</p>
<ul>
<li>请求有符合要求直接返回Cache</li>
<li>服务器返回内容有改变时更新当前cache</li>
<li>cache失效删除</li>
</ul>
<p>ConnectInterceptor</p>
<blockquote>
<p>即为当前请求找到合适的连接，可能复用已有连接也可能是重新创建的连接，返回的连接由连接池负责决定。</p>
</blockquote>
<p>CallServerInterceptor</p>
<blockquote>
<p>负责向服务器发起真正的访问请求，并在接收到服务器返回后读取响应返回</p>
</blockquote>
<h3 id="缓存策略"><a href="#缓存策略" class="headerlink" title="缓存策略"></a><a href="https://yq.aliyun.com/articles/78102?spm=a2c4e.11153940.blogcont78103.22.1d6a2a21T3SKL9" target="_blank" rel="noopener">缓存策略</a></h3><h4 id="HTTP缓存策略"><a href="#HTTP缓存策略" class="headerlink" title="HTTP缓存策略"></a>HTTP缓存策略</h4><ul>
<li>Expires: 告知客户端对应资源的过期时间</li>
<li>Cache-Control:当前资源的有效期(s),比<code>Expires</code>优先级更高:<code>Cache-Control:max-age=31536000,public</code></li>
</ul>
<p><strong>条件GET请求</strong></p>
<ul>
<li>Last-Modified-Date<br>客户端第一次请求时，服务器返回：<code>Last-Modified: Tue, 12 Jan 2016 09:31:27 GMT</code>,当客户端二次请求时，可以头部加上如下header:<code>If-Modified-Since: Tue, 12 Jan 2016 09:31:27 GMT</code>如果当前资源没有被二次修改，服务器返回304告知客户端直接复用本地缓存。</li>
<li>ETag: ETag是对资源文件的一种摘要. 当客户端第一次请求某资源时，服务器返回：<br><code>ETag: "5694c7ef-24dc"</code>客户端再次请求时，可在头部加上如下域：<code>If-None-Match: "5694c7ef-24dc"</code>如果文件并未改变，则服务器返回304告知客户端可以复用本地缓存。</li>
<li>no-cache/no-store: 不使用缓存</li>
<li>only-if-cached:只使用缓存</li>
</ul>
<h3 id="多路复用"><a href="#多路复用" class="headerlink" title="多路复用"></a>多路复用</h3>]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>谷歌API之ConnectivityManager实战全解析（9分钟阅读时间）</title>
    <url>/2019/09/09/2018-9-12-api-ConnectivityManager/</url>
    <content><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul>
<li><a href="#最小案例">最小案例</a></li>
<li><a href="#概况">概况</a></li>
<li><a href="#实践概要">实践概要</a><ul>
<li><a href="#networkinfo-实践详解">NetworkInfo 实践详解</a></li>
<li><a href="#connectivitymanager-实践详解">ConnectivityManager 实践详解</a></li>
<li><a href="#network-浅析">Network 浅析</a></li>
</ul>
</li>
<li><a href="#实用工具">实用工具</a></li>
<li><a href="#参考">参考</a></li>
</ul>
<h2 id="最小案例"><a href="#最小案例" class="headerlink" title="最小案例"></a>最小案例</h2><p>需要的权限</p>
<pre><code>&lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/&gt;</code></pre><p>MainActivity.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">AppCompatActivity</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> IntentFilter intentFilter<span class="token punctuation">;</span>
    <span class="token keyword">private</span> NetworkChangeReceiver networkChangeReceiver<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>
        intentFilter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">IntentFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        intentFilter<span class="token punctuation">.</span><span class="token function">addAction</span><span class="token punctuation">(</span><span class="token string">"android.net.conn.CONNECTIVITY_CHANGE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        networkChangeReceiver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NetworkChangeReceiver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">registerReceiver</span><span class="token punctuation">(</span>networkChangeReceiver<span class="token punctuation">,</span>intentFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">unregisterReceiver</span><span class="token punctuation">(</span>networkChangeReceiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">final</span>  <span class="token keyword">class</span> <span class="token class-name">NetworkChangeReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> Intent intent<span class="token punctuation">)</span><span class="token punctuation">{</span>
      ConnectivityManager cm<span class="token operator">=</span><span class="token punctuation">(</span>ConnectivityManager<span class="token punctuation">)</span> <span class="token function">getSystemService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>CONNECTIVITY_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
      NetworkInfo networkInfo<span class="token operator">=</span> cm<span class="token punctuation">.</span><span class="token function">getActiveNetworkInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>networkInfo <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// WIFI 和 移动网络都关闭 即没有有效网络</span>
        Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"当前无网络连接"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      String typeName <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>networkInfo<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>ConnectivityManager<span class="token punctuation">.</span>TYPE_WIFI<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//WIFI网络跳转的页面.</span>
        typeName <span class="token operator">=</span> networkInfo<span class="token punctuation">.</span><span class="token function">getTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//==> WIFI</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>networkInfo<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>ConnectivityManager<span class="token punctuation">.</span>TYPE_MOBILE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">//无线网络跳转的页面</span>
        typeName <span class="token operator">=</span> networkInfo<span class="token punctuation">.</span><span class="token function">getTypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//==> MOBILE</span>
      <span class="token punctuation">}</span>
      Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"==>"</span> <span class="token operator">+</span> typeName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"==>"</span> <span class="token operator">+</span> networkInfo<span class="token punctuation">.</span><span class="token function">getDetailedState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h2><p>ConnectivityManager主要职责，官方说明：</p>
<blockquote>
<ol>
<li>Monitor network connections (Wi-Fi, GPRS, UMTS, etc.)</li>
<li>Send broadcast intents when network connectivity changes</li>
<li>Attempt to “fail over” to another network when connectivity to a network is lost</li>
<li>Provide an API that allows applications to query the coarse-grained or fine-grained state of the available networks</li>
<li>Provide an API that allows applications to request and select networks for their data traffic</li>
</ol>
</blockquote>
<p>平民翻译：</p>
<ol>
<li>监控网络连接(Wi-Fi, GPRS, UMTS, etc.)；</li>
<li>当网络连接改变时发送Intent；</li>
<li>当连接到一个网络失败时，尝试用其他网络补救；</li>
<li>提供API给应用查询有效网络粗略或者精确的状态；</li>
<li>提供API给应用为它们的数据传输请求和选择网络；</li>
</ol>
<h2 id="实践概要"><a href="#实践概要" class="headerlink" title="实践概要"></a>实践概要</h2><h3 id="NetworkInfo-实践详解"><a href="#NetworkInfo-实践详解" class="headerlink" title="NetworkInfo 实践详解"></a>NetworkInfo 实践详解</h3><table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>isConnected()</td>
<td>判断网络连接是否存在</td>
</tr>
<tr>
<td>isAvailable()</td>
<td>判断网络连接（注：isConnected为true，不代表isAvailable为true）</td>
</tr>
<tr>
<td>getDetailedState()</td>
<td>（详细）报告当前网络状态 getState()报告当前网络状态</td>
</tr>
<tr>
<td>getExtrInfo()</td>
<td>报告关于网络状态的额外信息，由较低的网络层提供的</td>
</tr>
<tr>
<td>getType()</td>
<td>获取当前网络的类型 和ConnectivityManager.TYPE_**对比</td>
</tr>
<tr>
<td>getTypeName()</td>
<td>获取当前网络的类型名如 “WIFI” or “MOBILE”</td>
</tr>
</tbody></table>
<p><font size="10" face="STHupo" color="red">注意: </font></p>
<ul>
<li>isConnected() 和 isAvailable() 都为true 不能保证能正常连接到服务器，解决方案用ping命令，参考<a href="https://github.com/albert-lii/SUtils/blob/f26aa5c9916a9d767415aef4a1bdcdf8d542c883/sutils/src/main/java/com/liyi/sutils/utils/ShellUtil.java" target="_blank" rel="noopener">ShellUtil.execCmd</a>：<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//ShellUtil.CommandResult result = ShellUtil.execCmd(String.format("ping -c 1 %s", ip), false);</span>
String<span class="token punctuation">[</span><span class="token punctuation">]</span> command <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"ping -c 1 %s"</span><span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
Process process <span class="token operator">=</span> Runtime<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>isRoot <span class="token operator">?</span> <span class="token string">"su"</span> <span class="token operator">:</span> <span class="token string">"sh"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
DataOutputStream os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataOutputStream</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>String command <span class="token operator">:</span> commands<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>command <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
  os<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  os<span class="token punctuation">.</span><span class="token function">writeBytes</span><span class="token punctuation">(</span>LINE_SEP<span class="token punctuation">)</span><span class="token punctuation">;</span>
  os<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
os<span class="token punctuation">.</span><span class="token function">writeBytes</span><span class="token punctuation">(</span><span class="token string">"exit"</span> <span class="token operator">+</span> LINE_SEP<span class="token punctuation">)</span><span class="token punctuation">;</span>
os<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
result <span class="token operator">=</span> process<span class="token punctuation">.</span><span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>getDetailedState/getState 直接看NetworkInfo源码getState等到的值为<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">enum</span> State <span class="token punctuation">{</span>
  CONNECTING<span class="token punctuation">,</span> CONNECTED<span class="token punctuation">,</span> SUSPENDED<span class="token punctuation">,</span> DISCONNECTING<span class="token punctuation">,</span> DISCONNECTED<span class="token punctuation">,</span> UNKNOWN
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li>getExtrInfo() WIFI链接返回SSID名称，移动网络返回APN（Access Point Name）,电信物联网得卡到列如：ctnet或ctwap</li>
</ul>
<h3 id="ConnectivityManager-实践详解"><a href="#ConnectivityManager-实践详解" class="headerlink" title="ConnectivityManager 实践详解"></a>ConnectivityManager 实践详解</h3><p>ConnectivityManager类按照其主要职能，常用方法大致可分为三类：</p>
<ul>
<li>获取网络链接信息getXXX如getActiveNetwork，getDefaultProxy</li>
<li>多网络链接绑定指定网络 bindsocket和bindprocesstonetwork（6.0的系统 api&gt;23）</li>
<li>监听类型 registerDefaultNetworkCallback/registerNetworkCallback</li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>详解</th>
</tr>
</thead>
<tbody><tr>
<td>addDefaultNetworkActiveListener</td>
<td>在网络有一定量的数据传输时间隔调用，可用于链接优化</td>
</tr>
</tbody></table>
<pre class="line-numbers language-java"><code class="language-java"> cm <span class="token operator">=</span> <span class="token punctuation">(</span>ConnectivityManager<span class="token punctuation">)</span> <span class="token function">getSystemService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>CONNECTIVITY_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cm<span class="token punctuation">.</span><span class="token function">addDefaultNetworkActiveListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConnectivityManager<span class="token punctuation">.</span>OnNetworkActiveListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNetworkActive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"Active ==>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//无论是否成功链接外网，只要有一定量的数据传输就会间隔有回调</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>方法</th>
<th>详解</th>
</tr>
</thead>
<tbody><tr>
<td>bindProcessToNetwork</td>
<td>多网络同时链接时指定网络链接</td>
</tr>
</tbody></table>
<p>应用场景：</p>
<ul>
<li>手机同时连接移动网络和本地局域网，手机所有的连接默认访问移动网络，需要手机连接本地局域网：<br><a href="https://www.jianshu.com/p/0042c0e3a15b" target="_blank" rel="noopener">Okhttp,picasso与glidez指定网络访问的案例</a></li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>详解</th>
</tr>
</thead>
<tbody><tr>
<td>registerNetworkCallback</td>
<td>指定网络监听的内容回调</td>
</tr>
</tbody></table>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">if</span> <span class="token punctuation">(</span>Build<span class="token punctuation">.</span>VERSION<span class="token punctuation">.</span>SDK_INT <span class="token operator">>=</span> Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>LOLLIPOP<span class="token comment" spellcheck="true">/*5.0*/</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      ConnectivityManager connectivityManager <span class="token operator">=</span> <span class="token punctuation">(</span>ConnectivityManager<span class="token punctuation">)</span> <span class="token function">getSystemService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>CONNECTIVITY_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment" spellcheck="true">// 请注意这里会有一个版本适配bug，所以请在这里添加非空判断</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>connectivityManager <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        NetworkRequest<span class="token punctuation">.</span>Builder builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">NetworkRequest<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        NetworkRequest request <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">addCapability</span><span class="token punctuation">(</span>NetworkCapabilities<span class="token punctuation">.</span>NET_CAPABILITY_INTERNET<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addTransportType</span><span class="token punctuation">(</span>NetworkCapabilities<span class="token punctuation">.</span>TRANSPORT_WIFI<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">addTransportType</span><span class="token punctuation">(</span>NetworkCapabilities<span class="token punctuation">.</span>TRANSPORT_CELLULAR<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        connectivityManager<span class="token punctuation">.</span><span class="token function">registerNetworkCallback</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">ConnectivityManager<span class="token punctuation">.</span>NetworkCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

          <span class="token comment" spellcheck="true">/**
           * 网络可用的回调连接成功
           * */</span>
          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAvailable</span><span class="token punctuation">(</span>Network network<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onAvailable</span><span class="token punctuation">(</span>network<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onAvailable ==>"</span> <span class="token operator">+</span> network<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

          <span class="token comment" spellcheck="true">/**
           * 实践中在网络连接正常的情况下，丢失数据会有回调
           * */</span>
          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onLosing</span><span class="token punctuation">(</span>Network network<span class="token punctuation">,</span> <span class="token keyword">int</span> maxMsToLive<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onLosing</span><span class="token punctuation">(</span>network<span class="token punctuation">,</span> maxMsToLive<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onLosing ==>"</span> <span class="token operator">+</span> network<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" max==>"</span> <span class="token operator">+</span> maxMsToLive<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

          <span class="token comment" spellcheck="true">/**
           * 网络不可用时调用和onAvailable成对出现
           */</span>
          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onLost</span><span class="token punctuation">(</span>Network network<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onLost</span><span class="token punctuation">(</span>network<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onLost ==>"</span> <span class="token operator">+</span> network<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

          <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onUnavailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onUnavailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onUnavailable ==>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

          <span class="token comment" spellcheck="true">/**
           * 字面直接能理解
           * @param network 新连接网络
           * @param networkCapabilities 新连接网络的一些能力参数
           */</span>
          <span class="token annotation punctuation">@Override</span>
          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCapabilitiesChanged</span><span class="token punctuation">(</span>Network network<span class="token punctuation">,</span> NetworkCapabilities networkCapabilities<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCapabilitiesChanged</span><span class="token punctuation">(</span>network<span class="token punctuation">,</span> networkCapabilities<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onCapabilitiesChanged ==>"</span> <span class="token operator">+</span> networkCapabilities<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//WIFI -> CELLULAR</span>
            <span class="token comment" spellcheck="true">//[ Transports: CELLULAR Capabilities: INTERNET&amp;NOT_RESTRICTED&amp;TRUSTED&amp;NOT_VPN&amp;VALIDATED LinkUpBandwidth>=51200Kbps LinkDnBandwidth>=102400Kbps Specifier: &lt;3>]</span>
            <span class="token comment" spellcheck="true">//CELLULAR -> WIFI</span>
            <span class="token comment" spellcheck="true">//==>[ Transports: WIFI Capabilities: INTERNET&amp;NOT_RESTRICTED&amp;TRUSTED&amp;NOT_VPN&amp;VALIDATED LinkUpBandwidth>=1048576Kbps LinkDnBandwidth>=1048576Kbps SignalStrength: -42]</span>
          <span class="token punctuation">}</span>

          <span class="token comment" spellcheck="true">/**
           * 和上面类似，但是没有试出效果
           */</span>
          <span class="token annotation punctuation">@Override</span>
          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onLinkPropertiesChanged</span><span class="token punctuation">(</span>Network network<span class="token punctuation">,</span> LinkProperties linkProperties<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onLinkPropertiesChanged</span><span class="token punctuation">(</span>network<span class="token punctuation">,</span> linkProperties<span class="token punctuation">)</span><span class="token punctuation">;</span>
            Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string">"onLinkPropertiesChanged ==>"</span> <span class="token operator">+</span> linkProperties<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>更多监听内容设置请访问官网<a href="https://developer.android.com/reference/android/net/NetworkRequest" target="_blank" rel="noopener">NetworkRequest 科学上网</a></p>
<h3 id="Network-浅析"><a href="#Network-浅析" class="headerlink" title="Network 浅析"></a>Network 浅析</h3><p>从源码中可以得出<code>Network</code>就是一个Parcelable数据，最重要的参数是</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">int</span> netId<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在回想一下<code>Network</code>什么时候第一次获得</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAvailable</span><span class="token punctuation">(</span>Network network<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>如果到这里还啥都不<code>get</code>代码意图，那看Network提供的方法</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> InetAddress<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getAllByName</span><span class="token punctuation">(</span>String host<span class="token punctuation">)</span> <span class="token keyword">throws</span> UnknownHostException <span class="token punctuation">{</span>
    <span class="token keyword">return</span> InetAddress<span class="token punctuation">.</span><span class="token function">getAllByNameOnNet</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> netId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> InetAddress <span class="token function">getByName</span><span class="token punctuation">(</span>String host<span class="token punctuation">)</span> <span class="token keyword">throws</span> UnknownHostException <span class="token punctuation">{</span>
    <span class="token keyword">return</span> InetAddress<span class="token punctuation">.</span><span class="token function">getByNameOnNet</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> netId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">bindSocket</span><span class="token punctuation">(</span>Socket socket<span class="token punctuation">)</span>
<span class="token function">getSocketFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">openConnection</span><span class="token punctuation">(</span>URL url<span class="token punctuation">)</span>
<span class="token function">openConnection</span><span class="token punctuation">(</span>URL url<span class="token punctuation">,</span> Proxy proxy<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>好到此我的理解是在网络连接<code>onAvailable</code>成功后,返回基于netId的底层网络标识，可以基于这个Network建立一些特殊的URL访问；</p>
<h2 id="实用工具"><a href="#实用工具" class="headerlink" title="实用工具"></a>实用工具</h2><p><a href="https://github.com/albert-lii/SUtils/blob/f26aa5c9916a9d767415aef4a1bdcdf8d542c883/sutils/src/main/java/com/liyi/sutils/utils/NetUtil.java" target="_blank" rel="noopener">NetUtil.java</a></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//NetUtils.java</span>
 <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> NETWORK_TYPE_GSM <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> NETWORK_TYPE_TD_SCDMA <span class="token operator">=</span> <span class="token number">17</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> NETWORK_TYPE_IWLAN <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>
 <span class="token comment" spellcheck="true">/**
   * 判断网络是否可用
   * &lt;p>需要异步 ping，如果 ping 不通就说明网络不可用&lt;/p>
   *
   * @param ip ip 地址（自己服务器 ip），如果为空，ip 为阿里巴巴公共 ip
   * @return {@code true}: 可用&lt;br>{@code false}: 不可用
   */</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isAvailableByPing</span><span class="token punctuation">(</span>String ip<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ip <span class="token operator">==</span> null <span class="token operator">||</span> ip<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment" spellcheck="true">// 阿里巴巴公共 ip</span>
      ip <span class="token operator">=</span> <span class="token string">"223.5.5.5"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ShellUtil<span class="token punctuation">.</span>CommandResult result <span class="token operator">=</span> ShellUtil<span class="token punctuation">.</span><span class="token function">execCmd</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"ping -c 1 %s"</span><span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> ret <span class="token operator">=</span> result<span class="token punctuation">.</span>result <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>successMsg <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"NetUtil"</span><span class="token punctuation">,</span> <span class="token string">"isAvailableByPing() called"</span> <span class="token operator">+</span> result<span class="token punctuation">.</span>successMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>errorMsg <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"NetUtil"</span><span class="token punctuation">,</span> <span class="token string">"isAvailableByPing() called"</span> <span class="token operator">+</span> result<span class="token punctuation">.</span>errorMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/**
   * 判断移动数据是否打开
   *
   * @return {@code true}: 是&lt;br>{@code false}: 否
   */</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isMobileDataEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      TelephonyManager tm <span class="token operator">=</span> <span class="token punctuation">(</span>TelephonyManager<span class="token punctuation">)</span> Utils<span class="token punctuation">.</span><span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>TELEPHONY_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
      Method getMobileDataEnabledMethod <span class="token operator">=</span> tm<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">"getDataEnabled"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>getMobileDataEnabledMethod <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">boolean</span><span class="token punctuation">)</span> getMobileDataEnabledMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>tm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/**
   * 打开或关闭移动数据
   *
   * @param enabled {@code true}: 打开&lt;br>{@code false}: 关闭
   */</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setMobileDataEnabled</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> enabled<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      TelephonyManager tm <span class="token operator">=</span> <span class="token punctuation">(</span>TelephonyManager<span class="token punctuation">)</span> Utils<span class="token punctuation">.</span><span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>TELEPHONY_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
      Method setMobileDataEnabledMethod <span class="token operator">=</span> tm<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">"setDataEnabled"</span><span class="token punctuation">,</span> <span class="token keyword">boolean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>null <span class="token operator">!=</span> setMobileDataEnabledMethod<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        setMobileDataEnabledMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>tm<span class="token punctuation">,</span> enabled<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">private</span> <span class="token keyword">enum</span> NetworkType <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// wifi</span>
    NETWORK_WIFI<span class="token punctuation">,</span>
    <span class="token comment" spellcheck="true">// 4G 网</span>
    NETWORK_4G<span class="token punctuation">,</span>
    <span class="token comment" spellcheck="true">// 3G 网</span>
    NETWORK_3G<span class="token punctuation">,</span>
    <span class="token comment" spellcheck="true">// 2G 网</span>
    NETWORK_2G<span class="token punctuation">,</span>
    <span class="token comment" spellcheck="true">// 未知网络</span>
    NETWORK_UNKNOWN<span class="token punctuation">,</span>
    <span class="token comment" spellcheck="true">// 没有网络</span>
    NETWORK_NO
  <span class="token punctuation">}</span>

  <span class="token comment" spellcheck="true">/**
   * 获取当前网络类型
   *
   * @return 网络类型
   * &lt;ul>
   * &lt;li>{@link NetworkType#NETWORK_WIFI   } &lt;/li>
   * &lt;li>{@link NetworkType#NETWORK_4G     } &lt;/li>
   * &lt;li>{@link NetworkType#NETWORK_3G     } &lt;/li>
   * &lt;li>{@link NetworkType#NETWORK_2G     } &lt;/li>
   * &lt;li>{@link NetworkType#NETWORK_UNKNOWN} &lt;/li>
   * &lt;li>{@link NetworkType#NETWORK_NO     } &lt;/li>
   * &lt;/ul>
   */</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> NetworkType <span class="token function">getNetworkType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    NetworkType netType <span class="token operator">=</span> NetworkType<span class="token punctuation">.</span>NETWORK_NO<span class="token punctuation">;</span>
    NetworkInfo info <span class="token operator">=</span> <span class="token function">getActiveNetworkInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> info<span class="token punctuation">.</span><span class="token function">isAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> ConnectivityManager<span class="token punctuation">.</span>TYPE_WIFI<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        netType <span class="token operator">=</span> NetworkType<span class="token punctuation">.</span>NETWORK_WIFI<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> ConnectivityManager<span class="token punctuation">.</span>TYPE_MOBILE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span><span class="token function">getSubtype</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

          <span class="token keyword">case</span> NETWORK_TYPE_GSM<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_GPRS<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_CDMA<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_EDGE<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_1xRTT<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_IDEN<span class="token operator">:</span>
            netType <span class="token operator">=</span> NetworkType<span class="token punctuation">.</span>NETWORK_2G<span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>

          <span class="token keyword">case</span> NETWORK_TYPE_TD_SCDMA<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_EVDO_A<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_UMTS<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_EVDO_0<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_HSDPA<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_HSUPA<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_HSPA<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_EVDO_B<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_EHRPD<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_HSPAP<span class="token operator">:</span>
            netType <span class="token operator">=</span> NetworkType<span class="token punctuation">.</span>NETWORK_3G<span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>

          <span class="token keyword">case</span> NETWORK_TYPE_IWLAN<span class="token operator">:</span>
          <span class="token keyword">case</span> TelephonyManager<span class="token punctuation">.</span>NETWORK_TYPE_LTE<span class="token operator">:</span>
            netType <span class="token operator">=</span> NetworkType<span class="token punctuation">.</span>NETWORK_4G<span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
          <span class="token keyword">default</span><span class="token operator">:</span>

            String subtypeName <span class="token operator">=</span> info<span class="token punctuation">.</span><span class="token function">getSubtypeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//  中国移动 联通 电信 三种 3G 制式</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>subtypeName<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">"TD-SCDMA"</span><span class="token punctuation">)</span>
                <span class="token operator">||</span> subtypeName<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">"WCDMA"</span><span class="token punctuation">)</span>
                <span class="token operator">||</span> subtypeName<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">"CDMA2000"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              netType <span class="token operator">=</span> NetworkType<span class="token punctuation">.</span>NETWORK_3G<span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
              netType <span class="token operator">=</span> NetworkType<span class="token punctuation">.</span>NETWORK_UNKNOWN<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        netType <span class="token operator">=</span> NetworkType<span class="token punctuation">.</span>NETWORK_UNKNOWN<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> netType<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://developer.android.com/reference/android/net/ConnectivityManager" target="_blank" rel="noopener">ConnectivityManager 官网API 科学上网</a></li>
<li><a href="https://www.jianshu.com/p/0042c0e3a15b" target="_blank" rel="noopener">Android多网络机制浅析</a></li>
<li><a href="https://blog.csdn.net/u011315960/article/details/79006162" target="_blank" rel="noopener">android 5.0 以上监听网络变化</a></li>
</ul>
]]></content>
      <categories>
        <category>api</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>总结</tag>
        <tag>API</tag>
      </tags>
  </entry>
  <entry>
    <title>测试框架学习</title>
    <url>/2019/09/09/2019-9-9-test-note/</url>
    <content><![CDATA[<h3 id="JUnit"><a href="#JUnit" class="headerlink" title="JUnit"></a><a href="http://blog.csdn.net/qq_17766199/article/details/78243176" target="_blank" rel="noopener">JUnit</a></h3><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><pre class="line-numbers language-gradle"><code class="language-gradle">dependencies {
    testCompile 'junit:junit:4.12'
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="Assert类"><a href="#Assert类" class="headerlink" title="Assert类"></a>Assert类</h4><h4 id="JUnit-中的常用注解："><a href="#JUnit-中的常用注解：" class="headerlink" title="JUnit 中的常用注解："></a>JUnit 中的常用注解：</h4><ul>
<li><p>@BeforeClass(此注解修饰的方法必须是static void)<br> –&gt; @Before –&gt; @Test –&gt; @After –&gt; @AfterClass</p>
</li>
<li><p>@Test(expect=Exception.class) 抛出了对应的异常则测试成功，反之则测试失败。</p>
</li>
<li><p>参数化 </p>
</li>
<li><p>@RunWith 指定运行器</p>
</li>
<li><p>@Rule 指定方法行为</p>
</li>
<li><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>Parameterized<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DateFormatTest</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> String time<span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token function">DateFormatTest</span><span class="token punctuation">(</span>String time<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>time <span class="token operator">=</span> time<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Parameterized</span><span class="token punctuation">.</span>Parameters
  <span class="token keyword">public</span> <span class="token keyword">static</span> Collection <span class="token function">primeNumbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> Arrays<span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">"2017-10-15"</span><span class="token punctuation">,</span>
<span class="token comment" spellcheck="true">//                "2017-10-15 16:00:02", // 抛出异常</span>
              <span class="token string">"2017年10月15日 16时00分02秒"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>assertThat 大约在某给范围</p>
</li>
<li><p>匹配器自定义 BaseMatcher</p>
</li>
<li><p>@Rule用法</p>
</li>
</ul>
<h3 id="Mock"><a href="#Mock" class="headerlink" title="Mock"></a><a href="http://blog.csdn.net/qq_17766199/article/details/78450007" target="_blank" rel="noopener">Mock</a></h3><h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><pre><code>dependencies {
   testCompile "org.mockito:mockito-core:2.11.0"
}</code></pre><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul>
<li>四种Mock方式</li>
<li>Mock出的对象中非void方法</li>
<li>verify(T mock)验证发生的某些行为  方法有否被正确的参数调用过</li>
<li>参数匹配器 any**  –&gt; 自定义的参数匹配模式</li>
<li>inOrder(Object… mocks) 检验执行顺序</li>
</ul>
<h3 id="PowerMock"><a href="#PowerMock" class="headerlink" title="PowerMock"></a><a href="http://blog.csdn.net/qq_17766199/article/details/78573390" target="_blank" rel="noopener">PowerMock</a></h3><h4 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h4><ul>
<li>Mockito对应的PowerMock 支持版本<br><img src="http://img.blog.csdn.net/20171118094436990?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMTc3NjYxOTk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="image"></li>
</ul>
<pre class="line-numbers language-gradle"><code class="language-gradle">testImplementation "org.mockito:mockito-core:2.8.9"

testImplementation "org.powermock:powermock-module-junit4:1.7.3"
testImplementation "org.powermock:powermock-api-mockito2:1.7.3" //注意这里是mockito2
//使有效 @Rule public PowerMockRule rule = new PowerMockRule();
testImplementation "org.powermock:powermock-module-junit4-rule:1.7.3"
testImplementation "org.powermock:powermock-classloading-xstream:1.7.3"
//@Rule<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><p>和mock对应版本</p>
</li>
<li><p>mock静态方法</p>
<pre><code>@RunWith(PowerMockRunner.class)
public class PowerMockitoStaticMethodTest {

  @Test
  @PrepareForTest({Banana.class})
  public void testStaticMethod() { 
      PowerMockito.mockStatic(Banana.class); //&lt;-- mock静态类
      Mockito.when(Banana.getColor()).thenReturn("绿色");
      Assert.assertEquals("绿色", Banana.getColor());
      //修改私有static常量
      Whitebox.setInternalState(Banana.class, "COLOR", "红色的");
      Assert.assertEquals("红色的", Banana.getColor());
  }
}</code></pre></li>
<li><p>mock私有方法</p>
<pre><code>      Banana mBanana = PowerMockito.mock(Banana.class);
      PowerMockito.when(mBanana.getBananaInfo()).thenCallRealMethod();
      PowerMockito.when(mBanana, "flavor").thenReturn("苦苦的");
      Assert.assertEquals("苦苦的黄色的", mBanana.getBananaInfo());
      //验证flavor是否调用了一次
      PowerMockito.verifyPrivate(mBanana).invoke("flavor"); 

      //跳过flavor方法
      PowerMockito.suppress(PowerMockito.method(Banana.class, "flavor")); 
      Assert.assertEquals("null黄色的", mBanana.getBananaInfo()); 
      //更改父类私有变量
      MemberModifier.field(Banana.class, "fruit").set(mBanana, "蔬菜");
      Assert.assertEquals("蔬菜", mBanana.getFruit());</code></pre></li>
<li><p>mock final方法</p>
<pre><code>      Banana mBanana = PowerMockito.mock(Banana.class);
      PowerMockito.when(mBanana.isLike()).thenReturn(false);
      Assert.assertFalse(mBanana.isLike());</code></pre></li>
<li><p>mocke new</p>
<pre><code>      Banana mBanana = PowerMockito.mock(Banana.class);
      PowerMockito.when(mBanana.getBananaInfo()).thenReturn("大香蕉");
      //如果new新对象，则返回这个上面设置的这个对象
      PowerMockito.whenNew(Banana.class).withNoArguments().thenReturn(mBanana);
      //new新的对象
      Banana newBanana = new Banana();
      Assert.assertEquals("大香蕉", newBanana.getBananaInfo());</code></pre></li>
<li><p>其他</p>
<ul>
<li>@RunWith被占用<pre><code>@Rule
public PowerMockRule rule = new PowerMockRule();
testCompile "org.powermock:powermock-module-junit4-rule:1.7.3"
testCompile "org.powermock:powermock-classloading-xstream:1.7.3"</code></pre></li>
<li>@PowerMockIgnore用于忽略mock的类常,见的写法是：<pre><code>@PowerMockIgnore({ "org.mockito.*", "org.robolectric.*", "android.*" })</code></pre></li>
</ul>
</li>
<li><p>参考 </p>
<ul>
<li><a href="http://blog.csdn.net/qq_17766199/article/details/78573390" target="_blank" rel="noopener">安卓单元测试（三）</a></li>
<li><a href="https://github.com/powermock/powermock/wiki/Mockito" target="_blank" rel="noopener">powermock文档</a></li>
</ul>
</li>
</ul>
<h3 id="Robolectric框架的使用"><a href="#Robolectric框架的使用" class="headerlink" title="Robolectric框架的使用"></a><a href="http://blog.csdn.net/qq_17766199/article/details/78710177" target="_blank" rel="noopener">Robolectric框架的使用</a></h3><h4 id="配置-3"><a href="#配置-3" class="headerlink" title="配置"></a>配置</h4><pre><code>testCompile "org.robolectric:robolectric:3.5.1"
testCompile 'org.robolectric:shadows-support-v4:3.4-rc2'</code></pre><ul>
<li>设置Working directory的值为 $MODULE_DIR$</li>
</ul>
<h4 id="Robolectric使用"><a href="#Robolectric使用" class="headerlink" title="Robolectric使用"></a><a href="http://blog.csdn.net/qq_17766199/article/details/78710177" target="_blank" rel="noopener">Robolectric使用</a></h4><pre><code>@RunWith(RobolectricTestRunner.class)
@Config(constants = BuildConfig.class, sdk = 23)
public class MainActivityTest {
}</code></pre><ul>
<li>日志输出<pre><code>@Before
  public void setUp(){
      //输出日志
      ShadowLog.stream = System.out;
  }</code></pre><h3 id="网络接口测试"><a href="#网络接口测试" class="headerlink" title="网络接口测试"></a><a href="http://blog.csdn.net/qq_17766199/article/details/78881992" target="_blank" rel="noopener">网络接口测试</a></h3></li>
</ul>
<h4 id="配置-4"><a href="#配置-4" class="headerlink" title="配置"></a>配置</h4><pre><code> //RxJava
    compile 'io.reactivex.rxjava2:rxjava:2.1.7'
    //RxAndroid
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    //okhttp
    compile "com.squareup.okhttp3:okhttp:3.9.1"
    //Retrofit
    compile ("com.squareup.retrofit2:retrofit:2.3.0"){
        exclude module: 'okhttp'
    }
    compile ("com.squareup.retrofit2:adapter-rxjava2:2.3.0"){
        exclude module: 'rxjava'
    }
    compile "com.squareup.retrofit2:converter-gson:2.3.0"</code></pre>]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>自建-模拟JSON REST API-从入门到精通-前端必备技能-你还在等你后台API吗？</title>
    <url>/2019/09/09/2018-9-9-json-server/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1 id="安装运行"><a href="#安装运行" class="headerlink" title="安装运行"></a>安装运行</h1><pre><code>#Linxu/Mac os
sudo npm install json-server -g
#window
npm install json-server -g</code></pre><p>新建db.json用于测试<code>json-server db.json -p 3003</code>,-p 指定端口号为3003</p>
<ul>
<li><code>json-server --watch db.json</code>  在db.json 改变的时候不用重启服务器</li>
</ul>
<pre><code>{
  "news":[
    {
      "id": 1,
      "title": "曹县宣布昨日晚间登日成功",
      "date": "2016-08-12",
      "likes": 55,
      "views": 100086
    },
    {
      "id": 2,
      "title": "长江流域首次发现海豚",
      "date": "2016-08-12",
      "likes": 505,
      "views": 9800
    }
  ],
  "comments":[
    {
      "id": 1,
      "news_id": 1,
      "data": [
        {
          "id": 1,
          "content": "支持党中央决定"
        },
        {
          "id": 2,
          "content": "抄写党章势在必行！"
        }
      ]
    }
  ]
}</code></pre><h2 id="出现错误："><a href="#出现错误：" class="headerlink" title="出现错误："></a>出现错误：</h2><p><code>/usr/bin/env: node: No such file or directory</code> 解决</p>
<pre><code>ln -s /usr/bin/nodejs /usr/bin/node</code></pre><p><code>json-server requires at least version 6 of Node, please upgrade</code> 解决</p>
<pre><code>sudo npm cache clean -f
sudo npm install -g n
sudo n stable</code></pre><h2 id="快速启动脚本"><a href="#快速启动脚本" class="headerlink" title="快速启动脚本"></a>快速启动脚本</h2><p>db.json 目录下新建<code>package.json</code>, 运行<code>npm run mock</code></p>
<pre><code>{
  "scripts": {
    "mock": "json-server db.json --port 3003"
  }
}</code></pre><h1 id="简单的数据操作"><a href="#简单的数据操作" class="headerlink" title="简单的数据操作"></a>简单的数据操作</h1><ul>
<li><a href="https://blog.csdn.net/u011108439/article/details/80612917" target="_blank" rel="noopener">json-server和postman 简单教程</a> postman是模拟请求的开发神器</li>
<li>POST, PUT, PATCH or DELETE 这些操作会自动的保存在db.json文件里，请求必须是Json格式，包含头文件<code>Content-Type: application/json</code> 否则返回的虽然是200 OK，但是不会修改数据</li>
<li>id 的值是不可以修改的。任何<code>id</code>值在你的PUT 或者PATCH的<code>body</code>请求中将会被忽略。只有POST请求并且id值没有重复的时候会被考虑。注意：Object 如：profile:{} ，id值是可以改变的</li>
</ul>
<h2 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h2><p><a href="http://localhost:3003/db" target="_blank" rel="noopener">http://localhost:3003/db</a> ==&gt; 返回所以db.json数据<br><a href="http://localhost:3003/news" target="_blank" rel="noopener">http://localhost:3003/news</a> ==&gt; 返回所有news节点</p>
<p><a href="http://localhost:3003/news/1" target="_blank" rel="noopener">http://localhost:3003/news/1</a> ==&gt; 返回<code>news节点id=1</code> 的数据， </p>
<p><strong>&lt; font color=red &gt; 注意：必须存在id这个属性,并且类型为Integer</strong></p>
<h2 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h2><p>Postman向<code>http://localhost:3003/news</code> 新增id=3的参数</p>
<pre><code>{
    "id": 3,
    "title": "我是新加入的新闻",
    "date": "2016-08-12",
    "likes": 0,
    "views": 0
}</code></pre><p>json-server 后台反应</p>
<pre><code>POST /news?id=3&amp;title=%E6%88%91%E6%98%AF%E6%96%B0%E5%8A%A0%E5%85%A5%E7%9A%84%E6%96%B0%E9%97%BB&amp;date=2016-08-12&amp;likes=0&amp;views=0 201 2.622 ms - 13</code></pre><p>使用<a href="http://tool.chinaz.com/tools/urlencode.aspx" target="_blank" rel="noopener">url encode 解码</a>点击UrlDecode解码</p>
<pre><code>POST /news?id=3&amp;title=我是新加入的新闻&amp;date=2016-08-12&amp;likes=0&amp;views=0 201 2.622 ms - 13</code></pre><p>##DELETE</p>
<p>删除news节点中id=3的参数</p>
<pre class="line-numbers language-shell"><code class="language-shell">Postman向http://localhost:3003/news/3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="请求方式PUT"><a href="#请求方式PUT" class="headerlink" title="请求方式PUT"></a>请求方式PUT</h2><pre class="line-numbers language-shell"><code class="language-shell">http://localhost:3003/news/2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>原参数为：</p>
<pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>
     <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">2</span>
    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"我"</span><span class="token punctuation">,</span>
    <span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2016-08-12"</span><span class="token punctuation">,</span>
    <span class="token property">"likes"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token property">"views"</span><span class="token operator">:</span> <span class="token number">5</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>请求参数为：</p>
<pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>
<span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"我"</span><span class="token punctuation">,</span>
<span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2016-08-12"</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>结果<code>全量</code>更新news节点id=2的参数</p>
<pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>
    <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">2</span>
    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"我"</span><span class="token punctuation">,</span>
    <span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2016-08-12"</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>json-server 后台打印</p>
<pre><code>PUT /news?title=我是新加入的新闻&amp;date=2016-08-12&amp;likes=55&amp;views=100086 404 2.430 ms - 2</code></pre><h2 id="请求方式PATCH（部分更新）"><a href="#请求方式PATCH（部分更新）" class="headerlink" title="请求方式PATCH（部分更新）"></a>请求方式PATCH（部分更新）</h2><pre class="line-numbers language-shell"><code class="language-shell">http://localhost:3003/news/2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>原参数为：</p>
<pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>
     <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">2</span>
    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"我"</span><span class="token punctuation">,</span>
    <span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2016-08-12"</span><span class="token punctuation">,</span>
    <span class="token property">"likes"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token property">"views"</span><span class="token operator">:</span> <span class="token number">5</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>请求参数</p>
<pre class="line-numbers language-shell"><code class="language-shell">{
    "title": "我2"
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>修改结果：</p>
<pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>
     <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">2</span>
    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"我"</span><span class="token punctuation">,</span>
    <span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2016-08-12"</span><span class="token punctuation">,</span>
    <span class="token property">"likes"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token property">"views"</span><span class="token operator">:</span> <span class="token number">5</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="数据加工"><a href="#数据加工" class="headerlink" title="数据加工"></a>数据加工</h2><h3 id="Filter"><a href="#Filter" class="headerlink" title="Filter"></a><strong>Filter</strong></h3><p>对应的数据九宫格</p>
<pre class="line-numbers language-json"><code class="language-json"> comments<span class="token operator">:</span><span class="token punctuation">[</span>
 <span class="token punctuation">{</span>
      <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token property">"news_id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token property">"author"</span><span class="token operator">:</span><span class="token punctuation">{</span>
      <span class="token property">"name"</span><span class="token operator">:</span><span class="token string">"Steven-jobs"</span><span class="token punctuation">,</span>
      <span class="token property">"age"</span><span class="token operator">:</span><span class="token number">32</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
          <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"支持党中央决定"</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
          <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"抄写党章势在必行！"</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">"posts"</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"json-server"</span><span class="token punctuation">,</span> <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"typicode"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"json-server2"</span><span class="token punctuation">,</span> <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"google"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"json-server3"</span><span class="token punctuation">,</span> <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"facebook"</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>查询语句：</p>
<pre><code>GET /comments?id=1&amp;new_id=2
GET /posts?id=1&amp;id=2
GET /comments?author.name=Steven-jobs</code></pre><h3 id="Paginate-分页"><a href="#Paginate-分页" class="headerlink" title="Paginate 分页"></a>Paginate 分页</h3><pre><code>GET /posts?_page=7
GET /posts?_page=7&amp;_limit=20</code></pre><ul>
<li>默认返回 10 items</li>
<li>表头会出现 first, prev, next and last 的直接访问地址，x-total-count数据总数信息<pre><code>access-control-expose-headers →X-Total-Count, Link
link →&lt;http://localhost:3000/news?_page=1&gt;; rel="first", &lt;http://localhost:3000/news?_page=2&gt;; rel="next", &lt;http://localhost:3000/news?_page=2&gt;; rel="last"
x-total-count →20</code></pre></li>
</ul>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p><strong>排序</strong><br>默认升序</p>
<pre><code>GET /posts?_sort=views&amp;_order=asc
GET /posts/1/comments?_sort=votes&amp;_order=asc</code></pre><p><strong>切片 Slice</strong><br>包括_star,不包括_end</p>
<pre><code>GET /posts/1/comments?_start=20&amp;_end=30
GET /posts/1/comments?_start=20&amp;_limit=10</code></pre><p><strong>汇总</strong></p>
<pre><code># _gte &gt; || _lte &lt;
GET /posts?views_gte=10&amp;views_lte=20
# _ne !=
GET /posts?id_ne=1
# _like 注意title的字段名称
GET /posts?title_like=server
# 全局搜索
GET /posts?q=internet
# 直接获取数据
GET /db</code></pre><h3 id="关系图谱"><a href="#关系图谱" class="headerlink" title="关系图谱"></a>关系图谱</h3><p>posts id 和comments id 是关联的</p>
<pre><code>{
  "posts": [
    { "id": 1, "title": "post的第一个title", "author": "typicode" },
    { "id": 2, "title": "post的第二个title", "author": "tangcaiye" }
  ],
  "comments": [
    { "id": 1, "body": "some comment1111", "postId": 2 },
    { "id": 2, "body": "some comment2222", "postId": 1 }
  ],
  "profile": { "name": "typicode" }
}</code></pre><ul>
<li>_embed <code>http://localhost:3000/posts/2?_embed=comments</code> 返回<code>posts/2</code>下级关联数据<code>comments</code><pre><code>{
"id": 2,
"title": "post的第二个title",
"author": "tangcaiye",
"comments": [
  {
    "id": 1,
    "body": "some comment1111",
    "postId": 2
  }
]
}</code></pre></li>
<li>_expand <code>http://localhost:3000/comments/2?_expand=post</code> 返回comments上级关联数据<code>post</code><pre><code>{
"id": 2,
"body": "some comment2222",
"postId": 1,
"post": {
  "id": 1,
  "title": "post的第一个title",
  "author": "typicode"
}
}</code></pre></li>
</ul>
<h1 id="模拟动态数据"><a href="#模拟动态数据" class="headerlink" title="模拟动态数据"></a>模拟动态数据</h1><h2 id="简单的返回数组"><a href="#简单的返回数组" class="headerlink" title="简单的返回数组"></a>简单的返回数组</h2><p>/mock/db.js</p>
<pre><code>module.exports = function() {
  var data = { users: [] }
  // Create 1000 users
  for (var i = 0; i &lt; 1000; i++) {
    data.users.push({ id: i, name: 'user' + i })
  }
  return data
}</code></pre><p>运行</p>
<pre><code>json-server db.js -p 3003</code></pre><p>访问</p>
<pre><code>http://localhost:3003/users</code></pre><p>返回</p>
<pre><code>[
    {
        "id": 0,
        "name": "user0"
    },
    {
        "id": 1,
        "name": "user1"
    }
    ......
]</code></pre><h2 id="拒绝僵硬的数据，引入mockjs"><a href="#拒绝僵硬的数据，引入mockjs" class="headerlink" title="拒绝僵硬的数据，引入mockjs"></a>拒绝僵硬的数据，引入mockjs</h2><p>安装mockjs 在 <code>/mock</code> 目录下安装</p>
<pre><code>npm install mockjs --save</code></pre><p><em>示例:返回100条新闻数据</em></p>
<pre><code>// # /mock/db.js

let Mock  = require('mockjs');
let Random = Mock.Random;

module.exports = function() {
  var data = {
      news: []
  };

  var images = [1,2,3].map(x=&gt;Random.image('200x100', Random.color(), Random.word(2,6)));

  for (var i = 0; i &lt; 100; i++) {

    var content = Random.cparagraph(0,10);

    data.news.push({
         id: i,
         title: Random.cword(8,20),
         desc: content.substr(0,40),
         tag: Random.cword(2,6),
         views: Random.integer(100,5000),
         images: images.slice(0,Random.integer(1,3))
    })
  }

  return data
}</code></pre><p>运行</p>
<pre><code>json-server db.js -p 3000</code></pre><p>访问<code>http://localhost:3000/news</code>返回</p>
<pre><code>[
    {
        "id": 0,
        "title": "元小总小把清保住影办历战资和总由",
        "desc": "共先定制向向圆适者定书她规置斗平相。要广确但教金更前三响角面等以白。眼查何参提适",
        "tag": "值集空",
        "views": 3810,
        "images": [
            "http://dummyimage.com/200x100/79f2a5&amp;text=别角置",
            "http://dummyimage.com/200x100/f28279&amp;text=收面几容受取",
            "http://dummyimage.com/200x100/7993f2&amp;text=做件"
        ]
    },
    ......
]</code></pre><h3 id="Mock-语法"><a href="#Mock-语法" class="headerlink" title="Mock 语法"></a>Mock 语法</h3><p><strong>Mock.mock</strong><br>repeat 方法（部分）</p>
<pre><code>Mock.mock({
  "string|5": "★"       =&gt;   "string": "★★★★★"
  "string|1-10": "★"    =&gt;   "string": "★★"
  "number|1-100": 100    =&gt;   "number": 85
  "number|1-100.2": 100  =&gt;   "number": 25.69
})</code></pre><p><strong>Mock.Random</strong></p>
<pre><code>Random.boolean()           =&gt; true false 各50%
Random.integer(60, 100)    =&gt; 78
Random.float(60, 100)      =&gt; 89.565475
Random.range(60, 100)      =&gt; [60,61,62,...,99]
Random.date()              =&gt; "2018-12-28"
Random.image('200x100','#396') =&gt; "http://dummyimage.com/200x100/396"
Random.color()             =&gt; "#79d8f2"  (默认使用hex颜色)
Random.county(true)        =&gt; "浙江省 舟山市 岱山县"</code></pre><ul>
<li>Rnadom.image<pre><code>Random.image()
// =&gt; "http://dummyimage.com/125x125"
Random.image('200x100')
// =&gt; "http://dummyimage.com/200x100"
Random.image('200x100', '#fb0a2a')
// =&gt; "http://dummyimage.com/200x100/fb0a2a"
Random.image('200x100', '#02adea', 'Hello')
// =&gt; "http://dummyimage.com/200x100/02adea&amp;text=Hello"
Random.image('200x100', '#00405d', '#FFF', 'Mock.js')
// =&gt; "http://dummyimage.com/200x100/00405d/FFF&amp;text=Mock.js"
Random.image('200x100', '#ffcc33', '#FFF', 'png', '!')
// =&gt; "http://dummyimage.com/200x100/ffcc33/FFF.png&amp;text=!"</code></pre></li>
<li>Text<pre><code>paragraph-&gt; centence -&gt; word -&gt; title
#中文
Random.cparagraph()
Random.cparagraph( len )
Random.cparagraph( min, max )
#随机生成一段中文文本
Random.csentence()
Random.csentence( len )
Random.csentence( min, max )
# 随机生成一个汉字
Random.cword()
Random.cword( pool )
Random.cword( length )
Random.cword( pool, length )
Random.cword( min, max )
Random.cword( pool, min, max )</code></pre></li>
</ul>
<h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><h3 id="路由设置"><a href="#路由设置" class="headerlink" title="路由设置"></a>路由设置</h3><blockquote>
<p><font color="red">注意：没有设置路由（主要是： “host”: “0.0.0.0” 属性）之前 <code>json-server --watch db.json</code> 只有本机能访问，也就是局域网外网都不能访问</font></p>
</blockquote>
<ol>
<li>可以用-H 命令指定<pre><code>json-server --watch db.json -H 0.0.0.0</code></pre></li>
<li>host 设置为<code>127.0.0.1</code> 或者本地局域网IP地址 如<code>192.168.1.168</code> 无效 ，(服务器指定127.0.0.1/ 192.168.1.168是本地调试模式)<br><a href="https://blog.csdn.net/u012814696/article/details/55098249" target="_blank" rel="noopener">具体解释网址</a>  大意： 0.0.0.0指的是本机上的所有IPV4地址<blockquote>
<p>IPV4中，0.0.0.0地址被用于表示一个无效的，未知的或者不可用的目标。* 在服务器中，0.0.0.0指的是本机上的所有IPV4地址，如果一个主机有两个IP地址，192.168.1.1 和 10.1.2.1，并且该主机上的一个服务监听的地址是0.0.0.0,那么通过两个ip地址都能够访问该服务。 * 在路由中，0.0.0.0表示的是默认路由，即当路由表中没有找到完全匹配的路由的时候所对应的路由。</p>
</blockquote>
<h4 id="设置的两种方法"><a href="#设置的两种方法" class="headerlink" title="设置的两种方法"></a>设置的两种方法</h4></li>
</ol>
<ul>
<li>直接命令行指定路由文件<pre><code>json-server db.js -p 3003 -d 500 -q -r ./routes.json</code></pre></li>
<li><code>json-server.json</code> 文件进行配置后，直接<code>json-server db.json</code><pre><code># /mock/json-server.json
{
  "host": "0.0.0.0",
  "port": "3003",
  "watch": false,
  "delay": 500,
  "quiet": true,
  "routes": "./routes.json"
}</code></pre>自定义路由，可以指定访问链接返回指定的数据，而且可以动态修改</li>
</ul>
<p><strong>routes.json</strong></p>
<pre><code>{
  "/api/*": "/$1",
  "/:resource/:id/show": "/:resource/:id",
  "/posts/:category": "/posts?category=:category",
  "/articles\\?id=:id": "/posts/:id"
}</code></pre><p>对应的效果</p>
<pre><code>/api/posts # → /posts
/api/posts/1  # → /posts/1
/posts/1/show # → /posts/1
/posts/javascript # → /posts?category=javascript
/articles?id=1 # → /posts/1</code></pre><ul>
<li><code>"/api/*": "/$1"</code> 相当于把api路径给忽略掉</li>
<li><code>/:resource</code> 取值是变动的</li>
<li>每个路径必须以<code>/</code>开头<h3 id="增加中间件"><a href="#增加中间件" class="headerlink" title="增加中间件"></a>增加中间件</h3></li>
</ul>
<pre><code>// hello.js
module.exports = (req, res, next) =&gt; {
  res.header('X-Hello', 'World')
  next()
}

json-server db.json --middlewares ./hello.js
json-server db.json --middlewares ./first.js ./second.js</code></pre><h3 id="Nodejs-Module-不用等后台同事API"><a href="#Nodejs-Module-不用等后台同事API" class="headerlink" title="Nodejs  Module 不用等后台同事API"></a>Nodejs  Module 不用等后台同事API</h3><p>为什么学了上面还要学nodejs的案例呢？ 因为上面的技能还不能很好的满足开发中REST API的需求</p>
<ul>
<li>rount.json 储存在文件中修改比较麻烦</li>
<li>只用配置文件，不很好使用Mock的相关功能</li>
<li>把配置放在js中相对灵活，能动态的拦截返回和处理相关逻辑</li>
</ul>
<h4 id="最简单案例"><a href="#最简单案例" class="headerlink" title="最简单案例"></a>最简单案例</h4><p>node 安装 json-server模块</p>
<pre><code>$ npm install json-server --save-dev</code></pre><pre><code>// server.js
const jsonServer = require('json-server')
const server = jsonServer.create()
const router = jsonServer.router('db.json') //默认为当前目录
//const path = require('path') 指定其他目录
//const router = jsonServer.router(path.join(__dirname, 'db.json'))
const middlewares = jsonServer.defaults()

server.use(middlewares)
server.use(router)
server.listen(3000, () =&gt; {
  console.log('JSON Server is running')
})
// 运行
$ node server.js</code></pre><h4 id="自定义路由"><a href="#自定义路由" class="headerlink" title="自定义路由"></a>自定义路由</h4><pre><code>const jsonServer = require('json-server')
const server = jsonServer.create()
const router = jsonServer.router('db.json')
const middlewares = jsonServer.defaults()

// Set default middlewares (logger, static, cors and no-cache)
server.use(middlewares)

// Add custom routes before JSON Server router
server.get('/echo', (req, res) =&gt; {
  res.jsonp(req.query)
})

// To handle POST, PUT and PATCH you need to use a body-parser
// You can use the one used by JSON Server
server.use(jsonServer.bodyParser)
server.use((req, res, next) =&gt; {
  if (req.method === 'POST') {
    req.body.createdAt = Date.now()
  }
  // Continue to JSON Server router
  next()
})

// Use default router
server.use(router)
server.listen(3000, () =&gt; {
  console.log('JSON Server is running')
})</code></pre><p>对上面的几点进行说明<br>res.jsonp res ==&gt; respose</p>
<pre><code>res.status(500).jsonp({
      error: "error message here"
      "id": 21,
      "title": "长江",
      "date": "2016-09-12",
      "likes": 509,
      "views": 9900
  })</code></pre><p>请求的返回Json格式</p>
<pre><code>{
  "error": "error message here"
  "id": 21,
  "title": "长江",
  "date": "2016-09-12",
  "likes": 509,
  "views": 9900
}</code></pre><p>req.body.createdAt = Date.now() 往返回的jons中插入createAt字段，如本应返回</p>
<pre><code>{
      "id": 21,
      "title": "长江",
      "date": "2016-09-12",
      "likes": 509,
      "views": 9900
 }</code></pre><p>加入req.body.createdAt = Date.now()后返回</p>
<pre><code>{
    "id": 21,
    "title": "长江",
    "date": "2016-09-12",
    "likes": 509,
    "views": 9900,
    "createdAt": 1536476508883,
}</code></pre><h4 id="js-增加router-json-配置"><a href="#js-增加router-json-配置" class="headerlink" title="js 增加router.json 配置"></a>js 增加router.json 配置</h4><pre><code>// Add this before server.use(router)
server.use(jsonServer.rewriter({
  '/api/*': '/$1',
  '/blog/:resource/:id/show': '/:resource/:id'
}))</code></pre><h4 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h4><pre><code>const jsonServer = require('json-server')
const server = jsonServer.create()
const router = jsonServer.router('db.json')
const middlewares = jsonServer.defaults()

server.use(middlewares)
server.use((req, res, next) =&gt; {
 if (isAuthorized(req)) { // add your authorization logic here
   next() // continue to JSON Server router
 } else {
   res.sendStatus(401)
 }
})
server.use(router)
server.listen(3000, () =&gt; {
  console.log('JSON Server is running')
})</code></pre><h4 id="自定义输出"><a href="#自定义输出" class="headerlink" title="自定义输出"></a>自定义输出</h4><pre><code>// In this example, returned resources will be wrapped in a body property
router.render = (req, res) =&gt; {
  res.jsonp({
    body: res.locals.data
  })
  //res.jsonp =&gt; 包裹数据成json格式
  //res.send  =&gt; 直接发送字符串
}</code></pre><p>访问本应返回</p>
<pre><code>{
      "id": 21,
      "title": "长江",
      "date": "2016-09-12"
 }</code></pre><p>增加 body: res.locals.data后返回</p>
<pre><code>{
    body: {
        id: 1,
        title: "曹县宣布昨日晚间登日成功",
        date: "2016-08-12",
        likes: 55,
        views: 100086
    }
}</code></pre><h3 id="终极Demo"><a href="#终极Demo" class="headerlink" title="终极Demo"></a>终极Demo</h3><p>访问<code>http://localhost:3000/echo</code> 返回模拟数据</p>
<pre><code>const jsonServer = require('json-server')
const server = jsonServer.create()
const router = jsonServer.router('db.json')
const middlewares = jsonServer.defaults()
let Mock  = require('mockjs');

server.use(middlewares)

var template = {
    'titles': 'Syntax Demo',

    'string1|1-10': '★',
    'string2|3': 'value',

    'number1|+1': 100,
    'number2|1-100': 100,
    'number3|1-100.1-10': 1,
    'number4|123.1-10': 1,
    'number5|123.3': 1,
    'number6|123.10': 1.123,

    'boolean1|1': true,
    'boolean2|1-2': true,

    'object1|2-4': {
        '110000': '北京市',
        '120000': '天津市',
        '130000': '河北省',
        '140000': '山西省'
    },
    'object2|2': {
        '310000': '上海市',
        '320000': '江苏省',
        '330000': '浙江省',
        '340000': '安徽省'
    },

    'array1|1': ['AMD', 'CMD', 'KMD', 'UMD'],
    'array2|1-10': ['Mock.js'],
    'array3|3': ['Mock.js'],

    'function': function() {
        return this.titles
    }
}

server.get('/echo', (req, res) =&gt; {
    var data = Mock.mock(template)
    var json = JSON.stringify(data, null, 4)
    console.log('-----------------\n' + json)
    res.send(json)
})

// To handle POST, PUT and PATCH you need to use a body-parser
// You can use the one used by JSON Server
server.use(jsonServer.bodyParser)
server.use((req, res, next) =&gt; {
  console.log('--------------'+req.method)
  if (req.method === 'POST') {
    req.body.createdAt = Date.now()
    req.body.test = 1
  }
  // Continue to JSON Server router
  next()
})

// 返回错误码，和指定json格式的数据
//router.render = (req, res) =&gt; {
//   res.status(500).jsonp({
//        error: "error message here"
//        "id": 21,
//      "title": "长江",
//      "date": "2016-09-12",
//      "likes": 509,
//      "views": 9900
//  })
//}

// Add this before server.use(router)
server.use(jsonServer.rewriter({
  '/api/*': '/$1',
  '/blog/:resource/:id/show': '/:resource/:id'
}))

router.render = (req, res) =&gt; {
  res.jsonp({
    body: res.locals.data
  })
}

server.use(router)

server.listen(3000, () =&gt; {
  console.log('JSON Server is running')
})</code></pre><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="json-server-命令参数"><a href="#json-server-命令参数" class="headerlink" title="json-server 命令参数"></a>json-server 命令参数</h2><pre><code> json-server
index.js [options] &lt;source&gt;

选项：
  --config, -c               Path to config file    [默认值: "json-server.json"]
  --port, -p                 Set port                             [默认值: 3000]
  --host, -H                 Set host                      [默认值: "localhost"]
  --watch, -w                Watch file(s)                                [布尔]
  --routes, -r               Path to routes file
  --middlewares, -m          Paths to middleware files                    [数组]
  --static, -s               Set static files directory
  --read-only, --ro          Allow only GET requests                      [布尔]
  --no-cors, --nc            Disable Cross-Origin Resource Sharing        [布尔]
  --no-gzip, --ng            Disable GZIP Content-Encoding                [布尔]
  --snapshots, -S            Set snapshots directory               [默认值: "."]
  --delay, -d                Add delay to responses (ms)
  --id, -i                   Set database id property (e.g. _id)  [默认值: "id"]
  --foreignKeySuffix, --fks  Set foreign key suffix (e.g. _id as in post_id)
                                                                  [默认值: "Id"]
  --quiet, -q                Suppress log messages from output            [布尔]
  --help, -h                 显示帮助信息                                 [布尔]
  --version, -v              显示版本号                                   [布尔]

示例：
  index.js db.json
  index.js file.js
  index.js http://example.com/db.json

https://github.com/typicode/json-server

Missing &lt;source&gt; argument</code></pre><h2 id="URL-加密解密工具"><a href="#URL-加密解密工具" class="headerlink" title="URL 加密解密工具"></a><a href="http://tool.chinaz.com/tools/urlencode.aspx" target="_blank" rel="noopener">URL 加密解密工具</a></h2><h2 id="Json-server-Github网址"><a href="#Json-server-Github网址" class="headerlink" title="Json-server Github网址"></a><a href="https://github.com/typicode/json-server" target="_blank" rel="noopener">Json-server Github网址</a></h2><blockquote>
<p>上面有更详细的使用说明</p>
</blockquote>
<h2 id="Mockjs-WiKi"><a href="#Mockjs-WiKi" class="headerlink" title="Mockjs WiKi"></a><a href="https://github.com/nuysoft/Mock/wiki" target="_blank" rel="noopener">Mockjs WiKi</a></h2><h2 id="JSONView：json美化-Chrome-插件"><a href="#JSONView：json美化-Chrome-插件" class="headerlink" title="JSONView：json美化 Chrome 插件 "></a><a href="http://chromecj.com/web-development/2017-11/850.html" target="_blank" rel="noopener">JSONView：json美化 Chrome 插件 </a></h2><p>使用Chrome 的同学推荐使用</p>
<p><img src="http://ohlb58e07.bkt.clouddn.com/2018-09-09_17-19-03_json_view.gif" alt=""></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://segmentfault.com/a/1190000005793257" target="_blank" rel="noopener">用JSON-server模拟REST API(一) 安装运行</a></li>
<li><a href="https://segmentfault.com/a/1190000005793320" target="_blank" rel="noopener">用JSON-server模拟REST API(二) 动态数据</a></li>
<li><a href="https://segmentfault.com/a/1190000005793520" target="_blank" rel="noopener">用JSON-server模拟REST API(三) 进阶使用</a></li>
<li><a href="https://segmentfault.com/a/1190000010449453?_ea=2302005" target="_blank" rel="noopener">json-server的关系图谱详解（Relationships）</a></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>实践</tag>
        <tag>网页</tag>
      </tags>
  </entry>
  <entry>
    <title>RxJava 复习笔记</title>
    <url>/2019/09/04/2019-9-4-RxJava-review-note/</url>
    <content><![CDATA[<h2 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h2><h3 id="Create"><a href="#Create" class="headerlink" title="Create"></a><a href="http://mushuichuan.com/2015/12/11/rxjava-operator-1/" target="_blank" rel="noopener">Create</a></h3><pre class="line-numbers language-TXT"><code class="language-TXT">create
range(10,5) -> 10,11,12,13,14(5个数)
defer（订阅重新创建）/just
from
interval（1，TimeUnit.SECONDES）
Observable.just(1).repeat(5);#重复发送5数
Observable.timer(1, TimeUnit.SECONDS) # 1s后发送<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Transforming-Observables"><a href="#Transforming-Observables" class="headerlink" title="Transforming Observables"></a><a href="http://mushuichuan.com/2015/12/11/rxjava-operator-2/" target="_blank" rel="noopener">Transforming Observables</a></h3><p>buffer –&gt; Window 返回的是Observe</p>
<pre class="line-numbers language-txt"><code class="language-txt">buffer(3) #缓存3个统一发出
buffer(2,3)#接收1,2,3,4,5,6->发送1,2    4,5(缓存2个，skip第三个)
buffer(3,TimeUnit.SECONDS) #缓存3s,统一发出<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>FlatMap –&gt; flatMapIterable 顺序输出</p>
<pre class="line-numbers language-java"><code class="language-java">Observable<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>integer <span class="token operator">-</span><span class="token operator">></span> Observable<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span> integer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
# <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>GroupBy</p>
<pre><code>Observable
.just(1, 2, 3, 4, 5, 6, 7, 8, 9)
.groupBy(integer -&gt; integer % 2, integer -&gt; "groupByKeyValue:" + integer);
# keyValue 分别输出：2,4,6,8
Observable
.just(1, 2, 3, 4, 5, 6, 7, 8, 9)
.groupBy(integer -&gt; integer % 2)
.subscribe(groupedObservable -&gt; 
    groupedObservable
            .count()
            .subscribe(integer -&gt;
                XLog.e("key" + groupedObservable.getKey() + " contains:" + integer + " numbers")));
#输出
key 0 contains:4 numbers 
key 1 contains:5 numbers</code></pre><p>Map、Cast</p>
<ul>
<li><a href="https://blog.csdn.net/axuanqq/article/details/50738464" target="_blank" rel="noopener">switch()和flatMap()</a> switch 会丢弃旧数据</li>
</ul>
<p>Scan 上一次的结果给下一次使用，类似于递归 </p>
<h3 id="Filtering"><a href="#Filtering" class="headerlink" title="Filtering"></a><a href="http://mushuichuan.com/2015/12/11/rxjava-operator-3/" target="_blank" rel="noopener">Filtering</a></h3><ul>
<li>debounce (500,Unit) 两个500 内有多给发射取最后一个<br>throttleWithTimeOut 限流,debounce可以根据函数限流（被限流的数据会被丢弃）</li>
<li>Distinct和DistinctUtilChanged</li>
<li>ElementAt、Filter</li>
<li>First、Last</li>
<li>Skip(2) 跳过前2个、Take(2) 取前2个</li>
<li>throttleFirst(1000, TimeUnit.MILLISECONDS)  1秒中最先到达的数据</li>
<li>sample(1000, TimeUnit.MILLISECONDS)  1秒中最后到达的数据<h3 id="Combining"><a href="#Combining" class="headerlink" title="Combining"></a><a href="http://mushuichuan.com/2015/12/11/rxjava-operator-4/" target="_blank" rel="noopener">Combining</a></h3></li>
<li>CombineLatest 2~9个Observable每个都发射一个然后组装 【直到最后一个发出才组装】<pre><code>Observable.combineLatest(createObserver(1), createObserver(2), (num1, num2) -&gt; {
      log("left:" + num1 + " right:" + num2);
      return num1 + num2;
  }</code></pre></li>
<li>Join/groupJoin Observable（时间窗内有效）<pre><code>// 分别匹配
private Observable&lt;String&gt; createObserver2() {
  return Observable.create(new ObservableOnSubscribe&lt;String&gt;() {
    @Override public void subscribe(ObservableEmitter&lt;String&gt; emitter) throws Exception {
      for (int i = 1; i &lt; 5; i++) {
        emitter.onNext("Right-" + i);
        try {
          Thread.sleep(1000);
        } catch (InterruptedException e) {
          e.printStackTrace();
        }
      }
    }
  });
}
Observable.just("Left-","L2").join(createObserver2(),
      integer -&gt; Observable.timer(3000, TimeUnit.MILLISECONDS),//源Observable
      integer -&gt; Observable.timer(1000, TimeUnit.MILLISECONDS),//加入Ob
      (i, j) -&gt; i + j
  ).subscribe(new Consumer&lt;String&gt;() {
    @Override public void accept(String s) throws Exception {
      Log.e("TAG","join:" + s + "\n");
    }
  });</code></pre></li>
<li>Merege 多个发射整合，有交错（没交错cconcat）/ mergeDelayError 合并完成才发送错误</li>
<li>StartWith、Switch（多为一个Observable，后面覆盖前面） <pre class="line-numbers language-java"><code class="language-java">Observable<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startWith</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//输出：-1,0,1,2,3 可以插入list Observable</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li>Zip，zipWith 按顺序，每个数据只能组合一次，发射次数由最少的决定<pre><code>//只发射了2次
createObserver(2).zipWith(createObserver(3), (s, s2) -&gt; s + "-" + s2);
//只发射2次
Observable
  .zip(createObserver(2), createObserver(3), createObserver(4), (s, s2, s3) -&gt; s + "-" + s2 + "-" + s3);</code></pre><h3 id="Error-Handling"><a href="#Error-Handling" class="headerlink" title="Error Handling"></a><a href="http://mushuichuan.com/2015/12/11/rxjava-operator-5/" target="_blank" rel="noopener">Error Handling</a></h3><h4 id="一、Catch"><a href="#一、Catch" class="headerlink" title="一、Catch"></a>一、Catch</h4></li>
<li>OnErrorReturn 返回预先值</li>
<li>OnErrorResume 返回另一个Observable</li>
<li>OnExceptionResumeNext 如果是Exception（同Resume），否专递给Subscriber<h4 id="Retry-，RetryWhen"><a href="#Retry-，RetryWhen" class="headerlink" title="Retry ，RetryWhen"></a>Retry ，RetryWhen</h4>尝试了几次还是产生错误后，retry会将错误分发给观察者，而retryWhen会正常结束，并不会讲错误分发出去<pre class="line-numbers language-gradle"><code class="language-gradle">createObserver().retry(2)
createObserver().retryWhen(observable -> observable.zipWith(Observable.just(1, 2, 3),
          (throwable, integer) -> throwable.getMessage() + integer)
          .flatMap(throwable -> {
              log(throwable);
              return Observable.timer(1, TimeUnit.SECONDS);
          }))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Utility"><a href="#Utility" class="headerlink" title="Utility"></a><a href="http://mushuichuan.com/2015/12/11/rxjava-operator-6/" target="_blank" rel="noopener">Utility</a></h3></li>
<li>toList : 把数据转换成 List 集合<pre><code>Observable
        .just(1, 2, 3, 4)
        .toList()
        .subscribe(new Consumer&lt;List&lt;Integer&gt;&gt;() {
             @Override
             public void accept(List&lt;Integer&gt; integers) throws Exception {
               Log.e("zhao", "accept: " + integers);
         }
   });</code></pre></li>
<li>Delay / DelaySubscription</li>
<li>Doxxx<blockquote>
<p>Observable的生命周期的各个阶段加上一系列的回调监听，当Observable执行到这个阶段的时候，这些回调就会被触发</p>
</blockquote>
</li>
<li>Meterialize 将OnNext/OnError/OnComplete都转化为一个Notification</li>
<li>TimeInterval 拦截发射/取两次间隔时间 &lt;==&gt; TimeStamp 为每次发射打时间戳  <blockquote>
<p> stringTimed.value() 获得onNext()的值</p>
</blockquote>
</li>
<li>Timeout 没次重置，超时抛出超时异常</li>
<li>using 限时销毁资源<h3 id="Conditional-and-Boolean"><a href="#Conditional-and-Boolean" class="headerlink" title="Conditional and Boolean"></a><a href="http://mushuichuan.com/2015/12/14/rxjava-operator-7/" target="_blank" rel="noopener">Conditional and Boolean</a></h3></li>
<li>All(全true 否 false  )/Amb (至多9个Observable，先发先用其他丢弃)</li>
<li>Contains、IsEmpty</li>
<li>DefaultIfEmpty(10)  <pre><code>public void call(Subscriber&lt;? super Integer&gt; subscriber) {
          //没有调用onNext()，返回 DefaultIfEmpty：10
          subscriber.onCompleted();
}</code></pre></li>
<li>SequenceEqual Obd对比 数据，序列，结束状态相同</li>
<li>TakeUntil、TakeWhile、TakeUntil、TakeWhile<pre><code>Observable
.interval(1, TimeUnit.SECONDS)
.skipUntil(Observable.timer(3, TimeUnit.SECONDS)) //可以加时间</code></pre><h3 id="Aggregate"><a href="#Aggregate" class="headerlink" title="Aggregate"></a><a href="http://mushuichuan.com/2015/12/14/rxjava-operator-8/" target="_blank" rel="noopener">Aggregate</a></h3></li>
<li>Concat vs merge vs startWith </li>
<li>Count Observable 没有发送完不触发</li>
<li>Reduce（类似Scan，单只输出最后结果）、Collect(容器，)<pre><code>Observable.from(list)
.collect(() -&gt; new ArrayList&lt;&gt;(), (integers, integer) -&gt; integers.add(integer));
}</code></pre><h3 id="背压"><a href="#背压" class="headerlink" title="背压"></a>背压</h3><blockquote>
<p>错误：MissingBackpressureException, 直接用Observable默认处理不了的存在内存中，容易导致内存溢出</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java">Flowable<span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//onBackpressureDrop 一定要放在 interval 后面否则不会生效</span>
      <span class="token punctuation">.</span><span class="token function">onBackpressureDrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
      <span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span>Schedulers<span class="token punctuation">.</span><span class="token function">io</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span>Schedulers<span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>Long<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
             <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>Long aLong<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>
                 Thread<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                 Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string">"zhao"</span><span class="token punctuation">,</span> <span class="token string">"onNext: "</span> <span class="token operator">+</span> aLong<span class="token punctuation">)</span><span class="token punctuation">;</span>
             <span class="token punctuation">}</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>onBackpressureDrop</li>
<li>onBackpressureLatest</li>
<li>onBackpressureBuffer( 1000 ) //设置缓冲队列大小为 1000</li>
</ul>
<h2 id="常用类详解"><a href="#常用类详解" class="headerlink" title="常用类详解"></a>常用类详解</h2><h3 id="CompositeDisposable"><a href="#CompositeDisposable" class="headerlink" title="CompositeDisposable"></a>CompositeDisposable</h3><p>CompositeDisposable Disposable 的管理类，类似于list</p>
<pre class="line-numbers language-java"><code class="language-java">CompositeDisposable<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mDisposable <span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 得到</span>
CompositeDisposable<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//退出时</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="Subject"><a href="#Subject" class="headerlink" title="Subject"></a>Subject</h3><ul>
<li>PublishSubject 通知每个观察者<pre class="line-numbers language-java"><code class="language-java">PublishSubject<span class="token operator">&lt;</span>String<span class="token operator">></span> publishSubject <span class="token operator">=</span> PublishSubject<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
publishSubject <span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//触发</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li>BehaviorSubject 最后一次onNext()缓存给下一个观察者<pre><code>BehaviorSubject&lt;Integer&gt; behaviorSubject = BehaviorSubject.create();</code></pre></li>
<li>AsyncSubject  onComplete()前其他操作都会被缓存</li>
</ul>
<h3 id="subscribe"><a href="#subscribe" class="headerlink" title="subscribe"></a>subscribe</h3><h4 id="Single"><a href="#Single" class="headerlink" title="Single"></a>Single</h4><blockquote>
<p>onSubscribe (onSuccess | onError)?</p>
</blockquote>
<p>  一个只包含一个item或error的流</p>
<h4 id="Completable"><a href="#Completable" class="headerlink" title="Completable"></a>Completable</h4><blockquote>
<p>onSubscribe (onComplete | onError)?</p>
</blockquote>
<p>只包含completion或error信号的流</p>
<h4 id="io-reactivex-Maybe"><a href="#io-reactivex-Maybe" class="headerlink" title="io.reactivex.Maybe"></a>io.reactivex.Maybe</h4><p>只包含一个maybe value或者error的流</p>
<blockquote>
<p>onSubscribe (onSuccess | onError | onComplete)?</p>
</blockquote>
<ul>
<li><a href="https://www.jianshu.com/p/9b1304435564" target="_blank" rel="noopener">Flowable request</a></li>
</ul>
<p>0..N个流，支持Reactive-Streams和背压(backpressure)</p>
<pre><code>Flowable&lt;Integer&gt; upstream = Flowable.create(new FlowableOnSubscribe&lt;Integer&gt;() {
            @Override
            public void subscribe(FlowableEmitter&lt;Integer&gt; emitter) throws Exception {}
        }, BackpressureStrategy.ERROR); //增加了一个参数

      Subscriber&lt;Integer&gt; downstream = new Subscriber&lt;Integer&gt;() {
            @Override
            public void onSubscribe(Subscription s) {
                Log.d(TAG, "onSubscribe");
                s.request(Long.MAX_VALUE);  //注意这句代码
            }  
            .......
        };
upstream.subscribe(downstream);</code></pre><h3 id="subscribers"><a href="#subscribers" class="headerlink" title="subscribers"></a>subscribers</h3><p> DefaultObserver </p>
<ul>
<li><p>支持异步取消cancel //onNext中取消订阅</p>
</li>
<li><p>onStart()</p>
</li>
<li><p>thread-safe<br>DisposableObserver</p>
</li>
<li><p>implementing Disposable</p>
</li>
<li><p>thread-safe<br>ResourceObserver</p>
</li>
<li><p>支持多个Disposable监控</p>
<h3 id="线程的类型"><a href="#线程的类型" class="headerlink" title="线程的类型"></a>线程的类型</h3><p>Schedulers.</p>
</li>
<li><p>一眼看出：computation()/from(Executor executor)/io( )</p>
</li>
<li><p>trampoline( )排队类型/single()公用一个线程，带研究</p>
</li>
</ul>
<p>AndroidSchedulers<br>AndroidSchedulers.from(Looper looper)</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>案例一：</p>
<pre class="line-numbers language-java"><code class="language-java">Maybe<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>v <span class="token operator">-</span><span class="token operator">></span> v <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>v <span class="token operator">-</span><span class="token operator">></span> v <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">defaultIfEmpty</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">assertResult</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://www.jianshu.com/p/464fa025229e" target="_blank" rel="noopener">给初学者的RxJava2.0教程(一)</a></li>
<li><a href="https://www.jianshu.com/p/c935d0860186" target="_blank" rel="noopener">RxJava2 实战知识梳理</a></li>
<li><a href="https://blog.csdn.net/shangmingchao/article/details/72247730" target="_blank" rel="noopener">RxJava2详解（一）–基础</a></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>亿级电商缓存项目学习</title>
    <url>/2019/08/12/2019-8-12-ecommerce-cache-learning/</url>
    <content><![CDATA[<h1 id="第一章-环境搭建"><a href="#第一章-环境搭建" class="headerlink" title="第一章 环境搭建"></a>第一章 环境搭建</h1><h2 id="1-1-CentOS"><a href="#1-1-CentOS" class="headerlink" title="1.1 CentOS"></a>1.1 CentOS</h2><h3 id="1-1-1-网络设置"><a href="#1-1-1-网络设置" class="headerlink" title="1.1.1 网络设置"></a>1.1.1 网络设置</h3><p>第一步： IP设置</p>
<ol>
<li>配置虚拟机网络环境为桥接</li>
<li>修改I虚拟机网络设置</li>
</ol>
<p><code>vi /etc/sysconfig/network-scripts/ifcfg-eth0</code> 修改为</p>
<pre class="line-numbers language-shell"><code class="language-shell">DEVICE=eth0
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=dhcp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>重启网络分配IP</p>
<pre><code>service network restart</code></pre><p>固定IP地址</p>
<pre class="line-numbers language-shell"><code class="language-shell">BOOTPROTO=static
IPADDR=192.168.1.9
GATWAY=192.168.1.1
NETMASK= 255.255.255.0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>到此，系统可以连接局域和互联网</p>
<p>第二步： hosts设置</p>
<p>修改<code>hosts</code>  vi /etc/hosts</p>
<pre class="line-numbers language-shell"><code class="language-shell">192.168.1.9  ec-01
192.168.1.12 ec-02
192.168.1.11 ec-03
192.168.1.13 ec-04<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>第三步：关闭防火墙</p>
<blockquote>
<p>开启防火墙导致，大数据开发中机器本地无法互联</p>
</blockquote>
<pre class="line-numbers language-shell"><code class="language-shell">service iptables stop 
service ip6tables stop 
chkconfig iptables off 
chkconfig ip6tables off <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>vi /etc/selinux/config 关闭selinux</p>
<pre><code>SELINUX=disable</code></pre><p>第四步：关闭window防火墙关闭</p>
<h3 id="1-1-3-CentOS-7-设置开启启动"><a href="#1-1-3-CentOS-7-设置开启启动" class="headerlink" title="1.1.3 CentOS 7 设置开启启动"></a>1.1.3 CentOS 7 设置开启启动</h3><p>第一步：脚本准备</p>
<pre class="line-numbers language-shell"><code class="language-shell">mv /opt/script/inotify.sh /etc/rc.d/init.d
chmod +x /etc/rc.d/init.d/inotify.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>第二步：脚本启动配置，脚本顶部增加如下配置</p>
<pre class="line-numbers language-shell"><code class="language-shell">#!/bin/bash
#chkconfig: 345 88 14<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>第三步：添加脚本到开机自动启动项目中</p>
<pre class="line-numbers language-shell"><code class="language-shell">cd /etc/rc.d/init.d
chkconfig --add inotify.sh
chkconfig inotify.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="1-1-4-CentOS-7-设置开机自动联网"><a href="#1-1-4-CentOS-7-设置开机自动联网" class="headerlink" title="1.1.4 CentOS 7 设置开机自动联网"></a>1.1.4 CentOS 7 设置开机自动联网</h3><p>第一步：找到自己的网卡配置</p>
<pre class="line-numbers language-shell"><code class="language-shell">cd /etc/sysconfig/network-scripts/
ll <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>一般为，<code>ifcfg-eno16777736</code></p>
<p>第二步：设置`ONBOOT=yes</p>
<h3 id="1-1-2-配置yum"><a href="#1-1-2-配置yum" class="headerlink" title="1.1.2 配置yum"></a>1.1.2 配置yum</h3><pre class="line-numbers language-shell"><code class="language-shell">yum clean all
yum makechache
yum install wget<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h2 id="1-2-软件安装"><a href="#1-2-软件安装" class="headerlink" title="1.2 软件安装"></a>1.2 软件安装</h2><h3 id="1-2-1-JDK"><a href="#1-2-1-JDK" class="headerlink" title="1.2.1 JDK"></a>1.2.1 JDK</h3><p>tar安装</p>
<pre class="line-numbers language-shell"><code class="language-shell">$ tar -zxvf jdk-8u5-linux-x64.tar.gz

export JAVA_HOME=/usr/local/java/jdk1.8.0_45
export CLASSPATH=.:$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib
export PATH=:$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH
source /etc/profile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>rpm 方式安装</p>
<pre class="line-numbers language-shell"><code class="language-shell"> rpm -ivh jdk-7u65-linux-i586.rpm
 vi ~/.bashrc 
 export JAVA_HOME=/usr/java/latest
 export PATH=$PATH:$JAVA_HOME/bin
 source ~/.bashrc <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="1-2-2-Perl"><a href="#1-2-2-Perl" class="headerlink" title="1.2.2 Perl"></a>1.2.2 Perl</h3><p><a href="http://www.cpan.org/src/" target="_blank" rel="noopener">http://www.cpan.org/src/</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">   yum install -y gcc
   wget https://www.cpan.org/src/5.0/perl-5.30.0.tar.gz
     tar -xzf perl-5.30.0.tar.gz
     cd perl-5.30.0
     ./Configure -des -Dprefix=/usr/local/perl
     make && make test && make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="1-2-3-redis"><a href="#1-2-3-redis" class="headerlink" title="1.2.3 redis"></a>1.2.3 redis</h3><p>安装</p>
<pre class="line-numbers language-shell"><code class="language-shell">wget http://downloads.sourceforge.net/tcl/tcl8.6.9-src.tar.gz \
&& tar -xzvf tcl8.6.9-src.tar.gz \
&& cd  ./tcl8.6.9/unix/ \
&& ./configure  \
&& make && make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><a href="https://redis.io/download" target="_blank" rel="noopener">https://redis.io/download</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">wget http://download.redis.io/releases/redis-5.0.5.tar.gz && \
&& tar xzf redis-5.0.5.tar.gz \
&& cd redis-5.0.5             \
&& make && make test && make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>测试</p>
<pre><code>$ src/redis-server
$ src/redis-cli
redis&gt; set foo bar
OK
redis&gt; get foo
"bar"</code></pre><h4 id="1-生产环境启动方案"><a href="#1-生产环境启动方案" class="headerlink" title="(1) 生产环境启动方案"></a>(1) 生产环境启动方案</h4><p>第一步：修改redis.conf</p>
<pre class="line-numbers language-shell"><code class="language-shell">vi redis.conf
daemonize    yes                            #让redis以daemon进程运行
pidfile        /var/run/redis_6379.pid       #设置redis的pid文件位置
port        6379                        #设置redis的监听端口号
dir         /var/redis/6379                 #设置持久化文件的存储位置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第二步：启动</p>
<pre class="line-numbers language-shell"><code class="language-shell">cp src/redis-server /usr/local/bin/ \
&& cp src/redis-cli /usr/local/bin/ \
&& cp utils/redis_init_script /etc/init.d/redis_6379 \
&& mkdir /etc/redis/ -p && mkdir /var/redis/6379 -p \
&& cp redis.conf /etc/redis/6379.conf \
&& cd /etc/init.d && chmod 777 redis_6379 && ./redis_6379 start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第三步：测试redis是否正常启动 vi /etc/init.d/redis_6379</p>
<pre class="line-numbers language-shell"><code class="language-shell">ps -ef | grep redis<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>第四步：让redis跟随系统启动自动启动</p>
<p><code>vi /etc/init.d/redis_6379</code>, 最上面，加入两行注释，保存退出</p>
<pre class="line-numbers language-shell"><code class="language-shell">
# chkconfig:   2345 90 10
# description:  Redis is a persistent key-value database<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>chkconf 参数概述</p>
<p>​    参数一<code>2345</code> -&gt; 这个服务以什么样的运行级别开始</p>
<p>​    第二个参数<code>90</code> -&gt; 启动的优先等级</p>
<p>​    第三个参数<code>10</code> -&gt; 停止优先级</p>
</blockquote>
<p>配置生效</p>
<pre class="line-numbers language-shell"><code class="language-shell">chkconfig redis_6379 on
#查看是否生效
chkconfig -list <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="2-主从架构搭建"><a href="#2-主从架构搭建" class="headerlink" title="(2) 主从架构搭建"></a>(2) 主从架构搭建</h4><p>第一步：slave基本配置好配置， 步骤同上 <code>（1）生产环境启动方案</code></p>
<p>第二步：配置slave连接主机IP，搜索<code>masterip</code> 看是如下那种，配置master IP和端口</p>
<pre class="line-numbers language-shell"><code class="language-shell">replicaof <masterip> <masterport>
slaveof <masterip> <masterport><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>redis.5.0.5 案例</p>
<pre class="line-numbers language-shell"><code class="language-shell">replicaof 192.168.1.1 6379<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>第三步：强制读写分离 <code>replica-read-only yes</code> 默认开启</p>
<p>第四步：集群安全认证</p>
<p>master 配置访问密码</p>
<pre><code>requirepass foobared</code></pre><p>slave 配置master的连接口令</p>
<pre class="line-numbers language-shell"><code class="language-shell">masterauth <master-password><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>第五步：网络设置</p>
<p>1、 master 开启网络监听</p>
<pre><code>bind 127.0.0.1 192.168.1.x</code></pre><p>注意：只开启<code>127.0.0.1</code>， slave无法连接master</p>
<p>2.、开启端口访问权限</p>
<ul>
<li><p>CentOS 7,使用firewall</p>
<pre class="line-numbers language-shell"><code class="language-shell">#添加端口权限
firewall-cmd --add-port=6379/tcp
#删除端口：
firewall-cmd --remove-port=6379/tcp
#查看端口
firewall-cmd --query-port=6379/tcp
#永久开放端口
firewall-cmd --permanent --add-port=6379/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>CentOS 7 以下</p>
<pre class="line-numbers language-shell"><code class="language-shell">iptables -A INPUT -p tcp --dport  6379 -j ACCEPT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ul>
<p>Notice：master and slave must open the 6379 port permission </p>
<h4 id="3-哨兵集群配置"><a href="#3-哨兵集群配置" class="headerlink" title="(3) 哨兵集群配置"></a>(3) 哨兵集群配置</h4><p>哨兵详细文档： <a href="http://doc.redisfans.com/topic/sentinel.html" target="_blank" rel="noopener">http://doc.redisfans.com/topic/sentinel.html</a></p>
<p>第一步：新建文件</p>
<pre class="line-numbers language-shell"><code class="language-shell">mkdir /etc/sentinal \
&& mkdir -p /var/sentinal/5000 \
&& mkdir -p /var/log/sentinal/ \
#&& touch /var/log/sentinal/5000 \
&& vi /etc/sentinal/5000.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第二步：哨兵配置模板文件修改，简化版，详细配置查看附录一<code>sentinal.conf</code></p>
<pre class="line-numbers language-shell"><code class="language-shell"># port <sentinel-port>
port 5000
## bind 127.0.0.1
bind 192.168.1.13
#dir <working-directory>
dir /var/sentinal/5000
# sentinel monitor <master-name> <ip> <redis-port> <quorum>
sentinel monitor mymaster 192.168.1.13 6379 2
#超过多少毫秒跟一个redis实例断了连接，哨兵就可能认为这个redis实例挂了
#sentinel down-after-milliseconds <master-name> <milliseconds> 
sentinel down-after-milliseconds mymaster 60000
#执行故障转移的timeout超时时长
##sentinel failover-timeout <master-name> <milliseconds>
sentinel failover-timeout mymaster 180000
#新的master切换之后 最多可以有多少个从服务器同时对新的主服务器进行同步， 这个数字越小， 完成故障转移所需的时间就越长。
sentinel parallel-syncs mymaster 1
# sentinel auth-pass <master-name> <password>
sentinel auth-pass mymaster redis-pass
#后台运行
daemonize yes 
logfile /var/log/sentinal/5000.log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Notice:  所有的sentinal都是相同的配置只需改如下两点：</p>
<ul>
<li>bind <local_ip> 本机的IP地址</local_ip></li>
<li>sentinel monitor mymaster <master_ip> </master_ip></li>
</ul>
<p>第三步：启动所有哨兵</p>
<p>1、 redis-server方式，推荐</p>
<pre class="line-numbers language-shell"><code class="language-shell">redis-server /etc/sentinal/5000.conf --sentinel<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>2、redis-sentinel 方式</p>
<pre class="line-numbers language-shell"><code class="language-shell">redis-sentinel /etc/sentinal/5000.conf<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>第四步：检查哨兵状态</p>
<p>1、连接哨兵</p>
<pre class="line-numbers language-shell"><code class="language-shell">redis-cli -h 192.168.1.12 -p 5000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>2、连接成功后，基本状态查询</p>
<pre class="line-numbers language-shell"><code class="language-shell">#列出所有被监视的主服务器，以及这些主服务器的当前状态。
192.168.1.12:5000> sentinel master mymaster
#列出给定主服务器的所有从服务器，以及这些从服务器的当前状态。
192.168.1.12:5000> SENTINEL slaves mymaster
192.168.1.12:5000> SENTINEL sentinels mymaster
192.168.1.12:5000> SENTINEL get-master-addr-by-name mymaster<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="4-测试"><a href="#4-测试" class="headerlink" title="(4) 测试"></a>(4) 测试</h4><p>1、 测试端口是否开放</p>
<pre class="line-numbers language-shell"><code class="language-shell">yum install -y nc 
nc -v host port <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>2、查看主从架构状态</p>
<pre class="line-numbers language-shell"><code class="language-shell">127.0.0.1:6379> info replication 

# Replication
role:slave
master_host:192.168.1.12
master_port:6379
master_link_status:up # 主从连接成功 down为失败
master_last_io_seconds_ago:2
master_sync_in_progress:0
slave_repl_offset:1736
slave_priority:100
slave_read_only:1
connected_slaves:0
master_replid:f9acbb0bc2a6d662b6a5c4c3edcdec831b14a351
master_replid2:0000000000000000000000000000000000000000
master_repl_offset:1736
second_repl_offset:-1
repl_backlog_active:1
repl_backlog_size:1048576
repl_backlog_first_byte_offset:1
repl_backlog_histlen:1736<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>3、测试QPS</p>
<p>在redis源码目录<code>src/redis-benchmark</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">./redis-benchmark -h 192.168.1.12
-c <clients>       Number of parallel connections (default 50)
-n <requests>      Total number of requests (default 100000)
-d <size>          Data size of SET/GET value in bytes (default 2)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>1核1G，虚拟机，自己用redis5.0.5搭建的3500.00 qps少了个数量级</p>
<pre class="line-numbers language-plain"><code class="language-plain">====== PING_INLINE ======
  100000 requests completed in 1.28 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

99.78% <= 1 milliseconds
99.93% <= 2 milliseconds
99.97% <= 3 milliseconds
100.00% <= 3 milliseconds
78308.54 requests per second

====== PING_BULK ======
  100000 requests completed in 1.30 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

99.87% <= 1 milliseconds
100.00% <= 1 milliseconds
76804.91 requests per second

====== SET ======
  100000 requests completed in 2.50 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

5.95% <= 1 milliseconds
99.63% <= 2 milliseconds
99.93% <= 3 milliseconds
99.99% <= 4 milliseconds
100.00% <= 4 milliseconds
40032.03 requests per second

====== GET ======
  100000 requests completed in 1.30 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

99.73% <= 1 milliseconds
100.00% <= 2 milliseconds
100.00% <= 2 milliseconds
76628.35 requests per second

====== INCR ======
  100000 requests completed in 1.90 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

80.92% <= 1 milliseconds
99.81% <= 2 milliseconds
99.95% <= 3 milliseconds
99.96% <= 4 milliseconds
99.97% <= 5 milliseconds
100.00% <= 6 milliseconds
52548.61 requests per second

====== LPUSH ======
  100000 requests completed in 2.58 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

3.76% <= 1 milliseconds
99.61% <= 2 milliseconds
99.93% <= 3 milliseconds
100.00% <= 3 milliseconds
38684.72 requests per second

====== RPUSH ======
  100000 requests completed in 2.47 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

6.87% <= 1 milliseconds
99.69% <= 2 milliseconds
99.87% <= 3 milliseconds
99.99% <= 4 milliseconds
100.00% <= 4 milliseconds
40469.45 requests per second

====== LPOP ======
  100000 requests completed in 2.26 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

28.39% <= 1 milliseconds
99.83% <= 2 milliseconds
100.00% <= 2 milliseconds
44306.60 requests per second

====== RPOP ======
  100000 requests completed in 2.18 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

36.08% <= 1 milliseconds
99.75% <= 2 milliseconds
100.00% <= 2 milliseconds
45871.56 requests per second

====== SADD ======
  100000 requests completed in 1.23 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

99.94% <= 1 milliseconds
100.00% <= 2 milliseconds
100.00% <= 2 milliseconds
81168.83 requests per second

====== SPOP ======
  100000 requests completed in 1.28 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

99.80% <= 1 milliseconds
99.96% <= 2 milliseconds
99.96% <= 3 milliseconds
99.97% <= 5 milliseconds
100.00% <= 5 milliseconds
78369.91 requests per second

====== LPUSH (needed to benchmark LRANGE) ======
  100000 requests completed in 2.47 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

15.29% <= 1 milliseconds
99.64% <= 2 milliseconds
99.94% <= 3 milliseconds
100.00% <= 3 milliseconds
40420.37 requests per second

====== LRANGE_100 (first 100 elements) ======
  100000 requests completed in 3.69 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

30.86% <= 1 milliseconds
96.99% <= 2 milliseconds
99.94% <= 3 milliseconds
99.99% <= 4 milliseconds
100.00% <= 4 milliseconds
27085.59 requests per second

====== LRANGE_300 (first 300 elements) ======
  100000 requests completed in 10.22 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

0.03% <= 1 milliseconds
5.90% <= 2 milliseconds
90.68% <= 3 milliseconds
95.46% <= 4 milliseconds
97.67% <= 5 milliseconds
99.12% <= 6 milliseconds
99.98% <= 7 milliseconds
100.00% <= 7 milliseconds
9784.74 requests per second

====== LRANGE_500 (first 450 elements) ======
  100000 requests completed in 14.71 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

0.00% <= 1 milliseconds
0.07% <= 2 milliseconds
1.59% <= 3 milliseconds
89.26% <= 4 milliseconds
97.90% <= 5 milliseconds
99.24% <= 6 milliseconds
99.73% <= 7 milliseconds
99.89% <= 8 milliseconds
99.96% <= 9 milliseconds
99.99% <= 10 milliseconds
100.00% <= 10 milliseconds
6799.48 requests per second

====== LRANGE_600 (first 600 elements) ======
  100000 requests completed in 18.56 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

0.00% <= 2 milliseconds
0.23% <= 3 milliseconds
1.75% <= 4 milliseconds
91.17% <= 5 milliseconds
98.16% <= 6 milliseconds
99.04% <= 7 milliseconds
99.83% <= 8 milliseconds
99.95% <= 9 milliseconds
99.98% <= 10 milliseconds
100.00% <= 10 milliseconds
5387.35 requests per second

====== MSET (10 keys) ======
  100000 requests completed in 4.02 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

0.01% <= 1 milliseconds
53.22% <= 2 milliseconds
99.12% <= 3 milliseconds
99.55% <= 4 milliseconds
99.70% <= 5 milliseconds
99.90% <= 6 milliseconds
99.95% <= 7 milliseconds
100.00% <= 8 milliseconds
24869.44 requests per second<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="1-2-4-ruby"><a href="#1-2-4-ruby" class="headerlink" title="1.2.4 ruby"></a>1.2.4 ruby</h3><p>第一步：编译</p>
<p><a href="http://www.ruby-lang.org/en/downloads/" target="_blank" rel="noopener">ruby 官网下载地址</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">version=2.3.1
tar -zxvf ruby-${version}.tar.gz 
cd ruby-${version}
./configure -prefix=/usr/local/ruby 
make && make install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第二步：配置路径</p>
<p>vi ~/.bash_profile</p>
<pre class="line-numbers language-shell"><code class="language-shell">PATH=$PATH:$HOME/bin:/usr/local/ruby/bin
export PATH<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>第三步：<code>gem install redis</code></p>
<h2 id="1-3-连接配置"><a href="#1-3-连接配置" class="headerlink" title="1.3 连接配置"></a>1.3 连接配置</h2><p>第一步：配置机器ssh免密钥登录</p>
<pre class="line-numbers language-shell"><code class="language-shell"> ssh-keygen -t rsa \
 cd /root/.ssh/
 cp id_rsa.pub authorized_keys <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>测试：ssh连接本机成功</p>
<p>第二步： 机器之间互相ssh免密钥登录</p>
<pre class="line-numbers language-shell"><code class="language-shell">ssh-copy-id -i <per_host_name><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>案例：</p>
<p>ec-01 拷贝到ec-02，当前在ec01下操作</p>
<pre class="line-numbers language-shell"><code class="language-shell">ssh-copy-id -i ec-02
ssh-copy-id -i ec-03
ssh-copy-id -i ec-04<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>ec-01 至ec-04 重复上面动作, <code>ssh ec-x</code> 测试相互连接是否免密钥</p>
<h3 id="1-3-2-CentOS-开启端口"><a href="#1-3-2-CentOS-开启端口" class="headerlink" title="1.3.2 CentOS 开启端口"></a>1.3.2 CentOS 开启端口</h3><p>1、 master 开启网络监听</p>
<pre><code>bind 127.0.0.1 192.168.1.x</code></pre><p>注意：只开启<code>127.0.0.1</code>， slave无法连接master</p>
<p>2.、开启端口访问权限</p>
<ul>
<li><p>CentOS 7,使用firewall</p>
<pre class="line-numbers language-shell"><code class="language-shell">#添加端口权限
firewall-cmd --add-port=6379/tcp
#删除端口：
firewall-cmd --remove-port=6379/tcp
#查看端口
firewall-cmd --query-port=6379/tcp
#永久开放端口
firewall-cmd --permanent --add-port=6379/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>CentOS 7 以下</p>
<pre class="line-numbers language-shell"><code class="language-shell">iptables -A INPUT -p tcp --dport  6379 -j ACCEPT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ul>
<p>Notice：master and slave must open the 6379 port permission </p>
<h3 id="1-3-3-测试端口是否开放"><a href="#1-3-3-测试端口是否开放" class="headerlink" title="1.3.3 测试端口是否开放"></a>1.3.3 测试端口是否开放</h3><pre class="line-numbers language-shell"><code class="language-shell">yum install -y nc 
nc -v host port <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="1-3-4-CentOS-7-关闭防火墙"><a href="#1-3-4-CentOS-7-关闭防火墙" class="headerlink" title="1.3.4 CentOS 7 关闭防火墙"></a>1.3.4 CentOS 7 关闭防火墙</h3><pre class="line-numbers language-shell"><code class="language-shell">systemctl stop firewalld.service  关闭防火墙
systemctl disable firewalld          永久关闭防火墙<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="1-5-docker-安装redis"><a href="#1-5-docker-安装redis" class="headerlink" title="1.5 docker 安装redis"></a>1.5 docker 安装redis</h2><p>第一步：直接安装redis镜像</p>
<p>redis.conf</p>
<pre class="line-numbers language-shell"><code class="language-shell">#允许外网访问
bind 0.0.0.0
daemonize NO
protected-mode no
requirepass T1%z$1u3Q#zi<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参考</p>
<pre class="line-numbers language-shell"><code class="language-shell">docker run -p 10001:6379 --name redis -v /data/redis/redis.conf:/etc/redis/redis.conf -v /data/redis/data:/data -d redis redis-server /etc/redis/redis.conf --appendonly yes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>命令说明</p>
<pre class="line-numbers language-shell"><code class="language-shell">-p 10001:6379 : 将容器的6379端口映射到主机的10001端口
--name redis : 容器名字
-v /data/redis/redis.conf:/etc/redis/redis.conf : 将主机中配置文件挂载到容器中
-v /data/redis/data:/data : 将主机中data挂载到容器的/data
redis-server --appendonly yes : 在容器执行redis-server启动命令，并打开redis持久化配置
redis-server /etc/redis/redis.conf : 容器中以配置文件方式启动redis<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-shell"><code class="language-shell">docker run -p 9999:6379 --name redis -v /root/document/service/redis/redis.conf:/etc/redis/redis.conf -v /root/document/service/redis/data:/data -d redis redis-server /etc/redis/redis.conf --appendonly yes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>第二步：设置密码, 登录安装的镜像terminal</p>
<pre class="line-numbers language-shell"><code class="language-shell">>redis-cli -h 127.0.0.1 -p 6379<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>第三步：设置密码</p>
<pre class="line-numbers language-shell"><code class="language-shell">config set requirepass  “4s6X3DRgRStdb#yFNB”<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>第四步：查看设置的密码</p>
<pre><code>config get requirepass</code></pre><h1 id="第二章-软件使用"><a href="#第二章-软件使用" class="headerlink" title="第二章 软件使用"></a>第二章 软件使用</h1><h2 id="2-1-Redis"><a href="#2-1-Redis" class="headerlink" title="2.1  Redis"></a>2.1  Redis</h2><h3 id="2-1-1-基本应用"><a href="#2-1-1-基本应用" class="headerlink" title="2.1.1 基本应用"></a>2.1.1 基本应用</h3><p>四个方向应用</p>
<ul>
<li>redis各种数据结构和命令的使用，包括java api的使用</li>
<li>redis一些特殊的解决方案的使用，pub/sub消息系统，分布式锁，输入的自动完成，等等</li>
<li>redis日常的管理相关的命令</li>
<li>redis企业级的集群部署和架构</li>
</ul>
<p>进阶</p>
<p>深入集群架构的底层原理，哨兵的底层原理，用一线的经验，告诉你，redis的大规模的架构师如何去支撑海量数<br>据、高并发、高可用的</p>
<p>常用命令</p>
<pre class="line-numbers language-shell"><code class="language-shell">#密码认证
127.0.0.1:6379> auth "yourpassword"  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>‘</p>
<p>常用地址</p>
<pre><code>#持久化RDB存储地址
/var/redis/6379/dump.rdb
# redis 启动时需要删除的文件
/var/run/redis_6379.pid
#redis日志，可以查看redis启动状态
/var/log/redis/</code></pre><h3 id="2-1-2-Redis持久化"><a href="#2-1-2-Redis持久化" class="headerlink" title="2.1.2 Redis持久化"></a>2.1.2 Redis持久化</h3><blockquote>
<h4 id="1-redis持久化机对于生产环境中的灾难恢复的意义"><a href="#1-redis持久化机对于生产环境中的灾难恢复的意义" class="headerlink" title="1. redis持久化机对于生产环境中的灾难恢复的意义"></a>1. redis持久化机对于生产环境中的灾难恢复的意义</h4></blockquote>
<blockquote>
<p>通过持久化将数据搞一份儿在磁盘上去，然后定期比如说同步和备份到一些云存储服务上去，那么就可以保证数据不丢失全部，还是可以恢复一部分数据回来的</p>
</blockquote>
<h4 id="1-RDB"><a href="#1-RDB" class="headerlink" title="1. RDB"></a>1. RDB</h4><p>默认开启</p>
<p>快照设置</p>
<p><code>vi /etc/redis/6379.conf</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">save 60 1000 #每隔60s，如果有超过1000个key发生了变更，那么就生成一个新的dump.rdb文件
dir ./ #rdb保存位置
dbfilename dump.rdb #保存文件名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="2-AOF"><a href="#2-AOF" class="headerlink" title="2. AOF"></a>2. AOF</h4><p>知识点一：开启配置AOF</p>
<p>AOF持久化的配置默认是关闭的,开启后会优先使用AOF进行数据恢复</p>
<pre class="line-numbers language-shell"><code class="language-shell">appendonly yes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><code>appendfsync</code>三种选项 </p>
<p>always</p>
<pre><code>-  每次写入一条数据，立即将这个数据对应的写日志fsync到磁盘上去
-  性能非常非常差，吞吐量很低; 确保说redis里的数据一条都不丢，那就只能这样了</code></pre><p>everysec</p>
<pre><code>- 每秒将os cache中的数据fsync到磁盘
- 性能很高，QPS还是可以上万的</code></pre><p>no</p>
<p>​    - 仅仅redis负责将数据写入os cache就撒手不管了，然后后面os自己会时不时有自己的策略将数据刷入磁盘，不可控了</p>
<p>知识点二： AOF rewrite</p>
<blockquote>
<p>rewrite 原因：很多数据可能会自动过期，可能会被用户删除，可能会被redis用缓存清除的算法清理掉。redis中的数据会不断淘汰掉旧的，就一部分常用的数据会被自动保留在redis内存中，所以很多之前的已经被清理掉的数据，对应的写日志还停留在AOF中，AOF日志文件就一个，会不断的膨胀，到很大很大</p>
</blockquote>
<ol>
<li>配置rewrite策略</li>
</ol>
<pre class="line-numbers language-shell"><code class="language-shell">auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>注解：</p>
<p>然后就会接着128mb继续写AOF的日志，如果发现增长的比例，超过了之前的100%，256mb，就可能会去触发一次rewrite，但是此时还要去跟min-size，64mb去比较，256mb &gt; 64mb，才会去触发rewrite</p>
<ol start="2">
<li><p>AOF破损文件的修复</p>
<p>当aof文件格式错误无法加载时，使用 <code>redis-check-aof --fix</code> 命令来修复破损的AOF文件</p>
</li>
</ol>
<h4 id="3-RDB-和-AOF同时使用时"><a href="#3-RDB-和-AOF同时使用时" class="headerlink" title="3. RDB 和 AOF同时使用时"></a>3. RDB 和 AOF同时使用时</h4><ul>
<li>rdb 和 aof 文件同时存在持久化数据，把aof删除，redisc重启时也不会使用rdb数据</li>
</ul>
<h3 id="2-1-3-企业级的数据方案配置及容灾方案"><a href="#2-1-3-企业级的数据方案配置及容灾方案" class="headerlink" title="2.1.3 企业级的数据方案配置及容灾方案"></a>2.1.3 企业级的数据方案配置及容灾方案</h3><h4 id="1-配置策略"><a href="#1-配置策略" class="headerlink" title="1. 配置策略"></a>1. 配置策略</h4><ul>
<li><p>AOF一定要打开，fsync，everysec</p>
</li>
<li><p>RDB的生成策略，用默认的也差不多，可以根据业务量来处理</p>
</li>
<li><p>rewrite配置</p>
<pre class="line-numbers language-shell"><code class="language-shell">auto-aof-rewrite-percentage 100: 就是当前AOF大小膨胀到超过上次100%，上次的两倍
auto-aof-rewrite-min-size 64mb: 根据你的数据量来定，16mb，32mb<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ul>
<h4 id="2-数据备份方案"><a href="#2-数据备份方案" class="headerlink" title="2. 数据备份方案"></a>2. 数据备份方案</h4><p>使用RDB进行冷备份</p>
<p>（1）写crontab定时调度脚本去做数据备份<br>（2）每小时都copy一份rdb的备份，到一个目录中去，仅仅保留最近48小时的备份<br>（3）每天都保留一份当日的rdb的备份，到一个目录中去，仅仅保留最近1个月的备份<br>（4）每次copy备份的时候，都把太旧的备份给删了<br>（5）每天晚上将当前服务器上所有的数据备份，发送一份到远程的云服务上去</p>
<p>第一步：每1小时备份</p>
<p>  <code>redis_rdb_copy_hourly.sh</code> </p>
<pre class="line-numbers language-shell"><code class="language-shell">#!/bin/sh 

cur_date=`date +%Y%m%d`
rm -rf /usr/local/redis/snapshotting/$cur_date
mkdir /usr/local/redis/snapshotting/$cur_date
cp /var/redis/6379/dump.rdb /usr/local/redis/snapshotting/$cur_date
#删除一个月之前的备份
del_date=`date -d -1month +%Y%m%d`
rm -rf /usr/local/redis/snapshotting/$del_date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>定时一小时启动 crontab -e  </p>
<pre class="line-numbers language-shell"><code class="language-shell">0 0 * * * sh /usr/local/redis/copy/redis_rdb_copy_daily.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>第二步：每天copy一次备份</p>
<p>redis_rdb_copy_daily.sh</p>
<pre class="line-numbers language-shell"><code class="language-shell">#!/bin/sh 

cur_date=`date +%Y%m%d`
rm -rf /usr/local/redis/snapshotting/$cur_date
mkdir /usr/local/redis/snapshotting/$cur_date
cp /var/redis/6379/dump.rdb /usr/local/redis/snapshotting/$cur_date

del_date=`date -d -1month +%Y%m%d`
rm -rf /usr/local/redis/snapshotting/$del_date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>crontab -e</p>
<pre class="line-numbers language-shell"><code class="language-shell">0 0 * * * sh /usr/local/redis/copy/redis_rdb_copy_daily.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>第三步：每天一次将所有数据上传一次到远程的云服务器上去</p>
<p>第四步：基于dump.rdb的数据进行数据恢复</p>
<ul>
<li>redis.conf 关闭 <code>appendonly no</code> </li>
<li>拷贝rdb备份，重启redis，确认数据恢复</li>
<li>命令行热修改redis配置 <code>127.0.0.1:6379&gt; config set appendonly yes</code>, aof同步rdb</li>
<li>redis.conf 开启 <code>appendonly yes</code> ，重启redis </li>
</ul>
<p>第五步：应用</p>
<ol>
<li>如果当前机器上的所有RDB文件全部损坏，那么从远程的云服务上拉取最新的RDB快照回来恢复数据</li>
<li>如果是发现有重大的数据错误，比如某个小时上线的程序一下子将数据全部污染了，数据全错了，那么可以选择某个更早的时间点，对数据进行恢复</li>
</ol>
<h3 id="2-1-4-redis读写分离来承载读请求QPS超过10万"><a href="#2-1-4-redis读写分离来承载读请求QPS超过10万" class="headerlink" title="2.1.4 redis读写分离来承载读请求QPS超过10万+"></a>2.1.4 redis读写分离来承载读请求QPS超过10万+</h3><blockquote>
<p>redis高并发跟整个系统的高并发之间的关系</p>
<p>redis 是支撑高并发的架构里面，非常重要的一个环节</p>
<ol>
<li>首先，你的底层的缓存中间件，缓存系统，必须能够支撑的起我们说的那种高并发，</li>
<li>其次，再经过良好的整体的缓存架构的设计（多级缓存架构、热点缓存），支撑真正的上十万，甚至上百万的高并发</li>
</ol>
</blockquote>
<p>架构思路</p>
<p>主从架构 -&gt; 读写分离 -&gt; 支撑10万+读QPS的架构</p>
<h4 id="1-redis主从架构"><a href="#1-redis主从架构" class="headerlink" title="(1) redis主从架构"></a>(1) redis主从架构</h4><ul>
<li>如果采用了主从架构，那么建议必须开启master node的持久化！如果你关掉master的持久化，可能在master宕机重启的时候数据是空的，然后可能一经过复制，salve node数据也丢了</li>
<li>使采用了后续讲解的高可用机制，slave node可以自动接管master node，但是也可能sentinal还没有检测到master failure，master node就自动重启了，还是可能导致上面的所有slave node数据清空故障</li>
</ul>
<p>全量复制</p>
<ol>
<li>master执行bgsave，在本地生成一份rdb快照文件</li>
<li>master node 专递rdb快照到slave,超时时间<code>repl-timeout</code>默认为60秒</li>
<li>client-output-buffer-limit slave 256MB 64MB 60，如果在复制期间，内存缓冲区持续消耗超过64MB，或者一次性超过256MB，那么停止复制，复制失败</li>
<li>如果slave node开启了AOF，那么会立即执行BGREWRITEAOF，重写AOF</li>
</ol>
<blockquote>
<p> 注意：如果复制的数据量在4G~6G之间，那么很可能全量复制时间消耗到1分半到2分钟</p>
</blockquote>
<p>增量复制</p>
<p>（1）如果全量复制过程中，master-slave网络连接断掉，那么salve重新连接master时，会触发增量复制<br>（2）master直接从自己的backlog中获取部分丢失的数据，发送给slave node，默认backlog就是1MB<br>（3）msater就是根据slave发送的psync中的offset来从backlog中获取数据的</p>
<p>slave 转化成master的机制</p>
<p>如果一个slave跟master断开连接已经超过了down-after-milliseconds的10倍，外加master宕机的时长，那么slave就被认为不适合选举为master</p>
<p>(down-after-milliseconds * 10) + milliseconds_since_master_is_in_SDOWN_state</p>
<p>接下来会对slave进行排序</p>
<p>（1）按照slave优先级进行排序，slave priority越低，优先级就越高<br>（2）如果slave priority相同，那么看replica offset，哪个slave复制了越多的数据，offset越靠后，优先级就越高<br>（3）如果上面两个条件都相同，那么选择一个run id比较小的那个slave</p>
<h4 id="2-QPS压测以及水平扩容支撑更高QPS"><a href="#2-QPS压测以及水平扩容支撑更高QPS" class="headerlink" title="(2) QPS压测以及水平扩容支撑更高QPS"></a>(2) QPS压测以及水平扩容支撑更高QPS</h4><p><a href="https://redis.io/topics/benchmarks" target="_blank" rel="noopener">https://redis.io/topics/benchmarks</a></p>
<p>在redis源码目录<code>src/redis-benchmark</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">./redis-benchmark -h 192.168.1.12
-c <clients>       Number of parallel connections (default 50)
-n <requests>      Total number of requests (default 100000)
-d <size>          Data size of SET/GET value in bytes (default 2)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>1核1G，虚拟机，自己用redis5.0.5搭建的3500.00 qps少了个数量级</p>
<pre class="line-numbers language-plain"><code class="language-plain">====== PING_INLINE ======
  100000 requests completed in 1.28 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

99.78% <= 1 milliseconds
99.93% <= 2 milliseconds
99.97% <= 3 milliseconds
100.00% <= 3 milliseconds
78308.54 requests per second

====== PING_BULK ======
  100000 requests completed in 1.30 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

99.87% <= 1 milliseconds
100.00% <= 1 milliseconds
76804.91 requests per second

====== SET ======
  100000 requests completed in 2.50 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

5.95% <= 1 milliseconds
99.63% <= 2 milliseconds
99.93% <= 3 milliseconds
99.99% <= 4 milliseconds
100.00% <= 4 milliseconds
40032.03 requests per second

====== GET ======
  100000 requests completed in 1.30 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

99.73% <= 1 milliseconds
100.00% <= 2 milliseconds
100.00% <= 2 milliseconds
76628.35 requests per second

====== INCR ======
  100000 requests completed in 1.90 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

80.92% <= 1 milliseconds
99.81% <= 2 milliseconds
99.95% <= 3 milliseconds
99.96% <= 4 milliseconds
99.97% <= 5 milliseconds
100.00% <= 6 milliseconds
52548.61 requests per second

====== LPUSH ======
  100000 requests completed in 2.58 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

3.76% <= 1 milliseconds
99.61% <= 2 milliseconds
99.93% <= 3 milliseconds
100.00% <= 3 milliseconds
38684.72 requests per second

====== RPUSH ======
  100000 requests completed in 2.47 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

6.87% <= 1 milliseconds
99.69% <= 2 milliseconds
99.87% <= 3 milliseconds
99.99% <= 4 milliseconds
100.00% <= 4 milliseconds
40469.45 requests per second

====== LPOP ======
  100000 requests completed in 2.26 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

28.39% <= 1 milliseconds
99.83% <= 2 milliseconds
100.00% <= 2 milliseconds
44306.60 requests per second

====== RPOP ======
  100000 requests completed in 2.18 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

36.08% <= 1 milliseconds
99.75% <= 2 milliseconds
100.00% <= 2 milliseconds
45871.56 requests per second

====== SADD ======
  100000 requests completed in 1.23 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

99.94% <= 1 milliseconds
100.00% <= 2 milliseconds
100.00% <= 2 milliseconds
81168.83 requests per second

====== SPOP ======
  100000 requests completed in 1.28 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

99.80% <= 1 milliseconds
99.96% <= 2 milliseconds
99.96% <= 3 milliseconds
99.97% <= 5 milliseconds
100.00% <= 5 milliseconds
78369.91 requests per second

====== LPUSH (needed to benchmark LRANGE) ======
  100000 requests completed in 2.47 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

15.29% <= 1 milliseconds
99.64% <= 2 milliseconds
99.94% <= 3 milliseconds
100.00% <= 3 milliseconds
40420.37 requests per second

====== LRANGE_100 (first 100 elements) ======
  100000 requests completed in 3.69 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

30.86% <= 1 milliseconds
96.99% <= 2 milliseconds
99.94% <= 3 milliseconds
99.99% <= 4 milliseconds
100.00% <= 4 milliseconds
27085.59 requests per second

====== LRANGE_300 (first 300 elements) ======
  100000 requests completed in 10.22 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

0.03% <= 1 milliseconds
5.90% <= 2 milliseconds
90.68% <= 3 milliseconds
95.46% <= 4 milliseconds
97.67% <= 5 milliseconds
99.12% <= 6 milliseconds
99.98% <= 7 milliseconds
100.00% <= 7 milliseconds
9784.74 requests per second

====== LRANGE_500 (first 450 elements) ======
  100000 requests completed in 14.71 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

0.00% <= 1 milliseconds
0.07% <= 2 milliseconds
1.59% <= 3 milliseconds
89.26% <= 4 milliseconds
97.90% <= 5 milliseconds
99.24% <= 6 milliseconds
99.73% <= 7 milliseconds
99.89% <= 8 milliseconds
99.96% <= 9 milliseconds
99.99% <= 10 milliseconds
100.00% <= 10 milliseconds
6799.48 requests per second

====== LRANGE_600 (first 600 elements) ======
  100000 requests completed in 18.56 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

0.00% <= 2 milliseconds
0.23% <= 3 milliseconds
1.75% <= 4 milliseconds
91.17% <= 5 milliseconds
98.16% <= 6 milliseconds
99.04% <= 7 milliseconds
99.83% <= 8 milliseconds
99.95% <= 9 milliseconds
99.98% <= 10 milliseconds
100.00% <= 10 milliseconds
5387.35 requests per second

====== MSET (10 keys) ======
  100000 requests completed in 4.02 seconds
  50 parallel clients
  3 bytes payload
  keep alive: 1

0.01% <= 1 milliseconds
53.22% <= 2 milliseconds
99.12% <= 3 milliseconds
99.55% <= 4 milliseconds
99.70% <= 5 milliseconds
99.90% <= 6 milliseconds
99.95% <= 7 milliseconds
100.00% <= 8 milliseconds
24869.44 requests per second<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>我们这个读写分离这一块的第一讲</p>
<p>大部分情况下来说，看你的服务器的机器性能和配置，机器越牛逼，配置越高</p>
<p>单机上十几万，单机上二十万</p>
<p>很多公司里，给一些低配置的服务器，操作复杂度</p>
<p>大公司里，都是公司会提供统一的云平台，比如京东、腾讯、BAT、其他的一些、小米、美团</p>
<p>虚拟机，低配</p>
<p>搭建一些集群，专门为某个项目，搭建的专用集群，4核4G内存，比较复杂的操作，数据比较大</p>
<p>几万，单机做到，差不多了</p>
<p>redis提供的高并发，至少到上万，没问题</p>
<p>几万~十几万/二十万不等</p>
<p>QPS，自己不同公司，不同服务器，自己去测试，跟生产环境还有区别</p>
<p>生产环境，大量的网络请求的调用，网络本身就有开销，你的redis的吞吐量就不一定那么高了</p>
<p>QPS的两个杀手：一个是复杂操作，lrange，挺多的; value很大，2 byte，我之前用redis做大规模的缓存</p>
<p>做商品详情页的cache，可能是需要把大串数据，拼接在一起，作为一个json串，大小可能都几k，几个byte</p>
<p>2、水平扩容redis读节点，提升度吞吐量</p>
<p>就按照上一节课讲解的，再在其他服务器上搭建redis从节点，单个从节点读请QPS在5万左右，两个redis从节点，所有的读请求打到两台机器上去，承载整个集群读QPS在10万+</p>
<h3 id="2-1-5-sentinel-哨兵"><a href="#2-1-5-sentinel-哨兵" class="headerlink" title="2.1.5  sentinel 哨兵"></a>2.1.5  sentinel 哨兵</h3><blockquote>
<p>知识点1： 每一个哨兵都可以去监控多个maser-slaves的主从架构</p>
</blockquote>
<p>1、哨兵是redis集群架构中非常重要的一个组件，主要功能如下</p>
<p>（1）集群监控，负责监控redis master和slave进程是否正常工作<br>（2）消息通知，如果某个redis实例有故障，那么哨兵负责发送消息作为报警通知给管理员<br>（3）故障转移，如果master node挂掉了，会自动转移到slave node上<br>（4）配置中心，如果故障转移发生了，通知client客户端新的master地址</p>
<p>2、哨兵的核心知识</p>
<p>（1）哨兵至少需要3个实例，来保证自己的健壮性<br>（2）哨兵 + redis主从的部署架构，是不会保证数据零丢失的，只能保证redis集群的高可用性<br>（3）对于哨兵 + redis主从这种复杂的部署架构，尽量在测试环境和生产环境，都进行充足的测试和演练</p>
<p>3、分布式选举的问题</p>
<p>（1）master宕机判定，不是由一个哨兵判断，而是由有多数（2个哨兵的majority=2，3的majority=2，5的majority=3，4的majority=2）哨兵判断</p>
<p>经典3节点哨兵集群</p>
<pre class="line-numbers language-shell"><code class="language-shell">       +----+
       | M1 |
       | S1 |
       +----+
          |
+----+    |    +----+
| R2 |----+----| R3 |
| S2 |         | S3 |
+----+         +----+<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>4、每一个哨兵都可以去监控多个maser-slaves的主从架构，同理一套套哨兵集群，监控不同的多个redis主从集群，配置如下:</p>
<pre class="line-numbers language-shell"><code class="language-shell">sentinel monitor mymaster 127.0.0.1 6379 2
#超过多少毫秒跟一个redis实例断了连接，哨兵就可能认为这个redis实例挂了    
sentinel down-after-milliseconds mymaster 60000
#执行故障转移的timeout超时时长
sentinel failover-timeout mymaster 180000
#新的master切换之后 最多可以有多少个从服务器同时对新的主服务器进行同步， 这个数字越小， 完成故障转移所需的时间就越长。
sentinel parallel-syncs mymaster 1

sentinel monitor resque 192.168.1.3 6380 4
sentinel down-after-milliseconds resque 10000
sentinel failover-timeout resque 180000
sentinel parallel-syncs resque 5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="1-哨兵主备切换的数据丢失问题：异步复制、集群脑裂"><a href="#1-哨兵主备切换的数据丢失问题：异步复制、集群脑裂" class="headerlink" title="(1) 哨兵主备切换的数据丢失问题：异步复制、集群脑裂"></a>(1) 哨兵主备切换的数据丢失问题：异步复制、集群脑裂</h4><p>第一、主备切换的过程，可能会导致数据丢失</p>
<ul>
<li><p>异步复制中断<br>因为master -&gt; slave的复制是异步的，所以可能有部分数据还没复制到slave，master就宕机了，此时这些部分数据就丢失了</p>
</li>
<li><p>脑裂导致</p>
<blockquote>
<p>脑裂，也就是说，某个master所在机器突然脱离了正常的网络，跟其他slave机器不能连接，但是实际上master还运行着</p>
<p>此时哨兵可能就会认为master宕机了，然后开启选举，将其他slave切换成了master</p>
<p>这个时候，集群里就会有两个master，也就是所谓的脑裂</p>
<p>此时虽然某个slave被切换成了master，但是可能client还没来得及切换到新的master，还继续写向旧master的数据可能也丢失了</p>
</blockquote>
</li>
</ul>
<p>第二、解决方案</p>
<pre class="line-numbers language-shell"><code class="language-shell">min-slaves-to-write 1
min-slaves-max-lag 10<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>配置解析：要求至少有1个slave，数据复制和同步的延迟不能超过10秒，一旦所有的slave，数据复制和同步的延迟都超过了10秒钟，那么这个时候，master就不会再接收任何请求了</p>
<p>1、 减少异步复制的数据丢失</p>
<p>slave复制超过<code>min-slaves-max-lag</code>配置时间，master就会拒绝写请求，样可以把master宕机时由于部分数据未同步到slave导致的数据丢失降低的可控范围内</p>
<p>2、减少脑裂的数据丢失</p>
<p>如果跟任何一个slave丢了连接，在10秒后发现没有slave给自己ack，那么就拒绝新的写请求因此在脑裂场景下，最多就丢失10秒的数据</p>
<h4 id="2-哨兵的常用操作"><a href="#2-哨兵的常用操作" class="headerlink" title="(2) 哨兵的常用操作"></a>(2) 哨兵的常用操作</h4><p><a href="http://doc.redisfans.com/topic/sentinel.html" target="_blank" rel="noopener">http://doc.redisfans.com/topic/sentinel.html</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">#列出所有被监视的主服务器，以及这些主服务器的当前状态。
192.168.1.12:5000> sentinel master mymaster
#列出给定主服务器的所有从服务器，以及这些从服务器的当前状态。
192.168.1.12:5000> SENTINEL slaves mymaster
192.168.1.12:5000> SENTINEL sentinels mymaster
192.168.1.12:5000> SENTINEL get-master-addr-by-name mymaster<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>1、哨兵节点的增加和删除</p>
<p>增加sentinal，会自动发现</p>
<p>删除sentinal的步骤</p>
<p>（1）停止sentinal进程<br>（2）SENTINEL RESET *，在所有sentinal上执行，清理所有的master状态<br>（3）SENTINEL MASTER mastername，在所有sentinal上执行，查看所有sentinal对数量是否达成了一致</p>
<h4 id="3-容灾演练"><a href="#3-容灾演练" class="headerlink" title="(3) 容灾演练"></a>(3) 容灾演练</h4><p>第一步：参考第一章哨兵集群配置，设置成非后台启动</p>
<pre class="line-numbers language-shell"><code class="language-shell">daemonize no<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>第二步：把master节点kill -9掉，pid文件也删除掉</p>
<p>第三步：观察sentinel日志</p>
<p>是否出现+sdown字样，识别出了master的宕机问题; 然后出现+odown字样，就是指定的quorum哨兵数量，都认为master宕机了</p>
<p>1、过程分析</p>
<p>（1）三个哨兵进程都认为master是sdown了<br>（2）超过quorum指定的哨兵进程都认为sdown之后，就变为odown<br>（3）哨兵1是被选举为要执行后续的主备切换的那个哨兵<br>（4）哨兵1去新的master（slave）获取了一个新的config version<br>（5）尝试执行failover<br>（6）投票选举出一个slave区切换成master，每隔哨兵都会执行一次投票<br>（7）让salve，slaveof noone，不让它去做任何节点的slave了; 把slave提拔成master; 旧的master认为不再是master了<br>（8）哨兵就自动认为之前的187:6379变成了slave了，19:6379变成了master了<br>（9）哨兵去探查了一下187:6379这个salve的状态，认为它sdown了</p>
<p>2、尝试连接新master测试</p>
<p>SENTINEL get-master-addr-by-name mymaster</p>
<p>3、恢复故障master查看是否切换成slave节点</p>
<h3 id="2-1-6-redis-cluster"><a href="#2-1-6-redis-cluster" class="headerlink" title="2.1.6 redis cluster"></a>2.1.6 redis cluster</h3><blockquote>
<p>知识点：</p>
<ol>
<li>redis单机，读吞吐是5w/s，写吞吐2w/s</li>
<li>扩展redis更多master，那么如果有5台master，不就读吞吐可以达到总量25w/s QPS，写可以达到10w/s QPS</li>
<li>redis单机，内存不要过大，6G，8G，fork类操作的时候很耗时</li>
</ol>
</blockquote>
<h4 id="1-cluster-vs-replication"><a href="#1-cluster-vs-replication" class="headerlink" title="(1) cluster vs replication"></a>(1) cluster vs replication</h4><p>如果你的数据量很少，主要是承载高并发高性能的场景，比如你的缓存一般就几个G，单机足够了</p>
<p>replication，一个mater，多个slave，要几个slave跟你的要求的读吞吐量有关系，然后自己搭建一个sentinal集群，去保证redis主从架构的高可用性，就可以了</p>
<p>redis cluster，主要是针对海量数据+高并发+高可用的场景，海量数据，如果你的数据量很大，那么建议就用redis cluster</p>
<h4 id="2-数据分布式算法"><a href="#2-数据分布式算法" class="headerlink" title="(2) 数据分布式算法"></a>(2) 数据分布式算法</h4><p>1、最老土的hash算法和弊端（大量缓存重建）</p>
<p>2、 一致性hash算法（自动缓存迁移）+虚拟节点（自动负载均衡）</p>
<p>3、redis cluster的hash slot算法</p>
<p>redis cluster有固定的16384个hash slot，对每个key计算CRC16值，然后对16384取模，可以获取key对应的hash slot</p>
<p>redis cluster中每个master都会持有部分slot，比如有3个master，那么可能每个master持有5000多个hash slot</p>
<p>hash slot让node的增加和移除很简单，增加一个master，就将其他master的hash slot移动部分过去，减少一个master，就将它的hash slot移动到其他master上去</p>
<p>移动hash slot的成本是非常低的    </p>
<h4 id="3-redis-cluster-搭建"><a href="#3-redis-cluster-搭建" class="headerlink" title="(3) redis cluster 搭建"></a>(3) redis cluster 搭建</h4><p><a href="https://www.cnblogs.com/zhaocaim/p/10112989.html" target="_blank" rel="noopener">Redis集群Redis-cluster搭建及故障、性能测试</a></p>
<p>1、 重要配置</p>
<pre class="line-numbers language-shell"><code class="language-shell">cluster-enabled <yes/no><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li>cluster-config-file <filename><br>这是指定一个文件，供cluster模式下的redis实例将集群状态保存在那里，包括集群中其他机器的信息，比如节点的上线和下限，故障转移，不是我们去维护的，给它指定一个文件，让redis自己去维护的</filename></li>
<li>cluster-node-timeout <milliseconds></milliseconds></li>
<li>正式环境下，建议都是说在6台机器上去搭建，至少3台机器</li>
</ul>
<p>2、3台机器搭建6个redis实例集群</p>
<p>第一步：开放指定端口</p>
<p>1、 CentOS6</p>
<pre class="line-numbers language-shell"><code class="language-shell">#!/usr/bin/env bash
for port in 7000 7001 17000 17001; do
  iptables -A INPUT -p tcp --dport ${port} -j ACCEPT
  iptables -A OUTPUT -p tcp --sport ${port} -j ACCEPT
done
service iptables save
iptables -L -n<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>2、CentOS 7</p>
<pre class="line-numbers language-shell"><code class="language-shell">firewall-cmd --add-port=6379/tcp
firewall-cmd --permanent --add-port=6379/tcp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>第二步：准备同一的配置文件，如下6379.conf</p>
<pre class="line-numbers language-shell"><code class="language-shell">port 7001
cluster-enabled yes
cluster-config-file /etc/redis-cluster/node-7001.conf
cluster-node-timeout 15000

daemonize    yes                            
pidfile        /var/run/redis_7001.pid                         
dir         /var/redis/7001        
logfile /var/log/redis/7001.log
bind 192.168.31.187        
appendonly yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>【注意重点】</p>
<ul>
<li>bind  不能是 <code>127.0.0.1 192.168.1.11</code> 否则无法创建连接，出现<code>Waiting for the cluster to join</code>的问题</li>
<li>同一台电脑，每一份conf， port必不同</li>
</ul>
<p>第三步：设置部署redis个数并启动</p>
<p>redis-cluster-deploy.sh</p>
<pre class="line-numbers language-shell"><code class="language-shell">#!/usr/bin/env bash

mkdir -p /etc/redis-cluster

mkdir -p /var/log/redis

port=7000
while (( ${port} <= 7001 ))
do
  mkdir -p /var/redis/"$port"
  cp ./6379.conf ./"$port".conf
  sed -i ``s/__port__/"$port"/g`` `grep __port__ -rl ./$port.conf`
  mv ./"$port".conf /etc/redis -f

  cp ./redis_6379 ./redis_"$port" -f

  sed -i ``s/__port__/"$port"/g`` `grep __port__ -rl ./redis_"$port"`
  mv ./redis_"$port" /etc/init.d/ -f
  rm /var/run/redis_"$port".pid -f
  source /etc/init.d/redis_"$port" start
  echo "port = $port"
  let "port++"
done
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>第四步：重建集群自动分配master/slave</p>
<p>一主一从</p>
<pre class="line-numbers language-shell"><code class="language-shell">redis-cli  --cluster create 192.168.1.12:7001 192.168.1.12:7000 192.168.1.13:7001 192.168.1.13:7000 192.168.1.11:7001 192.168.1.11:7000 --cluster-replicas 1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><em>一主两从</em></p>
<pre class="line-numbers language-shell"><code class="language-shell">./redis-cli  --cluster  create 172.20.0.17:7001 172.20.0.18:7001 172.20.0.19:7001 172.20.0.17:7002 172.20.0.18:7002 172.20.0.19:7002 172.20.0.17:7003 172.20.0.18:7003 172.20.0.19:7003 --cluster-replicas 2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>获取usage信息</p>
<pre class="line-numbers language-shell"><code class="language-shell">redis-cli  --cluster help<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>Redis5.0</strong> 一下使用如下(需要搭建ruby环境，方法参考1.2.4 )</p>
<pre class="line-numbers language-shell"><code class="language-shell">redis-trib.rb create --replicas 1 192.168.31.187:7001 192.168.31.187:7002 192.168.31.19:7003 192.168.31.19:7004 192.168.31.227:7005 192.168.31.227:7006<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="4-cluster-的基本使用"><a href="#4-cluster-的基本使用" class="headerlink" title="(4) cluster 的基本使用"></a>(4) cluster 的基本使用</h4><pre class="line-numbers language-shell"><code class="language-shell">  create         host1:port1 ... hostN:portN
                 --cluster-replicas <arg>
  check          host:port
                 --cluster-search-multiple-owners
  info           host:port
  fix            host:port
                 --cluster-search-multiple-owners
  reshard        host:port
                 --cluster-from <arg>
                 --cluster-to <arg>
                 --cluster-slots <arg>
                 --cluster-yes
                 --cluster-timeout <arg>
                 --cluster-pipeline <arg>
                 --cluster-replace
  rebalance      host:port
                 --cluster-weight <node1=w1...nodeN=wN>
                 --cluster-use-empty-masters
                 --cluster-timeout <arg>
                 --cluster-simulate
                 --cluster-pipeline <arg>
                 --cluster-threshold <arg>
                 --cluster-replace
  add-node       new_host:new_port existing_host:existing_port
                 --cluster-slave
                 --cluster-master-id <arg>
  del-node       host:port node_id
  call           host:port command arg arg .. arg
  set-timeout    host:port milliseconds
  import         host:port
                 --cluster-from <arg>
                 --cluster-copy
                 --cluster-replace<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol>
<li><p>redis-cli -c启动，就会自动进行各种底层的重定向的操作 </p>
<pre class="line-numbers language-shell"><code class="language-shell">redis-cli -h 192.168.1.13 -p 7001 -c<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>查看集群信息</p>
<pre class="line-numbers language-shell"><code class="language-shell">redis-cli  -h 172.20.0.17 -p 7001 cluster nodes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>增加一个节点</p>
<pre class="line-numbers language-shell"><code class="language-shell">redis-cli --cluster add-node    new_host:new_port existing_host:existing_port

redis-cli --cluster add-node 192.168.1.9:7000 192.168.1.13:7000<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>检查节点状态</p>
<pre class="line-numbers language-shell"><code class="language-shell">redis-cli --cluster check 192.168.1.9:7000<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>分配slot</p>
<pre class="line-numbers language-shell"><code class="language-shell">redis-cli --cluster reshard 127.0.0.1:6379 --cluster-from 2846540d8284538096f111a8ce7cf01c50199237,e0a9c3e60eeb951a154d003b9b28bbdc0be67d5b,692dec0ccd6bdf68ef5d97f145ecfa6d6bca6132 --cluster-to 46f0b68b3f605b3369d3843a89a2b4a164ed21e8 --cluster-slots 1024<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li><p><strong>–cluster-from：表示slot目前所在的节点的node ID，多个ID用逗号分隔</strong></p>
</li>
<li><p><strong>–cluster-to：表示需要新分配节点的node ID（貌似每次只能分配一个）</strong></p>
</li>
<li><p><strong>–cluster-slots：分配的slot数量</strong></p>
</li>
</ul>
</li>
<li><p>添加slave节点</p>
<pre class="line-numbers language-shell"><code class="language-shell">redis-cli --cluster add-node 127.0.0.1:6386 127.0.0.1:6385 --cluster-slave --cluster-master-id 46f0b68b3f605b3369d3843a89a2b4a164ed21e8<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>收缩集群<br>下线节点127.0.0.1:6385（master）/127.0.0.1:6386（slave）</p>
<p>（1）首先删除master对应的slave</p>
<p>redis-cli –cluster del-node 127.0.0.1:6386 530cf27337c1141ed12268f55ba06c15ca8494fc</p>
<p>del-node后面跟着slave节点的 ip:port 和node ID</p>
<p>（2）清空master的slot</p>
<p>redis-cli –cluster reshard 127.0.0.1:6385 –cluster-from 46f0b68b3f605b3369d3843a89a2b4a164ed21e8 –cluster-to 2846540d8284538096f111a8ce7cf01c50199237 –cluster-slots 1024 –cluster-yes</p>
<p>reshard子命令前面已经介绍过了，这里需要注意的一点是，由于我们的集群一共有四个主节点，而每次reshard只能写一个目的节点，因此以上命令需要执行三次（–cluster-to对应不同的目的节点）。</p>
<p>–cluster-yes：不回显需要迁移的slot，直接迁移。</p>
<p>（3）下线（删除）节点</p>
<p>redis-cli –cluster del-node 127.0.0.1:6385 46f0b68b3f605b3369d3843a89a2b4a164ed21e8</p>
<h4 id="5-redis-实战记录"><a href="#5-redis-实战记录" class="headerlink" title="(5) redis 实战记录"></a>(5) redis 实战记录</h4></li>
<li><p>提供冗余的slave（有的master就有2个slave了或多个slave），防止两个节点master和slave相继宕机，提高系统安全性；</p>
</li>
<li><p>【重点】实践部署过程中要导入数据后模拟正式环境进行实战测试</p>
<ol>
<li><p>批量导入只有数据 <code>cat data.txt | redis-cli --pipe</code></p>
<pre class="line-numbers language-shell"><code class="language-shell">data.txt
SET Key0 Value0
SET Key1 Value1
SET Key2 Value2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
</li>
</ol>
<ol start="2">
<li><p>做各种压力测试，性能，redis-benchmark，并发，QPS，高可用的演练，每台机器最大能存储多少数据量，横向扩容支撑更多数据</p>
</li>
<li><p>基于测试环境还有测试数据，做各种演练，去摸索一些最适合自己的一些细节的东西</p>
</li>
</ol>
<h4 id="6-redis-常见问题及优化思路"><a href="#6-redis-常见问题及优化思路" class="headerlink" title="(6) redis 常见问题及优化思路"></a>(6) redis 常见问题及优化思路</h4><p>1、fork耗时导致高并发请求延时</p>
<blockquote>
<p>一般来单机AOF rewrite说，如果父进程内存有1个G的数据，那么fork可能会耗费在20ms左右，如果是10G~30G，那么就会耗费20 * 10，甚至20 * 30，也就是几百毫秒的时间</p>
</blockquote>
<p>info stats中的latest_fork_usec，可以看到最近一次form的时长</p>
<p>redis单机QPS一般在几万，fork可能一下子就会拖慢几万条操作的请求时长，从几毫秒变成1秒</p>
<p>问题：</p>
<p>​    redis单机QPS一般在几万，fork可能一下子就会拖慢几万条操作的请求时长，从几毫秒变成1秒</p>
<p>优化思路</p>
<p>fork耗时跟redis主进程的内存有关系，一般控制redis的内存在10GB以内，slave -&gt; master，全量复制</p>
<p>2、AOF的阻塞问题</p>
<p>问题</p>
<blockquote>
<p>redis将数据写入AOF缓冲区，单独开一个现场做fsync操作，每秒一次</p>
<p>但是redis主线程会检查两次fsync的时间，如果距离上次fsync时间超过了2秒，那么写请求就会阻塞</p>
<p>everysec，最多丢失2秒的数据</p>
<p>一旦fsync超过2秒的延时，整个redis就被拖慢</p>
</blockquote>
<p>优化思路</p>
<p>优化硬盘写入速度，建议采用SSD，不要用普通的机械硬盘，SSD，大幅度提升磁盘读写的速度</p>
<p>3、主从复制延迟问题</p>
<p>主从复制可能会超时严重，这个时候需要良好的监控和报警机制</p>
<p>在info replication中，可以看到master和slave复制的offset，做一个差值就可以看到对应的延迟量</p>
<p>如果延迟过多，那么就进行报警</p>
<h1 id="附录-一"><a href="#附录-一" class="headerlink" title="附录 一"></a>附录 一</h1><h2 id="工具下载"><a href="#工具下载" class="headerlink" title="工具下载"></a>工具下载</h2><ul>
<li><strong><a href="https://github.com/qishibo/AnotherRedisDesktopManager" target="_blank" rel="noopener"> AnotherRedisDesktopManager</a></strong> redis 可可视化工具</li>
</ul>
<ul>
<li><a href="https://redis.io/topics/benchmarks" target="_blank" rel="noopener">redis benchmarks 测试详情 </a></li>
<li><a href="http://doc.redisfans.com/topic/sentinel.html" target="_blank" rel="noopener">sentinel</a></li>
</ul>
<h1 id="附录-二"><a href="#附录-二" class="headerlink" title="附录 二"></a>附录 二</h1><h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><ul>
<li><p><a href="https://www.cnblogs.com/technologykai/p/8658689.html" target="_blank" rel="noopener">REDIS分布式锁—完美实现</a></p>
</li>
<li><p><a href="https://www.centos.bz/2018/05/设置redis最大占用内存/" target="_blank" rel="noopener">设置Redis最大占用内存</a></p>
</li>
<li><p><a href="https://my.oschina.net/dslcode/blog/1936656" target="_blank" rel="noopener">docker redis 集群（cluster）搭建</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/zhaocaim/p/10112989.html" target="_blank" rel="noopener">Redis集群Redis-cluster搭建及故障、性能测试</a></p>
</li>
</ul>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><h3 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h3><p>1、问题：WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</p>
<p>环境：redis 5.0.5 Centos 6.5</p>
<p>暂时解决 <code>echo 511 &gt; /proc/sys/net/core/somaxconn</code></p>
<p>固定配置成功</p>
<pre class="line-numbers language-shell"><code class="language-shell">vi /etc/sysctl.conf
#添加
net.core.somaxconn= 1024
sysctl -p<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>实践</tag>
        <tag>Java</tag>
        <tag>后台</tag>
      </tags>
  </entry>
  <entry>
    <title>AndroidStudio用Cmake方式编译NDK代码</title>
    <url>/2019/08/01/2018-8-1-cmake-note/</url>
    <content><![CDATA[<h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><p><strong>1.cmake是什么？</strong></p>
<p>CMake是一个跨平台的安装（<a href="http://baike.baidu.com/view/69568.htm" target="_blank" rel="noopener">编译</a>）工具，可以用简单的语句来描述所有平台的安装(编译过程)。他能够输出各种各样的makefile或者project文件，能测试<a href="http://baike.baidu.com/view/487018.htm" target="_blank" rel="noopener">编译器</a>所支持的C++特性,类似UNIX下的automake。</p>
<p>谷歌从AndroidStudio2.2以上就添加了Cmake方式来编译NDK代码，并从NDK例子看出，默认编译的方式就是cmake方式。</p>
<h3 id="创建Android-studio-ndk工程"><a href="#创建Android-studio-ndk工程" class="headerlink" title="创建Android studio ndk工程"></a>创建Android studio ndk工程</h3><h4 id="傻瓜式操作"><a href="#傻瓜式操作" class="headerlink" title="傻瓜式操作"></a>傻瓜式操作</h4><ol>
<li>新建一个工程点击如下：然后把C/Cpp代码复制到<code>src/main/cpp</code>下，配置 CMakeLists.txt<br><img src="http://ohlb58e07.bkt.clouddn.com/2018-08-04-AS-New-NDK-Project" alt=""></li>
</ol>
<h4 id="手动配置"><a href="#手动配置" class="headerlink" title="手动配置"></a>手动配置</h4><ol>
<li>在<code>src/main</code>下新建<code>jni</code>或者<code>cpp</code>目录，</li>
<li>新建CMakeLists.txt,推荐目录<code>/src/main/jni/CMakeLists.txt</code>, 如下为默认生成的格式：</li>
</ol>
<pre class="line-numbers language-shell"><code class="language-shell"># For more information about using CMake with Android Studio, read the
# documentation: https://d.android.com/studio/projects/add-native-code.html
# Sets the minimum version of CMake required to build the native library.
cmake_minimum_required(VERSION 3.4.1)

# Creates and names a library, sets it as either STATIC
# or SHARED, and provides the relative paths to its source code.
# You can define multiple libraries, and CMake builds them for you.
# Gradle automatically packages shared libraries with your APK.

add_library( # Sets the name of the library.
             native-lib

             # Sets the library as a shared library.
             SHARED

             # Provides a relative path to your source file(s).
             src/main/cpp/native-lib.cpp )

# Searches for a specified prebuilt library and stores the path as a
# variable. Because CMake includes system libraries in the search path by
# default, you only need to specify the name of the public NDK library
# you want to add. CMake verifies that the library exists before
# completing its build.
find_library( # Sets the name of the path variable.
              log-lib

              # Specifies the name of the NDK library that
              # you want CMake to locate.
              log )

# Specifies libraries CMake should link to your target library. You
# can link multiple libraries, such as libraries you define in this
# build script, prebuilt third-party libraries, or system libraries.

target_link_libraries( # Specifies the target library.
                       native-lib

                       # Links the target library to the log library
                       # included in the NDK.
                       ${log-lib} )<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ol start="3">
<li><p>并在build.gradle下关联CMakeLists.txt</p>
<pre><code>externalNativeBuild {
 cmake {
   //默认和build.gradle同一目录： path "CMakeLists.txt"
   path "/src/main/jni/CMakeLists.txt"
 }
}</code></pre></li>
<li><p>配置gradle脚本</p>
<pre class="line-numbers language-gradle"><code class="language-gradle">android {
compileSdkVersion 28
defaultConfig {
 ...
 externalNativeBuild {
   cmake {

      // Passes optional arguments to CMake.
       arguments "-DCMAKE_VERBOSE_MAKEFILE=TRUE"

       // Sets optional flags for the C compiler.
       cFlags "-D_EXAMPLE_C_FLAG1", "-D_EXAMPLE_C_FLAG2"

       // Sets a flag to enable format macro constants for the C++ compiler.
       // -frtti: Runtime Type Information Support
       // -fexceptions : Exception Support
       //-std=c++14 : C++ Library Support
       cppFlags "-D__STDC_FORMAT_MACROS"
     //更多 arguments https://developer.android.com/ndk/guides/cmake           
   }
 }
 ndk {
   //    'x86', 'x86_64', 'armeabi', 'armeabi-v7a',
   //指定生成的CPU架构 Specifies the ABI configurations of your native
   abiFilters 'armeabi-v7a' 
 }
}

externalNativeBuild {
 cmake {
   //默认和build.gradle同一目录： path "CMakeLists.txt"
   path "/src/main/jni/CMakeLists.txt"
 }
}
buildTypes {
...
}
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h3 id="配置-CMake-构建脚本"><a href="#配置-CMake-构建脚本" class="headerlink" title="配置 CMake 构建脚本"></a>配置 CMake 构建脚本</h3><p>如果您的原生源文件还没有 CMake 构建脚本，则您需要自行创建一个并包含适当的 CMake 命令。CMake 构建脚本是一个纯文本文件，您必须将其命名为 <code>CMakeLists.txt</code>。本部分介绍了您应包含到构建脚本中的一些基本命令，用于在创建原生库时指示 CMake 应使用哪些源文件。</p>
<p><strong>注</strong>：如果您的项目使用 ndk-build，则不需要创建 CMake 构建脚本。提供一个指向您的 <a href="https://developer.android.google.cn/ndk/guides/android_mk.html" target="_blank" rel="noopener"><code>Android.mk</code></a> 文件的路径，<a href="https://developer.android.google.cn/studio/projects/add-native-code.html#link-gradle" target="_blank" rel="noopener">将 Gradle 关联到您的原生库</a>。</p>
<p>要创建一个可以用作 CMake 构建脚本的纯文本文件，请按以下步骤操作：</p>
<ol>
<li><p>从 IDE 的左侧打开 <strong>Project</strong> 窗格并从下拉菜单中选择 <strong>Project</strong> 视图。</p>
</li>
<li><p>右键点击<strong>您的模块</strong>的根目录并选择 <strong>New &gt; File</strong>。</p>
<p><strong>注</strong>：您可以在所需的任意位置创建构建脚本。不过，在配置构建脚本时，原生源文件和库的路径将与构建脚本的位置相关。</p>
</li>
<li><p>输入“CMakeLists.txt”作为文件名并点击 <strong>OK</strong>。</p>
</li>
</ol>
<h4 id="add-library"><a href="#add-library" class="headerlink" title="add_library"></a>add_library</h4><p>现在，您可以添加 CMake 命令，对您的构建脚本进行配置。要指示 CMake 从原生源代码创建一个原生库，请将 <a href="https://cmake.org/cmake/help/latest/command/cmake_minimum_required.html" target="_blank" rel="noopener"><code>cmake_minimum_required()</code></a> 和 <a href="https://cmake.org/cmake/help/latest/command/add_library.html" target="_blank" rel="noopener"><code>add_library()</code></a> 命令添加到您的构建脚本中：</p>
<pre class="line-numbers language-shell"><code class="language-shell"># Sets the minimum version of CMake required to build your native library.
# This ensures that a certain set of CMake features is available to
# your build.

cmake_minimum_required(VERSION 3.4.1)

# Specifies a library name, specifies whether the library is STATIC or
# SHARED, and provides relative paths to the source code. You can
# define multiple libraries by adding multiple add.library() commands,
# and CMake builds them for you. When you build your app, Gradle
# automatically packages shared libraries with your APK.

add_library( # Specifies the name of the library.
             native-lib

             # Sets the library as a shared library.
             SHARED

             # Provides a relative path to your source file(s).
             src/main/cpp/native-lib.cpp )<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用 <code>add_library()</code> 向您的 CMake 构建脚本添加源文件或库时，Android Studio 还会在您同步项目后在 <strong>Project</strong> 视图下显示关联的标头文件。不过，为了确保 CMake 可以在编译时定位您的标头文件，您需要将 <a href="https://cmake.org/cmake/help/latest/command/include_directories.html" target="_blank" rel="noopener"><code>include_directories()</code></a> 命令添加到 CMake 构建脚本中并指定标头的路径：</p>
<pre><code>add_library(...)

\# Specifies a path to native header files.
include_directories(src/main/cpp/include/)</code></pre><p>CMake 使用以下规范来为库文件命名：</p>
<blockquote>
<p><code>lib库名称.so</code></p>
</blockquote>
<p>例如，如果您在构建脚本中指定“native-lib”作为共享库的名称，CMake 将创建一个名称为 <code>libnative-lib.so</code> 的文件。不过，在 Java 代码中加载此库时，请使用您在 CMake 构建脚本中指定的名称：</p>
<p>static { System.loadLibrary(“native-lib”); }</p>
<blockquote>
<p><strong>注</strong>：如果您在 CMake 构建脚本中<font color="#FF0000">重命名或移除某个库</font>，您需要先清理项目，Gradle 随后才会应用更改或者从 APK 中移除旧版本的库。要清理项目，请从菜单栏中选择 <strong>Build &gt; Clean Project</strong>。</p>
</blockquote>
<p>Android Studio 会自动将源文件和标头添加到 <strong>Project</strong> 窗格的 <strong>cpp</strong> 组中。使用多个 <code>add_library()</code> 命令，您可以为 CMake 定义要从其他源文件构建的更多库。</p>
<h4 id="添加-NDK-API"><a href="#添加-NDK-API" class="headerlink" title="添加 NDK API"></a>添加 NDK API</h4><p>Android NDK 提供了一套实用的原生 API 和库。通过将 <a href="https://developer.android.google.cn/ndk/guides/stable_apis.html" target="_blank" rel="noopener">NDK 库</a>包含到项目的 <code>CMakeLists.txt</code> 脚本文件中，您可以使用这些 API 中的任意一种。</p>
<p>预构建的 NDK 库已经存在于 Android 平台上，因此，您无需再构建或将其封装到 APK 中。由于 NDK 库已经是 CMake 搜索路径的一部分，您甚至不需要在您的本地 NDK 安装中指定库的位置 - 只需要向 CMake 提供您希望使用的库的名称，并将其关联到您自己的原生库。</p>
<p>将 <a href="https://cmake.org/cmake/help/latest/command/find_library.html" target="_blank" rel="noopener"><code>find_library()</code></a> 命令添加到您的 CMake 构建脚本中以定位 NDK 库，并将其路径存储为一个变量。您可以使用此变量在构建脚本的其他部分引用 NDK 库。以下示例可以定位 <a href="https://developer.android.google.cn/ndk/guides/stable_apis.html#a3" target="_blank" rel="noopener">Android 特定的日志支持库</a>并将其路径存储在 <code>log-lib</code> 中：</p>
<pre><code>
find_library( # Defines the name of the path variable that stores the
              # location of the NDK library.
              log-lib

              # Specifies the name of the NDK library that
              # CMake needs to locate.
              log )
</code></pre><p>为了确保您的原生库可以在 <code>log</code> 库中调用函数，您需要使用 CMake 构建脚本中的 <a href="https://cmake.org/cmake/help/latest/command/target_link_libraries.html" target="_blank" rel="noopener"><code>target_link_libraries()</code></a> 命令关联库：</p>
<pre><code>
find_library(...)

\# Links your native library against one or more other native libraries.
target_link_libraries( # Specifies the target library.
                       native-lib

                       # Links the log library to the target library.
                       ${log-lib} )
</code></pre><p>NDK 还以源代码的形式包含一些库，您在构建和关联到您的原生库时需要使用这些代码。您可以使用 CMake 构建脚本中的 <code>add_library()</code> 命令，将源代码编译到原生库中。要提供本地 NDK 库的路径，您可以使用 <code>ANDROID_NDK</code> 路径变量，Android Studio 会自动为您定义此变量。</p>
<p>以下命令可以指示 CMake 构建 <code>android_native_app_glue.c</code>，后者会将 <a href="https://developer.android.google.cn/reference/android/app/NativeActivity.html" target="_blank" rel="noopener"><code>NativeActivity</code></a> 生命周期事件和触摸输入置于静态库中并将静态库关联到 <code>native-lib</code>：</p>
<pre><code>
add_library( app-glue
             STATIC
             ${ANDROID\_NDK}/sources/android/native\_app\_glue/android\_native\_app\_glue.c )

\# You need to link static libraries against your shared native library.
target_link_libraries( native-lib app-glue ${log-lib} )
</code></pre><h4 id="添加其他预构建库"><a href="#添加其他预构建库" class="headerlink" title="添加其他预构建库"></a>添加其他预构建库</h4><h5 id="导入so库"><a href="#导入so库" class="headerlink" title="导入so库"></a>导入so库</h5><p>添加预构建库与为 CMake 指定要构建的另一个原生库类似。不过，由于库已经预先构建，您需要使用 <a href="https://cmake.org/cmake/help/latest/prop_tgt/IMPORTED.html#prop_tgt:IMPORTED" target="_blank" rel="noopener"><code>IMPORTED</code></a> 标志告知 CMake 您只希望将库导入到项目中：</p>
<pre><code>add_library( imported-lib
             SHARED
             IMPORTED )</code></pre><p>然后，您需要使用 <a href="https://cmake.org/cmake/help/latest/command/set_target_properties.html" target="_blank" rel="noopener">set_target_properties()</a> 命令指定库的路径，如下所示。</p>
<p>某些库为特定的 CPU 架构（或<a href="https://developer.android.google.cn/ndk/guides/abis.html" target="_blank" rel="noopener">应用二进制接口 (ABI)</a>）提供了单独的软件包，并将其组织到单独的目录中。此方法既有助于库充分利用特定的 CPU 架构，又能让您仅使用所需的库版本。要向 CMake 构建脚本中添加库的多个 ABI 版本，而不必为库的每个版本编写多个命令，您可以使用 <code>ANDROID_ABI</code> 路径变量。此变量使用 <a href="https://developer.android.google.cn/ndk/guides/abis.html#sa" target="_blank" rel="noopener">NDK 支持的一组默认 ABI</a>，或者<a href="https://developer.android.google.cn/studio/projects/add-native-code.html#specify-abi" target="_blank" rel="noopener">您手动配置 Gradle</a> 而让其使用的一组经过筛选的 ABI。例如：</p>
<pre><code>
add_library(...)
set_target_properties( # Specifies the target library.
                       imported-lib

                       # Specifies the parameter you want to define.
                       PROPERTIES IMPORTED_LOCATION

                       # Provides the path to the library you want to import.
                       imported-lib/src/${ANDROID_ABI}/libimported-lib.so )
</code></pre><p>为了确保 CMake 可以在编译时定位您的标头文件，您需要使用 <code>include_directories()</code> 命令，并包含标头文件的路径：</p>
<pre><code>include_directories( imported-lib/include/ )</code></pre><blockquote>
<p><strong>注</strong>：如果您希望封装一个并不是构建时依赖项的预构建库（例如在添加属于 <code>imported-lib</code> 依赖项的预构建库时），则不需要执行以下说明来关联库。</p>
</blockquote>
<p>要将预构建库关联到您自己的原生库，请将其添加到 CMake 构建脚本的 <code>target_link_libraries()</code> 命令中：</p>
<p><code>target_link_libraries( native-lib imported-lib app-glue ${log-lib} )</code></p>
<p>在您构建应用时，Gradle 会自动将导入的库封装到 APK 中。您可以使用 <a href="https://developer.android.google.cn/studio/build/apk-analyzer.html" target="_blank" rel="noopener">APK 分析器</a>验证 Gradle 将哪些库封装到您的 APK 中。如需了解有关 CMake 命令的详细信息，请参阅 <a href="https://cmake.org/cmake/help/latest/manual/cmake-commands.7.html" target="_blank" rel="noopener">CMake 文档</a>。</p>
<h5 id="导入-a静态库"><a href="#导入-a静态库" class="headerlink" title="导入.a静态库"></a><a href="https://blog.csdn.net/yoyo_newbie/article/details/74427938" target="_blank" rel="noopener"><strong>导入.a静态库</strong></a></h5><p>android studio cmake 配置.a连接库</p>
<h3 id="实战小案例"><a href="#实战小案例" class="headerlink" title="实战小案例"></a>实战小案例</h3><h4 id="指定-C-标准"><a href="#指定-C-标准" class="headerlink" title="指定 C++标准"></a>指定 C++标准</h4><pre><code>externalNativeBuild {
  cmake {
    cppFlags "-frtti -fexceptions -std=c++14"
    arguments '-DANDROID_STL=c++_shared'
  }
}</code></pre><h4 id="编译一个目录中所有源文件"><a href="#编译一个目录中所有源文件" class="headerlink" title="编译一个目录中所有源文件"></a>编译一个目录中所有源文件</h4><pre><code># aux_source_directory 方法将路径列表全部放到一个变量中
aux_source_directory(${CMAKE_HOME_DIRECTORY}/src/api SRC_LIST)
aux_source_directory(${CMAKE_HOME_DIRECTORY}/src/core CORE_SRC_LIST)
# 拼接到路径列表
list(APPEND SRC_LIST ${CORE_SRC_LIST})
add_library(native-lib SHARED ${SRC_LIST})</code></pre><h4 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h4><ul>
<li>message 方法打印<pre><code>cmake_minimum_required(VERSION 3.4.1)
message(STATUS "execute CMakeLists")
# 日志输出==&gt; .externalNativeBuild/cmake/debug/{abi}/cmake_build_output.txt</code></pre><h4 id="CMakeLists-txt-改动什么时候执行"><a href="#CMakeLists-txt-改动什么时候执行" class="headerlink" title="CMakeLists.txt 改动什么时候执行"></a>CMakeLists.txt 改动什么时候执行</h4><code>sync</code> 其他的时候只是出来缓存<blockquote>
<p>测试了下，好像在 sync 的时候会执行。执行一次后会生成 makefile 的文件缓存之类的东西放在 externalNativeBuild 中。所以如果 CMakeLists.txt 中没有修改的话再次同步好像是不会重新执行的。（或者删除 .externalNativeBuild 目录）<br>真正编译的时候好像只是读取.externalNativeBuild 目录中已经解析好的 makefile 去编译。不会再去执行 CMakeLists.txt</p>
</blockquote>
</li>
</ul>
<h3 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h3><ul>
<li>官方7step入门教程： <a href="https://cmake.org/cmake-tutorial/" target="_blank" rel="noopener">cmake-tutorial</a> 【英文】<br> 翻译： <a href="https://www.zybuluo.com/khan-lau/note/254724" target="_blank" rel="noopener">CMAKE官网教程</a> 并有相关方法的详解</li>
</ul>
<p><strong>进阶</strong><br>Book: Mastering CMake </p>
<h3 id="资料文献"><a href="#资料文献" class="headerlink" title="资料文献"></a>资料文献</h3><ul>
<li><p><a href="https://www.cnblogs.com/coderfenghc/archive/2012/06/16/CMake_ch_01.html" target="_blank" rel="noopener">CMake 手册详解（一）</a></p>
</li>
<li><p><a href="https://developer.android.com/ndk/guidesLibraries/" target="_blank" rel="noopener">android ndk guides</a></p>
<ul>
<li>Introduction</li>
<li>Building </li>
<li>Architectures and CPUs</li>
<li>Debugging and Profiling</li>
<li>Libraries 安卓各版本提供可调用ndk库</li>
<li>High-Performance Audio</li>
<li>一些流行的底层的第三方库Simpleperf/ OpenSL ES/Vulkan/Machine Learning</li>
</ul>
</li>
<li><p><a href="https://github.com/googlesamples/android-ndk" target="_blank" rel="noopener">googlesamples/android-ndk</a></p>
</li>
<li><p><a href="https://cmake.org/documentation/" target="_blank" rel="noopener"> CMake 官方文档 </a></p>
</li>
<li><p><a href="http://docs.oracle.com/javase/7/docs/technotes/guides/jni/spec/jniTOC.html" target="_blank" rel="noopener">JNI 框架官方文档</a></p>
</li>
</ul>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="https://blog.csdn.net/czg13548930186/article/details/78331692" target="_blank" rel="noopener">gcc程序的编译过程和链接原理</a></li>
<li><a href="https://www.cnblogs.com/fnlingnzb-learner/p/7593488.html" target="_blank" rel="noopener">AndroidStudio用Cmake方式编译NDK代码</a></li>
<li><a href="https://blog.csdn.net/myatlantis/article/details/52874227" target="_blank" rel="noopener">Android增量更新与CMake构建工具</a></li>
<li><a href="https://blog.csdn.net/haoel/article/details/2886" target="_blank" rel="noopener">跟我一起写 Makefile</a> </li>
<li><a href="https://www.jianshu.com/p/6332418b12b1" target="_blank" rel="noopener">Android NDK开发扫盲及最新CMake的编译使用</a></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>SVG笔记</title>
    <url>/2019/07/29/2019-7-29-SVG-note/</url>
    <content><![CDATA[<h1 id="SVG-基础知识"><a href="#SVG-基础知识" class="headerlink" title="SVG 基础知识"></a>SVG 基础知识</h1><h2 id="SVG基本图形和属性"><a href="#SVG基本图形和属性" class="headerlink" title="SVG基本图形和属性"></a>SVG基本图形和属性</h2><h3 id="图形"><a href="#图形" class="headerlink" title="图形"></a>图形</h3><ul>
<li>矩形 <rect></rect></li>
<li>圆形 <circle></circle></li>
<li>椭圆 <ellipse></ellipse></li>
<li>线 <line></line></li>
<li>折线 <polyline></polyline></li>
<li>多边形 <polygon></polygon></li>
</ul>
<p>rect.svg</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" standalone="no"?></span>
<span class="token doctype">&lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span>
<span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">rx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">ry</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>250<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>250<span class="token punctuation">"</span></span> 
<span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill:blue;stroke:pink;stroke-width:5;
fill-opacity:0.1;stroke-opacity:0.9<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>polyline.svg</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" standalone="no"?></span>
<span class="token doctype">&lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span>
<span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>polyline</span> <span class="token attr-name">points</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0,0 0,20 20,20 20,40 40,40 40,60<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">
<span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">fill</span><span class="token punctuation">:</span>white<span class="token punctuation">;</span><span class="token property">stroke</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token property">stroke-width</span><span class="token punctuation">:</span><span class="token number">2</span></span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>polygon.svg</p>
<p>&lt;11770820@qq.com</p>
<p> &lt;<a href="mailto:tech_support@chinapay.com" target="_blank" rel="noopener">tech_support@chinapay.com</a>&gt;, “<a href="mailto:huang.haisong@chinapay.com" target="_blank" rel="noopener">huang.haisong@chinapay.com</a>“ &lt;<a href="mailto:huang.haisong@chinapay.com" target="_blank" rel="noopener">huang.haisong@chinapay.com</a>&gt;</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" standalone="no"?></span>
<span class="token doctype">&lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span>
<span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>polygon</span> <span class="token attr-name">points</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>220,100 300,210 170,250<span class="token punctuation">"</span></span>
<span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill:#cccccc;
stroke:#000000;stroke-width:1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="基本属性"><a href="#基本属性" class="headerlink" title="基本属性"></a>基本属性</h3><ul>
<li>fill</li>
<li>stroke</li>
<li>stroke-width</li>
<li>transform</li>
</ul>
<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><ul>
<li>创建图形 <code>createElementNs(ns,tagName)</code></li>
</ul>
<pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> text <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> NS <span class="token operator">=</span> <span class="token string">'http://www.w3.org/2000/svg'</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> tspan <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElementNS</span><span class="token punctuation">(</span>NS<span class="token punctuation">,</span><span class="token string">'tspan'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<ul>
<li>添加图形 <code>element.appendChild(childElement) </code></li>
<li>设置/获取属性  <code>element.setAttribute(name, value ) / elememt.getAttribute(name)</code></li>
<li>设置  xlink:href  属性  textPath.setAttributeNS(“<a href="http://www.w3.org/1999/xlink&quot;,'xlink:href',path" target="_blank" rel="noopener">http://www.w3.org/1999/xlink",'xlink:href',path</a>)</li>
</ul>
<h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sample.svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                 >
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>embed</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sample.svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>embed</span><span class="token punctuation">></span></span>       > 外部引用式
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sample.svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>     >
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>object</span> <span class="token attr-name">data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sample.svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>object</span><span class="token punctuation">></span></span>    >
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">data-src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/buble.svg<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>

<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><p><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/a" target="_blank" rel="noopener">https://developer.mozilla.org/en-US/docs/Web/SVG/Element/a</a></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defs</span><span class="token punctuation">></span></span>, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span><span class="token punctuation">></span></span>, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>marker</span><span class="token punctuation">></span></span>, 

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mask</span><span class="token punctuation">></span></span>, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>missing-glyph</span><span class="token punctuation">></span></span>, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">></span></span>, 

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>switch</span><span class="token punctuation">></span></span>, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>symbol</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Descriptive-elements"><a href="#Descriptive-elements" class="headerlink" title="Descriptive elements"></a><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element#Descriptive_elements" target="_blank" rel="noopener">Descriptive elements</a></h2><p><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/desc" target="_blank" rel="noopener"><code>&lt;desc&gt;</code></a>, <a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/metadata" target="_blank" rel="noopener"><code>medadata</code></a>, <a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title" target="_blank" rel="noopener"><code>title</code></a></p>
<p>看medata案例就可以， </p>
<h2 id="SVG-滤镜"><a href="#SVG-滤镜" class="headerlink" title="SVG 滤镜"></a>SVG 滤镜</h2><p>Gaussian_blur.svg</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" standalone="no"?></span>
<span class="token doctype">&lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span>
<span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defs</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Gaussian_Blur<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>feGaussianBlur</span> <span class="token attr-name">in</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SourceGraphic<span class="token punctuation">"</span></span> <span class="token attr-name">stdDeviation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defs</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ellipse</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>150<span class="token punctuation">"</span></span> <span class="token attr-name">rx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70<span class="token punctuation">"</span></span> <span class="token attr-name">ry</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40<span class="token punctuation">"</span></span>
<span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill:#ff0000;stroke:#000000;
stroke-width:2;filter:url(#Gaussian_Blur)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注解：</p>
<ul>
<li>filter 定义滤镜</li>
<li><code>filter:url</code>引用滤镜</li>
<li>stdDeviation 模糊程度</li>
<li>in=”SourceGraphic” 定义整个创建效果</li>
</ul>
<h3 id="滤镜效果有"><a href="#滤镜效果有" class="headerlink" title="滤镜效果有"></a>滤镜效果有</h3><ul>
<li>feBlend</li>
<li>feColorMatrix</li>
<li>feComponentTransfer</li>
<li>feComposite</li>
<li>feConvolveMatrix</li>
<li>feDiffuseLighting</li>
<li>feDisplacementMap</li>
<li>feFlood</li>
<li>feGaussianBlur</li>
<li>feImage</li>
<li>feMerge</li>
<li>feMorphology</li>
<li>feOffset</li>
<li>feSpecularLighting</li>
<li>feTile</li>
<li>feTurbulence</li>
<li>feDistantLight</li>
<li>fePointLight</li>
<li>feSpotLight</li>
</ul>
<blockquote>
<p>SVG 滤镜效果可以叠加使用</p>
</blockquote>
<p>multi-filter.svg</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- Learn about this code on MDN: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feGaussianBlur --></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span>
 <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span>
 <span class="token attr-name"><span class="token namespace">xmlns:</span>xlink</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xlink<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dropShadow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>feGaussianBlur</span> <span class="token attr-name">in</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SourceAlpha<span class="token punctuation">"</span></span> <span class="token attr-name">stdDeviation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>feOffset</span> <span class="token attr-name">dx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">dy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>feMerge</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>feMergeNode</span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>feMergeNode</span> <span class="token attr-name">in</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SourceGraphic<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>feMerge</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span>  <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>green<span class="token punctuation">"</span></span>
          <span class="token attr-name">filter</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url(#dropShadow)<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="SVG中的坐标系统"><a href="#SVG中的坐标系统" class="headerlink" title="SVG中的坐标系统"></a>SVG中的坐标系统</h1><h2 id="2-1-世界，视野和视窗的概念"><a href="#2-1-世界，视野和视窗的概念" class="headerlink" title="2.1 世界，视野和视窗的概念"></a>2.1 世界，视野和视窗的概念</h2><ul>
<li>世界是⽆无穷⼤大的，SVG画布可以是无穷大的</li>
<li>视野是观察世界的⼀一个矩形区域，可以有viewbox定义视野区域</li>
<li>视窗是浏览器开辟的一个区域，  width, height - 控制视窗</li>
<li>preserveAspectRatio 控制视野和视窗之间关系</li>
</ul>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span>  <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
     <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 400 300<span class="token punctuation">"</span></span> <span class="token attr-name">preserveAspectRatio</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xMidYMid meet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>动态效果请参照：<code>viewbox.html</code></p>
<h2 id="2-2-图形分组"><a href="#2-2-图形分组" class="headerlink" title="2.2 图形分组"></a>2.2 图形分组</h2><ol>
<li><g>标签来创建分组</g></li>
<li>子元素可以继承组属性</li>
<li>transform  属性定义坐标变换</li>
<li>可以嵌套使用</li>
</ol>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>green<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">transform(0,50)</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>140<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注解：</p>
<ol>
<li>g设置的stroke，fill属性， 两个rect都能继承</li>
<li>transform能整体改变<g> 内坐标</g></li>
</ol>
<h2 id="2-3-坐标系统概述"><a href="#2-3-坐标系统概述" class="headerlink" title="2.3 坐标系统概述"></a>2.3 坐标系统概述</h2><p><img src="http://cdn.linz.tech/svg-location.png" alt=""></p>
<blockquote>
<p> 如上图：svg使用的是笛卡尔坐标系统</p>
</blockquote>
<h2 id="2-4-四个坐标系"><a href="#2-4-四个坐标系" class="headerlink" title="2.4 四个坐标系"></a>2.4 四个坐标系</h2><ol>
<li>用户坐标系（User  Coordinate）: -&gt; 世界的坐标系</li>
<li>自身坐标系（Current  Coordinate） -&gt; 每个图形元素或分组独立与生俱来 </li>
<li>前驱坐标系（Previous  Coordinate） -&gt; 父容器的坐标系  </li>
<li>参考坐标系（Reference  Coordinate） -&gt; 使用其它坐标系来考究自身的情况时使用</li>
</ol>
<h2 id="2-5-坐标变换"><a href="#2-5-坐标变换" class="headerlink" title="2.5 坐标变换"></a>2.5 坐标变换</h2><p>查看<code>ransform.html</code></p>
<ul>
<li>嵌套<g> , 子<g>会继承父g坐标属性</g></g></li>
</ul>
<h1 id="颜色渐变和笔刷"><a href="#颜色渐变和笔刷" class="headerlink" title="颜色渐变和笔刷"></a>颜色渐变和笔刷</h1><h2 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h2><h3 id="HSL"><a href="#HSL" class="headerlink" title="HSL"></a>HSL</h3><p><img src="http://cdn.linz.tech/blog-svg-hsl.png" alt=""></p>
<h2 id="渐变"><a href="#渐变" class="headerlink" title="渐变"></a>渐变</h2><h3 id="线性渐变"><a href="#线性渐变" class="headerlink" title="线性渐变"></a>线性渐变</h3><p>linearGradient.svg</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" standalone="no"?></span>
<span class="token doctype">&lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span>
<span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defs</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>linearGradient</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>orange_red<span class="token punctuation">"</span></span> <span class="token attr-name">x1</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0%<span class="token punctuation">"</span></span> <span class="token attr-name">y1</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0%<span class="token punctuation">"</span></span> <span class="token attr-name">x2</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">y2</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stop</span> <span class="token attr-name">offset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0%<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stop-color:rgb(255,255,0);
stop-opacity:1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stop</span> <span class="token attr-name">offset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stop-color:rgb(255,0,0);
stop-opacity:1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>linearGradient</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defs</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ellipse</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>190<span class="token punctuation">"</span></span> <span class="token attr-name">rx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>85<span class="token punctuation">"</span></span> <span class="token attr-name">ry</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">
<span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">fill</span><span class="token punctuation">:</span><span class="token url">url(#orange_red)</span></span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>gradientUnits=”userSpaceOnUse（用的是世界坐标系不是图形当前的坐标系）/objectBoundingBox(默认值)”</li>
<li><code>x1="0%" y1="0%</code>图形最上段， <code>x2="100%" y2="0%</code>图形最下段</li>
</ul>
<h3 id="放射性渐变"><a href="#放射性渐变" class="headerlink" title="放射性渐变"></a>放射性渐变</h3><p>radialGradient.svg</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" standalone="no"?></span>
<span class="token doctype">&lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span>
<span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defs</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>radialGradient</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>grey_blue<span class="token punctuation">"</span></span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span>
<span class="token attr-name">fx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span> <span class="token attr-name">fy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stop</span> <span class="token attr-name">offset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0%<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stop-color:rgb(200,200,200);
stop-opacity:0<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stop</span> <span class="token attr-name">offset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stop-color:rgb(0,0,255);
stop-opacity:1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>radialGradient</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defs</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ellipse</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>230<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">rx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>110<span class="token punctuation">"</span></span> <span class="token attr-name">ry</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">
<span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">fill</span><span class="token punctuation">:</span><span class="token url">url(#grey_blue)</span></span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注解：</p>
<ul>
<li>cx、cy 和 r 属性定义外圈</li>
<li>fx 和 fy 定义内圈，颜色渐变中心点，能产生聚光灯的效果</li>
</ul>
<h2 id="笔刷-pattern"><a href="#笔刷-pattern" class="headerlink" title="笔刷 pattern"></a>笔刷 pattern</h2><p>pattern.svg</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defs</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p1<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">patternUnits</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userSpaceOnUse<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>circle</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>polygon</span> <span class="token attr-name">points</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30 10 60 50 0 50<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>polygon</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">></span></span>
           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>p2<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>circle</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>polygon</span> <span class="token attr-name">points</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>30 10 60 50 0 50<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>green<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>polygon</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defs</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>800<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>600<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url(#p1)<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>800<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>600<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url(#p2)<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>objectBoundingBox : (默认)为容器百分比   </li>
<li>userSpaceOnUse : width 和 height 以世界坐标系为准，为宽度、高度</li>
<li>patternUnits/patternUnitsContent</li>
</ul>
<h1 id="Path-高级"><a href="#Path-高级" class="headerlink" title="Path 高级"></a>Path 高级</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul>
<li><p>规范：<a href="http://www.w3.org/TR/SVG11/paths.html" target="_blank" rel="noopener">http://www.w3.org/TR/SVG11/paths.html</a>  </p>
</li>
<li><p>path.svg 黑色山角型</p>
<pre class="line-numbers language-xml"><code class="language-xml">  <span class="token prolog">&lt;?xml version="1.0" standalone="no"?></span>
  <span class="token doctype">&lt;!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" 
  "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span>
  <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M250 150 L150 350 L350 350 Z<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="Path-命令汇总"><a href="#Path-命令汇总" class="headerlink" title="Path-命令汇总"></a>Path-命令汇总</h3><ul>
<li>M = moveto</li>
<li>L = lineto</li>
<li>H = horizontal lineto</li>
<li>V = vertical lineto</li>
<li>C (x1,y1,x2,y2,x,y)+ = curveto 从当前位置绘制三次⻉贝塞尔曲线到指定位置</li>
<li>S = smooth curveto 从当前位置光滑绘制三次⻉贝塞尔曲线到指定位置</li>
<li>Q = quadratic Belzier curve 绘制⼆二次⻉贝塞尔曲线</li>
<li>T = smooth quadratic Belzier curveto 光滑绘制⼆二次⻉贝塞尔曲线</li>
<li>A (rx,ry,xr,laf,sf,x,y)  = elliptical Arc </li>
<li>Z = closepath</li>
</ul>
<p>A (rx,ry,xr,laf,sf,x,y)  -  绘制弧线  </p>
<ul>
<li>xr  -  （xAxis-rotation） 弧线所在椭圆的长轴角度 </li>
<li>laf  -  （large-arc-flag） 是否选择大弧长</li>
<li>sf  -  （sweep-flag） 是否选择逆的那一段<code>时针方向</code>弧</li>
</ul>
<p><img src="http://cdn.linz.tech/blog-svg-arc2019-08-01_10-22-36.png" alt=""></p>
<h3 id="基本规律"><a href="#基本规律" class="headerlink" title="基本规律"></a>基本规律</h3><ul>
<li>大写为绝对位置命令，小写为相对位置命令</li>
</ul>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://www.w3.org/TR/SVG11/paths.html#PathData" target="_blank" rel="noopener">SVG 1.1 Paths 详情 </a></li>
</ul>
<h1 id="SVG-文本"><a href="#SVG-文本" class="headerlink" title="SVG 文本"></a>SVG 文本</h1><h2 id="svg"><a href="#svg" class="headerlink" title=".svg"></a><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/text" target="_blank" rel="noopener"><text>.svg</text></a></h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 240 80<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">
    <span class="token selector"><span class="token class">.small</span> </span><span class="token punctuation">{</span> <span class="token property">font</span><span class="token punctuation">:</span> italic <span class="token number">13</span>px sans-serif<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token selector"><span class="token class">.heavy</span> </span><span class="token punctuation">{</span> <span class="token property">font</span><span class="token punctuation">:</span> bold <span class="token number">30</span>px sans-serif<span class="token punctuation">;</span> <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/* Note that the color of the text is set with the    *
     * fill property, the color property is for HTML only */</span>
    <span class="token selector"><span class="token class">.Rrrrr</span> </span><span class="token punctuation">{</span> <span class="token property">font</span><span class="token punctuation">:</span> italic <span class="token number">40</span>px serif<span class="token punctuation">;</span> <span class="token property">fill</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token punctuation">}</span>
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>35<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>My<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>35<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>heavy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>cat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>is<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>65<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>55<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Rrrrr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Grumpy!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="textPath-svg"><a href="#textPath-svg" class="headerlink" title="textPath.svg"></a><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/textPath" target="_blank" rel="noopener">textPath.svg</a></h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 100 100<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

  <span class="token comment" spellcheck="true">&lt;!-- to hide the path, it is usually wrapped in a &lt;defs> element --></span>
  <span class="token comment" spellcheck="true">&lt;!-- &lt;defs> --></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MyPath<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span>
        <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M10,90 Q90,90 90,45 Q90,10 50,10 Q10,10 10,40 Q10,70 45,70 Q70,70 75,50<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
  <span class="token comment" spellcheck="true">&lt;!-- &lt;/defs> --></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textPath</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#MyPath<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      Quick brown fox jumps over the lazy dog.
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textPath</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>x/dx/startOffset 都能使文字在path描绘的路径向前移动</li>
<li>text-anchor=”middle”,  一段文字初始化锚点在一段文字中间</li>
</ul>
<p><a href="https://jsbin.com/socuqun/edit?html,console,output" target="_blank" rel="noopener">dy dx 应用案例</a></p>
<p>JS脚本控制</p>
<ul>
<li>setAttributeNS()设置xlink:href 属性<br><code>textPath.setAttributeNS("http://www.w3.org/1999/xlink",'xlink:href',path)</code></li>
</ul>
<p>实战案例查看 path.html 或者是  附录-经典案例-正玄字体</p>
<h2 id="tspan-svg"><a href="#tspan-svg" class="headerlink" title=" tspan.svg"></a><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tspan" target="_blank" rel="noopener"> tspan.svg</a></h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defs</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>grid<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">patternUnits</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userSpaceOnUse<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#f0f0f0<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M0,0H20V20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defs</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1200<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1000<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url(#grid)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sintext<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span> <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'Arial'</span><span class="token punctuation">;</span> </span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tspan</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name">dy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-20 20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>AB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tspan</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tspan</span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>green<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">dy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-40 40<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>CDE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tspan</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!--简单叠加的效果--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tspan</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span> <span class="token attr-name">dy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20 20 20 20 20 20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>FGHIJKLM<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tspan</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M100,0V200M0,100H200<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="垂直居中问题"><a href="#垂直居中问题" class="headerlink" title="垂直居中问题"></a>垂直居中问题</h3><p><img src="http://cdn.linz.tech/blog-svg-text_20190801120224.png" alt=""></p>
<p><a href="http://jsbin.com/lekob/5/edit" target="_blank" rel="noopener">字体位置各种案例展示</a></p>
<p>代码如下</p>
<p>Example.html</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>JS Bin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ta<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>start<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>start<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>end<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>end<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>center<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>select<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>green<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M 0 100.5 500 100.5 M 140 0 v 200<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>140<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name">font-size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>慕课网<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rect<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Example.js</p>
<pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> values <span class="token operator">=</span> <span class="token string">"auto | use-script | no-change | reset-size | ideographic | alphabetic | hanging | mathematical | central | middle | text-after-edge | text-before-edge | text-top | text-bottom"</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' | '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

values<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> opt <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'option'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  opt<span class="token punctuation">.</span>value <span class="token operator">=</span> opt<span class="token punctuation">.</span>textContent <span class="token operator">=</span> value<span class="token punctuation">;</span>
  select<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>opt<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

select<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  text<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'dominant-baseline'</span><span class="token punctuation">,</span> select<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> box <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">getBBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  rect<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'x'</span><span class="token punctuation">,</span> box<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  rect<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> box<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
  rect<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'width'</span><span class="token punctuation">,</span> box<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>
  rect<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'height'</span><span class="token punctuation">,</span> box<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ta<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  text<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'text-anchor'</span><span class="token punctuation">,</span> ta<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>案例2：自定义top，center，bottom对齐方式</p>
<p><a href="https://jsbin.com/vezegib/edit?html,js,console" target="_blank" rel="noopener">https://jsbin.com/vezegib/edit?html,js,console</a></p>
<h1 id="图形引用、裁切和蒙版"><a href="#图形引用、裁切和蒙版" class="headerlink" title="图形引用、裁切和蒙版"></a>图形引用、裁切和蒙版</h1><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span><span class="token punctuation">></span></span> 
   xlink:href = "#id" 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>clipPath</span><span class="token punctuation">></span></span> 
  clip-path = "url(#clip-id)" 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mask</span><span class="token punctuation">></span></span>
  mask="url(#mask-id)"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="starsky"><a href="#starsky" class="headerlink" title="starsky"></a>starsky</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>星空<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">
  <span class="token selector">html, body </span><span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#001122</span><span class="token punctuation">;</span>
    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span>
     <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-400 -300 800 600<span class="token punctuation">"</span></span>
     <span class="token attr-name">preserveAspectRatio</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xMidYMid slice<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defs</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>polygon</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>star<span class="token punctuation">"</span></span> <span class="token attr-name">points</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 -10 2 -2 10 0 2 2 0 10 -2 2 -10 0 -2 -2<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>polygon</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defs</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>real<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>start-group<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>moon-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mask</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>moon-mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70<span class="token punctuation">"</span></span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-250<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-120<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>circle</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70<span class="token punctuation">"</span></span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-220<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-200<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>circle</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mask</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>70<span class="token punctuation">"</span></span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-250<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-120<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span> <span class="token attr-name">mask</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url(#moon-mask)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>circle</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>light-tower <span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(250,0)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defs</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>linearGradient</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tower<span class="token punctuation">"</span></span> <span class="token attr-name">x1</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">y1</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">x2</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">y2</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stop</span> <span class="token attr-name">offset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">stop-color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#999<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>stop</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stop</span> <span class="token attr-name">offset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">stop-color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#333<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>stop</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>linearGradient</span><span class="token punctuation">></span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>radialGradient</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>light<span class="token punctuation">"</span></span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stop</span> <span class="token attr-name">offset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">stop-color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rgba(255,255,255,.8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>stop</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stop</span> <span class="token attr-name">offset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">stop-color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rgba(255,255,255,0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>stop</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>radialGradient</span><span class="token punctuation">></span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>clipPath</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>light-clip<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>polygon</span> <span class="token attr-name">points</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 -400 -15 -400 15<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>animateTransform</span>
              <span class="token attr-name">attributeName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>transform<span class="token punctuation">"</span></span>
              <span class="token attr-name">attributeType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>XML<span class="token punctuation">"</span></span>
              <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rotate<span class="token punctuation">"</span></span>
              <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>
              <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>360<span class="token punctuation">"</span></span>
              <span class="token attr-name">dur</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10s<span class="token punctuation">"</span></span>
              <span class="token attr-name">repeatCount</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>indefinite<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>polygon</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>clipPath</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defs</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>polygon</span> <span class="token attr-name">points</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 5 50 -5 50<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url(#tower)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>polygon</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ellipse</span> <span class="token attr-name">rx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">ry</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url(#light)<span class="token punctuation">"</span></span> <span class="token attr-name">clip-path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url(#light-clip)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ellipse</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>reflect<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(0,50)<span class="token punctuation">"</span></span> <span class="token attr-name">mask</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url(#fading)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defs</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>linearGradient</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fade<span class="token punctuation">"</span></span> <span class="token attr-name">x1</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">y1</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">x2</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">y2</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stop</span> <span class="token attr-name">offset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">stop-color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rgba(255,255,255,.3)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stop</span> <span class="token attr-name">offset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token attr-name">stop-color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rgba(255,255,255,0)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>linearGradient</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mask</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-400<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>800<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url(#fade)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mask</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defs</span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!--use 是不能使用mask的--></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#real<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scale(1,-1) translate(0,-50)<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>line</span> <span class="token attr-name">x1</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-400<span class="token punctuation">"</span></span> <span class="token attr-name">y1</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">x2</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span> <span class="token attr-name">y2</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>white<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">
  <span class="token keyword">var</span> NS <span class="token operator">=</span> <span class="token string">'http://www.w3.org/2000/svg'</span>
  <span class="token keyword">var</span> XLINK_NS <span class="token operator">=</span> <span class="token string">'http://www.w3.org/1999/xlink'</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> page <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'svg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">use</span><span class="token punctuation">(</span>origin<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> _use <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElementNS</span><span class="token punctuation">(</span>NS<span class="token punctuation">,</span> <span class="token string">'use'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _use<span class="token punctuation">.</span><span class="token function">setAttributeNS</span><span class="token punctuation">(</span>XLINK_NS<span class="token punctuation">,</span> <span class="token string">'xlink:href'</span><span class="token punctuation">,</span> <span class="token string">'#'</span> <span class="token operator">+</span> origin<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> _use<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">random</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> min <span class="token operator">+</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min<span class="token punctuation">)</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">renderStar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">renderStar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> starRef <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'star'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> starGroup <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'start-group'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> starCount <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> star<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>starCount<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      star <span class="token operator">=</span> <span class="token function">use</span><span class="token punctuation">(</span>starRef<span class="token punctuation">)</span><span class="token punctuation">;</span>
      star<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'opacity'</span><span class="token punctuation">,</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      star<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'transform'</span><span class="token punctuation">,</span> <span class="token string">'translate('</span> <span class="token operator">+</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">400</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">','</span> <span class="token operator">+</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">')'</span> <span class="token operator">+</span>
        <span class="token string">'scale('</span> <span class="token operator">+</span> <span class="token function">random</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">')'</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      starGroup<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>star<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="SVG动画"><a href="#SVG动画" class="headerlink" title="SVG动画"></a>SVG动画</h1><h2 id="参考资料-1"><a href="#参考资料-1" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><p><a href="https://www.w3.org/TR/SVG/animate.html" target="_blank" rel="noopener">Animating SVG Documents</a></p>
</li>
<li><p><a href="https://www.zhangxinxu.com/wordpress/2014/08/so-powerful-svg-smil-animation/" target="_blank" rel="noopener">超级强大的SVG SMIL animation动画详解</a></p>
</li>
</ul>
<h2 id="动画标签概述"><a href="#动画标签概述" class="headerlink" title="动画标签概述"></a>动画标签概述</h2><p>animate.svg</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 120 120<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span>
     <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>animate</span> <span class="token attr-name">attributeType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>XML<span class="token punctuation">"</span></span> <span class="token attr-name">attributeName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>x<span class="token punctuation">"</span></span> <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-100<span class="token punctuation">"</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span>
        <span class="token attr-name">dur</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10s<span class="token punctuation">"</span></span> <span class="token attr-name">repeatCount</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>indefinite<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateMotion" target="_blank" rel="noopener"><strong><animatemotion></animatemotion></strong></a></p>
<p>motion.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 120 120<span class="token punctuation">"</span></span>
    <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xlink</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xlink<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

  <span class="token comment" spellcheck="true">&lt;!-- Draw the outline of the motion path in grey, along
       with 2 small circles at key points --></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M10,110 A120,120 -45 0,1 110 10 A120,120 -45 0,1 10,110<span class="token punctuation">"</span></span>
      <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lightgrey<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> 
      <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>theMotionPath<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>110<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lightgrey<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>110<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lightgrey<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span>

  <span class="token comment" spellcheck="true">&lt;!-- Red circle which will be moved along the motion path. --></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token comment" spellcheck="true">&lt;!-- Define the motion path animation --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>animateMotion</span> <span class="token attr-name">dur</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>6s<span class="token punctuation">"</span></span> <span class="token attr-name">repeatCount</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>indefinite<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mpath</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#theMotionPath<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>animateMotion</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>circle</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><code>&lt;mpath xlink:href="#theMotionPath"/&gt;</code> 引用上面的路径定义</li>
</ul>
<p>path 可以在animation内部</p>
<p>sample2.html</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">
  <span class="token selector">html,body, svg</span><span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>SVG 动画<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-400 -400 800 800<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>xlink</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xlink<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-25<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-25<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rgba(0,255,255,0.6)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>animateMotion</span>
        <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M 0 0L 100 100A 200 200 0 1 0 0 -100<span class="token punctuation">"</span></span>
        <span class="token attr-name">dur</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3s<span class="token punctuation">"</span></span>
        <span class="token attr-name">repeatCount</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>indefinite<span class="token punctuation">"</span></span>
        <span class="token attr-name">rotate</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>auto<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token comment" spellcheck="true">&lt;!--&lt;mpath xlink:href="#motion-path"/>--></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>animateMotion</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>motion-path<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M 0 0L 100 100A 200 200 0 1 0 0 -100<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gray<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateTransform" target="_blank" rel="noopener">animateTransform</a></p>
<p>transform.svg</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 120 120<span class="token punctuation">"</span></span>
     <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>polygon</span> <span class="token attr-name">points</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>60,30 90,90 30,90<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>animateTransform</span> <span class="token attr-name">attributeName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>transform<span class="token punctuation">"</span></span>
                          <span class="token attr-name">attributeType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>XML<span class="token punctuation">"</span></span>
                          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rotate<span class="token punctuation">"</span></span>
                          <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 60 70<span class="token punctuation">"</span></span>
                          <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>360 60 70<span class="token punctuation">"</span></span>
                          <span class="token attr-name">dur</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10s<span class="token punctuation">"</span></span>
                          <span class="token attr-name">repeatCount</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>indefinite<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>polygon</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="参数设置"><a href="#参数设置" class="headerlink" title="参数设置"></a>参数设置</h2><ul>
<li><a href="https://www.w3.org/TR/SVG/attindex.html" target="_blank" rel="noopener">Attribute Index 参数列表</a></li>
</ul>
<h2 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h2><h3 id="动画顺序"><a href="#动画顺序" class="headerlink" title="动画顺序"></a>动画顺序</h3><pre class="line-numbers language-svg"><code class="language-svg"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-400 -400 800 800<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span>
     <span class="token attr-name"><span class="token namespace">xmlns:</span>xlink</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xlink<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-25<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-25<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>80<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>80<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rgba(0,255,255,0.6)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>animate</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>first<span class="token punctuation">"</span></span>
             <span class="token attr-name">attributeName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>x<span class="token punctuation">"</span></span>
             <span class="token attr-name">attributeType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>XML<span class="token punctuation">"</span></span>
             <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
             <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span>
             <span class="token attr-name">dur</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1s<span class="token punctuation">"</span></span>
             <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>freeze<span class="token punctuation">"</span></span>
             <span class="token attr-name">begin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0;second.end<span class="token punctuation">"</span></span>
    <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>animate</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>second<span class="token punctuation">"</span></span>
             <span class="token attr-name">attributeName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>x<span class="token punctuation">"</span></span>
             <span class="token attr-name">attributeType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>XML<span class="token punctuation">"</span></span>
             <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span>
             <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span>
             <span class="token attr-name">dur</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1s<span class="token punctuation">"</span></span>
             <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>freeze<span class="token punctuation">"</span></span>
             <span class="token attr-name">begin</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>first.end<span class="token punctuation">"</span></span>
    <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>animate</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>third<span class="token punctuation">"</span></span>
             <span class="token attr-name">attributeName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fill<span class="token punctuation">"</span></span>
             <span class="token attr-name">attributeType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>XML<span class="token punctuation">"</span></span>
             <span class="token attr-name">from</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span>
             <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>yellow<span class="token punctuation">"</span></span>
             <span class="token attr-name">dur</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>6s<span class="token punctuation">"</span></span>
             <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>freeze<span class="token punctuation">"</span></span>
    <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="SVG-工具"><a href="#SVG-工具" class="headerlink" title="SVG 工具"></a>SVG 工具</h1><h2 id="svgo"><a href="#svgo" class="headerlink" title="svgo"></a><a href="https://github.com/svg/svgo" target="_blank" rel="noopener">svgo</a></h2><blockquote>
<p>SVG 优化工具，删减多余的内容，减少SVG大小</p>
</blockquote>
<p>网页工具<a href="https://jakearchibald.github.io/svgomg/" target="_blank" rel="noopener">svgomg</a></p>
<h2 id="SVG动画编辑工具"><a href="#SVG动画编辑工具" class="headerlink" title="SVG动画编辑工具"></a><a href="https://shapeshifter.design/" target="_blank" rel="noopener">SVG动画编辑工具</a></h2><p><img src="http://cdn.linz.tech/svg_editor.png" alt=""></p>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="安卓相关文章"><a href="#安卓相关文章" class="headerlink" title="安卓相关文章"></a>安卓相关文章</h2><ul>
<li><a href="http://www.androiddesignpatterns.com/2016/11/introduction-to-icon-animation-techniques.html" target="_blank" rel="noopener">An Introduction to Icon Animation Techniques</a> 非常详尽的介绍并附有代码例子讲解 【重点】</li>
<li><a href="https://medium.com/google-developers/animation-jump-through-861f4f5b3de4#.92v66z9ip" target="_blank" rel="noopener">Animation: Jump-through</a>【待研究】【重点】</li>
</ul>
<h2 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a><a href="https://developer.mozilla.org/en-US/docs/Web/SVG" target="_blank" rel="noopener">官方文档</a></h2><h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><ul>
<li><a href="https://www.imooc.com/video/4656" target="_blank" rel="noopener">走进SVG</a></li>
</ul>
<h2 id="经典案例"><a href="#经典案例" class="headerlink" title="经典案例"></a>经典案例</h2><p><a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/metadata" target="_blank" rel="noopener">metadata.svg</a></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- Learn about this code on MDN: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/metadata --></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0 0 400 300<span class="token punctuation">"</span></span>
  <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xlink</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xlink<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metadata</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">rdf:</span>RDF</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>rdf</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/02/22-rdf-syntax-ns#<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>connect</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/08/29-svg-connections-in-RDF#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">rdf:</span>Description</span> <span class="token attr-name">about</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#CableA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">connect:</span>ends</span> <span class="token attr-name"><span class="token namespace">rdf:</span>resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#socket1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">connect:</span>ends</span> <span class="token attr-name"><span class="token namespace">rdf:</span>resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ComputerA<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">rdf:</span>Description</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">rdf:</span>Description</span> <span class="token attr-name">about</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#CableB<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">connect:</span>ends</span> <span class="token attr-name"><span class="token namespace">rdf:</span>resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#socket2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">connect:</span>ends</span> <span class="token attr-name"><span class="token namespace">rdf:</span>resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ComputerB<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">rdf:</span>Description</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">rdf:</span>Description</span> <span class="token attr-name">about</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#CableN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">connect:</span>ends</span> <span class="token attr-name"><span class="token namespace">rdf:</span>resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#socket5<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">connect:</span>ends</span><span class="token punctuation">></span></span>Everything<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">connect:</span>ends</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">rdf:</span>Description</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">rdf:</span>Description</span> <span class="token attr-name">about</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#Hub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">connect:</span>ends</span> <span class="token attr-name"><span class="token namespace">rdf:</span>resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#socket1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">connect:</span>ends</span> <span class="token attr-name"><span class="token namespace">rdf:</span>resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#socket2<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">connect:</span>ends</span> <span class="token attr-name"><span class="token namespace">rdf:</span>resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#socket3<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">connect:</span>ends</span> <span class="token attr-name"><span class="token namespace">rdf:</span>resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#socket4<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">connect:</span>ends</span> <span class="token attr-name"><span class="token namespace">rdf:</span>resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#socket5<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">rdf:</span>Description</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">rdf:</span>RDF</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metadata</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Network<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>desc</span><span class="token punctuation">></span></span>An example of a computer network based on a hub.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>desc</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">
    <span class="token selector">svg </span><span class="token punctuation">{</span>
      <span class="token comment" spellcheck="true">/* Default styles to be inherited */</span>
      <span class="token property">fill</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
      <span class="token property">stroke</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">text </span><span class="token punctuation">{</span> <span class="token property">fill</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span> <span class="token property">stroke</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token selector">path </span><span class="token punctuation">{</span> <span class="token property">fill</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token punctuation">}</span>
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>

  <span class="token comment" spellcheck="true">&lt;!-- Define symbols used in the SVG --></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defs</span><span class="token punctuation">></span></span>

    <span class="token comment" spellcheck="true">&lt;!-- hubPlug symbol. Used by hub symbol --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>symbol</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hubPlug<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>desc</span><span class="token punctuation">></span></span>A 10BaseT/100baseTX socket<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>desc</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M0,10 h5 v-9 h12 v9 h5 v16 h-22 z<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>symbol</span><span class="token punctuation">></span></span>

    <span class="token comment" spellcheck="true">&lt;!-- hub symbol --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>symbol</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hub<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>desc</span><span class="token punctuation">></span></span>A typical 10BaseT/100BaseTX network hub<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>desc</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hub<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(0 20)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>253<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>84<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>229<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>44<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>12<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>227<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>71<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>7<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
        <span class="token comment" spellcheck="true">&lt;!-- five groups each using the defined socket --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sock1et<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(25 20)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Socket 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#hubPlug<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>socket2<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(70 20)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Socket 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#hubPlug<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>socket3<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(115 20)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Socket 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#hubPlug<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>socket4<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(160 20)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Socket 4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#hubPlug<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>socket5<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(205 20)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Socket 5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#hubPlug<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>symbol</span><span class="token punctuation">></span></span>

    <span class="token comment" spellcheck="true">&lt;!-- computer symbol --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>symbol</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>computer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>desc</span><span class="token punctuation">></span></span>A common desktop PC<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>desc</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>monitorStand<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(40 121)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Monitor stand<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>desc</span><span class="token punctuation">></span></span>One of those cool swivelling monitor stands that sit under the monitor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>desc</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m0,0 S 10 10 40 12<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m80,0 S 70 10 40 12<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m0,20 L 10 10 S 40 12 70 10 L 80 20z<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>monitor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Monitor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>desc</span><span class="token punctuation">></span></span>A very fancy monitor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>desc</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lightgrey<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>138<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>95<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>11<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>12<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>processor<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(0 142)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>The computer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>desc</span><span class="token punctuation">></span></span>A desktop computer - broad flat box style<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>desc</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>discDrive<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(70 8)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>disc drive<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>desc</span><span class="token punctuation">></span></span>A built-in disc drive<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>desc</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>58<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>12<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>12<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>135<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>40<span class="token punctuation">"</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>symbol</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defs</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Network<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>

  <span class="token comment" spellcheck="true">&lt;!-- Use the hub symbol. --></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Hub<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(80 45)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Hub<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#hub<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scale(0.75)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>

  <span class="token comment" spellcheck="true">&lt;!-- Use the computer symbol. --></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ComputerA<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(20 170)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Computer A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#computer<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scale(0.5)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>

  <span class="token comment" spellcheck="true">&lt;!-- Use the same computer symbol. --></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ComputerB<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(300 170)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Computer B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#computer<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scale(0.5)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>

  <span class="token comment" spellcheck="true">&lt;!-- Draw Cable A. --></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>CableA<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(107 88)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Cable A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>desc</span><span class="token punctuation">></span></span>10BaseT twisted pair cable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>desc</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M0,0c100,140 50,140 -8,160<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>

  <span class="token comment" spellcheck="true">&lt;!-- Draw Cable B. --></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>CableB<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(142 88)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Cable B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>desc</span><span class="token punctuation">></span></span>10BaseT twisted pair cable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>desc</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M0,0c100,180 110,160 159,160<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>

  <span class="token comment" spellcheck="true">&lt;!-- Draw Cable N. --></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>CableN<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(242 88)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Cable N<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>desc</span><span class="token punctuation">></span></span>10BaseT twisted pair cable<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>desc</span><span class="token punctuation">></span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M0,0c0,-70 20,-50 60,-50<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="正玄字体"><a href="#正玄字体" class="headerlink" title="正玄字体"></a>正玄字体</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>正玄字体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defs</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>grid<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">patternUnits</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userSpaceOnUse<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#f0f0f0<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M0,0H20V20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pattern</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defs</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4200<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2000<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url(#grid)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rect</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sintext<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span> <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'Arial'</span><span class="token punctuation">;</span> </span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>ABCDEFGHIJKLMNOPQRSTUVWXYZ<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>M100,0V200M0,100H200<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name">transform</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translate(0,60)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sintext2<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>360<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span> <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'Arial'</span><span class="token punctuation">;</span> </span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">
  <span class="token selector">body </span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>vm<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>vm<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">svg </span><span class="token punctuation">{</span>
    <span class="token property">overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">
  <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> i <span class="token operator">=</span> n<span class="token punctuation">;</span>
  <span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> w <span class="token operator">=</span> <span class="token number">0.02</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>



  <span class="token keyword">var</span> text <span class="token operator">=</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> NS <span class="token operator">=</span> <span class="token string">'http://www.w3.org/2000/svg'</span><span class="token punctuation">;</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> tspan <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElementNS</span><span class="token punctuation">(</span>NS<span class="token punctuation">,</span><span class="token string">'tspan'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    tspan<span class="token punctuation">.</span>textContent <span class="token operator">=</span> text<span class="token punctuation">[</span>n <span class="token operator">-</span>i <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    sintext2<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>tspan<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> h <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">360</span> <span class="token operator">/</span> <span class="token number">26</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    tspan<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'fill'</span><span class="token punctuation">,</span><span class="token string">'hsl('</span> <span class="token operator">+</span> h <span class="token operator">+</span> <span class="token string">',100%,80%'</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">arrange</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> ly <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> cy<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cy <span class="token operator">=</span> <span class="token operator">-</span>s <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>w <span class="token operator">*</span> i <span class="token operator">*</span> <span class="token number">20</span> <span class="token operator">+</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>
      y<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cy <span class="token operator">-</span> ly<span class="token punctuation">)</span><span class="token punctuation">;</span>
      ly <span class="token operator">=</span> cy<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sintext<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'dx'</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sintext<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'dy'</span><span class="token punctuation">,</span> y<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sintext2<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'dx'</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    sintext2<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">'dy'</span><span class="token punctuation">,</span> y<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">frame</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    t <span class="token operator">+</span><span class="token operator">=</span> <span class="token number">0.02</span><span class="token punctuation">;</span>
    <span class="token function">arrange</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>frame<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">frame</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>实践</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue笔记</title>
    <url>/2019/07/22/2019-7-22-vue/</url>
    <content><![CDATA[<h1 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h1><ul>
<li><a href="https://wangdoc.com/javascript/index.html" target="_blank" rel="noopener">JavaScript 教程</a></li>
<li><a href="https://www.css88.com/archives/9922?utm_source=androidweekly.io&amp;utm_medium=website" target="_blank" rel="noopener">JavaScript 完全手册（2018版）</a> 【重点】</li>
<li><a href="https://github.com/leonardomso/33-js-concepts" target="_blank" rel="noopener">33-js-concepts</a></li>
</ul>
<h1 id="语言学习"><a href="#语言学习" class="headerlink" title="语言学习"></a>语言学习</h1><ul>
<li><a href="https://segmentfault.com/a/1190000007032448#articleHeader0" target="_blank" rel="noopener">初探Promise</a></li>
</ul>
<h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><h3 id="博文"><a href="#博文" class="headerlink" title="博文"></a>博文</h3><ul>
<li><p><a href="https://juejin.im/post/59097cd7a22b9d0065fb61d2" target="_blank" rel="noopener">手摸手，带你用vue撸后台 系列一（基础篇）</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/wuyuchao/p/9186790.html" target="_blank" rel="noopener">vue .sync修饰符的使用</a></p>
</li>
<li><p><a href="https://segmentfault.com/a/1190000011716027#articleHeader5" target="_blank" rel="noopener">vuex入门，详细的讲解</a></p>
</li>
<li><p><a href="https://www.php.cn/js-tutorial-394694.html" target="_blank" rel="noopener">vuex里mapState,mapGetters使用详解</a> </p>
<pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> mapState<span class="token punctuation">,</span> mapGetters<span class="token punctuation">,</span> mapActions<span class="token punctuation">,</span> mapMutations <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span>
computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>
     <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        viewsCount<span class="token punctuation">:</span> <span class="token string">'views'</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
     <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        todosALise<span class="token punctuation">:</span> <span class="token string">'getToDo'</span> <span class="token comment" spellcheck="true">// getToDo 不是字符串，对应的是getter里面的一个方法名字 然后将这个方法名字重新取一个别名 todosALise</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span>

 methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>
     <span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
     totalAlise<span class="token punctuation">:</span> <span class="token string">'clickTotal'</span> <span class="token comment" spellcheck="true">// clickTotal 是mutation 里的方法，totalAlise是重新定义的一个别名方法，本组件直接调用这个方法</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
　　 <span class="token operator">...</span><span class="token function">mapActions</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
     blogAdd<span class="token punctuation">:</span> <span class="token string">'blogAdd'</span> <span class="token comment" spellcheck="true">// 第一个blogAdd是定义的一个函数别名称，挂载在到this(vue)实例上，后面一个blogAdd 才是actions里面函数方法名称</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span> 
 <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="官方教程"><a href="#官方教程" class="headerlink" title="官方教程"></a>官方教程</h3><ol>
<li><a href="https://cn.vuejs.org/v2/guide/installation.html" target="_blank" rel="noopener">vue 官方教程</a></li>
<li><a href="https://cn.vuejs.org/v2/guide/instance.html" target="_blank" rel="noopener">vue 入门教程</a></li>
<li><a href="https://vuejs.org/v2/style-guide/index.html" target="_blank" rel="noopener">style-guide</a></li>
<li><a href="https://github.com/vuejs-templates/webpack" target="_blank" rel="noopener"><strong>webpack</strong></a></li>
<li><a href="https://github.com/neutrinojs/webpack-chain" target="_blank" rel="noopener"><strong>webpack-chain</strong></a></li>
</ol>
<h2 id="Vue-开源库"><a href="#Vue-开源库" class="headerlink" title="Vue 开源库"></a>Vue 开源库</h2><ul>
<li><a href="https://github.com/vuejs/vue/tree/dev/examples" target="_blank" rel="noopener">examples</a></li>
<li><a href="https://github.com/bailicangdu/vue2-elm" target="_blank" rel="noopener">基于 vue2 + vuex 构建一个具有 45 个页面的大型单页面应用</a></li>
<li><a href="小拉框多选">vue-multiselect</a></li>
<li><a href="https://github.com/rstacruz/nprogress" target="_blank" rel="noopener">nprogress</a></li>
</ul>
<h3 id="官方开源库"><a href="#官方开源库" class="headerlink" title="官方开源库"></a>官方开源库</h3><ul>
<li><a href="https://github.com/vuejs/vue-router" target="_blank" rel="noopener">vue-router</a></li>
</ul>
<h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><p>inject注入</p>
<pre class="line-numbers language-shell"><code class="language-shell">// 父级组件提供 'foo'
var Provider = {
  provide: {
    foo: 'bar'
  },
  // ...
}

// 子组件注入 'foo'
var Child = {
  inject: ['foo'],
  created () {
    console.log(this.foo) // => "bar"
  }
  // ...
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><ul>
<li><a href="https://juejin.im/post/5ca18157e51d45301b5c957c" target="_blank" rel="noopener">VUE 9个性能优化秘密？（vue-9-perf-secrets）</a></li>
</ul>
<h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><ul>
<li><p>类似RxJava的工具库 <a href="https://lodash.com/docs/4.17.11" target="_blank" rel="noopener">https://lodash.com/docs/4.17.11</a></p>
</li>
<li><p><a href="https://sortablejs.github.io/Sortable/" target="_blank" rel="noopener">Sortable 拖拽排序库</a></p>
</li>
<li><p><a href="https://www.cnblogs.com/lulin1/p/6907432.html" target="_blank" rel="noopener">iconfont 阿里巴巴矢量图库使用</a></p>
</li>
</ul>
<h2 id="动画工具"><a href="#动画工具" class="headerlink" title="动画工具"></a>动画工具</h2><ul>
<li><a href="https://daneden.github.io/animate.css/" target="_blank" rel="noopener">animate.css</a></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>webpack笔记</title>
    <url>/2019/07/22/2019-7-22-webpack/</url>
    <content><![CDATA[<h1 id="webpack基础"><a href="#webpack基础" class="headerlink" title="webpack基础"></a>webpack基础</h1><h2 id="webpack简介"><a href="#webpack简介" class="headerlink" title="webpack简介"></a>webpack简介</h2><ol>
<li>代码转换</li>
<li>文件优化</li>
<li>代码分割</li>
<li>模块合并</li>
<li>debug模式自动刷新</li>
<li>代码验证</li>
<li>自动发布</li>
</ol>
<h2 id="webpack-基础"><a href="#webpack-基础" class="headerlink" title="webpack 基础"></a>webpack 基础</h2><p>安装到本地</p>
<pre class="line-numbers language-shell"><code class="language-shell">yarn init -y 
#-D 表示开发依赖
yarn add webpack webpack-cli -D
npx webpack<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>实践</tag>
        <tag>网页</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库学习笔记</title>
    <url>/2019/04/14/2019-4-17-database/</url>
    <content><![CDATA[<h1 id="实战备份"><a href="#实战备份" class="headerlink" title="实战备份"></a>实战备份</h1><h2 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h2><h3 id="腕带信息上传"><a href="#腕带信息上传" class="headerlink" title="腕带信息上传"></a>腕带信息上传</h3><pre class="line-numbers language-shell"><code class="language-shell">-- 创建视图
create view v_watch_recoder_msg as
select r.id ,r.err as code, m.msg as msg, r.imei, an.name, r.time as upload_time from t_watch_recoder r,t_code_msg m, T_RUNAN_IMEI an where m.code = r.ERR and m.type='status' and r.imei = an.imei ORDER BY r.time DESC

create view v_alert_record_msg as
select t.id, t.type,msg.msg, t.imei,t.time from t_alert_record t, t_code_msg msg where msg.type='alert' and msg.code = t.type order by t.time desc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>网络编程学习笔记</title>
    <url>/2019/04/13/2019-3-21-network-coding-note/</url>
    <content><![CDATA[<p>[TOC]</p>
<h2 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h2><h3 id="基本术语"><a href="#基本术语" class="headerlink" title="基本术语"></a>基本术语</h3><h4 id="Socket"><a href="#Socket" class="headerlink" title="Socket"></a><strong>Socket</strong></h4><p>操作系统为软件提供输入/出的端口，链接过程Service端监听某个端口，客户端访问服务器端口；</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">int</span> <span class="token function">socket</span><span class="token punctuation">(</span><span class="token keyword">int</span> domain<span class="token punctuation">,</span> <span class="token keyword">int</span> type<span class="token punctuation">,</span> <span class="token keyword">int</span> protocol<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li>domain：协议域，又称协议族（family）。常用有AF_INET、AF_INET6、AF_LOCAL（或称AF_UNIX，Unix域Socket）、AF_ROUTE等,决定了socket的地址类型,在通信中必须采用对应的地址，如AF_INET决定了要用ipv4地址（32位的）与端口号（16位的）的组合、AF_UNIX决定了要用一个绝对路径名作为地址。</li>
<li>type ：指定Socket类型，有SOCK_STREAM、SOCK_DGRAM、SOCK_RAW、SOCK_PACKET、SOCK_SEQPACKET等。<ul>
<li>SOCK_STREAM 面向连接, 针对于面向连接的TCP服务应用 </li>
<li>SOCK_DGRAM 一种无连接, 对应于无连接的UDP服务应用</li>
</ul>
</li>
<li>protocol: 指定协议,有IPPROTO_TCP、IPPROTO_UDP、IPPROTO_STCP、IPPROTO_TIPC等 </li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://baike.baidu.com/item/socket/281150" target="_blank" rel="noopener">socket百科</a></li>
</ol>
<h4 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP/IP"></a>TCP/IP</h4><p> Transmission Control Protocol (TCP) and the Internet Protocol (IP)</p>
<blockquote>
<p>provides end-to-end data communication specifying how data should be packetized, addressed, transmitted, routed, and received.</p>
</blockquote>
<p> From lowest to highest</p>
<ul>
<li>link layer: containing communication methods for data that remains whichin a single network segment;</li>
<li>internet layer: providing internetworking between independent network;</li>
<li>transport layer: providing end-to-end comminucation services for applications;</li>
<li>applicaton layer: providing services to users and system functions; such as SMTP, FTP, SSH, HTTP</li>
</ul>
<p>参考：</p>
<ol>
<li><a href="https://en.wikipedia.org/wiki/Internet_protocol_suite" target="_blank" rel="noopener">Internet protocol suite</a></li>
</ol>
<h4 id="Http协议中Cookie"><a href="#Http协议中Cookie" class="headerlink" title="Http协议中Cookie"></a>Http协议中Cookie</h4><p>Cookie总是保存在客户端中，按在客户端中的存储位置，可分为内存Cookie和硬盘Cookie,内存Cookie由浏览器维护; HTTP请求中的cookie明文，HTTPS加密，大小限制在4kB</p>
<p><strong>语法</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml">Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span> 
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; Expires=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>date</span><span class="token punctuation">></span></span>
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; Max-Age=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>non-zero-digit</span><span class="token punctuation">></span></span>
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; Domain=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>domain-value</span><span class="token punctuation">></span></span>
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; Path=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path-value</span><span class="token punctuation">></span></span>
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; Secure
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; HttpOnly

Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; SameSite=Strict
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; SameSite=Lax

// Multiple directives are also possible, for example:
Set-Cookie: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-name</span><span class="token punctuation">></span></span>=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>cookie-value</span><span class="token punctuation">></span></span>; Domain=<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>domain-value</span><span class="token punctuation">></span></span>; Secure; HttpOnly<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>案例</strong><br>Server-&gt;Client</p>
<pre><code>Set-Cookie: lu=Rg3vHJZnehYLjVg7qi3bZjzg; Expires=Tue, 15 Jan 2013 21:47:38 GMT; Path=/; Domain=.169it.com; HttpOnly

Set-Cookie: made_write_conn=1295214458; Path=/; Domain=.169it.com

Set-Cookie: reg_fb_gate=deleted; Expires=Thu, 01 Jan 1970 00:00:01 GMT; Path=/; Domain=.169it.com; HttpOnly</code></pre><p>Client-&gt;Server </p>
<pre><code>GET /spec.html HTTP/1.1  

Host: www.example.org  

Cookie: name=value; name2=value2  

Accept: */*  </code></pre><h4 id="属性详解"><a href="#属性详解" class="headerlink" title="属性详解"></a>属性详解</h4><ul>
<li>cookie-name： 变量名用于获取cookie-value；</li>
<li>Expires：cookie过期时间，可以设置时间小于当前使cookie无效；</li>
<li>Path：cookie的有效范围，如Path=”/”整个域名内有效；</li>
<li>domain： cookie有效的域名；</li>
</ul>
<p>参考： </p>
<ol>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie" target="_blank" rel="noopener">Set-Cookie</a></li>
<li><a href="https://www.cnblogs.com/yanganok/p/5322411.html" target="_blank" rel="noopener">Http协议中Cookie介绍</a></li>
</ol>
<h3 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h3><h2 id="开源库分析"><a href="#开源库分析" class="headerlink" title="开源库分析"></a>开源库分析</h2><h3 id="OkHttp-3-7源码分析"><a href="#OkHttp-3-7源码分析" class="headerlink" title="OkHttp 3.7源码分析"></a>OkHttp 3.7源码分析</h3><h4 id="整体架构师分析"><a href="#整体架构师分析" class="headerlink" title="整体架构师分析"></a>整体架构师分析</h4><p><img src="http://ata2-img.cn-hangzhou.img-pub.aliyun-inc.com/f6e2ac304ee22891eca4ad1218602044.png" alt=""></p>
<h4 id="Interceptor功能分析"><a href="#Interceptor功能分析" class="headerlink" title="Interceptor功能分析"></a>Interceptor功能分析</h4><p><img src="http://ata2-img.cn-hangzhou.img-pub.aliyun-inc.com/e67029972070a7dd84206023b179dbd1.png" alt=""></p>
<p>RetryAndFollowUpInterceptor</p>
<ul>
<li>在网络请求失败后进行重试</li>
<li>当服务器返回当前请求需要进行重定向时直接发起新的请求，并在条件允许情况下复用当前连接</li>
</ul>
<p>BridgeInterceptor</p>
<ul>
<li>设置其他报头</li>
<li>设置gzip压缩</li>
</ul>
<p>CacheInterceptor</p>
<ul>
<li>请求有符合要求直接返回Cache</li>
<li>服务器返回内容有改变时更新当前cache</li>
<li>cache失效删除</li>
</ul>
<p>ConnectInterceptor</p>
<blockquote>
<p>即为当前请求找到合适的连接，可能复用已有连接也可能是重新创建的连接，返回的连接由连接池负责决定。</p>
</blockquote>
<p>CallServerInterceptor</p>
<blockquote>
<p>负责向服务器发起真正的访问请求，并在接收到服务器返回后读取响应返回</p>
</blockquote>
<h4 id="缓存策略"><a href="#缓存策略" class="headerlink" title="缓存策略"></a><a href="https://yq.aliyun.com/articles/78102?spm=a2c4e.11153940.blogcont78103.22.1d6a2a21T3SKL9" target="_blank" rel="noopener">缓存策略</a></h4><h5 id="HTTP缓存策略"><a href="#HTTP缓存策略" class="headerlink" title="HTTP缓存策略"></a>HTTP缓存策略</h5><ul>
<li>Expires: 告知客户端对应资源的过期时间</li>
<li>Cache-Control:当前资源的有效期(s),比<code>Expires</code>优先级更高:<code>Cache-Control:max-age=31536000,public</code></li>
</ul>
<p><strong>条件GET请求</strong></p>
<ul>
<li>Last-Modified-Date<br>客户端第一次请求时，服务器返回：<code>Last-Modified: Tue, 12 Jan 2016 09:31:27 GMT</code>,当客户端二次请求时，可以头部加上如下header:<code>If-Modified-Since: Tue, 12 Jan 2016 09:31:27 GMT</code>如果当前资源没有被二次修改，服务器返回304告知客户端直接复用本地缓存。</li>
<li>ETag: ETag是对资源文件的一种摘要. 当客户端第一次请求某资源时，服务器返回：<br><code>ETag: "5694c7ef-24dc"</code>客户端再次请求时，可在头部加上如下域：<code>If-None-Match: "5694c7ef-24dc"</code>如果文件并未改变，则服务器返回304告知客户端可以复用本地缓存。</li>
<li>no-cache/no-store: 不使用缓存</li>
<li>only-if-cached:只使用缓存<h4 id="多路复用"><a href="#多路复用" class="headerlink" title="多路复用"></a>多路复用</h4></li>
</ul>
<h2 id="实战案例"><a href="#实战案例" class="headerlink" title="实战案例"></a>实战案例</h2><h3 id="Fiddler-抓包"><a href="#Fiddler-抓包" class="headerlink" title="Fiddler 抓包"></a>Fiddler 抓包</h3><p> <a href="https://www.cnblogs.com/mfryf/p/5028010.html" target="_blank" rel="noopener">fiddler Android下https抓包全攻略</a></p>
<h4 id="Android手机抓包"><a href="#Android手机抓包" class="headerlink" title="Android手机抓包"></a>Android手机抓包</h4><p><strong>Fiddler设置</strong></p>
<p><img src="http://img.blog.csdn.net/20150228183938842?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvanVzdEZXRA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="技术分享"></p>
<p><img src="http://img.blog.csdn.net/20150228183920982?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvanVzdEZXRA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="技术分享"></p>
<p><strong>手机代理设置</strong></p>
<!--![img](file:///C:/Users/skast/AppData/Local/Temp/SNAGHTML99ad8d.PNG)-->

<p><strong>证书安装</strong> <code>用默认的浏览器</code></p>
<p><img src="http://img.blog.csdn.net/20150228183957687?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvanVzdEZXRA==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="技术分享"></p>
<p><img src="http://cdn.linz.tech/fiddler-network-coding.jpg" alt="技术分享"></p>
<h4 id="电脑抓包"><a href="#电脑抓包" class="headerlink" title="电脑抓包"></a>电脑抓包</h4><ul>
<li>系统代理设置<br><img src="https://images2015.cnblogs.com/blog/626593/201601/626593-20160118234154922-335265309.png" alt="image"></li>
</ul>
<h4 id="Fiddler-使用"><a href="#Fiddler-使用" class="headerlink" title="Fiddler 使用"></a>Fiddler 使用</h4><ol>
<li><p>过滤Android端数据</p>
<ol>
<li><p>点击”Rules-&gt;CustomizeRules”;</p>
</li>
<li><p>在这个函数OnBeforeResponse后面添加</p>
<blockquote>
<p>if (oSession.oRequest[“User-Agent”].indexOf(“Android”)&gt; -1 &amp;&amp; oSession.HTTPMethodIs(“CONNECT”)) {oSession.oResponse.headers[“Connection”] = “Keep-Alive”; }</p>
</blockquote>
<p>如图：</p>
</li>
</ol>
</li>
</ol>
<p><img src="http://cdn.linz.tech/tech-share-network-coding.png" alt="技术分享"></p>
<p>参考： <a href="https://www.cnblogs.com/yyhh/p/5140852.html" target="_blank" rel="noopener">Fiddler 抓包工具总结</a></p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>网页WEB笔记汇总</title>
    <url>/2019/04/13/2019-3-7-web-note/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h1><h2 id="在线编辑（IDE）"><a href="#在线编辑（IDE）" class="headerlink" title="在线编辑（IDE）"></a>在线编辑（IDE）</h2><ul>
<li><a href="http://jsfiddle.net/" target="_blank" rel="noopener">http://jsfiddle.net/</a></li>
<li><a href="http://plnkr.co/edit/?p=preview" target="_blank" rel="noopener">http://plnkr.co/edit/?p=preview</a></li>
</ul>
<h2 id="在线资料"><a href="#在线资料" class="headerlink" title="在线资料"></a>在线资料</h2><ul>
<li><a href="http://tool.oschina.net/commons" target="_blank" rel="noopener">常用对照表</a></li>
<li><a href="https://developer.mozilla.org/en-US/" target="_blank" rel="noopener">mozilla 提供的 CSS，HTML，Javascript api</a> 【重点应用】</li>
</ul>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul>
<li><p><a href="https://github.com/google/tamperchrome" target="_blank" rel="noopener">tamperchrome</a> </p>
<blockquote>
<p>谷歌推出一个网站开发利器，可以拦截并修改HTTP请求。也就是说，网页跟服务器的通信，你可以轻松监控，随手改掉，HTTPS 请求也可以喔！</p>
</blockquote>
</li>
<li><p><a href="https://blog.csdn.net/gyy823/article/details/51655151" target="_blank" rel="noopener">数据可视化分析工具大集合汇总</a></p>
</li>
</ul>
<h1 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h1><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><ul>
<li><p><a href="http://blog.csdn.net/gyming/article/details/36060843" target="_blank" rel="noopener">Tomcat在Linux上的安装与配置</a> </p>
</li>
<li><p><a href="http://my.oschina.net/u/1170781/blog/192731" target="_blank" rel="noopener">IntelliJ IDEA (idea)引入eclipse web项目</a></p>
</li>
</ul>
<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h2 id="Element"><a href="#Element" class="headerlink" title="Element"></a>Element</h2><p><strong><label></label></strong>  和input标签配合</p>
<ul>
<li>点击label标签，input标签可以获取焦点</li>
<li>具有代码关联性，如在无障碍模式下会读取label作为input的描述</li>
</ul>
<h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><h2 id="关键字记录"><a href="#关键字记录" class="headerlink" title="关键字记录"></a>关键字记录</h2><ol>
<li><p>overflow 自己太大的时候该怎么显示</p>
</li>
<li><p>::after</p>
<pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.ribbon</span><span class="token pseudo-element">::after</span> </span><span class="token punctuation">{</span>
  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"This is a fancy orange box."</span><span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#FFBA10</span><span class="token punctuation">;</span>
  <span class="token property">border-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
  <span class="token property">border-style</span><span class="token punctuation">:</span> dotted<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>box-shadow</p>
<pre class="line-numbers language-css"><code class="language-css">    <span class="token comment" spellcheck="true">/* offset-x | offset-y | blur-radius | color */</span>
    <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">10</span>px <span class="token number">5</span>px <span class="token number">5</span>px black<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>position</p>
<pre class="line-numbers language-css"><code class="language-css"> <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span> // 参照浏览器会跳出父控件的内容范围
 <span class="token property">position</span><span class="token punctuation">:</span>fixed<span class="token punctuation">;</span> // 屏幕滑动时固定<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>list-style</p>
<pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* type | image | position */</span>
<span class="token property">list-style</span><span class="token punctuation">:</span> lower-roman <span class="token url">url('../img/shape.png')</span> outside<span class="token punctuation">;</span>
list-style-type/list-style-image/list-style-position<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>background</p>
<pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* A single image, centered and scaled */</span>
<span class="token property">background</span><span class="token punctuation">:</span> no-repeat center/<span class="token number">80%</span> <span class="token url">url("../img/image.png")</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>z-index：0 重叠优先级数组越高越在上面</p>
</li>
<li><p>margin</p>
<pre class="line-numbers language-css"><code class="language-css"> <span class="token comment" spellcheck="true">/* vertical | horizontal */</span>
<span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">5%</span> auto<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">/* top | right | bottom | left */</span>
<span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">2</span>px <span class="token number">1</span>em <span class="token number">0</span> auto<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>border</p>
<pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* width | style | color */</span>
<span class="token property">border</span><span class="token punctuation">:</span> medium dashed green<span class="token punctuation">;</span>
<span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid black <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<p><strong>动画</strong></p>
<ul>
<li><p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions" target="_blank" rel="noopener">transition</a></p>
<pre class="line-numbers language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* property name | duration | timing function | delay */</span>
<span class="token property">transition</span><span class="token punctuation">:</span> margin-right <span class="token number">4</span>s ease-in-out <span class="token number">1</span>s<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">/* Global values */</span>
<span class="token property">transition</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
<span class="token property">transition</span><span class="token punctuation">:</span> initial<span class="token punctuation">;</span>
<span class="token property">transition</span><span class="token punctuation">:</span> unset<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><ul>
<li><a href="https://www.freecodecamp.org/" target="_blank" rel="noopener">https://www.freecodecamp.org/</a> </li>
<li><a href="http://www.zhihu.com/question/19713563" target="_blank" rel="noopener">何循序渐进有效学习 JavaScript</a></li>
<li><a href="http://www.jianshu.com/p/e3965d3636e7" target="_blank" rel="noopener">谈谈WebView的使用【从零开始搭建android框架系列（5）】</a></li>
<li><a href="https://github.com/ruanyf/jstraining" target="_blank" rel="noopener">全栈工程师培训材料</a><blockquote>
<p>全栈工程师培训材料，帮助学习者掌握全栈开发的基本知识，承担简单 Web 应用的前后端开发。<br>一共四讲，适合两天的训练营，请先阅读《培训准备》</p>
</blockquote>
</li>
</ul>
<h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><ul>
<li><p><a href="http://bugly.qq.com/bbs/forum.php?mod=viewthread&amp;tid=267#rd" target="_blank" rel="noopener">H5 缓存机制浅析 移动端 Web 加载性能优化</a> </p>
</li>
<li><p><a href="http://www.jianshu.com/p/3160a0297345" target="_blank" rel="noopener">Weex Android SDK源码分析</a></p>
</li>
<li><p><a href="http://www.zhangxinxu.com/wordpress/2011/03/displayinline-blocktext-alignjustify%E4%B8%8B%E5%88%97%E8%A1%A8%E7%9A%84%E4%B8%A4%E7%AB%AF%E5%AF%B9%E9%BD%90%E5%B8%83%E5%B1%80/" target="_blank" rel="noopener">张鑫旭老师的博客</a></p>
</li>
</ul>
<h1 id="开源库收集"><a href="#开源库收集" class="headerlink" title="开源库收集"></a>开源库收集</h1><h2 id="相关开源库"><a href="#相关开源库" class="headerlink" title="相关开源库"></a>相关开源库</h2><ul>
<li><a href="http://github.com/h5bp/html5-boilerplate" target="_blank" rel="noopener">html5-boilerplate</a></li>
<li><strong><a href="https://github.com/ImangazalievM/Scripto" target="_blank" rel="noopener">Scripto</a></strong> Js 和 Java互调用的库</li>
</ul>
<h2 id="UI-开源库"><a href="#UI-开源库" class="headerlink" title="UI 开源库"></a>UI 开源库</h2><ul>
<li><a href="https://github.com/ripjar/material-datetime-picker" target="_blank" rel="noopener">material-datetime-picker 时间选择/日期选择</a></li>
<li><a href="http://unicorn-ui.com/buttons/" target="_blank" rel="noopener">buttons</a>各式各样的Button</li>
<li><a href="https://github.com/antvis/g2" target="_blank" rel="noopener">可视化语法库 G2</a></li>
</ul>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><ul>
<li><a href="http://gitbook.cn/books/58e48c22c59d53926e611996/index.html" target="_blank" rel="noopener">我的实操经验分享：如何通过Adsense赚3万美金</a>  SEO 推广</li>
</ul>
<h2 id="比较喜欢的网站风格"><a href="#比较喜欢的网站风格" class="headerlink" title="比较喜欢的网站风格"></a>比较喜欢的网站风格</h2><p><a href="https://javalin.io/" target="_blank" rel="noopener">https://javalin.io/</a> </p>
<p><a href="https://www.prisma.io/docs/" target="_blank" rel="noopener">https://www.prisma.io/docs/</a></p>
<h1 id="附录一"><a href="#附录一" class="headerlink" title="附录一"></a>附录一</h1><h2 id="常用网站"><a href="#常用网站" class="headerlink" title="常用网站"></a>常用网站</h2><ul>
<li><a href="https://www.w3schools.com/graphics/svg_reference.asp" target="_blank" rel="noopener">SVG 案例及属性查询</a></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>网页</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown 语法补全</title>
    <url>/2019/04/13/2019-3-3-MarkDown-grammar-plugs/</url>
    <content><![CDATA[<p>[TOC]</p>
<h3 id="TOC"><a href="#TOC" class="headerlink" title="[TOC]"></a><code>[TOC]</code></h3><blockquote>
<p> [TOC]     生成目录</p>
</blockquote>
<h3 id="样式（字体段落）"><a href="#样式（字体段落）" class="headerlink" title="样式（字体段落）"></a>样式（字体段落）</h3><h4 id="页面内跳转"><a href="#页面内跳转" class="headerlink" title="页面内跳转"></a>页面内跳转</h4><pre class="line-numbers language-java"><code class="language-java">
<span class="token operator">-</span> <span class="token punctuation">[</span>Usage<span class="token punctuation">]</span><span class="token punctuation">(</span>#usage<span class="token punctuation">)</span>
<span class="token operator">-</span> <span class="token punctuation">[</span>Examples<span class="token punctuation">]</span><span class="token punctuation">(</span>#examples<span class="token punctuation">)</span>
<span class="token operator">-</span> <span class="token punctuation">[</span>Download<span class="token punctuation">]</span><span class="token punctuation">(</span>#download<span class="token punctuation">)</span>
<span class="token operator">-</span> <span class="token punctuation">[</span>Tests<span class="token punctuation">]</span><span class="token punctuation">(</span>#tests<span class="token punctuation">)</span>
<span class="token operator">-</span> <span class="token punctuation">[</span>Code style<span class="token punctuation">]</span><span class="token punctuation">(</span>#code<span class="token operator">-</span>style<span class="token punctuation">)</span>
<span class="token operator">-</span> <span class="token punctuation">[</span>Static code analysis<span class="token punctuation">]</span><span class="token punctuation">(</span>#<span class="token keyword">static</span><span class="token operator">-</span>code<span class="token operator">-</span>analysis<span class="token punctuation">)</span>
<span class="token operator">-</span> <span class="token punctuation">[</span>JavaDoc<span class="token punctuation">]</span><span class="token punctuation">(</span>#javadoc<span class="token punctuation">)</span>
<span class="token operator">-</span> <span class="token punctuation">[</span>Changelog<span class="token punctuation">]</span><span class="token punctuation">(</span>#changelog<span class="token punctuation">)</span>
<span class="token operator">-</span> <span class="token punctuation">[</span>Releasing<span class="token punctuation">]</span><span class="token punctuation">(</span>#releasing<span class="token punctuation">)</span>
<span class="token operator">-</span> <span class="token punctuation">[</span>References<span class="token punctuation">]</span><span class="token punctuation">(</span>#references<span class="token punctuation">)</span>
<span class="token operator">-</span> <span class="token punctuation">[</span>License<span class="token punctuation">]</span><span class="token punctuation">(</span>#license<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="字体样式"><a href="#字体样式" class="headerlink" title="字体样式"></a>字体样式</h4><pre><code>&lt;font face="黑体"&gt;我是黑体字&lt;/font&gt;
&lt;font face="微软雅黑"&gt;我是微软雅黑&lt;/font&gt;
&lt;font face="STCAIYUN"&gt;我是华文彩云&lt;/font&gt;
&lt;font color=#0099ff size=12 face="黑体"&gt;黑体&lt;/font&gt;
&lt;font color=#00ffff size=3&gt;null&lt;/font&gt;
&lt;font color=gray size=5&gt;gray&lt;/font&gt;</code></pre><p><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color="#0099ff" size="12" face="黑体">黑体</font><br><font color="red" size="3">null</font><br><font color="gray" size="5">gray</font></p>
<h5 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h5><table>
<thead>
<tr>
<th>字体</th>
<th>中文字体的英文名</th>
</tr>
</thead>
<tbody><tr>
<td><font face="FZShuTi">网页字体样式方正舒体</font></td>
<td>FZShuTi</td>
</tr>
<tr>
<td><font face="FZYaoti">网页字体样式方正姚体</font></td>
<td>FZYaoti</td>
</tr>
<tr>
<td><font face="STCaiyun">网页字体样式华文彩云</font></td>
<td>STCaiyun</td>
</tr>
<tr>
<td><font face="STHupo">网页字体样式华文琥珀</font></td>
<td>STHupo</td>
</tr>
<tr>
<td><font face="STLiti">网页字体样式华文隶书</font></td>
<td>STLiti</td>
</tr>
<tr>
<td><font face="STXingkai">网页字体样式华文行楷</font></td>
<td>STXingkai</td>
</tr>
<tr>
<td><font face="STXinwei">网页字体样式华文新魏</font></td>
<td>STXinwei</td>
</tr>
<tr>
<td><font face="STHeiti">网页字体样式华文黑体</font></td>
<td>STHeiti</td>
</tr>
<tr>
<td><font face="STKaiti">网页字体样式华文楷体</font></td>
<td>STKaiti</td>
</tr>
<tr>
<td><font face="STSong">网页字体样式华文宋体</font></td>
<td>STSong</td>
</tr>
<tr>
<td><font face="STFangsong">网页字体样式华文仿宋</font></td>
<td>STFangsong</td>
</tr>
<tr>
<td><font face="SimHei">网页字体样式黑体</font></td>
<td>SimHei</td>
</tr>
<tr>
<td><font face="SimSun">网页字体样式宋体</font></td>
<td>SimSun</td>
</tr>
<tr>
<td><font face="NSimSun">网页字体样式新宋体</font></td>
<td>NSimSun</td>
</tr>
<tr>
<td><font face="FangSong">网页字体样式仿宋</font></td>
<td>FangSong</td>
</tr>
<tr>
<td><font face="KaiTi">网页字体样式楷体</font></td>
<td>KaiTi</td>
</tr>
<tr>
<td><font face="FangSong_GB2312">网页字体样式仿宋_GB2312</font></td>
<td>FangSong_GB2312</td>
</tr>
<tr>
<td><font face="KaiTi_GB2312">网页字体样式楷体_GB2312</font></td>
<td>KaiTi_GB2312</td>
</tr>
<tr>
<td><font face="Microsoft" jhenghei="">网页字体样式微软正黑体</font></td>
<td>Microsoft JhengHei</td>
</tr>
<tr>
<td><font face="Microsoft" yahei="">网页字体样式微软雅黑体</font></td>
<td>Microsoft YaHei</td>
</tr>
<tr>
<td><font face="LiSu">网页字体样式隶书</font></td>
<td>LiSu</td>
</tr>
<tr>
<td><font face="YouYuan">网页字体样式幼圆</font></td>
<td>YouYuan</td>
</tr>
<tr>
<td><font face="STXihei">网页字体样式华文细黑</font></td>
<td>STXihei</td>
</tr>
<tr>
<td><font face="STKaiti">网页字体样式华文楷体</font></td>
<td>STKaiti</td>
</tr>
<tr>
<td><font face="STSong">网页字体样式华文宋体</font></td>
<td>STSong</td>
</tr>
<tr>
<td><font face="STZhongsong">网页字体样式华文中宋</font></td>
<td>STZhongsong</td>
</tr>
<tr>
<td><font face="STFangsong">网页字体样式华文仿宋</font></td>
<td>STFangsong</td>
</tr>
</tbody></table>
<h3 id="富媒体"><a href="#富媒体" class="headerlink" title="富媒体"></a>富媒体</h3><h4 id="图片嵌入链接"><a href="#图片嵌入链接" class="headerlink" title="图片嵌入链接"></a>图片嵌入链接</h4><p><a href="https://travis-ci.org/pwittchen/RxBiometric" target="_blank" rel="noopener"><img src="https://img.shields.io/travis/pwittchen/RxBiometric.svg?branch=master&amp;style=flat-square" alt="Build Status"></a> </p>
<pre><code>[![Build Status](https://img.shields.io/travis/pwittchen/RxBiometric.svg?branch=master&amp;style=flat-square)](https://travis-ci.org/pwittchen/RxBiometric) </code></pre><h4 id="调节图片样式"><a href="#调节图片样式" class="headerlink" title="调节图片样式"></a>调节图片样式</h4><p align="center"><img src="https://img.shields.io/travis/pwittchen/RxBiometric.svg?branch=master&amp;style=flat-square" alt="logo" height="250px"></p>
#### 嵌入HTML


<table><tbody>
    <tr>
        <th>方法说明</th><th>颜色名称</th><th>颜色</th>
    </tr>
    <tr>
        <td><font color="Hotpink">此处实现方法利用 CSDN-markdown 内嵌 html 语言的优势</font></td><td><font color="Hotpink">Hotpink</font></td><td bgcolor="Hotpink">rgb(240, 248, 255)</td>
    </tr>
    <tr>
        <td><font color="Pink">借助 table, tr, td 等表格标签的 bgcolor 属性实现背景色设置</font></td><td><font color="pink">AntiqueWhite</font></td><td bgcolor="Pink">rgb(255, 192, 203)</td>
    </tr>
</tbody></table>





<pre><code>graph LR
A--&gt;B</code></pre><pre><code>sequenceDiagram
A-&gt;&gt;B: How are you?
B-&gt;&gt;A: Great!</code></pre><pre><code>gantt
dateFormat YYYY-MM-DD
section S1
T1: 2014-01-01, 9d
section S2
T2: 2014-01-11, 9d
section S3
T3: 2014-01-02, 9d</code></pre><h3 id="脚注-注解"><a href="#脚注-注解" class="headerlink" title="脚注(注解)"></a>脚注(注解)</h3><p><strong>样式1</strong> 评价：相对于超链接方式，提供了对超链接的解说作用</p>
<p>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="noopener">Google</a> than from <a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="noopener">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="noopener">MSN</a>.  </p>
<p><strong>样式2</strong></p>
<p>这是一个链接到谷歌的[^脚注的详细说明]。</p>
<p>[^脚注的详细说明]: <a href="http://www.google.com" target="_blank" rel="noopener">http://www.google.com</a>   增加一些评论</p>
<p>评论： </p>
<pre><code> 1. 可以新建隐藏一些提示说明
 2. 可以把链接地址增加说明，鼠标悬停是可以自己点击</code></pre><h3 id="段落缩进（空格）"><a href="#段落缩进（空格）" class="headerlink" title="段落缩进（空格）"></a><strong>段落缩进（空格）</strong></h3><pre><code>半方大的空白&amp;ensp;或&amp;#8194;看，飞碟
全方大的空白&amp;emsp;或&amp;#8195;看，飞碟
不断行的空白格&amp;nbsp;或&amp;#160;看，飞碟
&amp;emsp;&amp;emsp;段落从此开始。</code></pre><p>半方大的空白 或 看，飞碟<br>全方大的空白 或 看，飞碟<br>不断行的空白格&nbsp;或&nbsp;看，飞碟<br>  段落从此开始。</p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><pre><code>| Tables        | Are           | Cool  |
| ------------- |:-------------:| -----:|
| col 3 is      | right-aligned | $1600 |
| col 2 is      | centered      |   $12 |
| zebra stripes | are neat      |    $1 |</code></pre><table>
<thead>
<tr>
<th>Tables</th>
<th align="center">Are</th>
<th align="right">Cool</th>
</tr>
</thead>
<tbody><tr>
<td>col 3 is</td>
<td align="center">right-aligned</td>
<td align="right">$1600</td>
</tr>
<tr>
<td>col 2 is</td>
<td align="center">centered</td>
<td align="right">$12</td>
</tr>
<tr>
<td>zebra stripes</td>
<td align="center">are neat</td>
<td align="right">$1</td>
</tr>
</tbody></table>
<p>或者</p>
<pre><code>项目     | 价格
-------- | ---
Computer | $1600
Phone    | $12
Pipe     | $1</code></pre><table>
<thead>
<tr>
<th>项目</th>
<th>价格</th>
</tr>
</thead>
<tbody><tr>
<td>Computer</td>
<td>$1600</td>
</tr>
<tr>
<td>Phone</td>
<td>$12</td>
</tr>
<tr>
<td>Pipe</td>
<td>$1</td>
</tr>
</tbody></table>
<h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><hr>
<hr>
<hr>
<p>三个-*_</p>
<pre><code>---
***
___</code></pre><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><blockquote>
<p>引用</p>
<blockquote>
<p>引用中的引用</p>
</blockquote>
</blockquote>
<pre><code>&gt;引用
 &gt;&gt;引用中的引用</code></pre><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><pre><code>大标题
===
小标题
---</code></pre><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><ol>
<li>有序列表</li>
<li>有序列表</li>
<li>有序列表</li>
<li>有序列表<br>```</li>
<li>有序列表</li>
<li>有序列表</li>
<li>有序列表</li>
<li>有序列表 【不连续】<br>```<h3 id="checkBox"><a href="#checkBox" class="headerlink" title="checkBox"></a>checkBox</h3></li>
</ol>
<ul>
<li><input checked="" disabled="" type="checkbox"> 地方大</li>
<li><input disabled="" type="checkbox"> 地方大</li>
</ul>
<h3 id="首行缩进"><a href="#首行缩进" class="headerlink" title="首行缩进"></a>首行缩进</h3><pre class="line-numbers language-html"><code class="language-html">不断行的空白格<span class="token entity" title="&nbsp;">&amp;nbsp;</span>或<span class="token entity" title="&#160;">&amp;#160;</span>
半方大的空白<span class="token entity" title="&ensp;">&amp;ensp;</span>或<span class="token entity" title="&#8194;">&amp;#8194;</span>
全方大的空白<span class="token entity" title="&emsp;">&amp;emsp;</span>或<span class="token entity" title="&#8195;">&amp;#8195;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>&nbsp;&nbsp;&nbsp;&nbsp;1.这是第一句话  //末尾两空格以换行<br>  2.这是第二句话  //末尾两空格以换行<br> 3.这是第三句话  //末尾两空格以换行<br>　4.这是第四句话  //开头1个全角空格以缩进</p>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><ol>
<li><a href="https://www.webfx.com/tools/emoji-cheat-sheet/" target="_blank" rel="noopener">Emoji表情 浏览</a></li>
</ol>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>git 基础比较</title>
    <url>/2019/04/13/2019-4-13-git-basic-note/</url>
    <content><![CDATA[<p>[TOC]</p>
<h4 id="Open-source"><a href="#Open-source" class="headerlink" title="Open source"></a>Open source</h4><ul>
<li><a href="https://github.com/nvie/gitflow" target="_blank" rel="noopener">git-flow</a></li>
<li><a href="https://github.com/tj/git-extras" target="_blank" rel="noopener">git-extras</a></li>
</ul>
<h1 id="Git常用"><a href="#Git常用" class="headerlink" title="Git常用"></a>Git常用</h1><h2 id="Git-表情"><a href="#Git-表情" class="headerlink" title="Git 表情"></a>Git 表情</h2><ul>
<li><a href="https://blog.csdn.net/Michael_HM/article/details/82753163" target="_blank" rel="noopener">git commit 时 emoji表情使用指南</a></li>
<li><a href="https://github.com/carloscuesta/gitmoji" target="_blank" rel="noopener">gitmoji</a> github 版本仓库</li>
<li><a href="https://gitmoji.carloscuesta.me/" target="_blank" rel="noopener">表情提交时使用规范</a></li>
<li><a href="https://www.webfx.com/tools/emoji-cheat-sheet/" target="_blank" rel="noopener">交全的表情列表</a></li>
</ul>
<table>
<thead>
<tr>
<th align="left">emoji</th>
<th align="left">emoji 代码</th>
<th align="left">commit 说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🎨</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a8.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (调色板)</td>
<td align="left"><code>:art:</code></td>
<td align="left">改进代码结构/代码格式</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⚡</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/26a1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (闪电)<span class="github-emoji" style="display:inline;vertical-align:middle"><span>🐎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f40e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (赛马)</td>
<td align="left"><code>:zap:“:racehorse:</code></td>
<td align="left">提升性能</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f525.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (火焰)</td>
<td align="left"><code>:fire:</code></td>
<td align="left">移除代码或文件</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🐛</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f41b.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (bug)</td>
<td align="left"><code>:bug:</code></td>
<td align="left">修复 bug</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🚑</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f691.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (急救车)</td>
<td align="left"><code>:ambulance:</code></td>
<td align="left">重要补丁</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>✨</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2728.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (火花)</td>
<td align="left"><code>:sparkles:</code></td>
<td align="left">引入新功能</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>📝</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4dd.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (备忘录)</td>
<td align="left"><code>:memo:</code></td>
<td align="left">撰写文档</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🚀</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f680.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (火箭)</td>
<td align="left"><code>:rocket:</code></td>
<td align="left">部署功能</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>💄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f484.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (口红)</td>
<td align="left"><code>:lipstick:</code></td>
<td align="left">更新 UI 和样式文件</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🎉</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (庆祝)</td>
<td align="left"><code>:tada:</code></td>
<td align="left">初次提交</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>✅</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (白色复选框)</td>
<td align="left"><code>:white_check_mark:</code></td>
<td align="left">增加测试</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔒</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f512.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (锁)</td>
<td align="left"><code>:lock:</code></td>
<td align="left">修复安全问题</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🍎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f34e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (苹果)</td>
<td align="left"><code>:apple:</code></td>
<td align="left">修复 macOS 下的问题</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🐧</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f427.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (企鹅)</td>
<td align="left"><code>:penguin:</code></td>
<td align="left">修复 Linux 下的问题</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🏁</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f3c1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (旗帜)</td>
<td align="left"><code>:checked_flag:</code></td>
<td align="left">修复 Windows 下的问题</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔖</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f516.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (书签)</td>
<td align="left"><code>:bookmark:</code></td>
<td align="left">发行/版本标签</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🚨</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a8.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (警车灯)</td>
<td align="left"><code>:rotating_light:</code></td>
<td align="left">移除 linter 警告</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🚧</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f6a7.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (施工)</td>
<td align="left"><code>:construction:</code></td>
<td align="left">工作进行中</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>💚</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f49a.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (绿心)</td>
<td align="left"><code>:green_heart:</code></td>
<td align="left">修复 CI 构建问题</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⬇</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b07.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (下降箭头)</td>
<td align="left"><code>:arrow_down:</code></td>
<td align="left">降级依赖</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>⬆</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2b06.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (上升箭头)</td>
<td align="left"><code>:arrow_up:</code></td>
<td align="left">升级依赖</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>👷</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f477.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (工人)</td>
<td align="left"><code>:construction_worker:</code></td>
<td align="left">添加 CI 构建系统</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>📈</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c8.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (上升趋势图)</td>
<td align="left"><code>:chart_with_upwards_trend:</code></td>
<td align="left">添加分析或跟踪代码</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔨</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f528.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (锤子)</td>
<td align="left"><code>:hammer:</code></td>
<td align="left">重大重构</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>➖</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2796.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (减号)</td>
<td align="left"><code>:heavy_minus_sign:</code></td>
<td align="left">减少一个依赖</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🐳</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f433.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (鲸鱼)</td>
<td align="left"><code>:whale:</code></td>
<td align="left">Docker 相关工作</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>➕</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2795.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (加号)</td>
<td align="left"><code>:heavy_plug_sign:</code></td>
<td align="left">增加一个依赖</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🔧</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f527.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (扳手)</td>
<td align="left"><code>:wrench:</code></td>
<td align="left">修改配置文件</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>🌐</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f310.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (地球)</td>
<td align="left"><code>:globe_with_meridians:</code></td>
<td align="left">国际化与本地化</td>
</tr>
<tr>
<td align="left"><span class="github-emoji" style="display:inline;vertical-align:middle"><span>✏</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/270f.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> (铅笔)</td>
<td align="left"><code>:pencil2:</code></td>
<td align="left">修复 typo</td>
</tr>
</tbody></table>
<h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h2><ul>
<li>list all  git config  git config -l   </li>
<li>/etc/gitconfig  &lt; ~/.gitconfig  &lt;  .git/config 逐级覆盖</li>
<li>$ git config –global core.editor vim</li>
<li>$ git config –global merge.tool vimdiff</li>
<li>用户名<br>git config –global user.name “edward.lin”<br>git config –global user.email “<a href="mailto:edward.lin@anarry.com" target="_blank" rel="noopener">edward.lin@anarry.com</a>“</li>
<li>显示为彩色（默认）<br>git config –global color.ui true</li>
</ul>
<h3 id="生成秘钥"><a href="#生成秘钥" class="headerlink" title="生成秘钥"></a>生成秘钥</h3><p><code>ssh-keygen -t rsa -C “1129103472@qq.com”</code><br>按3个回车，密码为空。(不要输密码)<br>然后到.ssh下面将id_rsa.pub里的内容复制出来粘贴到github个人中心的账户设置的ssh key里面<br>测试：ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a></p>
<p>linxu : .ssh/id_rsa.pub ==&gt; github<br>window: C:\Users\Administrator.ssh\id_rsa.pub ==&gt; github</p>
<h3 id="忽略配置"><a href="#忽略配置" class="headerlink" title="忽略配置"></a>忽略配置</h3><p><code>.gitignore</code></p>
<pre><code>#把.o 文件与.a文件过滤掉不添加
*.[oa]
#ignore优先级问题,!test.o会继续提交这个文件
*.o
!test.o
#匹配0个或者多个目录,当前目录与子目录
**/res
#匹配文件夹
foo/</code></pre><h3 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h3><ol>
<li><p><strong>命令别名</strong></p>
<pre class="line-numbers language-shell"><code class="language-shell">git config --global alias.co checkout
git config --global alias.ci commit
git config --global alias.st status    
git config --global alias.br branch
带参数
git config --global alias.last 'log -1 HEAD'
git log -1 HEAD ==> git last<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>代理设置 【】</p>
<pre class="line-numbers language-shell"><code class="language-shell">#socket
git config --global http.proxy 'socks5://127.0.0.1:1080'
git config --global https.proxy 'socks5://127.0.0.1:1080'

#http/https    
git config --global https.proxy http://127.0.0.1:8080
git config --global https.proxy https://127.0.0.1:8080

#取消
git config --global --unset http.proxy
git config --global --unset https.proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-eeab7ed5307766f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="File Status Lifecycle"><br><strong>对比文件的不同</strong></p>
<ul>
<li>git diff  - -cached  #查看已缓存与已提交的改动</li>
<li>git diff HEAD #查看已提交的与未缓存的所有改动</li>
<li>git diff - - stat 显示摘要而非整个 diff </li>
</ul>
<p><strong>移除文件</strong></p>
<ul>
<li>git reset HEAD – file  //git reset HEAD 以取消之前 git add 添加</li>
<li>git rm file   //会将文件从缓存区和你的硬盘中（工作目录）删除</li>
<li>git rm –cached  //在工作目录中留着该文件，and delete the status of under version control </li>
</ul>
<pre class="line-numbers language-shell"><code class="language-shell">$ git rm log/\*.log     #反斜杠 \，因为 Git 有它自己的文件模式扩展匹配方式
$ git rm \\*~<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>（译注：实际上不加反斜杠也可以运行，只不过按照 shell 扩展的话，仅仅删除指定目录下的文件而不会递归匹配)</p>
<p><em>移动文件</em><br>Git 中对文件改名  <code>$ git mv file_from file_to</code></p>
<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p>查看日志的内容差异，并指定次数： <code>$ git log -p -2 commit ca82a6dff817ec66f44342007202690a93763949</code><br><code>--stat</code> 只显示统计的修改行数 如： | 31 ++++++++++++++—————–<br><code>$ git log --pretty=format:"%h - %an, %ar : %s"</code> 另外还有 oneline, short，full 和fuller 可以用</p>
<ul>
<li><p>结合 –graph<br><code>$ git log --pretty=format:"%h %s" --graph</code></p>
</li>
<li><p>Filter<br><code>$ git log --since=2.weeks</code><br><code>git log --pretty="%h - %s" --author=gitster --since="2008-10-01" \ --before="2008-11-01" --no-merges</code> </p>
<p>  选项 说明 -(n)    仅显示最近的 n 条提交 –since, –after 仅显示指定时间之后的提交。 –until, –before 仅显示指定时间之</p>
</li>
</ul>
<h3 id="Log-命令的使用"><a href="#Log-命令的使用" class="headerlink" title="Log 命令的使用"></a>Log 命令的使用</h3><pre class="line-numbers language-shell"><code class="language-shell">git log    q //exit from the log status   like man 
git log  --oneline
git log  --graph
git log --oneline  new_branch
git log --oneline erlang ^master //look the sumbit no include master
git loggit log <file>      # 查看该文件每次提交记录
git log -p <file>   # 显示版本历史，以及版本间的内容差异
git log -p -2       # 查看最近两次详细修改内容的diff
git log --stat      # 查看提交统计信息
git log --since="6 hours"  # 显示最近6小时提交
git log --before="2 days"  # 显示2天前提交
git log -1 HEAD~3          # 显示比HEAD早3个提交的那个提交
git log -1 HEAD^^^git reflog                 # 查看操作
git log branchA ^branchB 
git log –author 只寻找某个特定作者的提交 
$ git log --author=Linus --oneline -5 
git log –since –before 根据日期过滤提交记录 
git log --oneline --before={3.weeks.ago} --after={2010-04-18} --no-merges   #  --no-merges 隐藏合并提交 
git log –grep 根据提交注释过滤提交记录 $ git log --grep=search_key_work   --no-merges 
git log -S 依据所引入的差值过滤 如果你要找某个函数是何时引入的，某些变量是在哪里开始被使用的？ 你可以告诉 Git 在每个提交之间的差值中查找特定字符串 
git log -p 基于快照，产生各个快照的差值（补丁）VS git log –stat 显示每个提交引入的改动的差值"统计" <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="撤消操作"><a href="#撤消操作" class="headerlink" title="撤消操作"></a>撤消操作</h2><p><strong>修改最后一次提交</strong><br><code>$ git commit --amend</code> #用当前的暂存区域快照提交</p>
<ul>
<li>没有作任何改动 ==&gt; 重写commit日志</li>
<li>有改动，提交改动 And 重写日志</li>
</ul>
<p><strong>取消已经暂存的文件</strong><br><code>use "git reset HEAD &lt;file&gt;..." to unstage</code></p>
<p><strong>取消对文件的修改</strong></p>
<pre><code>A) trace
1.git reset xxxxxx path/to/file
2. use "git checkout -- &lt;file&gt;..." to discard changes in working directory
B) untrace   --&gt;&gt; git rm paht/to/file
</code></pre><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><p>基础</p>
<ul>
<li>git remote # list alias of remote   </li>
<li>git remote add [alias] [url] #add a new remote repository </li>
<li>git remote rm # delete a remote alias <code>git remote rm origin</code></li>
<li>git remote rename [old-alias] [new-alias]</li>
<li>set-url<br>git remote set-url origin git://github.com/github/git-reference.git<br>git remote set-url –push origin git://github.com/pjhyett/hw.git</li>
<li>git push -u<br><a href="http://stackoverflow.com/questions/18031946/what-does-set-upstream-do" target="_blank" rel="noopener">http://stackoverflow.com/questions/18031946/what-does-set-upstream-do</a></li>
</ul>
<p>推送数据到远程仓库</p>
<ul>
<li>git push [alias] [branch] </li>
<li>git push  &lt;=&gt;  git push origin master </li>
<li>git push origin new_branch  # push local new_branch to reomte repository </li>
</ul>
<p>查看远程仓库信息<br><code>git remote show [remote-name]</code></p>
<h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><h3 id="列显已有的标签-git-tag"><a href="#列显已有的标签-git-tag" class="headerlink" title="列显已有的标签 git tag"></a>列显已有的标签 <code>git tag</code></h3><blockquote>
<p>我们可以用特定的搜索模式列出符合条件的标签 <code>$ git tag -l 'v1.4.2.*'</code> result: v1.4.2.1 v1.4.2.2 v1.4.2.3 v1.4.2.4</p>
</blockquote>
<h3 id="新建标签"><a href="#新建标签" class="headerlink" title="新建标签"></a>新建标签</h3><p>Git 使用的标签有两种类型：轻量级的（lightweight）和含附注的（annotated）。</p>
<ul>
<li>轻量级标签: 就像是个不会变化的分支，实际上它就是个指向特 定提交对象的引用</li>
<li>含附注标签，实际上是存储在仓库中的一个独立对象，它有自身的校验和信息，包含着标签的名字，电子邮件地址和日期，以及标签说明，标 签本身也允许使用 GNU Privacy Guard (GPG) 来签署或验证</li>
</ul>
<h3 id="含附注的标签"><a href="#含附注的标签" class="headerlink" title="含附注的标签"></a>含附注的标签</h3><p><code>$ git tag -a v1.4 -m 'delete so libs'</code></p>
<ul>
<li><code>-a</code> annotated 指定标签名字</li>
<li><code>-m</code> msg</li>
<li>可以使用 <code>git show &lt;tag name&gt;</code> 显示tag信息</li>
</ul>
<p>常用命令</p>
<pre><code>$ git tag -a v0.1.1 8e918de2ca5bc06d436df990d658369c462f5c69 #补打标签
remote 
$ git push origin v0.1.2 # 将v0.1.2标签提交到git服务器
$ git push origin –tags # 将本地所有标签一次性提交到git服务器</code></pre><h2 id="Git-Branch"><a href="#Git-Branch" class="headerlink" title="Git Branch"></a>Git Branch</h2><p>常用命令</p>
<pre class="line-numbers language-shell"><code class="language-shell">git checkout -b (branch name) 创建新分支，并立即切换到它
git branch -d (branch name) #需合并才能删除分支 git branch -D (branch name) 删除分支
git branch <branch> <Hash> 基于当前分支的某一次commit来创建分支
git checkout -B <branch> force to overwrite same name branch
git checkout --orphan <branch> ## new a log_clear branch and switch to it git checkout --track -b track_master origin/master
$ git cherry-pick xxx  #可以同步一个commit到本分支<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p> <strong>何谓分支</strong></p>
<ol>
<li>Git会先计算每一个子目录（本例中就是项目根目录）的校验和</li>
<li>在Git仓库将这些目录保存为树（tree）对象</li>
</ol>
<h2 id="分享与更新项目"><a href="#分享与更新项目" class="headerlink" title="分享与更新项目"></a>分享与更新项目</h2><pre class="line-numbers language-shell"><code class="language-shell">git archive -o ../updated.zip HEAD $(git diff --name-only HEAD^)  #xxx代表SHA-1 Hash值。Git打包源码 
#Fetch And Pull  
git fetch origin # 取得远程更新（到origin/master  "origin/master" 和普通的branch一样，除了git不允许切换到它）， 但还没有合并 git merge origin/master  master  # 把更新的内容（origin/master）合并到本地分支（master）
git merge origin/master master --squash // no branch log history 
git log origin/master ^master # after fetch  before merge  look the  origin/master  diff log from local master
git pull origin master # 相当于fetch和merge的合并，但分步操作更保险 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="检查与比较"><a href="#检查与比较" class="headerlink" title="检查与比较"></a>检查与比较</h4><p>git diff v0.9  #diff current status and tag status<br>可以执行类似 git diff branchA branchB 的命令。 不过它的问题在于它会完完全全按你说的作 —— 它会直接给你个补丁文件，该补丁能够将甲分支的最新快照变成乙分支的最新快照的样子。 这意味着如果两个分支已经产生分歧 —— 奔往两个不同方向了 —— 它会移除甲分支中引入的所有工作，然后累加乙分支中的所有工作。 这大概不是你要的吧 —— 你想要不在甲分支中的乙分支的改动。所以你真的需要的是两个分支叉开去时，和最新的乙分支的差别。 所以，如果我们的历史记录看起来像这样：<br>$ git log –graph –oneline –decorate –all<br>git diff branchA…branchB 来查看 branchB 与 branchA 的相对差值。</p>
<h4 id="Git之本地忽略"><a href="#Git之本地忽略" class="headerlink" title="Git之本地忽略"></a>Git之本地忽略</h4><p>未跟踪文件</p>
<pre class="line-numbers language-java"><code class="language-java">git config <span class="token operator">--</span>global core<span class="token punctuation">.</span>excludesfile  文件的绝对路径或 <span class="token punctuation">.</span>git<span class="token operator">/</span>info<span class="token operator">/</span>exclude
已跟踪了的文件
$ git update<span class="token operator">-</span>index <span class="token operator">--</span>assume<span class="token operator">-</span>unchanged <span class="token operator">/</span>path<span class="token operator">/</span>to<span class="token operator">/</span>file       #忽略跟踪
$ git update<span class="token operator">-</span>index <span class="token operator">--</span>no<span class="token operator">-</span>assume<span class="token operator">-</span>unchanged <span class="token operator">/</span>path<span class="token operator">/</span>to<span class="token operator">/</span>file   #恢复跟踪<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h4><pre><code>git reset HEAD a_file  #undo last time 
git add a_file git reset - - hard HEAD #reset repo to HEAD 
git reset - - hard  3d409b9a302ce55d12dffdf3d99f0bed7dc2d7ff #reset to this commit time 
git checkout 3d409b9a302ce55d12dffdf3d99f0bed7dc2d7ff  # checkout a temp branch to look around </code></pre><h4 id="技巧和窍门"><a href="#技巧和窍门" class="headerlink" title="技巧和窍门"></a>技巧和窍门</h4><p><strong>自动完成</strong><br>如果你用的是 Bash shell，可以试试看 Git 提供的自动完成脚本。下载 Git 的源代码，进入 <code>contrib/completion</code> 目录，会看到一个git-completion.bash 文件。将此文件复制到你自己的用户主目录中（译注：按照下面的示例，还应改名加上点：<code>cp git-completion.bash ~/.git-completion.bash</code>，并把下面一行内容添加到你的.bashrc 文件中：</p>
<blockquote>
<p>source ~/.git-completion.bash</p>
</blockquote>
<p>也可以为系统上所有用户都设置默认使用此脚本。Mac 上将此脚本复制到 <code>/opt/local/etc/bash_completion.d</code>目录中，Linux 上则复制到/etc/bash_completion.d/ 目录中。这两处目录中的脚本，都会在 Bash 启动时自动加载。</p>
<p>如果在 Windows 上安装了 msysGit，默认使用的 Git Bash 就已经配好了这个自动完成脚本，可以直接使用。</p>
<p><strong>Git 命令别名</strong></p>
<h1 id="Git分支管理策略"><a href="#Git分支管理策略" class="headerlink" title="Git分支管理策略"></a>Git分支管理策略</h1><ul>
<li>Master </li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-c6f141e8343b590e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Master.png"></p>
<ul>
<li>Develop<br><img src="http://upload-images.jianshu.io/upload_images/1321512-3a5d7629205a8ff2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Develop"></li>
</ul>
<h2 id="Tmeporary"><a href="#Tmeporary" class="headerlink" title="Tmeporary"></a>Tmeporary</h2><pre><code>　　* 功能（feature）分支
　　* 预发布（release）分支
　　* 修补bug（fixbug）分支</code></pre><p>Create a Feature branch: <code>git checkout -b feature-x develop</code> </p>
<ul>
<li>预发布分支<br>Create a release branch: <code>git checkout -b release-1.2 develop</code><blockquote>
<p>预发布分支，它是指发布正式版本之前（即合并到Master分支之前），我们可能需要有一个预发布的版本进行测试。<br>预发布分支是从Develop分支上面分出来的，预发布结束以后，必须合并进Develop和Master分支。它的命名，可以采用release-*的形式。</p>
</blockquote>
</li>
</ul>
<p>确认没有问题后，合并到master分支：</p>
<pre class="line-numbers language-shell"><code class="language-shell">git checkout master
git merge --no-ff release-1.2
# 对合并生成的新节点，做一个标签    
git tag -a 1.2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>再合并到develop分支并删除：</p>
<pre><code>git checkout develop
git merge --no-ff release-1.2
git branch -d release-1.2</code></pre><ul>
<li>修补bug分支<br><img src="http://upload-images.jianshu.io/upload_images/1321512-87d9eef790f21405.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="FixBug"></li>
</ul>
<pre class="line-numbers language-git"><code class="language-git"><span class="token comment" spellcheck="true">#Create a fixbug branch:</span>
git checkout -b fixbug-0.1 master
<span class="token comment" spellcheck="true">#fixbug over </span>
git checkout master
git merge --no-ff fixbug-0.1
git tag -a 0.1.1
<span class="token comment" spellcheck="true">#merge to develop</span>
git checkout develop
git merge --no-ff fixbug-0.1
<span class="token comment" spellcheck="true">#delete branch </span>
git branch -d fixbug-0.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li><a href="https://segmentfault.com/a/1190000002443283" target="_blank" rel="noopener">git 文件打包命令</a></li>
</ul>
<h2 id="SourceTree"><a href="#SourceTree" class="headerlink" title="SourceTree"></a>SourceTree</h2><ul>
<li><a href="https://www.jianshu.com/p/d46da933c180" target="_blank" rel="noopener">GitFlow+Gitlab工作流及Git规范</a></li>
</ul>
<h1 id="Git-提交规范"><a href="#Git-提交规范" class="headerlink" title="Git 提交规范"></a>Git 提交规范</h1><ul>
<li>feat：新功能（feature）</li>
<li>fix：修补bug</li>
<li>docs：文档（documentation）</li>
<li>style： 格式（不影响代码运行的变动）</li>
<li>refactor：重构（即不是新增功能，也不是修改bug的代码变动）</li>
<li>test：增加测试</li>
<li>chore：构建过程或辅助工具的变动</li>
</ul>
<p><code>type</code>（必需）、<code>scope</code>（可选）和<code>subject</code>（必需）</p>
<pre class="line-numbers language-xml"><code class="language-xml">`<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>(<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>): <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>subject</span><span class="token punctuation">></span></span>`<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h1 id="Git子模块"><a href="#Git子模块" class="headerlink" title="Git子模块"></a>Git子模块</h1><p>常用命令</p>
<pre class="line-numbers language-shell"><code class="language-shell">#添加子模块
git submodule add https://github.com/maonx/vimwiki-assets.git assets/submodule

#查看子模块
git submodule

#更新子模块
git submodule update

#子模块更新
cd assets/submodule
git pull<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="博客教程"><a href="#博客教程" class="headerlink" title="博客教程"></a>博客教程</h2><ul>
<li><a href="https://www.cnblogs.com/ludashi/p/8052739.html" target="_blank" rel="noopener">Git知识总览(一) 从 git clone 和 git status 谈起</a></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>Javapoet API 简介使用思路-Java代码生成</title>
    <url>/2018/09/23/2018-9-23-javapoet-note/</url>
    <content><![CDATA[<h1 id="基础总结"><a href="#基础总结" class="headerlink" title="基础总结"></a>基础总结</h1><h2 id="JavaPoet简介"><a href="#JavaPoet简介" class="headerlink" title="JavaPoet简介"></a>JavaPoet简介</h2><p>JavaPoet 是一个生成.Java源文件的Java API。源文件生成在<code>annotation processing</code> 或者和一些元数据，例如文件，数据库设计，协议格式等，进行交互时会很有用。通过代码生成，你能够减少冗余的代码模板，同时保证唯一正确的源文件为元数据。</p>
<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul>
<li><a href="#基础总结">基础总结</a><ul>
<li><a href="#javapoet简介">JavaPoet简介</a></li>
<li><a href="#使用总结">使用总结</a></li>
<li><a href="#最小案例">最小案例</a></li>
<li><a href="#类说明">类说明</a><ul>
<li><a href="#公共">公共</a></li>
<li><a href="#方法相关">方法相关</a></li>
<li><a href="#其他">其他</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="https://github.com/square/javapoet" target="_blank" rel="noopener">JavaPoet 官网</a></li>
</ul>
<h1 id="基础总结-1"><a href="#基础总结-1" class="headerlink" title="基础总结"></a>基础总结</h1><h2 id="JavaPoet简介-1"><a href="#JavaPoet简介-1" class="headerlink" title="JavaPoet简介"></a>JavaPoet简介</h2><p>JavaPoet 是一个生成.Java源文件的Java API。源文件生成在<code>annotation processing</code> 或者和一些元数据，例如文件，数据库设计，协议格式等，进行交互时会很有用。通过代码生成，你能够减少冗余的代码模板，同时保证唯一正确的源文件为元数据。</p>
<p><strong>原文</strong><br><code>JavaPoet</code> is a Java API for generating <code>.java</code> source files.</p>
<blockquote>
<p>Source file generation can be useful when doing things such as annotation processing or interacting with metadata files (e.g., database schemas, protocol formats). By generating code, you eliminate the need to write boilerplate while also keeping a single source of truth for the metadata.</p>
</blockquote>
<h2 id="使用总结"><a href="#使用总结" class="headerlink" title="使用总结"></a>使用总结</h2><blockquote>
<p> 基本使用逻辑，按照正常的新建.java，按照逻辑编写对应的代码，编写的代码替换为Javapoet的语法就可以了，<font color="red">Javapoet 的语法过一遍不用记忆,甚至看一下最小案例，直接开车都木有问题</font>，<a href="https://github.com/square/javapoet" target="_blank" rel="noopener">使用的时候不记得访问GitHub主页对应搜索</a></p>
</blockquote>
<p>引用配置</p>
<pre><code>compile 'com.squareup:javapoet:1.11.1'
&lt;dependency&gt;
  &lt;groupId&gt;com.squareup&lt;/groupId&gt;
  &lt;artifactId&gt;javapoet&lt;/artifactId&gt;
  &lt;version&gt;1.11.1&lt;/version&gt;
&lt;/dependency&gt;</code></pre><h2 id="最小案例"><a href="#最小案例" class="headerlink" title="最小案例"></a>最小案例</h2><p>HelloWorld.java</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>helloworld<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello, JavaPoet!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>JavaPoet.java</p>
<pre class="line-numbers language-java"><code class="language-java">MethodSpec main <span class="token operator">=</span> MethodSpec<span class="token punctuation">.</span><span class="token function">methodBuilder</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">addModifiers</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span>PUBLIC<span class="token punctuation">,</span> Modifier<span class="token punctuation">.</span>STATIC<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">returns</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">addParameter</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"args"</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">addStatement</span><span class="token punctuation">(</span><span class="token string">"$T.out.println($S)"</span><span class="token punctuation">,</span> System<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"Hello, JavaPoet!"</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

TypeSpec helloWorld <span class="token operator">=</span> TypeSpec<span class="token punctuation">.</span><span class="token function">classBuilder</span><span class="token punctuation">(</span><span class="token string">"HelloWorld"</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">addModifiers</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span>PUBLIC<span class="token punctuation">,</span> Modifier<span class="token punctuation">.</span>FINAL<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">addMethod</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

JavaFile javaFile <span class="token operator">=</span> JavaFile<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token string">"com.example.helloworld"</span><span class="token punctuation">,</span> helloWorld<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

javaFile<span class="token punctuation">.</span><span class="token function">writeTo</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="类说明"><a href="#类说明" class="headerlink" title="类说明"></a>类说明</h2><ul>
<li>类生成：TypeSpec.classBuilder(“HelloWorld”)</li>
<li>接口：TypeSpec.interfaceBuilder(“HelloWorld”)</li>
<li>方法生成：MethodSpec.methodBuilder(“main”)</li>
<li>增加访问权限： addModifiers(Modifier.PUBLIC, Modifier.STATIC)</li>
<li>属性：FieldSpec /TypeSpec.addField</li>
<li>参数：ParameterSpec/MethodSpec.addParameter(ParameterSpec)</li>
<li>文档：MethodSpec.addJavadoc</li>
</ul>
<h3 id="公共"><a href="#公共" class="headerlink" title="公共"></a>公共</h3><ul>
<li><p>String.format() 字符串格式化</p>
<ul>
<li><p>$L for Literals <code>.addStatement("result = result $L i", op)</code></p>
</li>
<li><p>$S for Strings <code>.addStatement("return $S", name)</code></p>
</li>
<li><p>$T for Types  <code>.addStatement("return new $T()", Date.class)</code> 会自动<code>import java.util.Date;</code>包名</p>
<ul>
<li>手动指定包名：<code>ClassName hoverboard = ClassName.get("com.mattel", "Hoverboard");</code></li>
</ul>
</li>
<li><p>Code block 代码块</p>
<ul>
<li><code>CodeBlock.builder().add("I ate $2L $1L", "tacos", 3)</code></li>
<li>map<pre class="line-numbers language-java"><code class="language-java">Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"food"</span><span class="token punctuation">,</span> <span class="token string">"tacos"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"count"</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
CodeBlock<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNamed</span><span class="token punctuation">(</span><span class="token string">"I ate $count:L $food:L"</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Import static 静态导入</p>
<pre class="line-numbers language-java"><code class="language-java">JavaFile<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token string">"com.example.helloworld"</span><span class="token punctuation">,</span> hello<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addStaticImport</span><span class="token punctuation">(</span>hoverboard<span class="token punctuation">,</span> <span class="token string">"createNimbus"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="方法相关"><a href="#方法相关" class="headerlink" title="方法相关"></a>方法相关</h3><ul>
<li><p>增加代码块</p>
<ul>
<li><p>addCode</p>
<pre class="line-numbers language-java"><code class="language-java">MethodSpec main <span class="token operator">=</span> MethodSpec<span class="token punctuation">.</span><span class="token function">methodBuilder</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addCode</span><span class="token punctuation">(</span><span class="token string">""</span>
      <span class="token operator">+</span> <span class="token string">"int total = 0;\n"</span>
      <span class="token operator">+</span> <span class="token string">"for (int i = 0; i &lt; 10; i++) {\n"</span>
      <span class="token operator">+</span> <span class="token string">"  total += i;\n"</span>
      <span class="token operator">+</span> <span class="token string">"}\n"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">int</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  total <span class="token operator">+=</span> i<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>beginControlFlow( { )<code>ddStatement</code>endControlFlow 不用写<code>{\n;}</code>等</p>
<pre class="line-numbers language-java"><code class="language-java">MethodSpec main <span class="token operator">=</span> MethodSpec<span class="token punctuation">.</span><span class="token function">methodBuilder</span><span class="token punctuation">(</span><span class="token string">"main"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addStatement</span><span class="token punctuation">(</span><span class="token string">"int total = 0"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">beginControlFlow</span><span class="token punctuation">(</span><span class="token string">"for (int i = 0; i &lt; 10; i++)"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addStatement</span><span class="token punctuation">(</span><span class="token string">"total += i"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">endControlFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
</li>
<li><p>函数内部调用</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> String <span class="token function">byteToHex</span><span class="token punctuation">(</span><span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">char</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
result<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">hexDigit</span><span class="token punctuation">(</span>b <span class="token operator">&amp;</span> <span class="token number">0xf</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">char</span> <span class="token function">hexDigit</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> i <span class="token operator">+</span> <span class="token string">'0'</span> <span class="token operator">:</span> i <span class="token operator">-</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">//-------------------------------------</span>
MethodSpec hexDigit <span class="token operator">=</span> MethodSpec<span class="token punctuation">.</span><span class="token function">methodBuilder</span><span class="token punctuation">(</span><span class="token string">"hexDigit"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addParameter</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"i"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">returns</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addStatement</span><span class="token punctuation">(</span><span class="token string">"return (char) (i &lt; 10 ? i + '0' : i - 10 + 'a')"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
MethodSpec byteToHex <span class="token operator">=</span> MethodSpec<span class="token punctuation">.</span><span class="token function">methodBuilder</span><span class="token punctuation">(</span><span class="token string">"byteToHex"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addParameter</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">returns</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addStatement</span><span class="token punctuation">(</span><span class="token string">"char[] result = new char[2]"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addStatement</span><span class="token punctuation">(</span><span class="token string">"result[1] = $N(b &amp; 0xf)"</span><span class="token punctuation">,</span> hexDigit<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addStatement</span><span class="token punctuation">(</span><span class="token string">"return new String(result)"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>匿名内部类：Anonymous Inner Classes</p>
</li>
<li><p>抽象方法：Modifier.ABSTRACT</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>
<span class="token keyword">protected</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">flux</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">//-------------------------</span>
MethodSpec flux <span class="token operator">=</span> MethodSpec<span class="token punctuation">.</span><span class="token function">methodBuilder</span><span class="token punctuation">(</span><span class="token string">"flux"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addModifiers</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span>ABSTRACT<span class="token punctuation">,</span> Modifier<span class="token punctuation">.</span>PROTECTED<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
TypeSpec helloWorld <span class="token operator">=</span> TypeSpec<span class="token punctuation">.</span><span class="token function">classBuilder</span><span class="token punctuation">(</span><span class="token string">"HelloWorld"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addModifiers</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span>PUBLIC<span class="token punctuation">,</span> Modifier<span class="token punctuation">.</span>ABSTRACT<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addMethod</span><span class="token punctuation">(</span>flux<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>构造方法</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token function">HelloWorld</span><span class="token punctuation">(</span>String greeting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>greeting <span class="token operator">=</span> greeting<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">//------------------------------</span>
MethodSpec flux <span class="token operator">=</span> MethodSpec<span class="token punctuation">.</span><span class="token function">constructorBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addModifiers</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span>PUBLIC<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addParameter</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"greeting"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addStatement</span><span class="token punctuation">(</span><span class="token string">"this.$N = $N"</span><span class="token punctuation">,</span> <span class="token string">"greeting"</span><span class="token punctuation">,</span> <span class="token string">"greeting"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>MethodSpec.addAnnotation(Override.class)</p>
</li>
</ul>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul>
<li>参数: <code>Parameters</code><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">welcomeOverlords</span><span class="token punctuation">(</span><span class="token keyword">final</span> String android<span class="token punctuation">,</span> <span class="token keyword">final</span> String robot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">//-------------------------------</span>
ParameterSpec android <span class="token operator">=</span> ParameterSpec<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"android"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addModifiers</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span>FINAL<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
MethodSpec welcomeOverlords <span class="token operator">=</span> MethodSpec<span class="token punctuation">.</span><span class="token function">methodBuilder</span><span class="token punctuation">(</span><span class="token string">"welcomeOverlords"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addParameter</span><span class="token punctuation">(</span>android<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addParameter</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"robot"</span><span class="token punctuation">,</span> Modifier<span class="token punctuation">.</span>FINAL<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>属性：FieldSpec<pre class="line-numbers language-java"><code class="language-java">FieldSpec android <span class="token operator">=</span> FieldSpec<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"android"</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">addModifiers</span><span class="token punctuation">(</span>Modifier<span class="token punctuation">.</span>PRIVATE<span class="token punctuation">,</span> Modifier<span class="token punctuation">.</span>FINAL<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">initializer</span><span class="token punctuation">(</span><span class="token string">"$S + $L"</span><span class="token punctuation">,</span> <span class="token string">"Lollipop v."</span><span class="token punctuation">,</span> <span class="token number">5.0d</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>Javadoc</li>
</ul>
<h1 id="JavaPoet-官网"><a href="#JavaPoet-官网" class="headerlink" title="JavaPoet 官网"></a><a href="https://github.com/square/javapoet" target="_blank" rel="noopener">JavaPoet 官网</a></h1>]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>SQlite数据库查缺补漏</title>
    <url>/2018/09/17/2018-9-17-note-sqlite/</url>
    <content><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul>
<li><a href="#SQLite基础">SQLite基础</a><ul>
<li><a href="#表操作">表操作</a></li>
<li><a href="#增">增</a><ul>
<li><a href="#使用一个表来填充另一个表">使用一个表来填充另一个表</a></li>
</ul>
</li>
<li><a href="#查">查</a></li>
</ul>
</li>
<li><a href="#高级教程">高级教程</a><ul>
<li><a href="#索引">索引</a><ul>
<li><a href="#索引避免使用">索引避免使用</a></li>
<li><a href="#应用Indexed-By">应用Indexed-By</a></li>
<li><a href="#常用命令：">常用命令：</a></li>
</ul>
</li>
<li><a href="#PRAGMA">PRAGMA</a></li>
<li><a href="#sqlite约束">SQLite约束</a></li>
<li><a href="#join">Join</a><ul>
<li><a href="#内连接---inner-join">内连接 - INNER JOIN</a></li>
<li><a href="#外连接---outer-join">外连接 - OUTER JOIN</a></li>
<li><a href="#交叉连接---cross-join了解">交叉连接 - CROSS JOIN(了解)</a></li>
</ul>
</li>
<li><a href="#unions-子句">Unions 子句</a></li>
<li><a href="#触发器（trigger）">触发器（Trigger）</a><ul>
<li><a href="#创建">创建</a></li>
<li><a href="#找">找</a></li>
<li><a href="#删除">删除</a></li>
<li><a href="#综合">综合</a></li>
</ul>
</li>
<li><a href="#Alter修改">Alter修改</a></li>
<li><a href="#视图（view）">视图（View）</a><ul>
<li><a href="#语法">语法</a></li>
</ul>
</li>
<li><a href="#Transaction">Transaction</a></li>
<li><a href="#sqlite-子查询">SQLite 子查询</a><ul>
<li><a href="#查询">查询</a></li>
<li><a href="#插入">插入</a></li>
<li><a href="#更新">更新</a></li>
<li><a href="#删除-1">删除</a></li>
</ul>
</li>
<li><a href="#explain">Explain</a><ul>
<li><a href="#语法-1">语法</a></li>
</ul>
</li>
<li><a href="#日期--时间">日期 &amp; 时间</a></li>
</ul>
</li>
</ul>
<h1 id="SQLite-基础"><a href="#SQLite-基础" class="headerlink" title="SQLite 基础"></a>SQLite 基础</h1><p><a href="http://www.runoob.com/sqlite/sqlite-tutorial.html" target="_blank" rel="noopener">SQLite 基础 教程网址</a></p>
<h2 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h2><p>Create</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> COMPANY<span class="token punctuation">(</span>
   ID <span class="token keyword">INTEGER</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span>   AUTOINCREMENT<span class="token punctuation">,</span>
   NAME           <span class="token keyword">TEXT</span>      <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
   AGE            <span class="token keyword">INT</span>       <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
   ADDRESS        CHAR<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
   SALARY         <span class="token keyword">REAL</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="增"><a href="#增" class="headerlink" title="增"></a>增</h2><pre><code>INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY)
VALUES (1, 'Paul', 32, 'California', 20000.00 );</code></pre><h3 id="使用一个表来填充另一个表"><a href="#使用一个表来填充另一个表" class="headerlink" title="使用一个表来填充另一个表"></a>使用一个表来填充另一个表</h3><p>语法：</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> first_table_name <span class="token punctuation">[</span><span class="token punctuation">(</span>column1<span class="token punctuation">,</span> column2<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> columnN<span class="token punctuation">)</span><span class="token punctuation">]</span>
   <span class="token keyword">SELECT</span> column1<span class="token punctuation">,</span> column2<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>columnN
   <span class="token keyword">FROM</span> second_table_name
   <span class="token punctuation">[</span><span class="token keyword">WHERE</span> condition<span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="查"><a href="#查" class="headerlink" title="查"></a>查</h2><p>SQLite Where 子句</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> COMPANY
        <span class="token keyword">WHERE</span> AGE <span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> AGE <span class="token keyword">FROM</span> COMPANY <span class="token keyword">WHERE</span> SALARY <span class="token operator">></span> <span class="token number">65000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>Like</p>
<ul>
<li>百分号 （%）匹配多个</li>
<li>下划线 （_） 匹配一个</li>
</ul>
<p>Glob 和like同样用法，不同大小写敏感</p>
<ul>
<li>星号 （*）多个</li>
<li>问号 （?）单个</li>
</ul>
<p>OFFSET</p>
<pre class="line-numbers language-sql"><code class="language-sql"> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> COMPANY <span class="token keyword">LIMIT</span> <span class="token number">3</span> <span class="token keyword">OFFSET</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true"># 第三位开始提取 3 个记录：</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>Having</strong><br>过滤分组条件位置在</p>
<pre><code>group by having  order by</code></pre><p><strong>distinct</strong></p>
<pre><code>select distinct name from company;</code></pre><h1 id="高级教程"><a href="#高级教程" class="headerlink" title="高级教程"></a>高级教程</h1><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h3 id="索引避免使用"><a href="#索引避免使用" class="headerlink" title="索引避免使用"></a>索引避免使用</h3><ul>
<li>表小</li>
<li>频繁写入</li>
<li>列有大量NULL</li>
<li>不应使用在频繁操作的列上</li>
</ul>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> index_name <span class="token keyword">ON</span> table_name<span class="token punctuation">;</span>
<span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> index_name
<span class="token keyword">ON</span> table_name <span class="token punctuation">(</span>column_name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 单列</span>
<span class="token keyword">CREATE</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">INDEX</span> index_name
<span class="token keyword">on</span> table_name <span class="token punctuation">(</span>column_name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true"># 唯一</span>
<span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> index_name
<span class="token keyword">on</span> table_name <span class="token punctuation">(</span>column1<span class="token punctuation">,</span> column2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#组合</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="应用Indexed-By"><a href="#应用Indexed-By" class="headerlink" title="应用Indexed By"></a>应用Indexed By</h3><pre class="line-numbers language-语法"><code class="language-语法">SELECT|DELETE|UPDATE column1, column2...
INDEXED BY (index_name)
table_name
WHERE (CONDITION);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h3><p>查出数据库所有索引</p>
<pre><code>SELECT * FROM sqlite_master WHERE type = 'index';</code></pre><h2 id="PRAGMA"><a href="#PRAGMA" class="headerlink" title="PRAGMA"></a>PRAGMA</h2><p><a href="http://www.runoob.com/sqlite/sqlite-pragma.html" target="_blank" rel="noopener">PRAGMA 网址</a></p>
<p>作用读写Sqlite内部环境变量和状态，操作如下：</p>
<pre class="line-numbers language-txt"><code class="language-txt">PRAGMA pragma_name; #读取
PRAGMA pragma_name = value; #设置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>常用可设置的选项</p>
<ul>
<li>auto_vacuum  数据从数据库移除而缩小</li>
<li>encoding  控制字符串/存储数据编码</li>
<li>index_info ( table_name ); 索引信息<br>….</li>
</ul>
<h2 id="SQLite-约束"><a href="#SQLite-约束" class="headerlink" title="SQLite 约束"></a>SQLite 约束</h2><ul>
<li>NOT NULL 约束</li>
<li>DEFAULT 约束</li>
<li>UNIQUE 约束</li>
<li>PRIMARY Key</li>
<li>CHECK 约束<pre><code>CREATE TABLE COMPANY(
 ID INT PRIMARY KEY     NOT NULL,
 NAME           TEXT    NOT NULL,
 AGE            INT     NOT NULL UNIQUE,
 ADDRESS        CHAR(50),
 SALARY         REAL    DEFAULT 50000.00
 bonus          INT     CHECK(bonus &gt; 0)
);</code></pre></li>
</ul>
<h2 id="Join"><a href="#Join" class="headerlink" title="Join"></a>Join</h2><p> <a href="http://www.runoob.com/sqlite/sqlite-joins.html" target="_blank" rel="noopener">http://www.runoob.com/sqlite/sqlite-joins.html</a></p>
<h3 id="内连接-INNER-JOIN"><a href="#内连接-INNER-JOIN" class="headerlink" title="内连接 - INNER JOIN"></a>内连接 - INNER JOIN</h3><pre class="line-numbers language-sql"><code class="language-sql"> <span class="token keyword">SELECT</span> EMP_ID<span class="token punctuation">,</span> NAME<span class="token punctuation">,</span> DEPT <span class="token keyword">FROM</span> COMPANY <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> DEPARTMENT
        <span class="token keyword">ON</span> COMPANY<span class="token punctuation">.</span>ID <span class="token operator">=</span> DEPARTMENT<span class="token punctuation">.</span>EMP_ID<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- 自动检测两个表中的每一列的值之间相等值</span>
<span class="token keyword">SELECT</span> EMP_ID<span class="token punctuation">,</span> NAME<span class="token punctuation">,</span> DEPT <span class="token keyword">FROM</span> COMPANY <span class="token keyword">NATURAL</span> <span class="token keyword">JOIN</span> DEPARTMENT<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>结果：</p>
<pre><code>EMP_ID      NAME        DEPT
/----------  ----------  ----------
1           Paul        IT Billing
2           Allen       Engineerin
7           James       Finance</code></pre><h3 id="外连接-OUTER-JOIN"><a href="#外连接-OUTER-JOIN" class="headerlink" title="外连接 - OUTER JOIN"></a>外连接 - OUTER JOIN</h3><blockquote>
<p>SQLite 只支持 左外连接（LEFT OUTER JOIN）</p>
</blockquote>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> EMP_ID<span class="token punctuation">,</span> NAME<span class="token punctuation">,</span> DEPT <span class="token keyword">FROM</span> COMPANY <span class="token keyword">LEFT</span> <span class="token keyword">OUTER</span> <span class="token keyword">JOIN</span> DEPARTMENT
        <span class="token keyword">ON</span> COMPANY<span class="token punctuation">.</span>ID <span class="token operator">=</span> DEPARTMENT<span class="token punctuation">.</span>EMP_ID<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>结果：</p>
<pre><code>EMP_ID      NAME        DEPT
----------  ----------  ----------
1           Paul        IT Billing
2           Allen       Engineerin
            Teddy
            Mark
            David
            Kim
7           James       Finance</code></pre><h3 id="交叉连接-CROSS-JOIN-了解"><a href="#交叉连接-CROSS-JOIN-了解" class="headerlink" title="交叉连接 - CROSS JOIN(了解)"></a>交叉连接 - CROSS JOIN(了解)</h3><p>相当于把第一个表选中的列插入第二个中</p>
<pre><code>SELECT EMP_ID, NAME, DEPT FROM COMPANY CROSS JOIN DEPARTMENT;</code></pre><h2 id="Unions-子句"><a href="#Unions-子句" class="headerlink" title="Unions 子句"></a>Unions 子句</h2><p><a href="http://www.runoob.com/sqlite/sqlite-unions-clause.html" target="_blank" rel="noopener">Unions 子句 网址</a></p>
<blockquote>
<p>合并<font color="red">两个或多个 SELECT</font> 语句的结果，<font color="red">不返回任何重复的行</font></p>
</blockquote>
<ul>
<li>须select 列数相同（数目，类型相同）</li>
</ul>
<p>案例：</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> EMP_ID<span class="token punctuation">,</span> NAME<span class="token punctuation">,</span> DEPT <span class="token keyword">FROM</span> COMPANY <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> DEPARTMENT
        <span class="token keyword">ON</span> COMPANY<span class="token punctuation">.</span>ID <span class="token operator">=</span> DEPARTMENT<span class="token punctuation">.</span>EMP_ID
   <span class="token keyword">UNION</span>
     <span class="token keyword">SELECT</span> EMP_ID<span class="token punctuation">,</span> NAME<span class="token punctuation">,</span> DEPT <span class="token keyword">FROM</span> COMPANY <span class="token keyword">LEFT</span> <span class="token keyword">OUTER</span> <span class="token keyword">JOIN</span> DEPARTMENT
        <span class="token keyword">ON</span> COMPANY<span class="token punctuation">.</span>ID <span class="token operator">=</span> DEPARTMENT<span class="token punctuation">.</span>EMP_ID<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>UNION ALL 显示重复</p>
</blockquote>
<h2 id="触发器（Trigger）"><a href="#触发器（Trigger）" class="headerlink" title="触发器（Trigger）"></a>触发器（Trigger）</h2><p><a href="http://www.runoob.com/sqlite/sqlite-trigger.html" target="_blank" rel="noopener">触发器（Trigger）</a></p>
<p>监听table上的INSERT、DELETE 和 UPDATE做出对应的操作，类似于观察者模式</p>
<ul>
<li>当触发器相关联的表删除时，自动删除触发器（Trigger）</li>
<li>要修改的表必须存在于同一数据库中</li>
<li>when 可以连接sql子句</li>
</ul>
<h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>语法：</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">CREATE</span>  <span class="token keyword">TRIGGER</span> trigger_name <span class="token punctuation">[</span>BEFORE<span class="token operator">|</span><span class="token keyword">AFTER</span><span class="token punctuation">]</span> <span class="token keyword">UPDATE</span> <span class="token keyword">OF</span> column_name
<span class="token keyword">ON</span> table_name
<span class="token keyword">BEGIN</span>
 <span class="token comment" spellcheck="true">-- Trigger logic goes here....</span>
<span class="token keyword">END</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>案例：</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TRIGGER</span> audit_log <span class="token keyword">AFTER</span> <span class="token keyword">INSERT</span>
<span class="token keyword">ON</span> COMPANY
<span class="token keyword">BEGIN</span>
   <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> AUDIT<span class="token punctuation">(</span>EMP_ID<span class="token punctuation">,</span> ENTRY_DATE<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>new<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token string">'now'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>注意：<font color="red">datetime,new的使用</font>,new代表COMPANY</p>
</blockquote>
<h3 id="找"><a href="#找" class="headerlink" title="找"></a>找</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> sqlite_master <span class="token keyword">WHERE</span> <span class="token keyword">type</span> <span class="token operator">=</span> <span class="token string">'trigger'</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> sqlite_master <span class="token keyword">WHERE</span> <span class="token keyword">type</span> <span class="token operator">=</span> <span class="token string">'trigger'</span> <span class="token operator">AND</span> tbl_name <span class="token operator">=</span> <span class="token string">'COMPANY'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><pre><code>DROP TRIGGER trigger_name;</code></pre><h3 id="综合"><a href="#综合" class="headerlink" title="综合"></a>综合</h3><p>案例1：</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TRIGGER</span> trigger_name
<span class="token keyword">AFTER</span> <span class="token keyword">UPDATE</span> <span class="token keyword">OF</span> id <span class="token keyword">ON</span> table_1
<span class="token keyword">FOR EACH ROW</span>
<span class="token keyword">WHEN</span> new<span class="token punctuation">.</span>id<span class="token operator">></span><span class="token number">30</span>
<span class="token keyword">BEGIN</span>
<span class="token keyword">UPDATE</span> table_2 <span class="token keyword">SET</span> id<span class="token operator">=</span>new<span class="token punctuation">.</span>id <span class="token keyword">WHERE</span> table_2<span class="token punctuation">.</span>id<span class="token operator">=</span>old<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<ul>
<li>when 或 begin~ end 可以用new,old 访问table_1状态改变的前后变化</li>
<li>FOR EACH ROW ： 删了 10 行就触发 10 次 对应for each state 只删除一次sqlite 只支持each row;</li>
</ul>
<p><strong>案例2：</strong> 当表的内容超过4条时，删除指定内容的数据</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">TRIGGER</span> autit_trigger2
    <span class="token keyword">AFTER</span>  <span class="token keyword">INSERT</span> <span class="token keyword">on</span> AUDIT
    <span class="token keyword">WHEN</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> AUDIT<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">4</span>
<span class="token keyword">BEGIN</span>
    <span class="token keyword">DELETE</span> <span class="token keyword">from</span> AUDIT <span class="token keyword">WHERE</span> emp_id <span class="token operator">></span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token keyword">END</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><font color="red">注意：When和begin~end 的操作须独立跑过一遍</font></p>
<h2 id="Alter修改"><a href="#Alter修改" class="headerlink" title="Alter修改"></a>Alter修改</h2><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 重命名table</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> database_name<span class="token punctuation">.</span>table_name <span class="token keyword">RENAME</span> <span class="token keyword">TO</span> new_table_name<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- 增加字段</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> database_name<span class="token punctuation">.</span>table_name <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> column_def<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- 案例</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> AUDIT <span class="token keyword">add</span> <span class="token keyword">COLUMN</span> ID <span class="token keyword">INT</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="视图（View）"><a href="#视图（View）" class="headerlink" title="视图（View）"></a>视图（View）</h2><p>视图（View）是一种虚表，由1或多个表组合而成，故View表由三大特点：</p>
<ul>
<li>由于是任意组合可以更多变的展示数据，更直观；</li>
<li>有组合必有舍弃，故可以隐藏部分字段</li>
<li>直接生成虚拟表，比直接操作多个表会更方便</li>
</ul>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><pre><code>-- 创建View
CREATE [TEMP | TEMPORARY] VIEW view_name AS
SELECT column1, column2.....
FROM table_name
WHERE [condition];
-- 删除View
DROP VIEW COMPANY_VIEW</code></pre><p>案例：</p>
<pre><code>CREATE VIEW COMPANY_VIEW AS
SELECT ID, NAME, AGE
FROM  COMPANY;</code></pre><p>案例2：</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">VIEW</span> COMPANY_VIEW <span class="token keyword">AS</span>
<span class="token keyword">SELECT</span> C<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> C<span class="token punctuation">.</span>NAME<span class="token punctuation">,</span> C<span class="token punctuation">.</span>AGE<span class="token punctuation">,</span> A<span class="token punctuation">.</span>EMP_ID
<span class="token keyword">FROM</span>  COMPANY C<span class="token punctuation">,</span> AUDIT A <span class="token keyword">WHERE</span> C<span class="token punctuation">.</span>ID <span class="token operator">=</span> A<span class="token punctuation">.</span>EMP_ID<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<!-- ## sqlite_sequence  -->

<h2 id="Transaction"><a href="#Transaction" class="headerlink" title="Transaction"></a>Transaction</h2><blockquote>
<p>事务控制命令只与DML命令<code>INSERT、UPDATE 和 DELETE</code> 一起使用,他们不能在创建表或删除表时使用</p>
</blockquote>
<pre><code>db.beginTransaction(); // 开启事务
try {
    db.execSQL（"insert into person (name, age) values(?,?)", new Object[]{"张三", 4});

    db.execSQL("update person set name=? where personid=?", new Object[]{"李四", 1});

    db.setTransactionSuccessful(); // 标记事务完成
} finally {
    db.endTransaction(); // 结束事务
    db.close();
}</code></pre><h2 id="SQLite-子查询"><a href="#SQLite-子查询" class="headerlink" title="SQLite 子查询"></a>SQLite 子查询</h2><p><font color="red">温馨提示： Where XX in (OOO)</font></p>
<h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><pre><code>SELECT * FROM COMPANY
     WHERE ID IN (SELECT ID  FROM COMPANY WHERE SALARY &gt; 45000) ;</code></pre><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><pre><code>INSERT INTO COMPANY_BKP
     SELECT * FROM COMPANY WHERE ID IN (SELECT ID FROM COMPANY) ;</code></pre><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><pre><code>UPDATE COMPANY SET SALARY = SALARY * 0.50
     WHERE AGE IN (SELECT AGE FROM COMPANY_BKP WHERE AGE &gt;= 27 );</code></pre><h3 id="删除-1"><a href="#删除-1" class="headerlink" title="删除"></a>删除</h3><pre><code>DELETE FROM COMPANY
     WHERE AGE IN (SELECT AGE FROM COMPANY_BKP  WHERE AGE &gt; 27 );</code></pre><h2 id="Explain"><a href="#Explain" class="headerlink" title="Explain"></a>Explain</h2><ul>
<li>输出只用于交互式分析和排除故障。</li>
<li>输出格式的细节随SQLite 版本变化</li>
</ul>
<h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">EXPLAIN</span> <span class="token punctuation">[</span>SQLite Query<span class="token punctuation">]</span>
<span class="token keyword">EXPLAIN</span>  QUERY <span class="token keyword">PLAN</span> <span class="token punctuation">[</span>SQLite Query<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>案例：</p>
<pre><code>EXPLAIN SELECT *  FROM COMPANY  WHERE Salary &amp;gt= 20000;
EXPLAIN QUERY PLAN SELECT * FROM COMPANY WHERE Salary &amp;gt= 20000;
-- 结果：
order       from        detail
----------  ----------  -------------
0           0           TABLE COMPANY</code></pre><h2 id="日期-amp-时间"><a href="#日期-amp-时间" class="headerlink" title="日期 &amp; 时间"></a>日期 &amp; 时间</h2><p><a href="http://www.runoob.com/sqlite/sqlite-date-time.html" target="_blank" rel="noopener">日期 &amp; 时间 教程网址：</a></p>
<p><strong>date</strong></p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 当前时间 2018-09-17</span>
<span class="token keyword">SELECT</span> <span class="token keyword">date</span><span class="token punctuation">(</span><span class="token string">'now'</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">-- 当前月份加1 --> 2018-10-01</span>
<span class="token keyword">SELECT</span> <span class="token keyword">date</span><span class="token punctuation">(</span><span class="token string">'now'</span><span class="token punctuation">,</span><span class="token string">'start of month'</span><span class="token punctuation">,</span><span class="token string">'+1 month'</span><span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">-- 当月最后一天</span>
<span class="token keyword">SELECT</span> <span class="token keyword">date</span><span class="token punctuation">(</span><span class="token string">'now'</span><span class="token punctuation">,</span><span class="token string">'start of month'</span><span class="token punctuation">,</span><span class="token string">'+1 month'</span><span class="token punctuation">,</span><span class="token string">'-1 day'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- 计算当年 10 月的第一个星期二的日期</span>
<span class="token keyword">SELECT</span> <span class="token keyword">date</span><span class="token punctuation">(</span><span class="token string">'now'</span><span class="token punctuation">,</span><span class="token string">'start of year'</span><span class="token punctuation">,</span><span class="token string">'+9 months'</span><span class="token punctuation">,</span><span class="token string">'weekday 2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>datetime</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- UNIX 时间戳 --> 2004-08-19 18:51:06</span>
<span class="token keyword">select</span> <span class="token keyword">datetime</span><span class="token punctuation">(</span><span class="token number">1092941466</span><span class="token punctuation">,</span> <span class="token string">'unixepoch'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>strftime</p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> strftime<span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'now'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">-- now - `1988-01-02 02:34:56` 过了多少秒</span>
<span class="token keyword">SELECT</span> strftime<span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'now'</span><span class="token punctuation">)</span> <span class="token operator">-</span> strftime<span class="token punctuation">(</span><span class="token string">'%s'</span><span class="token punctuation">,</span><span class="token string">'1988-01-02 02:34:56'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>基本UI空控件的用方法和属性</title>
    <url>/2018/09/17/2018-7-3-ui-open-source/</url>
    <content><![CDATA[<h2 id="提示类型"><a href="#提示类型" class="headerlink" title="提示类型"></a>提示类型</h2><h3 id="Tosat"><a href="#Tosat" class="headerlink" title="Tosat"></a>Tosat</h3><ul>
<li><a href="https://github.com/imjeevandeshmukh/GlideToast" target="_blank" rel="noopener">GlideToast </a><br><img src="https://raw.githubusercontent.com/imjeevandeshmukh/GlideToast/master/gifs/success.gif" alt=""> </li>
</ul>
<h2 id="工具类型"><a href="#工具类型" class="headerlink" title="工具类型"></a>工具类型</h2><ul>
<li><a href="https://github.com/wdullaer/MaterialDateTimePicker" target="_blank" rel="noopener">MaterialDateTimePicker 质感设计日期时间选择器</a></li>
</ul>
<h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><ul>
<li><a href="https://github.com/itsxtt/pattern-lock" target="_blank" rel="noopener">Pattern Lock View</a> 九宫格解锁</li>
<li><img src="https://raw.githubusercontent.com/CleverPumpkin/CrunchyCalendar/master/images/calendar.jpg" alt=""></li>
</ul>
<h2 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h2><ul>
<li><img src="https://raw.githubusercontent.com/peng8350/JPSpringMenu/master/art/main.gif" alt="JPSpringMenu"></li>
</ul>
<h2 id="操作控件"><a href="#操作控件" class="headerlink" title="操作控件"></a>操作控件</h2><h3 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h3><ul>
<li><a href="https://github.com/dmytrodanylyk/android-morphing-button" target="_blank" rel="noopener">android-morphing-button</a><br><img src="https://raw.githubusercontent.com/dmytrodanylyk/android-morphing-button/master/screenshots/intro2.gif" alt=""><br><img src="https://raw.githubusercontent.com/dmytrodanylyk/android-morphing-button/master/screenshots/intro1.gif" alt=""></li>
</ul>
]]></content>
      <categories>
        <category>UI</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>硬件相关开源库</title>
    <url>/2018/08/28/2018-8-28-hard-open-source/</url>
    <content><![CDATA[<ul>
<li><strong><a href="https://github.com/nisrulz/sensey" target="_blank" rel="noopener">sensey</a></strong> 很简洁的代码实现对传感器的监听</li>
<li><strong><a href="https://github.com/pwittchen/RxBiometric" target="_blank" rel="noopener">RxBiometric</a></strong> 用RxJava 实现对指纹扫描的控制<blockquote>
<p>RxJava and RxKotlin bindings for Biometric Prompt (Fingerprint Scanner) on Android</p>
</blockquote>
</li>
<li><strong><a href="https://github.com/pqpo/SmartCamera" target="_blank" rel="noopener">SmartCamera</a></strong><br><img src="https://raw.githubusercontent.com/pqpo/SmartCamera/master/art/smartcamera_demo.gif" alt=""></li>
</ul>
<ul>
<li><a href="https://github.com/uccmawei/FingerprintIdentify" target="_blank" rel="noopener">Android指纹识别API兼容库</a></li>
</ul>
]]></content>
      <categories>
        <category>open source</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>收集</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 网页工具</title>
    <url>/2018/08/28/2018-5-5-android-web-tools/</url>
    <content><![CDATA[<h2 id="在线看代码"><a href="#在线看代码" class="headerlink" title="在线看代码"></a>在线看代码</h2><h3 id="在线看Android源码"><a href="#在线看Android源码" class="headerlink" title="在线看Android源码"></a>在线看Android源码</h3><ul>
<li><a href="https://www.androidos.net.cn/sourcecode" target="_blank" rel="noopener">https://www.androidos.net.cn/sourcecode</a><br><img src="http://5b0988e595225.cdn.sohucs.com/images/20180718/0a28ef3942794e2b853f643a47f42cdf.gif" alt=""></li>
<li><a href="https://app.codota.com/code/query/" target="_blank" rel="noopener">codota 查询代码案例</a></li>
<li><a href="http://grepcode.com/" target="_blank" rel="noopener">查看不同版本Android，JDK源码</a><br><img src="http://ohlb58e07.bkt.clouddn.com/grep_com_sample.jpg" alt=""><!--- [Android Framwork 源码查看](http://androidxref.com/) http://androidxref.com/-->
<!--![](http://ohlb58e07.bkt.clouddn.com/android_framework_2018-5-5.jpg)-->


</li>
</ul>
<h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><ul>
<li><a href="http://search.maven.org/" target="_blank" rel="noopener">maven 仓库中搜索依赖</a><br><img src="http://ohlb58e07.bkt.clouddn.com/maven_sample_2018-5-5.jpg" alt=""></li>
<li><a href="http://www.methodscount.com/" target="_blank" rel="noopener">统计依赖大小，方法数量的变化</a></li>
<li><a href="https://github.com/anggrayudi/android-hidden-api" target="_blank" rel="noopener">引用Android隐藏的Api</a> 查看Android源码<pre class="line-numbers language-shell"><code class="language-shell">#Api 23 举例
<SDK location>/platforms/android-23/android.jar --> backup android.jar ==> android-.jar 下载对应android.jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="开源项目查找"><a href="#开源项目查找" class="headerlink" title="开源项目查找"></a>开源项目查找</h2></li>
<li><a href="https://github.com/search?utf8=%E2%9C%93&amp;q=" target="_blank" rel="noopener">GitHub 搜索</a></li>
</ul>
<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul>
<li><a href="http://www.bejson.com/" target="_blank" rel="noopener">json转化</a></li>
<li><a href="https://www.tutorialspoint.com/codingground.htm" target="_blank" rel="noopener">Free Online IDE and Terminal</a> 支持几乎所有主流编程语言的在线IDE</li>
<li><a href="https://github.com/faressoft/terminalizer" target="_blank" rel="noopener">terminalizer 录制终端命令行并转化成gif</a>  <img src="https://raw.githubusercontent.com/faressoft/terminalizer/master/img/demo.gif" alt=""></li>
<li><a href="https://about.sourcegraph.com/" target="_blank" rel="noopener">sourcegraph 基于网页端和Git的智能源码查看工具，可以本地安装</a><br><img src="http://ohlb58e07.bkt.clouddn.com/sourcegraph_1_2018-5-5.jpg" alt=""></li>
<li>在线很好的正则表达式学习网站  <a href="https://regexr.com/" target="_blank" rel="noopener">https://regexr.com/</a>  </li>
</ul>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>tool</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Preference 设置看图说话之基础篇（5分钟掌握）</title>
    <url>/2018/08/28/2018-8-28-fundamental-android-preference/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>自己独立开发过了比较多的app，发现关于设置的UI和相关的处理自己写不旦增加类开发工作量，而且常常会使整个代码层次和逻辑会变的相当混乱，让人头痛，在不考虑自己花时间弄一个设置管理类管理好设置代码，及自己处理各种UI控件的前提下，使用官方提供的Preference是最优也是最高效的选择；</p>
<h1 id="Android-Preference-提供的控件"><a href="#Android-Preference-提供的控件" class="headerlink" title="Android Preference 提供的控件"></a>Android Preference 提供的控件</h1><p>这里只列举常用的support.v7,其他的也大同小异<br>引入方式,gradle 下配置</p>
<pre><code>implementation 'com.android.support:preference-v7:27.1.1'</code></pre><p><img src="http://ohlb58e07.bkt.clouddn.com/Android_Preferen-widgets.png" alt=""></p>
<blockquote>
<p><a href="https://developer.android.com/reference/android/support/v7/preference/package-summary" target="_blank" rel="noopener">官方总结-科学上网</a>, 使用的时候查询对应属性设置</p>
</blockquote>
<p> ↳ <a href="https://developer.android.com/reference/android/support/v7/preference/Preference#" target="_blank" rel="noopener">android.support.v7.preference.Preference </a><br> ↳ Known Direct Subclasses<br><a href="https://developer.android.com/reference/android/support/v7/preference/DialogPreference.html" target="_blank" rel="noopener">DialogPreference</a>,<a href="https://developer.android.com/reference/android/support/v7/preference/PreferenceGroup.html" target="_blank" rel="noopener">PreferenceGroup</a>,<a href="https://developer.android.com/reference/android/support/v7/preference/SeekBarPreference.html" target="_blank" rel="noopener">SeekBarPreference</a>,<a href="https://developer.android.com/reference/android/support/v7/preference/TwoStatePreference.html" target="_blank" rel="noopener">TwoStatePreference</a><br>Known Indirect Subclasses<br><a href="https://developer.android.com/reference/android/support/v7/preference/CheckBoxPreference.html" target="_blank" rel="noopener">CheckBoxPreference</a>,<a href="https://developer.android.com/reference/android/support/v7/preference/DropDownPreference.html" target="_blank" rel="noopener">DropDownPreference</a>,<a href="https://developer.android.com/reference/android/support/v7/preference/EditTextPreference.html" target="_blank" rel="noopener">EditTextPreference</a>,<a href="https://developer.android.com/reference/android/support/v7/preference/ListPreference.html" target="_blank" rel="noopener">ListPreference</a>,  <a href="https://developer.android.com/reference/android/support/v14/preference/MultiSelectListPreference.html" target="_blank" rel="noopener">MultiSelectListPreference</a>,<a href="https://developer.android.com/reference/android/support/v7/preference/PreferenceCategory.html" target="_blank" rel="noopener">PreferenceCategory</a>,<a href="https://developer.android.com/reference/android/support/v7/preference/PreferenceScreen.html" target="_blank" rel="noopener">PreferenceScreen</a>,  <a href="https://developer.android.com/reference/android/support/v14/preference/SwitchPreference.html" target="_blank" rel="noopener">SwitchPreference</a>,  <a href="https://developer.android.com/reference/android/support/v7/preference/SwitchPreferenceCompat.html" target="_blank" rel="noopener">SwitchPreferenceCompat</a></p>
<p><strong>Xml案例(For example:)：</strong></p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PreferenceScreen</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CheckBoxPreference</span>
        <span class="token attr-name"><span class="token namespace">android:</span>key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pref_sync<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/pref_sync<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>summary</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/pref_sync_summ<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>defaultValue</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListPreference</span>
        <span class="token attr-name"><span class="token namespace">android:</span>dependency</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pref_sync<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pref_syncConnectionType<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/pref_syncConnectionType<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>dialogTitle</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/pref_syncConnectionType<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>entries</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@array/pref_syncConnectionTypes_entries<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>entryValues</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@array/pref_syncConnectionTypes_values<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>defaultValue</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/pref_syncConnectionTypes_default<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PreferenceScreen</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>Java 案例：</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SettingsActivity</span> <span class="token keyword">extends</span> <span class="token class-name">PreferenceActivity</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">addPreferencesFromResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>preferences<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SettingsActivity</span> <span class="token keyword">extends</span> <span class="token class-name">Activity</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">// Display the fragment as the main content.</span>
        <span class="token function">getFragmentManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">beginTransaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>content<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SettingsFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="不同版本大致区别"><a href="#不同版本大致区别" class="headerlink" title="不同版本大致区别"></a>不同版本大致区别</h2><ul>
<li>v14 Preference Support Library  <code>com.android.support:preference-v14:27.1.1</code><br>增加了 <a href="https://developer.android.com/reference/android/support/v14/preference/PreferenceFragment.OnPreferenceStartFragmentCallback.html" target="_blank" rel="noopener">PreferenceFragment.OnPreferenceStartFragmentCallback</a> 和<a href="https://developer.android.com/reference/android/support/v14/preference/PreferenceFragment.OnPreferenceStartScreenCallback.html" target="_blank" rel="noopener">PreferenceFragment.OnPreferenceStartScreenCallback</a>, 更新了一些类, 如：`<a href="https://developer.android.com/reference/android/support/v14/preference/MultiSelectListPreference.html" target="_blank" rel="noopener">MultiSelectListPreference</a> and <a href="https://developer.android.com/reference/android/support/v14/preference/PreferenceFragment.html" target="_blank" rel="noopener">PreferenceFragment</a></li>
<li><a href="https://developer.android.com/reference/android/support/v17/preference/package-summary" target="_blank" rel="noopener">v17 Preference</a> 主要是增加了对TV的支持；</li>
</ul>
<h1 id="具体流程"><a href="#具体流程" class="headerlink" title="具体流程"></a>具体流程</h1><p><img src="http://ohlb58e07.bkt.clouddn.com/android_prefence_flowwak.png" alt=""></p>
<blockquote>
<p>注意： findPreference/onPreferenceTreeClick 等方法在android.preference.PreferenceActivity Api16 (4.1) 中被弃用，在PreferenceFragmentCompat中能正常使用，<font color="red" face="STHupo">故官方推荐使用PreferenceFragmentCompat；</font></p>
</blockquote>
<h2 id="新建xml"><a href="#新建xml" class="headerlink" title="新建xml"></a>新建xml</h2><h3 id="使用组（Group）"><a href="#使用组（Group）" class="headerlink" title="使用组（Group）"></a>使用组（Group）</h3><p>案例：</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PreferenceScreen</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PreferenceCategory</span>
        <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/pref_sms_storage_title<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pref_key_storage_settings<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        &lt;CheckBoxPreference
            android:key="pref_key_auto_delete"
            android:summary="@string/pref_summary_auto_delete"
            android:title="@string/pref_title_auto_delete"
            android:defaultValue="false"... />
        &lt;Preference
            android:key="pref_key_sms_delete_limit"
            android:dependency="pref_key_auto_delete"
            android:summary="@string/pref_summary_delete_limit"
            android:title="@string/pref_title_sms_delete"... />
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Preference</span>
            <span class="token attr-name"><span class="token namespace">android:</span>key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pref_key_mms_delete_limit<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>dependency</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pref_key_auto_delete<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>summary</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/pref_summary_delete_limit<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/pref_title_mms_delete<span class="token punctuation">"</span></span> <span class="token attr-name">...</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PreferenceCategory</span><span class="token punctuation">></span></span>
    ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PreferenceScreen</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="http://ohlb58e07.bkt.clouddn.com/2018-08-25_android_preferens_group.png" alt="效果如图"></p>
<h3 id="使用子屏幕（subscreens）"><a href="#使用子屏幕（subscreens）" class="headerlink" title="使用子屏幕（subscreens）"></a>使用子屏幕（subscreens）</h3><p>案例代码：</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PreferenceScreen</span>  <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token comment" spellcheck="true">&lt;!-- opens a subscreen of settings --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PreferenceScreen</span>
        <span class="token attr-name"><span class="token namespace">android:</span>key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button_voicemail_category_key<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/voicemail<span class="token punctuation">"</span></span>
        <span class="token attr-name"><span class="token namespace">android:</span>persistent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListPreference</span>
            <span class="token attr-name"><span class="token namespace">android:</span>key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button_voicemail_provider_key<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/voicemail_provider<span class="token punctuation">"</span></span> <span class="token attr-name">...</span> <span class="token punctuation">/></span></span>
        <span class="token comment" spellcheck="true">&lt;!-- opens another nested subscreen --></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PreferenceScreen</span>
            <span class="token attr-name"><span class="token namespace">android:</span>key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button_voicemail_setting_key<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/voicemail_settings<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>persistent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            ...
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PreferenceScreen</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RingtonePreference</span>
            <span class="token attr-name"><span class="token namespace">android:</span>key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button_voicemail_ringtone_key<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@string/voicemail_ringtone_title<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>ringtoneType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>notification<span class="token punctuation">"</span></span> <span class="token attr-name">...</span> <span class="token punctuation">/></span></span>
        ...
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PreferenceScreen</span><span class="token punctuation">></span></span>
    ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PreferenceScreen</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="http://ohlb58e07.bkt.clouddn.com/2018-08-25_android_preferen_suscreen.png" alt="效果如图"></p>
<h3 id="使用intents"><a href="#使用intents" class="headerlink" title="使用intents"></a>使用intents</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>Preference android<span class="token operator">:</span>title<span class="token operator">=</span><span class="token string">"@string/prefs_web_page"</span> <span class="token operator">></span>
    <span class="token operator">&lt;</span>intent android<span class="token operator">:</span>action<span class="token operator">=</span><span class="token string">"android.intent.action.VIEW"</span>
            android<span class="token operator">:</span>data<span class="token operator">=</span><span class="token string">"http://www.example.com"</span> <span class="token operator">/</span><span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Preference<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>属性有：</p>
<ul>
<li>android:action</li>
<li>android:data</li>
<li>android:mimeType</li>
<li>android:targetClass</li>
<li>android:targetPackage</li>
</ul>
<p><font color="red" face="STHupo">请注意：</font>上面的设置已经够日常使用</p>
<h2 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h2><p><strong>读</strong></p>
<pre class="line-numbers language-java"><code class="language-java">SharedPreferences sharedPref <span class="token operator">=</span> PreferenceManager<span class="token punctuation">.</span><span class="token function">getDefaultSharedPreferences</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
String syncConnPref <span class="token operator">=</span> sharedPref<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>SettingsActivity<span class="token punctuation">.</span>KEY_PREF_SYNC_CONN<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><strong>监听</strong></p>
<ul>
<li>findPreference里面的参数就是我们使用android:key所定义</li>
<li>onPreferenceTreeClick Prefs tree点击时调用</li>
</ul>
<p>注册方式：</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">getPreferenceScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSharedPreferences</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">registerOnSharedPreferenceChangeListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onPause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">getPreferenceScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSharedPreferences</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">unregisterOnSharedPreferenceChangeListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>设置监听方式：</p>
<pre class="line-numbers language-java"><code class="language-java">SharedPreferences<span class="token punctuation">.</span>OnSharedPreferenceChangeListener listener <span class="token operator">=</span>
    <span class="token keyword">new</span> <span class="token class-name">SharedPreferences<span class="token punctuation">.</span>OnSharedPreferenceChangeListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSharedPreferenceChanged</span><span class="token punctuation">(</span>SharedPreferences prefs<span class="token punctuation">,</span> String key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// listener implementation</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
prefs<span class="token punctuation">.</span><span class="token function">registerOnSharedPreferenceChangeListener</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="使用小案例"><a href="#使用小案例" class="headerlink" title="使用小案例"></a>使用小案例</h2><h3 id="还原初始设置"><a href="#还原初始设置" class="headerlink" title="还原初始设置"></a>还原初始设置</h3><pre class="line-numbers language-java"><code class="language-java">PreferenceManager<span class="token punctuation">.</span><span class="token function">setDefaultValues</span><span class="token punctuation">(</span>Context<span class="token punctuation">,</span> R<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>advanced_preferences<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li>false ： 首次调用生效；（true 每次调用都生效）</li>
</ul>
<!--
### 查看应用流量消耗（api> 4.0)
-->


<h1 id="面包原材料"><a href="#面包原材料" class="headerlink" title="面包原材料"></a>面包原材料</h1><ul>
<li><a href="https://developer.android.com/guide/topics/ui/settings" target="_blank" rel="noopener">Develop Guide Settings</a> 【主要.科学上网】</li>
<li><a href="https://www.tinyx.cc/android/android-experience/android-preference.html" target="_blank" rel="noopener">Android Preference 设置全攻略</a> 其实看这个也可以</li>
</ul>
<h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><p>  Caused by: java.lang.IllegalStateException: Must specify preferenceTheme in theme<br>        at android.support.v7.preference.PreferenceFragmentCompat.onCreate(PreferenceFragmentCompat.java:211)</p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>优化Android App</title>
    <url>/2018/08/07/2018-4-14-android-optimization/</url>
    <content><![CDATA[<h3 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h3><h4 id="博文"><a href="#博文" class="headerlink" title="博文"></a>博文</h4><ul>
<li><a href="https://developer.android.com/topic/performance/background-optimization.html" target="_blank" rel="noopener">Background Optimizations</a></li>
<li><a href="http://www.infoq.com/cn/news/2015/11/Facebook-Android#rd" target="_blank" rel="noopener">Facebook是如何收集其Android应用性能数据的</a></li>
<li><a href="http://www.androidperformance.com/archives/" target="_blank" rel="noopener">安卓性能优化收集网站</a></li>
</ul>
<p><em>总结性</em></p>
<ul>
<li><a href="http://blog.tingyun.com/web/article/detail/155" target="_blank" rel="noopener">Android客户端性能优化（魅族资深工程师毫无保留奉献）</a></li>
<li><a href="http://kohlerm.blogspot.com/" target="_blank" rel="noopener">Java Performance blog</a></li>
</ul>
<h3 id="性能分析的网站"><a href="#性能分析的网站" class="headerlink" title="性能分析的网站"></a>性能分析的网站</h3><hr>
<ul>
<li><a href="https://nimbledroid.com/" target="_blank" rel="noopener">NimbleDroid</a> 一个 Android 应用性能分析服务网站</li>
<li><a href="https://developers.google.com/speed/pagespeed/insights/" target="_blank" rel="noopener">PageSpeed Insights</a>  能够测试网页在移动设备和桌面设备上的性能工具</li>
<li>APM(Application performance magic) : 应用程序性能管理<blockquote>
<p>2011年时国外的APM行业 NewRelic 和 APPDynamics 国内：听云， OneAPM， 博睿(bonree) 云智慧，阿里百川码力</p>
</blockquote>
</li>
</ul>
<h3 id="针对性优化"><a href="#针对性优化" class="headerlink" title="针对性优化"></a>针对性优化</h3><h4 id="图片压缩Apk体积缩小"><a href="#图片压缩Apk体积缩小" class="headerlink" title="图片压缩Apk体积缩小"></a>图片压缩Apk体积缩小</h4><ul>
<li><strong><a href="https://github.com/Curzibn/Luban" target="_blank" rel="noopener">Luban</a></strong> 可能是最接近微信朋友圈的图片压缩算法</li>
<li><a href="https://developer.android.com/studio/build/shrink-code.html" target="_blank" rel="noopener">Shrink Your Code and Resources</a> 【官方教程，未看】</li>
<li><a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0909/3433.html" target="_blank" rel="noopener">Android微信上的SVG</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI1NjEwMTM4OA==&amp;mid=2651232233&amp;idx=1&amp;sn=03d9858ac451f2768b804d2604a8e12e" target="_blank" rel="noopener">PNG图片压缩对比分析</a></li>
<li><a href="https://blog.csdn.net/wetest_tencent/article/details/53819526" target="_blank" rel="noopener">通过三次优化，我将gif加载优化了16.9%</a></li>
<li><a href="http://jeroenmols.com/blog/2016/05/06/methodcount/" target="_blank" rel="noopener">EFFICIENTLY REDUCING YOUR METHOD COUNT</a></li>
<li><a href="http://www.jayfeng.com/2015/12/29/APK%E7%98%A6%E8%BA%AB%E5%AE%9E%E8%B7%B5/" target="_blank" rel="noopener">APK瘦身实践</a></li>
<li><a href="http://blog.nimbledroid.com/2016/04/20/pushing-limits-of-app-startup-time-zh.html" target="_blank" rel="noopener">突破App启动时间的极限</a></li>
<li><a href="https://github.com/shenjiajun53/TinyPic" target="_blank" rel="noopener">an Intelij Plugin for image compress using TinyPNG API </a> Android 图片压缩工具</li>
</ul>
<h4 id="网络优化"><a href="#网络优化" class="headerlink" title="网络优化"></a>网络优化</h4><ul>
<li><a href="https://hackernoon.com/so-you-want-to-develop-for-the-next-billion-9eb072c26bc8#.jxaa6u3om" target="_blank" rel="noopener">Offline App Archit ecture: how to build for the next billion</a></li>
<li><a href="https://www.youtube.com/playlist?list=PLWz5rJ2EKKc-VJS9WQlj9xM_ygPopZ-Qd" target="_blank" rel="noopener">DevBytes: Efficient Data Transfers — YouTube Google Engineer Serials tutorial</a></li>
<li><a href="https://developer.android.com/training/efficient-downloads/efficient-network-access.html#RadioStateMachine" target="_blank" rel="noopener">ORG Optimizing Downloads for Efficient Network Access</a></li>
<li><a href="http://tech.meituan.com/SharkSDK.html" target="_blank" rel="noopener">美团点评移动网络优化实践</a></li>
</ul>
<h4 id="内存优化"><a href="#内存优化" class="headerlink" title="内存优化"></a>内存优化</h4><ul>
<li><a href="http://android.jobbole.com/82248/" target="_blank" rel="noopener">Android内存优化杂谈 </a></li>
<li><a href="http://mp.weixin.qq.com/s/2MsEAR9pQfMr1Sfs7cPdWQ" target="_blank" rel="noopener">Android 内存优化总结&amp;实践</a></li>
</ul>
<h4 id="速度优化"><a href="#速度优化" class="headerlink" title="速度优化"></a>速度优化</h4><ul>
<li><a href="http://iceanson.github.io/Android%E5%90%AF%E5%8A%A8%E9%80%9F%E5%BA%A6-%E6%80%BB%E4%BC%9A%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%8D%E7%97%9B%E4%B8%8D%E7%97%92%E7%9A%84%E5%9D%8E" target="_blank" rel="noopener">Android启动速度优化</a> everbook has backup, <strong>Application.registerActivityLifecycleCallbacks的运用</strong></li>
<li><a href="http://android.jobbole.com/81944/" target="_blank" rel="noopener">给 App 提速：Android 性能优化总结</a></li>
</ul>
<h3 id="优化实践"><a href="#优化实践" class="headerlink" title="优化实践"></a>优化实践</h3><hr>
<h4 id="内存泄漏"><a href="#内存泄漏" class="headerlink" title="内存泄漏"></a>内存泄漏</h4><ul>
<li><strong>Memory Analyzer（MAT）</strong> Tool<ul>
<li>Leak Suspects：内存泄露报告</li>
<li>Top Components：吃货报告</li>
<li>Histogram：每个Class占用内存</li>
<li>Dominator Tree：列出哪些对象占用内存最多以及谁hold住这些对象</li>
<li>OQL  (Ctrl + F5 run)  <code>select * from instanceof android.app.Activity</code></li>
</ul>
</li>
</ul>
<p>** Mat tutorial: **<br>1） <strong><a href="http://www.blogjava.net/rosen/archive/2010/05/21/321575.html" target="_blank" rel="noopener">使用Memory Analyzer tool(MAT)分析内存泄漏</a></strong><br>2） <strong>Video youtube <a href="http://www.youtube.com/watch?v=_CruQY55HOk" target="_blank" rel="noopener">Google I/O 2011: Memory management for Android Apps</a></strong><br>3）<a href="http://www.lightskystreet.com/2015/09/01/mat_usage/" target="_blank" rel="noopener"> MAT - Memory Analyzer Tool 使用进阶</a><br>4）  <strong><a href="http://androidperformance.com/2015/04/11/AndroidMemory-Open-Bitmap-Object-In-MAT/" target="_blank" rel="noopener">从MAT数据中还原Bitmap原图</a></strong><br><strong>Docuemnt</strong></p>
<p>1) <strong>eclipse.org document <a href="http://wiki.eclipse.org/index.php/MemoryAnalyzer" target="_blank" rel="noopener">MemoryAnalyzer</a></strong><br>2) <strong>developer.android <a href="http://developer.android.com/tools/debugging/debugging-memory.html#HeapDump" target="_blank" rel="noopener">investigating your RAM usage</a></strong><br><strong>Blog</strong></p>
<ul>
<li>adb 使用<ul>
<li>检查应用退出后<code>Activities/Views</code> 是否为零;<br>adb shell dumpsys meminfo [应用包名]</li>
<li>多次进入退出后的占用内存<code>TOTAL</code>不应变化太大；</li>
</ul>
</li>
<li>onTrimMemory回调<ul>
<li>响应此回调释放非必须内存；</li>
<li>验证<br>adb shell dumpsys gfxinfo 【应用包名】-cmd trim 5<br>adb shell dumpsys meminfo 【应用包名】查看内存大小</li>
</ul>
</li>
</ul>
<h4 id="UI卡顿和稳定性"><a href="#UI卡顿和稳定性" class="headerlink" title="UI卡顿和稳定性"></a>UI卡顿和稳定性</h4><ol>
<li>工作线程优先级设置为Process.THREAD_PRIORITY_BACKGROUND</li>
</ol>
<p><strong>卡顿常见原因</strong><br>1）人为在UI线程中做轻微耗时操作，导致UI线程卡顿；<br>2） 布局Layout过于复杂，无法在16ms内完成渲染；<br>3）同一时间动画执行的次数过多，导致CPU或GPU负载过重；<br>4） View过度绘制，导致某些像素在同一帧时间内被绘制多次，从而使CPU或GPU负载过重；<br>5） View频繁的触发measure、layout，导致measure、layout累计耗时过多及整个View频繁的重新渲染；<br>6）内存频繁触发GC过多（同一帧中频繁创建内存），导致暂时阻塞渲染操作；<br>7） 冗余资源及逻辑等导致加载和执行缓慢；<br>8）工作线程优先级未设置为<br>Process.THREAD_PRIORITY_BACKGROUND<br>导致后台线程抢占UI线程cpu时间片，阻塞渲染操作；<br>9） ANR；<br><strong>卡顿分析解决的一般步骤</strong></p>
<ul>
<li>解决过度绘制问题<br>1) 调试GPU过度绘制中打开调试，看对应界面是否有过度绘制，如果有先解决掉：<br><img src="http://upload-images.jianshu.io/upload_images/1321512-864b92693c2dc9bb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>2) 定位过渡绘制区域<br>3) 利用Android提供的工具进行位置确认以及修改(HierarchyView , Tracer for OpenGL ES)<br>4) 定位到具体的视图(xml文件或者View)<br>5) 通过代码和xml文件分析过渡绘制的原因<br>6) 结合具体情况进行优化<br>7) 使用Lint工具进一步优化</li>
<li>检查是否有主线程做了耗时操作：<br>1) Application 开启 StrictMode;<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>DEVELOPER_MODE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    StrictMode<span class="token punctuation">.</span><span class="token function">setThreadPolicy</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StrictMode<span class="token punctuation">.</span>ThreadPolicy<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">detectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token function">penaltyLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   StrictMode<span class="token punctuation">.</span><span class="token function">setVmPolicy</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StrictMode<span class="token punctuation">.</span>VmPolicy<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   <span class="token punctuation">.</span><span class="token function">detectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token function">penaltyLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
   <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>如果主线程无耗时操作，还存在卡顿，有很大可能是必须在UI线程操作的一些逻辑有问题，比如控件measure、layout耗时过多等，此时可通过Traceview以及systrace来进行分析。</li>
<li>Traceview：Traceview主要用做热点分析，找出最需要优化的点。<br><img src="http://upload-images.jianshu.io/upload_images/1321512-026a3d898789674e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图中展示了Trace期间各方法调用关系，调用次数以及耗时比例"></li>
<li>systrace：抓取trace：</li>
<li>使用hugo打印方法调用的时长及参数</li>
</ul>
<h4 id="Method-Tracing-优化启动时间"><a href="#Method-Tracing-优化启动时间" class="headerlink" title="Method Tracing 优化启动时间"></a>Method Tracing 优化启动时间</h4><p>官网：<a href="https://developer.android.com/studio/profile/generate-trace-logs" target="_blank" rel="noopener">Generate trace logs by instrumenting your app</a><br>Java 代码<code>android.os.Debug.startMethodTracing() 和 stopMethodTracing()</code> </p>
<pre><code># 启动HomePageActivity并每1s跟踪方法调用
adb shell am start -n com.runan.countprisoner/.view.activity.HomePageActivity --start-profiler /data/local/tmp/startup.trace --sampling 1000
 终止跟踪
adb shell am profile stop
# 拉取 .trace 文件到本机当前目录
adb pull /data/local/tmp/startup.trace .</code></pre><p><font color="#D92524">Android Studio -&gt; File -&gt; open  直接打开*.trace</font></p>
<h4 id="Glide-Gif-性能优化"><a href="#Glide-Gif-性能优化" class="headerlink" title="Glide Gif 性能优化"></a>Glide Gif 性能优化</h4><ul>
<li><a href="https://blog.csdn.net/haunghui6579/article/details/49968087" target="_blank" rel="noopener">编译使用Android源码中的GIF图片工具包–framesequence</a></li>
</ul>
<h3 id="官方工具"><a href="#官方工具" class="headerlink" title="官方工具"></a>官方工具</h3><hr>
<p><a href="https://developer.android.com/tools/help/android-monitor.html" target="_blank" rel="noopener">Android Monitor</a></p>
<ul>
<li><a href="https://developer.android.com/studio/profile/am-allocation.html" target="_blank" rel="noopener">Allocation Tracker </a><br><img src="http://upload-images.jianshu.io/upload_images/1321512-992fa860f964ffd3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="http://upload-images.jianshu.io/upload_images/1321512-6caeed1cf8c9e2d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
<p><strong>Device Monitor</strong><br><img src="http://upload-images.jianshu.io/upload_images/1321512-1bd95fbdccf2f836.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<p><strong>Viewing Overall Memory Allocations</strong> 参考 <a href="https://developer.android.com/studio/profile/investigate-ram.html" target="_blank" rel="noopener">Investigating Your RAM Usage</a></p>
<ul>
<li>adb shell dumpsys meminfo &lt;package_name|pid&gt; [-d] 【难点】 对meminfo 的解读</li>
<li>Dalvik/ART Log Messages 【难点】解读</li>
</ul>
<p><a href="https://developer.android.com/training/testing/performance.html" target="_blank" rel="noopener"><strong>Testing Display Performance</strong></a>  十分详细的关于显示优化的介绍。</p>
<h3 id="第三方工具"><a href="#第三方工具" class="headerlink" title="第三方工具"></a>第三方工具</h3><hr>
<ul>
<li>由腾讯出品的<a href="http://gt.qq.com/index.html" target="_blank" rel="noopener">GT（随身调）</a>，直接运行在手机上的“集成调测环境”(IDTE, Integrated Debug Environment)，支持iOS和Android两个手机平台,主要功能可对APP进行快速的性能测试(CPU、内存、流量、电量、帧率/流畅度等等)、开发日志的查看、Crash日志查看、网络数据包的抓取、APP内部参数的调试、真机代码耗时统计等。还提高基础API进行开发。</li>
<li><strong><a href="https://github.com/square/leakcanary" target="_blank" rel="noopener">LeakCanary</a></strong><br><img src="http://upload-images.jianshu.io/upload_images/1321512-8337dba05e25e9d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="LeakCanary"></li>
<li><a href="http://www.yourkit.com/" target="_blank" rel="noopener">yourkit</a>   Java Profiler, and square/leakcanary recommend to use memory leak analyzer like mat </li>
<li><a href="https://google.github.io/flatbuffers/" target="_blank" rel="noopener">FlatBuffers</a>：性能最高的序列化库，由 Google 游戏开发小组专为性能而设计</li>
<li><a href="http://developer.android.com/intl/zh-cn/reference/android/os/Parcelable.html" target="_blank" rel="noopener">Parcelable</a> API：Android 进程间传递数据，性能远优于 Java 默认序列化机制</li>
<li><a href="https://github.com/lqcandqq13/BlockCanaryEx" target="_blank" rel="noopener">BlockCanaryEx</a><br><img src="https://github.com/lqcandqq13/BlockCanaryEx/raw/master/sample.png" alt=""></li>
<li><a href="http://www.devtf.cn/?p=1097" target="_blank" rel="noopener">加速你的Android应用</a></li>
<li><a href="https://github.com/oasisfeng/condom" target="_blank" rel="noopener">保险套项目</a><blockquote>
<p><strong>Note</strong> : 『保险套』是一个超轻超薄的Android工具库，将它套在Android应用工程里裸露的Context上，再传入第三方SDK（通常是其初始化方法），即可防止三方SDK损害用户体验</p>
</blockquote>
<h3 id="常用小Tips"><a href="#常用小Tips" class="headerlink" title="常用小Tips"></a>常用小Tips</h3></li>
<li><a href="https://developer.android.com/reference/android/util/SparseArray.html" target="_blank" rel="noopener">SparseArray</a> ——Map的高效优化版本。推荐了解姐妹类SparseBooleanArray、SparseIntArray和SparseLongArray。</li>
<li>查看Activity启动时间<br><code>adb shell am start -W com.niuwa/.activity.HomePageActivity</code></li>
</ul>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><ol>
<li><a href="http://blog.tingyun.com/web/article/detail/155" target="_blank" rel="noopener">http://blog.tingyun.com/web/article/detail/155</a></li>
<li><a href="https://mp.weixin.qq.com/s/APhUH7MBDUZ6tQv0xDgaWQ?utm_source=androidweekly.io&amp;utm_medium=website" target="_blank" rel="noopener">Android P 电量管理</a></li>
<li><a href="https://developer.android.google.cn/topic/performance/vitals/" target="_blank" rel="noopener">Android vitals</a></li>
</ol>
]]></content>
      <categories>
        <category>coder</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>优化</tag>
      </tags>
  </entry>
  <entry>
    <title>远程控制笔记整理</title>
    <url>/2018/08/07/2018-8-7-remote-control/</url>
    <content><![CDATA[<h3 id="视频流播放相关"><a href="#视频流播放相关" class="headerlink" title="视频流播放相关"></a>视频流播放相关</h3><h4 id="相关开源库"><a href="#相关开源库" class="headerlink" title="相关开源库"></a>相关开源库</h4><ul>
<li><strong><a href="https://github.com/FFmpeg/FFmpeg" target="_blank" rel="noopener">FFmpeg</a></strong></li>
<li><a href="https://github.com/fyhertz/libstreaming" target="_blank" rel="noopener">Libstreaming</a> A solution for streaming H.264, H.263, AMR, AAC using RTP on Android</li>
<li><strong><a href="https://github.com/omerjerk/RemoteDroid" target="_blank" rel="noopener">RemoteDroid</a></strong> 能运行但是链接失败</li>
<li><strong><a href="https://github.com/Teaonly/android-eye" target="_blank" rel="noopener">android-eye</a></strong></li>
<li><strong><a href="https://github.com/jaroslavas/Gstreamer-Android-example" target="_blank" rel="noopener">Gstreamer-Android-example</a></strong></li>
<li><strong><a href="https://github.com/EasyDarwin/EasyDarwin" target="_blank" rel="noopener">EasyDarwin</a></strong>  高性能开源流媒体服务器，支持RTSP、HLS、HTTP直播  ————– <a href="http://www.easydarwin.org/" target="_blank" rel="noopener">官网</a></li>
<li><strong><a href="https://github.com/fyhertz/spydroid-ipcamera" target="_blank" rel="noopener">spydroid-ipcamera</a></strong> A powerful and funny android app. that streams the camera and microphone of your phone to your browser or to VLC</li>
<li><strong><a href="https://github.com/fyhertz/libstreaming" target="_blank" rel="noopener">libstreaming</a></strong></li>
<li><strong><a href="https://github.com/fyhertz/libstreaming-examples" target="_blank" rel="noopener">libstreaming-examples</a></strong></li>
</ul>
<p><em>Google</em>开源播放器</p>
<ul>
<li><a href="http://google.github.io/ExoPlayer/" target="_blank" rel="noopener">ExoPlayer</a></li>
</ul>
<h4 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h4><ul>
<li><a href="http://blog.csdn.net/leixiaohua1020/article/details/47056365" target="_blank" rel="noopener">最简单的基于FFmpeg的移动端例子：Android 视频转码器</a></li>
<li><a href="http://blog.csdn.net/jwzhangjie/article/details/9046427" target="_blank" rel="noopener">Android本地视频播放器开发–ffmpeg解码视频文件中的音频(1)</a></li>
<li><a href="http://blog.csdn.net/jimzhai/article/details/7853005" target="_blank" rel="noopener">java 调用 ffmpeg 进行视频转换以及截图</a></li>
<li><a href="http://www.oschina.net/code/snippet_105637_22309" target="_blank" rel="noopener">FFmpeg 抽取视频中的一段(视频转换)</a> </li>
<li><a href="http://blog.csdn.net/leixiaohua1020/article/details/15811977" target="_blank" rel="noopener">[总结]FFMPEG视音频编解码零基础学习方法</a>  重点</li>
<li><a href="http://docs.gstreamer.com/display/GstSDK/Tutorials" target="_blank" rel="noopener">GStreamer SDK Tutorials</a></li>
<li><a href="http://blog.csdn.net/xiejiashu/article/details/34860575" target="_blank" rel="noopener">手机Android音视频采集与直播推送，实现单兵、移动监控类应用</a></li>
</ul>
<h4 id="实践笔记积累"><a href="#实践笔记积累" class="headerlink" title="实践笔记积累"></a>实践笔记积累</h4><p><a href="https://www.wowza.com/forums/content.php?217-How-to-install-and-configure-Wowza-Streaming-Engine#startService" target="_blank" rel="noopener"> Wowza Streaming Engine</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">sudo service WowzaStreamingEngine start
sudo service WowzaStreamingEngineManager start
访问 http://[wowza-ip-address]:8088/enginemanager
http://localhost:8088/enginemanager/#home/_defaultVHost_<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>视频发布账号和密码：<br>/usr/local/WowzaStreamingEngine/conf/publish.password</p>
<h3 id="网络相关学习"><a href="#网络相关学习" class="headerlink" title="网络相关学习"></a>网络相关学习</h3><hr>
<h4 id="Socket-io"><a href="#Socket-io" class="headerlink" title="Socket.io"></a><a href="http://socket.io/" target="_blank" rel="noopener">Socket.io</a></h4><p><em>资源列举</em></p>
<ul>
<li><a href="http://socket.io/get-started/chat/" target="_blank" rel="noopener">Get Started: Chat application</a> （基于Node.js html）炒鸡简单的例子，无需编程经验 <a href="https://github.com/rauchg/chat-example" target="_blank" rel="noopener">github</a></li>
<li><strong><a href="https://github.com/socketio/socket.io" target="_blank" rel="noopener">github.com/socket.io</a></strong></li>
<li><strong><a href="https://github.com/nkzawa/socket.io-android-chat" target="_blank" rel="noopener">socket.io-android-chat</a></strong></li>
<li><strong><a href="https://github.com/socketio/engine.io-client-java" target="_blank" rel="noopener">engine.io-client-java</a></strong> Engine.IO Client Library for Java  <a href="http://socketio.github.io/engine.io-client-java/apidocs/" target="_blank" rel="noopener">JavaApidocs</a> </li>
<li><strong><a href="https://github.com/socketio/socket.io-redis" target="_blank" rel="noopener">socket.io-redis</a></strong></li>
<li><strong><a href="https://github.com/jitsi/libjitsi" target="_blank" rel="noopener">libjitsi</a></strong>  Advanced Java media library for secure real-time audio/video communication.</li>
</ul>
<h4 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h4><ul>
<li><a href="http://www.h3c.com.cn/MiniSite/Technology_Circle/Net_Reptile/" target="_blank" rel="noopener">网络大爬虫</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html" target="_blank" rel="noopener">SSL/TLS协议运行机制的概述</a></li>
<li><a href="http://blog.csdn.net/yuzhiyuxia/article/details/7833265" target="_blank" rel="noopener">SOCKET通信中TCP、UDP数据包大小的确定</a></li>
<li><a href="http://www.cnblogs.com/maowang1991/archive/2013/04/15/3022955.html" target="_blank" rel="noopener">关于网络编程中MTU、TCP、UDP优化配置的一些总结</a></li>
</ul>
<p><em>Blog</em></p>
<ul>
<li><a href="http://socket.io/blog/introducing-socket-io-1-0/" target="_blank" rel="noopener">Introducing Socket.IO 1.0</a></li>
<li><a href="http://socket.io/blog/socket-io-p2p/" target="_blank" rel="noopener">socket-io-p2p</a></li>
<li><a href="http://www.hankcs.com/program/network/test-udp-holes-penetrating-nat.html" target="_blank" rel="noopener">试验UDP打洞穿透NAT</a></li>
</ul>
<h4 id="Interactive-Connectivity-Establishment-ICE"><a href="#Interactive-Connectivity-Establishment-ICE" class="headerlink" title="Interactive Connectivity Establishment (ICE)"></a>Interactive Connectivity Establishment (ICE)</h4><ul>
<li><a href="https://code.google.com/archive/p/ice4j/" target="_blank" rel="noopener">ice4j</a>  code .google ice4j 资源交老</li>
<li><a href="https://github.com/jitsi/ice4j" target="_blank" rel="noopener">https://github.com/jitsi/ice4j</a> 比较新的资源</li>
<li><a href="http://bluejimp.com/jitsi/ice4j/javadoc/" target="_blank" rel="noopener">ice4j Javadoc</a></li>
<li><a href="https://tools.ietf.org/pdf/rfc5245.pdf" target="_blank" rel="noopener">rfc5245.pdf</a></li>
<li><strong><a href="https://github.com/RestComm/jain-sip" target="_blank" rel="noopener">jain-sip</a></strong>    jain-sdp 获取Sdp源码</li>
<li><strong><a href="https://github.com/RestComm/restcomm-android-sdk" target="_blank" rel="noopener">restcomm-android-sdk</a></strong>   Tutorial <a href="https://telestax.com/jain-sip-stack-for-android/" target="_blank" rel="noopener">https://telestax.com/jain-sip-stack-for-android/</a></li>
</ul>
<p><strong>libnice</strong></p>
<ul>
<li><strong><a href="https://github.com/since2014/libnice-4-android" target="_blank" rel="noopener">libnice-4-android</a></strong></li>
<li><a href="https://nice.freedesktop.org/libnice/index.html" target="_blank" rel="noopener"><strong>Api documentation</strong></a></li>
</ul>
<p>Englis PDF Material</p>
<ul>
<li><a href="https://tools.ietf.org/pdf/rfc4566.pdf" target="_blank" rel="noopener">rfc4566 SDP: Session Description Protocol </a></li>
<li><a href="https://tools.ietf.org/pdf/rfc5928.pdf" target="_blank" rel="noopener"> rfc5928 Traversal Using Relays around NAT (TURN) Resolution Mechanism</a></li>
<li><a href="chrome-extension://ecnphlgnajanjnkcmbpancdjoidceilk/https://tools.ietf.org/pdf/rfc5766.pdf" target="_blank" rel="noopener">rfc5766.pdf Traversal Using Relays around NAT (TURN):Relay Extensions to Session Traversal Utilities for NAT (STUN)</a> </li>
<li><a href="https://tools.ietf.org/pdf/rfc5245.pdf" target="_blank" rel="noopener">rfc5245 Interactive Connectivity Establishment (ICE): A Protocol for Network Address Translator (NAT) Traversal for Offer/Answer Protocols</a></li>
</ul>
<h4 id="UDP打洞"><a href="#UDP打洞" class="headerlink" title="UDP打洞"></a>UDP打洞</h4><ul>
<li><a href="http://network.51cto.com/art/201505/477962.htm" target="_blank" rel="noopener">QQ通信原理及QQ是怎么穿透内网进行通信的</a></li>
<li><a href="http://down.51cto.com/zt/2073" target="_blank" rel="noopener">P2P技术揭秘-P2P网络技术原理与典型系统开发 教程下载</a> </li>
<li><a href="https://webrtc.org/reference/getting-started/" target="_blank" rel="noopener">webrtc</a></li>
</ul>
<p><strong>turnserver</strong><br><a href="https://code.google.com/archive/p/rfc5766-turn-server/downloads" target="_blank" rel="noopener">downloads</a><br>Important directory:<br>/usr/local/share/examples/turnserver<br><a href="http://66.228.45.110/" target="_blank" rel="noopener">http://66.228.45.110/</a> 免费申请 账号的网站<br><a href="http://www.webrtcbbs.com/forum.php?mod=viewthread&amp;tid=139&amp;extra=page%3D1" target="_blank" rel="noopener">比较详细的turnserver.conf配置说明</a></p>
<h4 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h4><p><strong>Learning resource</strong></p>
<ul>
<li><a href="http://nodeschool.io/#workshoppers" target="_blank" rel="noopener">http://nodeschool.io/#workshoppers</a></li>
</ul>
<p><strong>openSource</strong></p>
<ul>
<li><strong><a href="https://github.com/madhums/node-express-mongoose-demo" target="_blank" rel="noopener">node-express-mongoose-demo</a></strong></li>
</ul>
<p><strong>Module</strong></p>
<ul>
<li><a href="http://samhuri.net/projects/strftime" target="_blank" rel="noopener">http://samhuri.net/projects/strftime</a></li>
</ul>
<p><strong>Tutorial</strong></p>
<ul>
<li><a href="https://www.airpair.com/javascript/node-js-tutorial" target="_blank" rel="noopener">Node.js Tutorial – Step-by-Step Guide For Getting Started</a></li>
</ul>
<p><strong>Tool</strong></p>
<pre><code>npm install -g node-inspector
# basically `node-debug` instead of `node`
$ node-debug example.js</code></pre><p><a href="https://developers.google.com/web/tools/setup/" target="_blank" rel="noopener">https://developers.google.com/web/tools/setup/</a></p>
<h3 id="数据传输"><a href="#数据传输" class="headerlink" title="数据传输"></a>数据传输</h3><p><strong>数据转码</strong></p>
<ul>
<li>[Convert bitmap array to YUV (YCbCr NV21)](<a href="http://stackoverflow.com/questions/5960247/convert-bitmap--" target="_blank" rel="noopener">http://stackoverflow.com/questions/5960247/convert-bitmap--</a> array-to-yuv-ycbcr-nv21)</li>
<li><a href="http://stackoverflow.com/questions/5368704/appending-a-byte-to-the-end-of-another-byte" target="_blank" rel="noopener">Appending a byte[] to the end of another byte[]</a></li>
<li><a href="http://blog.csdn.net/guojin08/article/details/27555473" target="_blank" rel="noopener">Android 用MediaCodec实现视频硬解码</a></li>
<li><a href="http://developer.android.com/intl/zh-cn/reference/android/media/MediaCodec.html#createEncoderByType(java.lang.String)" target="_blank" rel="noopener">MediaCodec Api</a></li>
</ul>
<p><strong>数据校验</strong></p>
<ul>
<li><a href="http://www.tuicool.com/articles/QzEfiy" target="_blank" rel="noopener">传输数据校验算法研究</a></li>
</ul>
<h3 id="WebRTC"><a href="#WebRTC" class="headerlink" title="WebRTC"></a>WebRTC</h3><ul>
<li><a href="https://tech.appear.in/2015/05/25/Introduction-to-WebRTC-on-Android/" target="_blank" rel="noopener">Introduction to WebRTC on Android</a></li>
<li><a href="http://www.cnblogs.com/lingyunhu/tag/webrtc%20android%20ios/default.html?page=4" target="_blank" rel="noopener">Android IOS WebRTC 音视频开发总结列表</a></li>
<li><a href="https://webrtc.org/" target="_blank" rel="noopener">https://webrtc.org/</a></li>
<li><a href="http://www.html5rocks.com/en/tutorials/webrtc/basics/#toc-tools" target="_blank" rel="noopener">Getting Started with WebRTC</a></li>
<li><a href="https://webrtc.github.io/samples/" target="_blank" rel="noopener">WebRTC samples</a> 有各种Sample代码Html/js演示，并有对应Github源 码地址， 整个工程的<a href="https://github.com/webrtc/samples" target="_blank" rel="noopener">samples</a></li>
<li><a href="https://webrtc.org/native-code/native-apis/" target="_blank" rel="noopener">Native APIs Diagram</a></li>
<li><strong><a href="https://github.com/pchab/AndroidRTC" target="_blank" rel="noopener">AndroidRTC</a></strong></li>
</ul>
<p><strong>相关博文</strong><br> <a href="http://blog.csdn.net/nonmarking/article/details/47375849" target="_blank" rel="noopener">WebRTC VideoEngine综合应用示例（一）——视频通话的基本流程</a></p>
<h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><hr>
<p><em>控制相关</em></p>
<ul>
<li><a href="http://www.race604.com/android-inject-input-event/" target="_blank" rel="noopener">Android模拟产生事件</a> 概括分析了模拟事件的三种方式，而且文章格式很喜欢</li>
<li><a href="http://source.android.com/devices/input/index.html" target="_blank" rel="noopener">Input Technical Information</a> Android Source 关于android devices input 的说明，偏底层 ；</li>
<li><a href="http://blog.csdn.net/mad1989/article/details/38109689" target="_blank" rel="noopener">getevent/sendevent及 input 命令的详解</a></li>
</ul>
<p><em>截屏相关</em></p>
<ul>
<li><a href="http://blog.csdn.net/woshinia/article/details/11520403" target="_blank" rel="noopener">Android中使用代码截图的各种方法总结</a></li>
</ul>
<p><em>视频相关</em></p>
<ul>
<li><a href="http://blog.chinaunix.net/uid-26611383-id-3976154.html" target="_blank" rel="noopener">FFmpeg深入分析之零-基础</a></li>
<li><a href="http://blog.csdn.net/gobitan/article/details/22750719" target="_blank" rel="noopener">FFmpeg的Android平台移植—编译篇</a></li>
<li><a href="http://blog.csdn.net/mer1234567/article/details/7679862" target="_blank" rel="noopener">Android中实时视频传输(摄像头实时视频传输)解决方案&lt;二&gt;</a></li>
<li><a href="http://blog.csdn.net/xiaoliouc/article/details/8443195" target="_blank" rel="noopener">android视频录制、另一部手机实时观看方案</a> 重点</li>
<li><a href="http://www.cnblogs.com/likwo/p/3513155.html" target="_blank" rel="noopener">android视频处理相关资料</a> 重点</li>
</ul>
<p><em>资料</em><br><a href="http://www.ffmpeg.org/ffmpeg.html" target="_blank" rel="noopener">http://www.ffmpeg.org/ffmpeg.html</a><br><a href="http://rg4.net/ezstreamsvr" target="_blank" rel="noopener">EzStreamSvr</a> 一个流媒体传输服务器端<br><a href="http://gstreamer.freedesktop.org/" target="_blank" rel="noopener">GStreamer</a>  open source multimedia framework</p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>编程中好用工具</title>
    <url>/2018/08/03/2018-8-3-coder-software/</url>
    <content><![CDATA[<h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><ul>
<li><a href="https://github.com/faressoft/terminalizer" target="_blank" rel="noopener">terminalizer 录制终端命令行并转化成gif</a>  <img src="https://raw.githubusercontent.com/faressoft/terminalizer/master/img/demo.gif" alt=""></li>
</ul>
<h3 id="画图工具"><a href="#画图工具" class="headerlink" title="画图工具"></a>画图工具</h3><ul>
<li><a href="https://whimsical.co/flowcharts/.io" target="_blank" rel="noopener">whimsical UI做得一流的流程图软件</a> 【五星推荐】</li>
</ul>
<h3 id="位置工具"><a href="#位置工具" class="headerlink" title="位置工具"></a>位置工具</h3><ul>
<li><a href="http://api.map.baidu.com/lbsapi/getpoint/index.html" target="_blank" rel="noopener">百度地址转经纬度</a></li>
</ul>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>tool</tag>
      </tags>
  </entry>
  <entry>
    <title>奇葩说娱乐笔记</title>
    <url>/2018/04/20/2018-4-20-entertainment-fancy-talk/</url>
    <content><![CDATA[<h2 id="奇葩说第4季"><a href="#奇葩说第4季" class="headerlink" title="奇葩说第4季"></a>奇葩说第4季</h2><h3 id="分手要不要当面说-20170414"><a href="#分手要不要当面说-20170414" class="headerlink" title="分手要不要当面说 20170414"></a>分手要不要当面说 20170414</h3><h4 id="刘白"><a href="#刘白" class="headerlink" title="刘白"></a>刘白</h4><h4 id="范甜甜"><a href="#范甜甜" class="headerlink" title="范甜甜"></a>范甜甜</h4><ul>
<li>他提出不公平，最爱的人否定伤得最深；</li>
</ul>
<h4 id="永开"><a href="#永开" class="headerlink" title="永开"></a>永开</h4><ul>
<li>分手的理由都是不对</li>
<li>把爱看太重<blockquote>
<p>把爱情当成婚姻一样沉重，轻松的开始轻松的结束，把感情看得太重而不会享受感情<br>—– 反驳受众是把分手看特很重的人群（这样这个辩题才有意义）</p>
</blockquote>
</li>
</ul>
<h4 id="赵大情"><a href="#赵大情" class="headerlink" title="赵大情"></a>赵大情</h4><ul>
<li>热恋痛离<blockquote>
<p>爱情观，热烈真诚而且深刻–恋爱的代价–更加珍贵<br>分手的痛相对于见面的心动，微信的分手不配我的爱情</p>
</blockquote>
</li>
</ul>
<h4 id="邱晨"><a href="#邱晨" class="headerlink" title="邱晨"></a>邱晨</h4><ul>
<li>分手好好说话；不要增加分手成本<br>搞分手纪念日烧纸，对方要分手增加成本这样你就不敢分手了<br>分手发生的情景 真实的分手的情况，切断信号，你们想象的是盛大闭幕式的烟花表演，<code>分手是所有的烟花散去之过后，无尽的空洞和冷漠</code><br>我们要分手就是我们没有办法从爱情这所学校毕业了，现在你要求我们要进行一场退学考试，甚至是退学面试，为什么，<code>但凡我们有一丝一毫的勇气我们能不能用来在一起，而不是用来分开上</code></li>
</ul>
<h4 id="马微微"><a href="#马微微" class="headerlink" title="马微微"></a>马微微</h4><ul>
<li>逃过生离，逃不过死离，需直面生活<br>渣字被你一写变狂草了，书法艺术家呀，忽悠人忽悠得这么深情款款，让我觉得没有被你甩一次是我人生的大不幸呀<br>成年人的决定 人生必修的一堂课，叫做当面分手，教会了我们什么，教会我们学会面对，坦然面对，面对我们的失败，面对我们的不堪<br>逃避 每次逃走留下的烂摊子，最后都会成为你人生中无法收拾的烂尾楼吗？ 成年人的决定，想象超人想象特工是一种逃避<br>逃不过 但是人生总有逃不过的时候，体体面面的分手从此在没有相见,这是成年人的分手，<code>面对自己，面对对方。逃得过生离，逃得过死别吗</code> 面对不完美的结局，并体面的收拾自己的烂摊子，人生必须处处 锥心，才有真心<br>成熟而全面的决定 感性和理想票两票</li>
</ul>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul>
<li>爱没有公不公平，只有愿不愿意，无法回到从前</li>
<li>单身狗，直男脱单，难于脱贫</li>
<li>两票，正常人只有感谢票，还他妈看脸，撕逼后我当时怎么就蒙住了呢，不当面能更好的撕</li>
</ul>
<h4 id="导师总结"><a href="#导师总结" class="headerlink" title="导师总结"></a>导师总结</h4><ul>
<li>不再驾驭感情，而是懂得感激；什么是驾驭感情，你在设计一种模式，比如说感激应该漂漂亮亮，感激应该是轻松的。感激这个事情是两个人的事情，是两个人最后化反的最终结果，你只能懂得<code>我想我们不需要再继续走下去了，至少我觉得有困难，你是希望当面聊一聊，你还是希望这样就好了，那我随时在这里</code></li>
<li>辩题前提是一个人想见，一个人不见，不如不见</li>
</ul>
<h4 id="结辩-【重点】"><a href="#结辩-【重点】" class="headerlink" title="结辩  【重点】"></a>结辩  【重点】</h4><ul>
<li>该做不到，交代<blockquote>
<p>两个底线</p>
</blockquote>
</li>
</ul>
<p>1.我们在一起绝不互相绑架，一定要尊重对方的意志<br>    2. 我们不在一起我们绝不互相伤害，我们要文明。<br>      幼稚的定义，目标既定的情况下采取的策略是错的。– 你想分就分见个面就分幼稚— 我的目标是什么， 成人的世界没有态度的该不该，我的价值观稳定情况下，我设定的目标怎样拆解成方法和行动— 我的目标是分手而且对对方的伤害降得最低— 具体比抽象更伤害<code>越抽象越尊重越不伤害</code>– 长大</p>
<h3 id="遇到危险伴侣手刀（快速逃跑）逃跑-该不该原谅他-20170421"><a href="#遇到危险伴侣手刀（快速逃跑）逃跑-该不该原谅他-20170421" class="headerlink" title="遇到危险伴侣手刀（快速逃跑）逃跑 该不该原谅他 20170421"></a>遇到危险伴侣手刀（快速逃跑）逃跑 该不该原谅他 20170421</h3><ul>
<li>赵又廷撒狗粮三生三世只爱高圆圆</li>
</ul>
<h4 id="马贱越"><a href="#马贱越" class="headerlink" title="马贱越"></a>马贱越</h4><p>爱情可以战胜一切，只要你爱他，就原谅他，否则，只做单身狗，只做自己</p>
<h4 id="首尔"><a href="#首尔" class="headerlink" title="首尔"></a>首尔</h4><ul>
<li>本能和本能之间差出和谐的火花</li>
<li>类比吵架维持内心和谐的次序，问路大叔，半身水池</li>
<li>烂事和惩罚的平衡</li>
<li>不原谅是对自己的一种救赎，原谅伴随着你对人性弱点的接纳和妥协，这样你会只相信人性，不相信人<br>####</li>
<li>灾难来了谁都得跑；</li>
<li>男的站着，女的跑</li>
<li>中国感动是教育（灾难面前人人都平等），我们以为人类仿佛应该是这样的，如果ta没做到这样子，ta就是不对的，其实他做到这样子，你更应该感谢的。因为，我们希望我们的爱情是获得式的爱情，不是索取式的爱情，他给你了你很高兴，他没给你这也很正常。感动时刻–&gt; 这个是加分项，不是底线，ta做到了你要感谢他</li>
<li>不原谅，放不下。灾难来了，没有太大的价值去怀念去铭记，你既是慷他之慨，也是慷自己之慨。<h4 id="浙大美女学霸"><a href="#浙大美女学霸" class="headerlink" title="浙大美女学霸"></a>浙大美女学霸</h4></li>
<li>双重标准，爱情观中清单不可原谅的事情上，下面该不该原谅。张爱玲和胡兰成的事情，没有守住底线。爱情双方是增值的过程。</li>
<li>爱情能战胜一些本能的欲望与诉求；</li>
<li>因为我还是对爱情有一点点底线，一点点要求的人，我不希望我别成一个爱情只对我有要求的人，我不希望我变成爱情的努力。</li>
</ul>
<h4 id="永开-1"><a href="#永开-1" class="headerlink" title="永开"></a>永开</h4><ul>
<li>见死不救和灾难不同</li>
<li>可逃不可逃，为什么这个情景我们希望对方能活下来，为什么我们心中不原谅的情绪，我们不原谅的是那一个没有办法全心全意为对方担心的自己</li>
<li>自己的故事，如果恨我能让你感觉舒服一点点的话那你就恨我吧，没关系的。恨他没有让我得到救赎，甚至盖过了我幸福的瞬间</li>
<li>这对双方都是灾难</li>
</ul>
<h4 id="段子医生"><a href="#段子医生" class="headerlink" title="段子医生"></a>段子医生</h4><ul>
<li>有判断的，心里创伤</li>
<li>原谅和不原谅都轻描淡写了，所有说不原谅就是不要轻易的原谅；</li>
</ul>
<h4 id="呼唤爱"><a href="#呼唤爱" class="headerlink" title="呼唤爱"></a>呼唤爱</h4><ul>
<li>五秒性格，决定一生太鲁莽<h4 id="导师结辩"><a href="#导师结辩" class="headerlink" title="导师结辩"></a>导师结辩</h4></li>
<li></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
  </entry>
  <entry>
    <title>Android 代码规范化笔记</title>
    <url>/2018/04/14/2018-4-14-android-standards/</url>
    <content><![CDATA[<h2 id="代码规范化"><a href="#代码规范化" class="headerlink" title="代码规范化"></a>代码规范化</h2><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><h4 id="Square-Android-Code-Style"><a href="#Square-Android-Code-Style" class="headerlink" title="Square Android Code Style"></a><a href="https://github.com/square/java-code-styles" target="_blank" rel="noopener">Square Android Code Style</a></h4><ul>
<li>下载-&gt; install.xx -&gt; restart-&gt;Code Style -&gt; Java</li>
<li>代码格式快捷键： Mac <code>Cmd + Option + L</code> Win <code>Ctrl + Alt + L</code></li>
</ul>
<h4 id="AS-Plugin-checkstyle-idea"><a href="#AS-Plugin-checkstyle-idea" class="headerlink" title="AS Plugin checkstyle-idea"></a>AS Plugin <strong><a href="https://github.com/jshiell/checkstyle-idea" target="_blank" rel="noopener">checkstyle-idea</a></strong></h4><ul>
<li><p>安装plugin-&gt; reatart-&gt; Setting Other Setting -&gt; 可以导入自定义检查<br><img src="https://upload-images.jianshu.io/upload_images/2383902-6599097cb4d43fc4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""></p>
</li>
<li><p>运行<br><img src="https://upload-images.jianshu.io/upload_images/2383902-c64b09149764ad27.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""></p>
</li>
<li><p>提交代码时自动格式化<br><img src="https://upload-images.jianshu.io/upload_images/2383902-d72b180899bfef7c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt=""></p>
</li>
</ul>
<h2 id="运维"><a href="#运维" class="headerlink" title="运维"></a>运维</h2><ul>
<li><a href="https://www.jianshu.com/p/6dba7d6f79ff" target="_blank" rel="noopener">基于Travis CI搭建Android持续集成以及自动打包发布流程</a></li>
</ul>
]]></content>
      <categories>
        <category>coder</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>规范</tag>
      </tags>
  </entry>
  <entry>
    <title>密钥和证书管理工具Keytool及jarsigner的使用</title>
    <url>/2017/04/19/2017-04-19-keytool_signerJar/</url>
    <content><![CDATA[<h4 id="Keytool简介"><a href="#Keytool简介" class="headerlink" title="Keytool简介"></a>Keytool简介</h4><p>keytool 是JDK 1.4 后集成的密钥和证书管理工具  <a href="https://docs.oracle.com/javase/6/docs/technotes/tools/solaris/keytool.html" target="_blank" rel="noopener">官网文档·英文</a></p>
<p>Window：<code>&lt;JAVA_HOME&gt;\bin\keytool.exe</code><br>Mac: <code>&lt;JAVA_HOME&gt;/Contents/Home/bin</code></p>
<h4 id="生成keystore"><a href="#生成keystore" class="headerlink" title="生成keystore"></a>生成keystore</h4><pre class="line-numbers language-shell"><code class="language-shell">keytool -genkey -alias myAlias -keyalg RSA -validity 40000 -keystore demo.keystore
#说明：
#    -genkey 产生密钥
#    -alias myAlias 别名 myAlias
#    -keyalg RSA 使用RSA算法对签名加密
#    -validity 40000 有效期限4000天
#    -keystore demo.keystore<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="查看-keystore签名信息"><a href="#查看-keystore签名信息" class="headerlink" title="查看 keystore签名信息"></a>查看 keystore签名信息</h4><pre class="line-numbers language-shell"><code class="language-shell">keytool -list -keystore demo.keystore 
输出结果：
--------------
密钥库类型: JKS
密钥库提供方: SUN
您的密钥库包含 1 个条目
myAlias, 2017-4-19, PrivateKeyEntry, 
证书指纹 (SHA1): C1:4E:A3:BC:4D:C3:35:6C:F6:8A:9D:0E:EA:F3:79:4B:D9:1D:B4:C1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="对apk进行签名"><a href="#对apk进行签名" class="headerlink" title="对apk进行签名"></a>对apk进行签名</h4><pre class="line-numbers language-shell"><code class="language-shell">jarsigner -verbose -keystore [demo.keystore] -signedjar demo_signed.apk demo.apk [alias]
<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h4 id="Shell脚本获取指纹-【成果】"><a href="#Shell脚本获取指纹-【成果】" class="headerlink" title="Shell脚本获取指纹 【成果】"></a>Shell脚本获取指纹 【成果】</h4><p>Apk签名证书MD5指纹<br>echo.sh </p>
<pre class="line-numbers language-shell"><code class="language-shell">#/bin/sh
cert_XSA=`jar tf $1 | grep SA` #获取签名文件在Apk中路径, $1为输入的apk
#echo  $cert_XSA
jar xf $1 $cert_XSA #提取签名文件
echo --------------------------------------------------------------------------
echo 证书MD5指纹:`keytool -printcert -file $cert_XSA | grep MD5`
echo --------------------------------------------------------------------------
rm -rf  `dirname $cert_XSA` #删除提取的文件夹<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p>Usage： <code>source echo.sh demo.apk</code> </p>
</blockquote>
<h4 id="证书文件操作"><a href="#证书文件操作" class="headerlink" title="证书文件操作"></a>证书文件操作</h4><ul>
<li><p>导出到证书文件<br>keytool -export -alias myAlias -file test.crt -keystore test.keystore </p>
<blockquote>
<p>将名为test.keystore的证书库中别名为test1的证书条目导出到证书文件test.crt</p>
</blockquote>
</li>
<li><p>导入证书的信息<br>keytool -import -keystore test_cacerts -file test.crt </p>
<blockquote>
<p>将证书文件test.crt导入到名为test_cacerts的证书库中</p>
<ul>
<li>查看证书信息  </li>
</ul>
</blockquote>
<pre class="line-numbers language-shell"><code class="language-shell">keytool -printcert -file "test.crt"
输出结果：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ul>
<hr>
<p>所有者: CN=test, OU=android, O=android, L=shenzhen, ST=guangdong, C=china<br>发布者: CN=test, OU=android, O=android, L=shenzhen, ST=guangdong, C=china<br>序列号: 6f75ebb1<br>有效期开始日期: Wed Apr 19 12:17:14 CST 2017, 截止日期: Fri Oct 25 12:17:14 CST 2126<br>证书指纹:<br>     MD5: E0:93:87:28:43:D9:85:12:B2:41:36:D6:E2:BC:7C:83<br>     SHA1: C1:4E:A3:BC:4D:C3:35:6C:F6:8A:9D:0E:EA:F3:79:4B:D9:1D:B4:C1<br>     SHA256: 51:E8:9D:ED:64:62:4C:80:D4:42:69:41:9C:0C:E4:3B:89:FE:34:E6:A4:42:47:83:FB:CF:99:BD:DA:39:DA:90<br>     签名算法名称: SHA256withRSA<br>     版本: 3</p>
<p>扩展: </p>
<p>#1: ObjectId: 2.5.29.14 Criticality=false<br>SubjectKeyIdentifier [<br>KeyIdentifier [<br>0000: 2E 49 AD 2B 2D 4E D3 0D   02 FC 5B 5F EF 00 77 0F  .I.+-N….[_..w.<br>0010: 5D 91 1D 1C                                        ]…<br>]<br>]<br>```</p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 高效图片加载</title>
    <url>/2017/04/17/2017-04-17-Optimization-Bitmap/</url>
    <content><![CDATA[<p>图片加载一直是程序稳定性的重要因素，但是随着Glide，Picasso，Universal-ImageLoader等图片加载库的逐渐成熟，反而会使我们对图片加载掉以轻心，疏忽对图片加载的操作，导致内存占用过高，频繁出现OOM(OutOfMemory)异常，严重影响用户体验。 </p>
<h3 id="Bitmap秘籍"><a href="#Bitmap秘籍" class="headerlink" title="Bitmap秘籍"></a>Bitmap秘籍</h3><h4 id="inJustDecodeBounds取关键信息，不加载到内存"><a href="#inJustDecodeBounds取关键信息，不加载到内存" class="headerlink" title="inJustDecodeBounds取关键信息，不加载到内存"></a>inJustDecodeBounds取关键信息，不加载到内存</h4><p>加载图片之前就获取到图片的长宽值和MIME类型，不加载进内存，从而根据情况对图片进行压缩</p>
<pre class="line-numbers language-java"><code class="language-java">BitmapFactory<span class="token punctuation">.</span>Options options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BitmapFactory<span class="token punctuation">.</span>Options</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
options<span class="token punctuation">.</span>inJustDecodeBounds <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>myimage<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> imageHeight <span class="token operator">=</span> options<span class="token punctuation">.</span>outHeight<span class="token punctuation">;</span>
<span class="token keyword">int</span> imageWidth <span class="token operator">=</span> options<span class="token punctuation">.</span>outWidth<span class="token punctuation">;</span>
String imageType <span class="token operator">=</span> options<span class="token punctuation">.</span>outMimeType<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<blockquote>
<p><strong>Note：</strong> 最理性的加载情况是，不穿小鞋也不穿大鞋 </p>
</blockquote>
<h4 id="inSampleSize等比例压缩"><a href="#inSampleSize等比例压缩" class="headerlink" title="inSampleSize等比例压缩"></a>inSampleSize等比例压缩</h4><p>很多情况下我们是在大脚穿小鞋的情况，例如：用相机拍照返回的原图1024x768像素，直接用来显示头像ImageView只有128x96像素，设置inSampleSize=4，从原画中每4像素提取1给像素到目标图片，这样就减少内存使用；<br><strong>计算出合适的inSampleSize值</strong></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">calculateInSampleSize</span><span class="token punctuation">(</span>BitmapFactory<span class="token punctuation">.</span>Options options<span class="token punctuation">,</span>
                <span class="token keyword">int</span> reqWidth<span class="token punctuation">,</span> <span class="token keyword">int</span> reqHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// 源图片的高度和宽度</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> height <span class="token operator">=</span> options<span class="token punctuation">.</span>outHeight<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> width <span class="token operator">=</span> options<span class="token punctuation">.</span>outWidth<span class="token punctuation">;</span>
    <span class="token keyword">int</span> inSampleSize <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>height <span class="token operator">></span> reqHeight <span class="token operator">||</span> width <span class="token operator">></span> reqWidth<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 计算出实际宽高和目标宽高的比率</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> heightRatio <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> height <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> reqHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> widthRatio <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> width <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> reqWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">// 选择宽和高中最小的比率作为inSampleSize的值，这样可以保证最终图片的宽和高</span>
        <span class="token comment" spellcheck="true">// 一定都会大于等于目标的宽和高。</span>
        inSampleSize <span class="token operator">=</span> heightRatio <span class="token operator">&lt;</span> widthRatio <span class="token operator">?</span> heightRatio <span class="token operator">:</span> widthRatio<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> inSampleSize<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="合并使用"><a href="#合并使用" class="headerlink" title="合并使用"></a>合并使用</h4><p>先开启inJustDecodeBounds只读取获取高宽关键信息，获得合适的inSimpleSize的值，合理加载图片；</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> Bitmap <span class="token function">decodeSampledBitmapFromResource</span><span class="token punctuation">(</span>Resources res<span class="token punctuation">,</span> <span class="token keyword">int</span> resId<span class="token punctuation">,</span>
        <span class="token keyword">int</span> reqWidth<span class="token punctuation">,</span> <span class="token keyword">int</span> reqHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment" spellcheck="true">// 第一次解析将inJustDecodeBounds设置为true，来获取图片大小</span>
    <span class="token keyword">final</span> BitmapFactory<span class="token punctuation">.</span>Options options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BitmapFactory<span class="token punctuation">.</span>Options</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>inJustDecodeBounds <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> resId<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 调用上面定义的方法计算inSampleSize值</span>
    options<span class="token punctuation">.</span>inSampleSize <span class="token operator">=</span> <span class="token function">calculateInSampleSize</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> reqWidth<span class="token punctuation">,</span> reqHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 使用获取到的inSampleSize值再次解析图片</span>
    options<span class="token punctuation">.</span>inJustDecodeBounds <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> resId<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="InputStream-中使用"><a href="#InputStream-中使用" class="headerlink" title="InputStream 中使用"></a>InputStream 中使用</h4><pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">public</span> <span class="token keyword">static</span> Bitmap <span class="token function">getFitSampleBitmap</span><span class="token punctuation">(</span>InputStream inputStream<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>
        BitmapFactory<span class="token punctuation">.</span>Options options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BitmapFactory<span class="token punctuation">.</span>Options</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        options<span class="token punctuation">.</span>inJustDecodeBounds <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token function">readStream</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//BitmapFactory.decodeStream(inputStream, null, options);</span>
        BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeByteArray</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bytes<span class="token punctuation">.</span>length<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
        options<span class="token punctuation">.</span>inSampleSize <span class="token operator">=</span> <span class="token function">getFitInSampleSize</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
        options<span class="token punctuation">.</span>inJustDecodeBounds <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//        return BitmapFactory.decodeStream(inputStream, null, options);</span>
        <span class="token keyword">return</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeByteArray</span><span class="token punctuation">(</span>bytes<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> bytes<span class="token punctuation">.</span>length<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/*
     * 从inputStream中获取字节流 数组大小
    * */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">readStream</span><span class="token punctuation">(</span>InputStream inStream<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>
        ByteArrayOutputStream outStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> inStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            outStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        outStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        inStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> outStream<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="使用内存缓存技术LruCache"><a href="#使用内存缓存技术LruCache" class="headerlink" title="使用内存缓存技术LruCache"></a>使用内存缓存技术LruCache</h3><p>LruCache 在android-support-v4的包中提供, 它的主要算法原理是把最近使用的对象用强引用存储在 LinkedHashMap 中，并且把最近最少使用的对象在缓存值达到预设定值之前从内存中移除。</p>
<p>LruCache.java </p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> LruCache<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Bitmap<span class="token operator">></span> mMemoryCache<span class="token punctuation">;</span>

<span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// 获取到可用内存的最大值，使用内存超出这个值会引起OutOfMemory异常。</span>
    <span class="token comment" spellcheck="true">// LruCache通过构造函数传入缓存值，以KB为单位。</span>
    <span class="token keyword">int</span> maxMemory <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>Runtime<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">maxMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">// 使用最大可用内存值的1/8作为缓存的大小。</span>
    <span class="token keyword">int</span> cacheSize <span class="token operator">=</span> maxMemory <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">;</span>
    mMemoryCache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LruCache</span><span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Bitmap<span class="token operator">></span><span class="token punctuation">(</span>cacheSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">protected</span> <span class="token keyword">int</span> <span class="token function">sizeOf</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span> Bitmap bitmap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment" spellcheck="true">// 重写此方法来衡量每张图片的大小，默认返回图片数量。</span>
                <span class="token keyword">return</span> bitmap<span class="token punctuation">.</span><span class="token function">getByteCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addBitmapToMemoryCache</span><span class="token punctuation">(</span>String key<span class="token punctuation">,</span> Bitmap bitmap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getBitmapFromMemCache</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mMemoryCache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> bitmap<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> Bitmap <span class="token function">getBitmapFromMemCache</span><span class="token punctuation">(</span>String key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> mMemoryCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>如上，最核心的问题是如何合理的分配LruCache的大小，关键因素：<br><strong>设备</strong></p>
<ul>
<li>应用可分配内存；</li>
<li>设备屏幕和分辨率</li>
</ul>
<p><strong>图片</strong></p>
<ul>
<li>尺寸和大小及对应的消耗内存；</li>
<li>访问的频率；</li>
<li>动态保持的图片数量及内存总量；</li>
</ul>
<h3 id="Glide-图片优化"><a href="#Glide-图片优化" class="headerlink" title="Glide 图片优化"></a>Glide 图片优化</h3><h4 id="根据ImageView的大小，指定请求图片大小"><a href="#根据ImageView的大小，指定请求图片大小" class="headerlink" title="根据ImageView的大小，指定请求图片大小"></a><a href="https://mrfu.me/2016/02/28/Glide_Module_Example_Optimizing/" target="_blank" rel="noopener">根据ImageView的大小，指定请求图片大小</a></h4><h4 id="用-resize-x-y-调整图片大小"><a href="#用-resize-x-y-调整图片大小" class="headerlink" title="用 resize(x,y) 调整图片大小"></a><a href="https://mrfu.me/2016/02/27/Glide_Image_Resizing_&amp;_Scaling/" target="_blank" rel="noopener">用 resize(x,y) 调整图片大小</a></h4><p>用<strong>CenterCrop</strong>, <strong>FitCenter</strong>调整显示效果</p>
<pre class="line-numbers language-java"><code class="language-java">Glide
    <span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>UsageExampleListViewAdapter<span class="token punctuation">.</span>eatFoodyImages<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">override</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// resizes the image to these dimensions (in pixel)</span>
    <span class="token comment" spellcheck="true">//.fitCenter() </span>
    <span class="token punctuation">.</span><span class="token function">centerCrop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// this cropping technique scales the image so that it fills the requested bounds and then crops the extra.</span>
    <span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><img src="http://img.blog.csdn.net/20160323111112742" alt=""></p>
<h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h3><ul>
<li>获得应用程序最高可用内存<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">int</span> maxMemory <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>Runtime<span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">maxMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"TAG"</span><span class="token punctuation">,</span> <span class="token string">"Max memory is "</span> <span class="token operator">+</span> maxMemory <span class="token operator">+</span> <span class="token string">"KB"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
</ul>
<h3 id="官方资源"><a href="#官方资源" class="headerlink" title="官方资源"></a>官方资源</h3><ul>
<li><a href="https://developer.android.com/topic/performance/graphics/index.html" target="_blank" rel="noopener">Handling Bitmaps</a> 【需翻墙】</li>
<li><a href="https://developer.android.com/downloads/samples/DisplayingBitmaps.zip" target="_blank" rel="noopener">DisplayingBitmaps.zip</a></li>
<li><a href="http://www.jianshu.com/p/eadb0ef271b0" target="_blank" rel="noopener">DisplayingBitmaps部分讲解： Android中高效的显示图片 - Bitmap的内存模型</a></li>
</ul>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li>[1] <a href="http://stormzhang.com/android/2013/11/20/android-display-bitmaps-efficiently/" target="_blank" rel="noopener">ANDROID高效加载图片，有效避免程序OOM</a></li>
<li>[2] <a href="https://mrfu.me/2016/02/27/Glide_Getting_Started/" target="_blank" rel="noopener">Glide 系列预览</a></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>优化</tag>
      </tags>
  </entry>
  <entry>
    <title>基本UI空控件的用方法和属性</title>
    <url>/2017/02/17/2017-02-17-basic-ui-study/</url>
    <content><![CDATA[<h3 id="控件使用"><a href="#控件使用" class="headerlink" title="控件使用"></a>控件使用</h3><h4 id="ViewFlipper"><a href="#ViewFlipper" class="headerlink" title="ViewFlipper"></a>ViewFlipper</h4><ul>
<li>setInAnimation/setOutAnimation</li>
<li>showNext/showPrevious</li>
<li>getDisplayedChild() ==&gt; index ==&gt; getChildAt</li>
<li>addView(view)/addView(view,position)</li>
</ul>
<h4 id="AbsListView"><a href="#AbsListView" class="headerlink" title="AbsListView"></a>AbsListView</h4><ul>
<li>setSelector(new ColorDrawable(Color.TRANSPARENT));</li>
</ul>
<h4 id="GridView"><a href="#GridView" class="headerlink" title="GridView"></a>GridView</h4><ul>
<li>setNumColumns;</li>
<li>setVerticalSpacing/setHorizontalSpacing</li>
</ul>
<p>AnimationSet = AnimationUtils.loadAnimation()</p>
<blockquote>
<p>Tip: 在GridView 的Adapter 内的View 设置setOnClickListener 会导致 设置的 GestureDetector.SimpleOnGestureListener.onFling返回的MotionEvent == null;</p>
</blockquote>
<h4 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a>EditText</h4><ul>
<li>显示/隐藏密码<pre><code>setInputType(hasShowPassword ? 129 : InputType.TYPE_TEXT_VARIATION_PASSWORD);</code></pre></li>
<li>光标位置(定位到最后)<pre><code>edittext.setSelection(int)</code></pre></li>
<li>获取焦点<pre class="line-numbers language-java"><code class="language-java">editText<span class="token punctuation">.</span><span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取焦点</span>
如果对edittext组件设置了editText<span class="token punctuation">.</span><span class="token function">setFocusable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>需要重新获取焦点则必须执行：
editText<span class="token punctuation">.</span><span class="token function">setFocusable</span><span class="token punctuation">(</span>ture<span class="token punctuation">)</span><span class="token punctuation">;</span>
editText<span class="token punctuation">.</span><span class="token function">setFocusableInTouchMode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
editText<span class="token punctuation">.</span><span class="token function">requestFocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
注意：这种情况下，当重新点击文本框，是无法打开软键盘，必须点击第二次才能打开。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h4 id="ViewPager"><a href="#ViewPager" class="headerlink" title="ViewPager"></a>ViewPager</h4><ul>
<li><p>setPageTransformer(); //设置页面切换效果 <a href="https://github.com/jfeinstein10/JazzyViewPager" target="_blank" rel="noopener">JazzyViewPager</a> 提供11种切换效果</p>
</li>
<li><p>经常直播的效果</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DepthPageTransformer</span> <span class="token keyword">implements</span> <span class="token class-name">PageTransformer</span>  <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">float</span> MIN_SCALE <span class="token operator">=</span> <span class="token number">0.75f</span><span class="token punctuation">;</span>

  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">transformPage</span><span class="token punctuation">(</span>View view<span class="token punctuation">,</span> <span class="token keyword">float</span> position<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">int</span> pageWidth <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// [-Infinity,-1) ///看不到的一页 *</span>
          <span class="token comment" spellcheck="true">// This page is way off-screen to the left.</span>
          view<span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// [-1,0]</span>
          <span class="token comment" spellcheck="true">// Use the default slide transition when moving to the left page</span>
          view<span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          view<span class="token punctuation">.</span><span class="token function">setTranslationX</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          view<span class="token punctuation">.</span><span class="token function">setScaleX</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          view<span class="token punctuation">.</span><span class="token function">setScaleY</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>position <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// (0,1]</span>
          <span class="token comment" spellcheck="true">// Fade the page out.</span>
          view<span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> position<span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token comment" spellcheck="true">// Counteract the default slide transition</span>
          view<span class="token punctuation">.</span><span class="token function">setTranslationX</span><span class="token punctuation">(</span>pageWidth <span class="token operator">*</span> <span class="token operator">-</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token comment" spellcheck="true">// Scale the page down (between MIN_SCALE and 1)</span>
          <span class="token keyword">float</span> scaleFactor <span class="token operator">=</span> MIN_SCALE
                  <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> MIN_SCALE<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          view<span class="token punctuation">.</span><span class="token function">setScaleX</span><span class="token punctuation">(</span>scaleFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
          view<span class="token punctuation">.</span><span class="token function">setScaleY</span><span class="token punctuation">(</span>scaleFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// (1,+Infinity]</span>
          <span class="token comment" spellcheck="true">// This page is way off-screen to the right.</span>
          view<span class="token punctuation">.</span><span class="token function">setAlpha</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h4 id="ListView"><a href="#ListView" class="headerlink" title="ListView"></a>ListView</h4><ul>
<li>List内容平滑的移动到指定的位置 smoothScrollToPosition(position); </li>
</ul>
<h4 id="PopupWindow"><a href="#PopupWindow" class="headerlink" title="PopupWindow"></a><a href="https://developer.android.com/reference/android/widget/PopupWindow.html" target="_blank" rel="noopener">PopupWindow</a></h4><ul>
<li><p>一定要设置的：View contentView，int width, int height;</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//构造方法：</span>
<span class="token keyword">public</span> <span class="token function">PopupWindow</span> <span class="token punctuation">(</span>Context context<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token function">PopupWindow</span><span class="token punctuation">(</span>View contentView<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token function">PopupWindow</span><span class="token punctuation">(</span>View contentView<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token function">PopupWindow</span><span class="token punctuation">(</span>View contentView<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">boolean</span> focusable<span class="token punctuation">)</span>
<span class="token comment" spellcheck="true">//常用的初始化</span>
View contentView <span class="token operator">=</span> LayoutInflater<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>MainActivity<span class="token punctuation">.</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>popuplayout<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
PopupWindow popWnd <span class="token operator">=</span> <span class="token function">PopupWindow</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
popWnd<span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span>contentView<span class="token punctuation">)</span><span class="token punctuation">;</span>
popWnd<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span>ViewGroup<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">)</span><span class="token punctuation">;</span>
popWnd<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span>ViewGroup<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>WRAP_CONTENT<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>显示</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//相对某个控件的位置（正左下方），无偏移</span>
<span class="token function">showAsDropDown</span><span class="token punctuation">(</span>View anchor<span class="token punctuation">)</span>：
<span class="token comment" spellcheck="true">//相对某个控件的位置，有偏移;xoff表示x轴的偏移，正值表示向左，负值表示向右；yoff表示相对y轴的偏移，正值是向下，负值是向上；</span>
<span class="token function">showAsDropDown</span><span class="token punctuation">(</span>View anchor<span class="token punctuation">,</span> <span class="token keyword">int</span> xoff<span class="token punctuation">,</span> <span class="token keyword">int</span> yoff<span class="token punctuation">)</span>：
<span class="token comment" spellcheck="true">//相对于父控件的位置（例如正中央Gravity.CENTER，下方Gravity.BOTTOM等），可以设置偏移或无偏移</span>
<span class="token function">showAtLocation</span><span class="token punctuation">(</span>View parent<span class="token punctuation">,</span> <span class="token keyword">int</span> gravity<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>：<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>添加动画<br><code>mPopWindow.setAnimationStyle(R.style.contextMenuAnim);</code><br>contextMenuAnim.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>contextMenuAnim<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:style/Animation.Activity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">  
  &lt;item name=<span class="token string">"android:windowEnterAnimation"</span>>@anim/context_menu_enter&lt;/item>  
  &lt;item name=<span class="token string">"android:windowExitAnimation"</span>>@anim/context_menu_exit&lt;/item>  
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>context_menu_exit.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>  

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>translate</span>  
      <span class="token attr-name"><span class="token namespace">android:</span>duration</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:integer/config_shortAnimTime<span class="token punctuation">"</span></span>  
      <span class="token attr-name"><span class="token namespace">android:</span>fromXDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>  
      <span class="token attr-name"><span class="token namespace">android:</span>fromYDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>  
      <span class="token attr-name"><span class="token namespace">android:</span>interpolator</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:anim/accelerate_decelerate_interpolator<span class="token punctuation">"</span></span>  
      <span class="token attr-name"><span class="token namespace">android:</span>toXDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>  
      <span class="token attr-name"><span class="token namespace">android:</span>toYDelta</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%p<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">></span></span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>setFocusable EditText 是否点击后可编辑</p>
</li>
<li><p>mPopWindow.setBackgroundDrawable(new BitmapDrawable()) 的作用</p>
<blockquote>
<ol>
<li>setOutsideTouchable（）才会生效</li>
</ol>
</blockquote>
</li>
</ul>
<ol start="2">
<li>PopupWindow才会对手机的返回按钮有响应   </li>
</ol>
<ul>
<li>API &gt;= 23 <code>setEnterTransition(Transition) or setExitTransition(Transition)</code></li>
</ul>
<p>参考： </p>
<ol>
<li><a href="http://blog.csdn.net/harvic880925/article/details/49272285" target="_blank" rel="noopener">PopupWindow才会对手机的返回按钮有响应</a></li>
</ol>
<h3 id="常用的UI方法"><a href="#常用的UI方法" class="headerlink" title="常用的UI方法"></a>常用的UI方法</h3><p>获取xml属性</p>
<p>db转px  px转db 像素转换</p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token comment" spellcheck="true">// Calculate ActionBar height</span>
  TypedValue tv <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TypedValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">getTheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resolveAttribute</span><span class="token punctuation">(</span>
                    android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>attr<span class="token punctuation">.</span>actionBarSize<span class="token punctuation">,</span> tv<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                mActionBarHeight <span class="token operator">=</span> TypedValue<span class="token punctuation">.</span><span class="token function">complexToDimensionPixelSize</span><span class="token punctuation">(</span>
                        tv<span class="token punctuation">.</span>data<span class="token punctuation">,</span> context<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDisplayMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>DensityUtil</p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>lwj<span class="token punctuation">.</span>lib<span class="token punctuation">.</span>utils<span class="token punctuation">;</span>

<span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DensityUtil</span> <span class="token punctuation">{</span>

    <span class="token comment" spellcheck="true">/** 
     * 根据手机的分辨率从 dp 的单位 转成为 px(像素) 
     */</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">dip2px</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> <span class="token keyword">float</span> dpValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">float</span> scale <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDisplayMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>density<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>dpValue <span class="token operator">*</span> scale <span class="token operator">+</span> <span class="token number">0.5f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  

    <span class="token comment" spellcheck="true">/** 
     * 根据手机的分辨率从 px(像素) 的单位 转成为 dp 
     */</span>  
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">px2dip</span><span class="token punctuation">(</span>Context context<span class="token punctuation">,</span> <span class="token keyword">float</span> pxValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">float</span> scale <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDisplayMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>density<span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>pxValue <span class="token operator">/</span> scale <span class="token operator">+</span> <span class="token number">0.5f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
<span class="token punctuation">}</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>ConstraintLayout入门体验</title>
    <url>/2017/02/07/2017-02-07-ConstraintLayout-study/</url>
    <content><![CDATA[<h3 id="ConstraintLayout"><a href="#ConstraintLayout" class="headerlink" title="ConstraintLayout"></a>ConstraintLayout</h3><ul>
<li>核心思想：平面内确定一点</li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UI</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaDoc学习笔记</title>
    <url>/2017/02/05/2017-02-05-java-doc/</url>
    <content><![CDATA[<h3 id="官方学习文档"><a href="#官方学习文档" class="headerlink" title="官方学习文档"></a>官方学习文档</h3><ul>
<li><a href="http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html" target="_blank" rel="noopener">How to Write Doc Comments for the Javadoc Tool</a></li>
</ul>
<h3 id="常用的HTML标签"><a href="#常用的HTML标签" class="headerlink" title="常用的HTML标签"></a>常用的HTML标签</h3><hr>
<table>
<thead>
<tr>
<th>标签</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td><code>&lt;strong&gt;&lt;/strong&gt;</code></td>
<td>字体加粗</td>
</tr>
<tr>
<td><code>&lt;p&gt;</code></td>
<td>换行</td>
</tr>
<tr>
<td><code>&lt;img src="" width="" height=""&gt;</code></td>
<td>图片引用</td>
</tr>
<tr>
<td><code>&lt;a href=""&gt;&lt;/a&gt;</code></td>
<td>超链接内容</td>
</tr>
</tbody></table>
<h4 id="加粗-strong"><a href="#加粗-strong" class="headerlink" title="加粗 strong"></a>加粗 strong</h4><p><code>&lt;strong&gt;Strong&lt;/strong&gt;</code></p>
<h4 id="超链接-href"><a href="#超链接-href" class="headerlink" title="超链接 href"></a>超链接 href</h4><p><code>&lt;a href="http://go.microsoft.com/fwlink/?LinkID=205219"&gt;Rx Design Guidelines (PDF)&lt;/a&gt;</code></p>
<h4 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** &lt;p>
*
**/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="图片引用"><a href="#图片引用" class="headerlink" title="图片引用"></a>图片引用</h4><p><code>&lt;img width="640" height="200" src="https://raw.github.com/create.png" alt=""&gt;</code></p>
<h3 id="常用的格式"><a href="#常用的格式" class="headerlink" title="常用的格式"></a>常用的格式</h3><hr>
<h4 id="标题加粗换行"><a href="#标题加粗换行" class="headerlink" title="标题加粗换行"></a>标题加粗换行</h4><pre class="line-numbers language-java"><code class="language-java"> <span class="token comment" spellcheck="true">/**
 * &lt;dl>
 *  &lt;dt>&lt;b>Backpressure:&lt;/b>&lt;/dt>
 *  &lt;dd>The {@code OnSubscribe} instance provided is responsible to be backpressure-aware or
 *  document the fact that the consumer of the returned {@code Observable} has to apply one of
 *  the {@code onBackpressureXXX} operators.&lt;/dd>
 *  &lt;dt>&lt;b>Scheduler:&lt;/b>&lt;/dt>
 *  &lt;dd>{@code create} does not operate by default on a particular {@link Scheduler}.&lt;/dd>
 * &lt;/dl>
 **/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>经验</tag>
        <tag>Java</tag>
        <tag>API</tag>
      </tags>
  </entry>
  <entry>
    <title>RxJava 学习笔记</title>
    <url>/2017/02/01/2017-02-01-rx-learning-note/</url>
    <content><![CDATA[<h3 id="为什么要学RxJava"><a href="#为什么要学RxJava" class="headerlink" title="为什么要学RxJava"></a>为什么要学RxJava</h3><ol>
<li>最大的好处在于,很优雅处理各种线程切换,能使整个代码块的逻辑连贯,易于阅读和维护;</li>
<li>提供丰富的操作符, 能使很多复杂的操作简单几步搞定;</li>
<li>运用响应式编程,使整个编程更流畅简洁;</li>
</ol>
<h3 id="开源库"><a href="#开源库" class="headerlink" title="开源库"></a>开源库</h3><hr>
<p><strong><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="noopener">RxJava</a></strong>&nbsp;&nbsp;&nbsp;&nbsp; <strong><a href="https://github.com/ReactiveX/RxAndroid" target="_blank" rel="noopener">RxAndroid</a></strong></p>
<h4 id="Rx-Sample"><a href="#Rx-Sample" class="headerlink" title="Rx Sample"></a>Rx Sample</h4><ul>
<li><strong><a href="https://github.com/artem-zinnatullin/RxUi" target="_blank" rel="noopener">RxUi</a></strong>  Implementation of pure functional concept of talking to Android View layer in a Reactive way</li>
<li><strong><a href="https://github.com/VictorAlbertos/ReactiveCache" target="_blank" rel="noopener">ReactiveCache</a></strong></li>
<li><a href="http://github.com/kaushikgopal/RxJava-Android-Samples" target="_blank" rel="noopener">Android-RxJava-samples</a> </li>
<li><a href="http://github.com/vyshane/rex-weather" target="_blank" rel="noopener">Rex-weather</a> </li>
<li><a href="https://pspdfkit.com/blog/2016/android-animations-powered-by-rx-java/" target="_blank" rel="noopener">Android animations powered by RxJava</a></li>
</ul>
<h4 id="Rx-相关的开源工具库"><a href="#Rx-相关的开源工具库" class="headerlink" title="Rx 相关的开源工具库"></a>Rx 相关的开源工具库</h4><ul>
<li><strong><a href="https://github.com/0ximDigital/RxAnimations" target="_blank" rel="noopener">RxAnimations</a></strong></li>
<li><strong><a href="https://github.com/JakeWharton/RxBinding" target="_blank" rel="noopener">RxBinding</a></strong></li>
<li><strong><a href="https://github.com/f2prateek/rx-preferences" target="_blank" rel="noopener">rx-preferences</a></strong> Reactive SharedPreferences for Android</li>
<li><strong><a href="https://github.com/requery/requery" target="_blank" rel="noopener">requery</a></strong> 支持RxJava  Kotlin / Android ORM库</li>
<li><strong><a href="https://github.com/trello/RxLifecycle" target="_blank" rel="noopener">RxLifecycle</a></strong> 处理由Activity 或 Fragment生命周期，导致没有完成的订阅（subscriptions）触发的内存泄露</li>
<li><a href="https://github.com/android10/frodo" target="_blank" rel="noopener">Frodo</a> 模仿Jake Wharton’s <a href="https://github.com/JakeWharton/hugo" target="_blank" rel="noopener">Hugo</a>，使用Java切面编程的Android 日志工具库</li>
<li><a href="https://github.com/pavlospt/RxIAPv3" target="_blank" rel="noopener">RxIAPv3</a> 一个用Rx封装后的 Android App内购支付库，提供几个购买、消费和商品清单列表的Rx方法。</li>
<li><a href="https://github.com/pavlospt/RxFile" target="_blank" rel="noopener">RxFile</a></li>
<li><strong><a href="https://github.com/ragnraok/RxCamera" target="_blank" rel="noopener">RxCamera</a></strong>  RxJava style API for android camera</li>
<li><strong><a href="https://github.com/tbruyelle/RxPermissions" target="_blank" rel="noopener">RxPermissions</a></strong> Android runtime permissions powered by RxJava</li>
</ul>
<h3 id="Resource"><a href="#Resource" class="headerlink" title="Resource"></a>Resource</h3><ul>
<li>Homepage <a href="http://reactivex.io/" target="_blank" rel="noopener">http://reactivex.io/</a></li>
<li>RxJava 操作符动画效果演示 <a href="http://rxmarbles.com/" target="_blank" rel="noopener">http://rxmarbles.com/</a></li>
<li><a href="https://medium.com/@fabioCollini/testing-asynchronous-rxjava-code-using-mockito-8ad831a16877#.c0tch3nxw" target="_blank" rel="noopener">Testing asynchronous RxJava code using Mockito</a></li>
<li><a href="https://medium.com/@scottmeschke/rxrecipes-wrap-your-way-to-rx-fd40eb5254b6#.hbtcjp4rm" target="_blank" rel="noopener">RxRecipes: Wrap your way to Rx </a>  主要讲 fromCallable() fromAction()  替换Rx中的接口；</li>
<li><a href="http://www.andevcon.com/news/rxify-the-anti-cache-then-network-or-network-then-cache-problem" target="_blank" rel="noopener"><code>Rxify</code> : The Anti Cache-then-Network OR Network-then-Cache Problem</a> 使用RX concat onErrorResumeNext onErrorReturn 处理访问网络失败后返回本地缓存的机制。</li>
<li><a href="http://okzhjyy82.bkt.clouddn.com/RxJavaEssentials.pdf" target="_blank" rel="noopener">Book: RxJavaEssentials.pdf</a> 【英文】</li>
<li><a href="https://github.com/yuxingxin/RxJava-Essentials-CN" target="_blank" rel="noopener">RxJava Essentials 中文翻译版</a></li>
</ul>
<h4 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h4><ul>
<li><a href="http://reactivex.io/documentation/operators.html" target="_blank" rel="noopener">Doc for operators (操作符相关文档)</a></li>
<li><a href="http://reactivex.io/documentation/scheduler.html" target="_blank" rel="noopener">Scheduler官方文档</a> 【待研究】</li>
<li><a href="https://github.com/ReactiveX/RxJava/wiki" target="_blank" rel="noopener">RxJava Wiki 文档</a></li>
<li><a href="https://github.com/ReactiveX/RxJava/wiki/Implementing-Your-Own-Operators" target="_blank" rel="noopener">Implementing Your Own Operators</a> 【实现自己的操作符】【重点】</li>
</ul>
<h4 id="翻译文档"><a href="#翻译文档" class="headerlink" title="翻译文档"></a>翻译文档</h4><ul>
<li><a href="https://www.gitbook.com/book/mcxiaoke/rxdocs/details" target="_blank" rel="noopener">ReactiveX/RxJava文档中文版</a></li>
</ul>
<h4 id="一些高质量学习资源"><a href="#一些高质量学习资源" class="headerlink" title="一些高质量学习资源"></a>一些高质量学习资源</h4><ul>
<li><a href="http://androidweekly.cn/android-dev-special-weekly-rxjava-rxandroid-issue-0/" target="_blank" rel="noopener">Android开发技术周报特刊之RxJava&amp;RxAndroid Issue#0 </a> 【重点】</li>
<li><a href="http://www.androidweekly.cn/android-dev-special-weekly-rxjava-rxandroid-issue-1/" target="_blank" rel="noopener">Android开发技术周报特刊之RxJava&amp;RxAndroid Issue#1</a>【重点】</li>
<li><a href="http://gank.io/post/560e15be2dca930e00da1083" target="_blank" rel="noopener">给 Android 开发者的 RxJava 详解</a></li>
<li><a href="http://www.imooc.com/article/2028" target="_blank" rel="noopener">使用RxJava构造Android清晰框架</a></li>
<li><strong><a href="https://github.com/lzyzsd/Awesome-RxJava" target="_blank" rel="noopener">Awesome-RxJava</a></strong> 一些RxJava的资料集合 【最爱】</li>
<li><a href="http://blog.danlew.net/2014/09/15/grokking-rxjava-part-1/" title="Grokking RxJava, Part 1: The Basics" target="_blank" rel="noopener">Grokking RxJava, Part 1: The Basics</a> 【英文】</li>
</ul>
<h3 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h3><hr>
<h4 id="操作符相关文章"><a href="#操作符相关文章" class="headerlink" title="操作符相关文章"></a>操作符相关文章</h4><ul>
<li><a href="http://mushuichuan.com/tags/RxJava/" target="_blank" rel="noopener">木水川的博客</a> 【强力推荐】</li>
</ul>
<h4 id="throttleFirst"><a href="#throttleFirst" class="headerlink" title="throttleFirst():"></a><code>throttleFirst():</code></h4><p><code>RxView.clickEvents(button) // RxBinding 代码，后面的文章有解释 .throttleFirst(500, TimeUnit.MILLISECONDS)</code></p>
<h4 id="FlatMap无序，concatMap有序排列"><a href="#FlatMap无序，concatMap有序排列" class="headerlink" title="FlatMap无序，concatMap有序排列"></a>FlatMap无序，concatMap有序排列</h4><p>FlatMap应用场景： 1. 抽取对象的集合并逐个输出； 2. 嵌套回调解决回调地狱的问题；</p>
<pre class="line-numbers language-java"><code class="language-java">Student<span class="token punctuation">[</span><span class="token punctuation">]</span> students <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
Subscriber<span class="token operator">&lt;</span>Course<span class="token operator">></span> subscriber <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Subscriber</span><span class="token operator">&lt;</span>Course<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span>Course course<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> course<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
Observable<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token operator">&lt;</span>Student<span class="token punctuation">,</span> Observable<span class="token operator">&lt;</span>Course<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> Observable<span class="token operator">&lt;</span>Course<span class="token operator">></span> <span class="token function">call</span><span class="token punctuation">(</span>Student student<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Observable<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>student<span class="token punctuation">.</span><span class="token function">getCourses</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>subscriber<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="first-vs-takeFirst"><a href="#first-vs-takeFirst" class="headerlink" title="first() vs. takeFirst()"></a><strong>first() vs. takeFirst()</strong></h4><p>  The difference between the two calls is that first()<br>   will throw a NoSuchElementException<br>   if none of the sources emits valid data, whereas takeFirst()<br>   will simply complete without exception.</p>
<h4 id="groupBy"><a href="#groupBy" class="headerlink" title=".groupBy()"></a>.groupBy()</h4><p>一旦产生的Observable被订阅，分组产生的GroupedObservable就开始缓存，没有被订阅（处理）的GroupedObservable可能会引起内存泄露，<br>故，对不想处理的GroupedObservable，使用take(0)释放缓存；</p>
<h4 id="combineLatest"><a href="#combineLatest" class="headerlink" title="combineLatest"></a>combineLatest</h4><p><img src="http://upload-images.jianshu.io/upload_images/611087-232eae2103188570.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h4 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h4><pre class="line-numbers language-java"><code class="language-java">操作符分类
合并型
combineLatest
join
merge
mergeDelayError
switchOnNext操作符是把一组Observable转换成一个Observable
zip操作符是把两个observable提交的结果，严格按照顺序进行合并
截取添加分类型
startWith

buffer
debounce
window
groupBy
distinct

elementAt
filter
ofType
first
last
single
sample
skip
skipLast
take
错误处理
onErrorReturn
onErrorResumeNext <span class="token keyword">return</span> Observerable
onExceptionResumeNext

改变流程走向
retry
retryWhen

其他
concatMap
cast
scan
ignoreElements操作符忽略所有源Observable产生的结果，只把Observable的onCompleted和onError事件通知给订阅者<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="进价问题研究"><a href="#进价问题研究" class="headerlink" title="进价问题研究"></a>进价问题研究</h3><hr>
<h4 id="线程控制-Scheduler"><a href="#线程控制-Scheduler" class="headerlink" title="线程控制 Scheduler"></a>线程控制 Scheduler</h4><p>在RxJava 中，Scheduler ——调度器，相当于线程控制器，RxJava 通过它来指定每一段代码应该运行在什么样的线程。RxJava 已经内置了几个 Scheduler ，它们已经适合大多数的使用场景：</p>
<ul>
<li>Schedulers.immediate(): 直接在当前线程运行，相当于不指定线程。这是默认的 Scheduler。</li>
<li>Schedulers.newThread(): 总是启用新线程，并在新线程执行操作。</li>
<li>Schedulers.io(): I/O 操作（读写文件、读写数据库、网络信息交互等）所使用的 Scheduler。行为模式和 newThread() 差不多，区别在于 io() 的内部实现是是用一个无数量上限的线程池，可以重用空闲的线程，因此多数情况下 io() 比 newThread() 更有效率。不要把计算工作放在 io() 中，可以避免创建不必要的线程。</li>
<li>Schedulers.computation(): 计算所使用的 Scheduler。这个计算指的是 CPU 密集型计算，即不会被 I/O 等操作限制性能的操作，例如图形的计算。这个 Scheduler 使用的固定的线程池，大小为 CPU 核数。不要把 I/O 操作放在 computation() 中，否则 I/O 操作的等待时间会浪费 CPU。<br>另外， Android 还有一个专用的 AndroidSchedulers.mainThread()，它指定的操作将在 Android 主线程运行。<br>有了这几个 Scheduler ，就可以使用 subscribeOn() 和 observeOn() 两个方法来对线程进行控制了。</li>
</ul>
<ul>
<li>subscribeOn() vs observeOn() 对事情线程的影响；<blockquote>
<p>subscribeOn() 的线程控制可以从事件发出的开端就造成影响；而 observeOn() 的线程切换则发生在它内建的 Subscriber 中，即发生在它即将给下一级 Subscriber 发送事件时，因此 observeOn() 控制的是它后面的线程。</p>
</blockquote>
</li>
<li>doOnSubscribe()的后面跟一个 subscribeOn() ，就能指定准备工作的线程了。<pre class="line-numbers language-java"><code class="language-java">Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>onSubscribe<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span>Schedulers<span class="token punctuation">.</span><span class="token function">io</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">doOnSubscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token annotation punctuation">@Override</span>
      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          progressBar<span class="token punctuation">.</span><span class="token function">setVisibility</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>VISIBLE<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 需要在主线程执行</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span>AndroidSchedulers<span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 指定主线程</span>
  <span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span>AndroidSchedulers<span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>subscriber<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h4 id="Backpressure-【待研究】"><a href="#Backpressure-【待研究】" class="headerlink" title="Backpressure 【待研究】"></a>Backpressure 【待研究】</h4><p><img src="http://ohlb58e07.bkt.clouddn.com/big_stomach.jpg" alt=""></p>
<blockquote>
<p>生产速度比消费快,抛出MissingBackpressureException的异常<br><a href="https://github.com/ReactiveX/RxJava/wiki/Backpressure" target="_blank" rel="noopener">官方对Backpressure的介绍及对应的解决方案</a></p>
</blockquote>
<h3 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h3><hr>
<h4 id="省略subscribeOn-和observeOn-在切换线程时"><a href="#省略subscribeOn-和observeOn-在切换线程时" class="headerlink" title="省略subscribeOn()和observeOn()在切换线程时"></a>省略subscribeOn()和observeOn()在切换线程时</h4><p>在Android开发的时候频繁使用subscribeOn()和observeOn()，后台线程和UI线程切换<br>这可以可以抽离出来（文章：<a href="http://www.jianshu.com/p/e9e03194199e" target="_blank" rel="noopener">避免打断链式结构：使用.compose( )操作符</a>）</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token operator">&lt;</span>T<span class="token operator">></span> Transformer<span class="token operator">&lt;</span>T<span class="token punctuation">,</span> T<span class="token operator">></span> <span class="token function">applySchedulers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Transformer</span><span class="token operator">&lt;</span>T<span class="token punctuation">,</span> T<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token annotation punctuation">@Override</span>
   <span class="token keyword">public</span> Observable<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">call</span><span class="token punctuation">(</span>Observable<span class="token operator">&lt;</span>T<span class="token operator">></span> observable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> observable<span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span>Schedulers<span class="token punctuation">.</span><span class="token function">io</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
         <span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span>AndroidSchedulers<span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="使用debounce做textSearch"><a href="#使用debounce做textSearch" class="headerlink" title="使用debounce做textSearch"></a>使用debounce做textSearch</h4><p>用简单的话讲就是当N个结点发生的时间太靠近（即发生的时间差小于设定的值T），debounce就会自动过滤掉前N-1个结点。<br>解决频繁改变，导致的多余的网络访问（场景举例：删除多余信息）</p>
<pre class="line-numbers language-java"><code class="language-java">RxTextView<span class="token punctuation">.</span><span class="token function">textChangeEvents</span><span class="token punctuation">(</span>inputEditText<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span>AndroidSchedulers<span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token operator">&lt;</span>TextViewTextChangeEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"onComplete"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span>Throwable e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"Error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span>TextViewTextChangeEvent onTextChangeEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Searching for %s"</span><span class="token punctuation">,</span> onTextChangeEvent<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="RxJava代替EventBus，Otto：RxBus"><a href="#RxJava代替EventBus，Otto：RxBus" class="headerlink" title="RxJava代替EventBus，Otto：RxBus"></a>RxJava代替EventBus，Otto：RxBus</h4><ul>
<li><a href="http://www.jianshu.com/p/ca090f6e2fe2" target="_blank" rel="noopener">用RxJava实现事件总线(Event Bus)</a></li>
<li><a href="http://blog.kaush.co/2014/12/24/implementing-an-event-bus-with-rxjava-rxbus/" target="_blank" rel="noopener">Implementing an Event Bus With RxJava - RxBus</a></li>
</ul>
<h4 id="延迟"><a href="#延迟" class="headerlink" title="延迟"></a>延迟</h4><pre class="line-numbers language-java"><code class="language-java">Observable<span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token operator">&lt;</span>Long<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token annotation punctuation">@Override</span>
                  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                      log<span class="token punctuation">.</span><span class="token function">d</span> <span class="token punctuation">(</span><span class="token string">"completed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                  <span class="token punctuation">}</span>

                  <span class="token annotation punctuation">@Override</span>
                  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span>Throwable e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                      log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                  <span class="token punctuation">}</span>

                  <span class="token annotation punctuation">@Override</span>
                  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNext</span><span class="token punctuation">(</span>Long number<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                      log<span class="token punctuation">.</span><span class="token function">d</span> <span class="token punctuation">(</span><span class="token string">"hello world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                  <span class="token punctuation">}</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="schedulePeriodically轮询"><a href="#schedulePeriodically轮询" class="headerlink" title="schedulePeriodically轮询"></a>schedulePeriodically轮询</h4><pre class="line-numbers language-java"><code class="language-java">Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">final</span> Subscriber<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> String<span class="token operator">></span> observer<span class="token punctuation">)</span> <span class="token punctuation">{</span>

                Schedulers<span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createWorker</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                      <span class="token punctuation">.</span><span class="token function">schedulePeriodically</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                          <span class="token annotation punctuation">@Override</span>
                          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                              observer<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span><span class="token function">doNetworkCallAndGetStringResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                          <span class="token punctuation">}</span>
                      <span class="token punctuation">}</span><span class="token punctuation">,</span> INITIAL_DELAY<span class="token punctuation">,</span> POLLING_INTERVAL<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action1</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span>String s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>"polling…<span class="token punctuation">.</span>”<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="使用RxJava处理复杂的Url操作"><a href="#使用RxJava处理复杂的Url操作" class="headerlink" title="使用RxJava处理复杂的Url操作"></a>使用RxJava处理复杂的Url操作</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"Hello, world!"</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>urls <span class="token operator">-</span><span class="token operator">></span> Observable<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>urls<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//拆分List</span>
    <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>url <span class="token operator">-</span><span class="token operator">></span> <span class="token function">getTitle</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 获取网站头名称</span>
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>title <span class="token operator">-</span><span class="token operator">></span> title <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 过滤掉title == null</span>
    <span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 取前5个</span>
    <span class="token punctuation">.</span><span class="token function">doOnNext</span><span class="token punctuation">(</span>title <span class="token operator">-</span><span class="token operator">></span> <span class="token function">saveTitle</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 在得到结果前保存标题到Disk里</span>
    <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>title <span class="token operator">-</span><span class="token operator">></span> System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="按顺序从内存–-gt-文件–-gt-网络获取资源-成功程序停止"><a href="#按顺序从内存–-gt-文件–-gt-网络获取资源-成功程序停止" class="headerlink" title="按顺序从内存–>文件–>网络获取资源,成功程序停止"></a>按顺序从内存–&gt;文件–&gt;网络获取资源,成功程序停止</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">final</span> Observable<span class="token operator">&lt;</span>String<span class="token operator">></span> memory <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observable<span class="token punctuation">.</span>OnSubscribe</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span>Subscriber<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">super</span> String<span class="token operator">></span> subscriber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>memoryCache <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            subscriber<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span>memoryCache<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            subscriber<span class="token punctuation">.</span><span class="token function">onCompleted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


Observable<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>memory<span class="token punctuation">,</span> disk<span class="token punctuation">,</span> network<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span>Schedulers<span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>s <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>
    memoryCache <span class="token operator">=</span> <span class="token string">"memory"</span><span class="token punctuation">;</span>
    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--------------subscribe: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="多个异步并发处理完，再更新"><a href="#多个异步并发处理完，再更新" class="headerlink" title="多个异步并发处理完，再更新"></a>多个异步并发处理完，再更新</h4><pre class="line-numbers language-java"><code class="language-java">  Observable<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>observable1<span class="token punctuation">,</span> observable2<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">subscribeOn</span><span class="token punctuation">(</span>Schedulers<span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>System<span class="token punctuation">.</span>out<span class="token operator">:</span><span class="token operator">:</span>println<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h4 id="flatMap处理异步嵌套异步（Callback-Hell）"><a href="#flatMap处理异步嵌套异步（Callback-Hell）" class="headerlink" title="flatMap处理异步嵌套异步（Callback Hell）"></a>flatMap处理异步嵌套异步（Callback Hell）</h4><pre class="line-numbers language-java"><code class="language-java">NetworkService<span class="token punctuation">.</span><span class="token function">getToken</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> <span class="token string">"password"</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>s <span class="token operator">-</span><span class="token operator">></span> NetworkService<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>s <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"message: "</span> <span class="token operator">+</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="按钮防抖"><a href="#按钮防抖" class="headerlink" title="按钮防抖"></a>按钮防抖</h4><pre class="line-numbers language-java"><code class="language-java">RxView<span class="token punctuation">.</span><span class="token function">clicks</span><span class="token punctuation">(</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>btn_throttle<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">throttleFirst</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>aVoid <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>
        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="响应式的界面"><a href="#响应式的界面" class="headerlink" title="响应式的界面"></a>响应式的界面</h4><p>勾选了某个checkbox，自动更新对应的preference</p>
<pre class="line-numbers language-java"><code class="language-java">SharedPreferences preferences <span class="token operator">=</span> PreferenceManager<span class="token punctuation">.</span><span class="token function">getDefaultSharedPreferences</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
RxSharedPreferences rxPreferences <span class="token operator">=</span> RxSharedPreferences<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>preferences<span class="token punctuation">)</span><span class="token punctuation">;</span>
Preference<span class="token operator">&lt;</span>Boolean<span class="token operator">></span> checked <span class="token operator">=</span> rxPreferences<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
CheckBox checkBox <span class="token operator">=</span> <span class="token punctuation">(</span>CheckBox<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>cb_test<span class="token punctuation">)</span><span class="token punctuation">;</span>
RxCompoundButton<span class="token punctuation">.</span><span class="token function">checkedChanges</span><span class="token punctuation">(</span>checkBox<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>checked<span class="token punctuation">.</span><span class="token function">asAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="Fragment-旋转缓存【待研究】"><a href="#Fragment-旋转缓存【待研究】" class="headerlink" title="Fragment 旋转缓存【待研究】"></a>Fragment 旋转缓存【待研究】</h4><pre class="line-numbers language-java"><code class="language-java">  <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">/*.cache()操作符： 当第一个subscribe订阅的时候，才会连接原始Observable，缓存事件,
      重发给后续订阅的subscribe 值得注意的事，
       它和使用了.replay().publish()操作符的ConnectableObservable的不同。
       另外，为了避免内存开销，不建议缓存大量事件*/</span>
    <span class="token function">setRetainInstance</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cacheObservable <span class="token operator">=</span> weatherManager<span class="token punctuation">.</span><span class="token function">getWeather</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token annotation punctuation">@Override</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onViewCreated</span><span class="token punctuation">(</span>View view<span class="token punctuation">,</span> Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onViewCreated</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cacheObservable<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">/*your subscribe*/</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="测试调试-【待研究】"><a href="#测试调试-【待研究】" class="headerlink" title="测试调试 【待研究】"></a>测试调试 【待研究】</h3><hr>
<ul>
<li><a href="http://fedepaol.github.io/blog/2015/09/13/testing-rxjava-observables-subscriptions/" target="_blank" rel="noopener">Unit Testing RxJava Observables and Subscriptions</a></li>
<li><a href="http://fernandocejas.com/2015/11/05/debugging-rxjava-on-android/" target="_blank" rel="noopener">Debugging RxJava on Android</a></li>
</ul>
<h3 id="实战笔记"><a href="#实战笔记" class="headerlink" title="实战笔记"></a>实战笔记</h3><hr>
<p><strong>RxJava-Android-Samples</strong><br><strong>RetrofitFragment.java</strong><br>Observable.zip / Observable.just <a href="https://gist.github.com/Orange168/2f751594f95f9b05c129cd44f5b10739" target="_blank" rel="noopener">gist code</a></p>
<p><strong>DebounceSearchEmitterFragment.java</strong><br><a href="https://gist.github.com/Orange168/ab5784b27fec8ee8e2614a189c094636" target="_blank" rel="noopener">RxTextView.textChangeEvents gitst code </a></p>
<p><strong>BufferDemoFragment.java</strong><br>     RxView.clickEvents/  .buffer(2, TimeUnit.SECONDS) //收集2s内的点击事件到List中</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">private</span> Subscription <span class="token function">_getBufferedSubscription</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">return</span> RxView<span class="token punctuation">.</span><span class="token function">clickEvents</span><span class="token punctuation">(</span>_tapBtn<span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token operator">&lt;</span>ViewClickEvent<span class="token punctuation">,</span> Integer<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token annotation punctuation">@Override</span>
                  <span class="token keyword">public</span> Integer <span class="token function">call</span><span class="token punctuation">(</span>ViewClickEvent onClickEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                      Timber<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">"--------- GOT A TAP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                      <span class="token function">_log</span><span class="token punctuation">(</span><span class="token string">"GOT A TAP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                      <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
                  <span class="token punctuation">}</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">buffer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//收集2s内的点击事件到List中</span>
              <span class="token punctuation">.</span><span class="token function">observeOn</span><span class="token punctuation">(</span>AndroidSchedulers<span class="token punctuation">.</span><span class="token function">mainThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Observer</span><span class="token operator">&lt;</span>List<span class="token operator">&lt;</span>Integer<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> ）；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>PublishSubject</p>
<pre class="line-numbers language-java"><code class="language-java"> PublishSubject<span class="token operator">&lt;</span>Float<span class="token operator">></span>   _resultEmitterSubject <span class="token operator">=</span> PublishSubject<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        _subscription <span class="token operator">=</span> _resultEmitterSubject<span class="token punctuation">.</span><span class="token function">asObservable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action1</span><span class="token operator">&lt;</span>Float<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span>Float aFloat<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                _result<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>aFloat<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         _resultEmitterSubject<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span>num1 <span class="token operator">+</span> num2<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token annotation punctuation">@OnTextChanged</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><em>PollingFragment.java</em><br>CompositeSubscription / interval /doOnSubscribe /repeatWhen /Observable.timer</p>
<pre class="line-numbers language-java"><code class="language-java">       _subscriptions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">//</span>
              Observable<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">repeatWhen</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RepeatWithDelay</span><span class="token punctuation">(</span>pollCount<span class="token punctuation">,</span> pollingInterval<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action1</span><span class="token operator">&lt;</span>Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token annotation punctuation">@Override</span>
                        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span>Object o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token function">_log</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>Locale<span class="token punctuation">.</span>US<span class="token punctuation">,</span> <span class="token string">"Executing polled task now time : [xx:%02d]"</span><span class="token punctuation">,</span>
                                  <span class="token function">_getSecondHand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Action1</span><span class="token operator">&lt;</span>Throwable<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token annotation punctuation">@Override</span>
                        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span>Throwable e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            Timber<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">"arrrr. Error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
            _subscriptions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">//</span>
              Observable<span class="token punctuation">.</span><span class="token function">interval</span><span class="token punctuation">(</span>INITIAL_DELAY<span class="token punctuation">,</span> POLLING_INTERVAL<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token operator">&lt;</span>Long<span class="token punctuation">,</span> String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token annotation punctuation">@Override</span>
                        <span class="token keyword">public</span> String <span class="token function">call</span><span class="token punctuation">(</span>Long heartBeat<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">return</span> <span class="token function">_doNetworkCallAndGetStringResult</span><span class="token punctuation">(</span>heartBeat<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span>pollCount<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">doOnSubscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token annotation punctuation">@Override</span>
                        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token function">_log</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"Start simple polling - %s"</span><span class="token punctuation">,</span> _counter<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action1</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token annotation punctuation">@Override</span>
                        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span>String taskName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token function">_log</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>Locale<span class="token punctuation">.</span>US<span class="token punctuation">,</span> <span class="token string">"Executing polled task [%s] now time : [xx:%02d]"</span><span class="token punctuation">,</span>
                                  taskName<span class="token punctuation">,</span> <span class="token function">_getSecondHand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RepeatWithDelay</span>
          <span class="token keyword">implements</span> <span class="token class-name">Func1</span><span class="token operator">&lt;</span>Observable<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Void</span><span class="token operator">></span><span class="token punctuation">,</span> Observable<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">>></span> <span class="token punctuation">{</span>

        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> _repeatLimit<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> _pollingInterval<span class="token punctuation">;</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> _repeatCount <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

        <span class="token function">RepeatWithDelay</span><span class="token punctuation">(</span><span class="token keyword">int</span> repeatLimit<span class="token punctuation">,</span> <span class="token keyword">int</span> pollingInterval<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            _pollingInterval <span class="token operator">=</span> pollingInterval<span class="token punctuation">;</span>
            _repeatLimit <span class="token operator">=</span> repeatLimit<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment" spellcheck="true">// this is a notificationhandler, all we care about is</span>
        <span class="token comment" spellcheck="true">// the emission "type" not emission "content"</span>
        <span class="token comment" spellcheck="true">// only onNext triggers a re-subscription</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> Observable<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> <span class="token function">call</span><span class="token punctuation">(</span>Observable<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Void</span><span class="token operator">></span> inputObservable<span class="token punctuation">)</span> <span class="token punctuation">{</span>

            <span class="token comment" spellcheck="true">// it is critical to use inputObservable in the chain for the result</span>
            <span class="token comment" spellcheck="true">// ignoring it and doing your own thing will break the sequence</span>

            <span class="token keyword">return</span> inputObservable<span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token operator">&lt;</span>Void<span class="token punctuation">,</span> Observable<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token annotation punctuation">@Override</span>
                <span class="token keyword">public</span> Observable<span class="token operator">&lt;</span><span class="token operator">?</span><span class="token operator">></span> <span class="token function">call</span><span class="token punctuation">(</span>Void blah<span class="token punctuation">)</span> <span class="token punctuation">{</span>


                    <span class="token keyword">if</span> <span class="token punctuation">(</span>_repeatCount <span class="token operator">>=</span> _repeatLimit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment" spellcheck="true">// terminate the sequence cause we reached the limit</span>
                        <span class="token function">_log</span><span class="token punctuation">(</span><span class="token string">"Completing sequence"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">return</span> Observable<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment" spellcheck="true">// since we don't get an input</span>
                    <span class="token comment" spellcheck="true">// we store state in this handler to tell us the point of time we're firing</span>
                    _repeatCount<span class="token operator">++</span><span class="token punctuation">;</span>

                    <span class="token keyword">return</span> Observable<span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span>_repeatCount <span class="token operator">*</span> _pollingInterval<span class="token punctuation">,</span>
                          TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><em>RxBusDemoFragment.java</em><br>ConnectableObservable / SerializedSubject<br><a href="https://gist.github.com/Orange168/81a3f2dc67bc2248b56b3697adcc601e" target="_blank" rel="noopener">gist代码</a></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">final</span> Subject<span class="token operator">&lt;</span>Object<span class="token punctuation">,</span> Object<span class="token operator">></span> _bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SerializedSubject</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>PublishSubject<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
_bus<span class="token punctuation">.</span><span class="token function">onNext</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>
_bus<span class="token punctuation">.</span><span class="token function">hasObservers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ConnectableObservable<span class="token operator">&lt;</span>Object<span class="token operator">></span> tapEventEmitter <span class="token operator">=</span> _rxBus<span class="token punctuation">.</span><span class="token function">toObserverable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   _subscriptions<span class="token comment" spellcheck="true">//</span>
              <span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>tapEventEmitter<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Action1</span><span class="token operator">&lt;</span>Object<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token annotation punctuation">@Override</span>
                  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span>Object event<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                      <span class="token keyword">if</span> <span class="token punctuation">(</span>event <span class="token keyword">instanceof</span> <span class="token class-name">RxBusDemoFragment<span class="token punctuation">.</span>TapEvent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                          <span class="token function">_showTapText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                      <span class="token punctuation">}</span>
                  <span class="token punctuation">}</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 stream<span class="token punctuation">.</span><span class="token function">buffer</span><span class="token punctuation">(</span>stream<span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 _subscriptions<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>tapEventEmitter<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><em>FormValidationCombineLatestFragment.java</em></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">private</span> Observable<span class="token operator">&lt;</span>CharSequence<span class="token operator">></span> _numberChangeObservable <span class="token operator">=</span> RxTextView<span class="token punctuation">.</span><span class="token function">textChanges</span><span class="token punctuation">(</span>_email_editText<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 _subscription <span class="token operator">=</span> Observable<span class="token punctuation">.</span><span class="token function">combineLatest</span><span class="token punctuation">(</span>_emailChangeObservable<span class="token punctuation">,</span>
              _passwordChangeObservable<span class="token punctuation">,</span>
              _numberChangeObservable<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Fun3<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p><em>PseudoCacheMergeFragment.java</em><br>Observable.merge();<br><em>TimingDemoFragment.java</em></p>
<pre class="line-numbers language-java"><code class="language-java">Observable<span class="token punctuation">.</span><span class="token function">timer</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//</span>
              <span class="token comment" spellcheck="true">//.just(1).delay(2, TimeUnit.SECONDS)//</span>
              <span class="token comment" spellcheck="true">//.interval(1, TimeUnit.SECONDS)//</span>
              <span class="token comment" spellcheck="true">//.interval(0, 1, TimeUnit.SECONDS)//</span>
              <span class="token comment" spellcheck="true">//.interval(3, TimeUnit.SECONDS).take(5)//</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><em>ExponentialBackoffFragment.java</em></p>
<pre class="line-numbers language-java"><code class="language-java">  Observable<span class="token comment" spellcheck="true">//</span>
                    <span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"testing"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// always fails</span>
                    <span class="token punctuation">.</span><span class="token function">retryWhen</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RetryWithDelay</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//当错误时调用，适用于错误处理</span>
 <span class="token comment" spellcheck="true">//1-4 指数的递增延迟</span>
Observable<span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//</span>
                    <span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> Observable<span class="token operator">&lt;</span>Integer<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token annotation punctuation">@Override</span>
                        <span class="token keyword">public</span> Observable<span class="token operator">&lt;</span>Integer<span class="token operator">></span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">final</span> Integer integer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment" spellcheck="true">// Rx-y way of doing the Fibonnaci :P</span>
                            <span class="token keyword">return</span> MathObservable<span class="token comment" spellcheck="true">//</span>
                                  <span class="token punctuation">.</span><span class="token function">sumInteger</span><span class="token punctuation">(</span>Observable<span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> integer<span class="token punctuation">)</span><span class="token punctuation">)</span>
                                  <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Func1</span><span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> Observable<span class="token operator">&lt;</span>Integer<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                      <span class="token annotation punctuation">@Override</span>
                                      <span class="token keyword">public</span> Observable<span class="token operator">&lt;</span>Integer<span class="token operator">></span> <span class="token function">call</span><span class="token punctuation">(</span>Integer targetSecondDelay<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                          <span class="token keyword">return</span> Observable<span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>integer<span class="token punctuation">)</span>
                                                <span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span>targetSecondDelay<span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
                                      <span class="token punctuation">}</span>
                                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-java"><code class="language-java">RxView<span class="token punctuation">.</span><span class="token function">clickEvents</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// RxBinding 代码，后面的文章有解释</span>
    <span class="token punctuation">.</span><span class="token function">throttleFirst</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> TimeUnit<span class="token punctuation">.</span>MILLISECONDS<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 设置防抖间隔为 500ms</span>
    <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>subscriber<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><hr>
<h4 id="RxJS"><a href="#RxJS" class="headerlink" title="RxJS"></a>RxJS</h4><ul>
<li><strong><a href="https://github.com/Reactive-Extensions/RxJS" target="_blank" rel="noopener">RxJS</a></strong> The Reactive Extensions for JavaScript <a href="http://reactivex.io/" target="_blank" rel="noopener">http://reactivex.io</a></li>
<li><a href="https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md" target="_blank" rel="noopener">Big list of functions</a> 常用函数的例子</li>
<li><a href="https://github.com/ReactiveX/RxJava/wiki/Creating-Observables" target="_blank" rel="noopener">Creating Observables</a> 产生Observable的方法</li>
<li><a href="https://gist.github.com/staltz/868e7e9bc2a7b8c1f754" target="_blank" rel="noopener">The introduction to Reactive Programming you’ve been missing</a>  对应的 <a href="http://jsfiddle.net/staltz/8jFJH/48/" target="_blank" rel="noopener">Demo</a></li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-0e4e7d86dd98eae5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="http://blog.csdn.net/lzyzsd/article/details/50120801" target="_blank" rel="noopener">RxJava使用场景小结</a></li>
<li><a href="http://www.imooc.com/article/2028" target="_blank" rel="noopener">使用RxJava构造Android清晰框架</a></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title>Gradle 学习积累</title>
    <url>/2017/01/08/2017-01-08-gradle-note/</url>
    <content><![CDATA[<h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><hr>
<h2 id="Gradle-Guides"><a href="#Gradle-Guides" class="headerlink" title="Gradle Guides"></a>Gradle Guides</h2><ul>
<li><a href="https://guides.gradle.org/creating-new-gradle-builds/" target="_blank" rel="noopener">Creating New Gradle Builds</a></li>
</ul>
<p>命令</p>
<pre class="line-numbers language-shell"><code class="language-shell"># 多任务顺序执行
gradlew clean jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="Groovy-基本"><a href="#Groovy-基本" class="headerlink" title="Groovy 基本"></a>Groovy 基本</h2><p>D:\workspace\project\gradle\basic-demo\build.gradle</p>
<h2 id="Gradle-Task-语法"><a href="#Gradle-Task-语法" class="headerlink" title="Gradle Task 语法"></a>Gradle Task 语法</h2><blockquote>
<p>D:\workspace\project\gradle\basic-demo\build.gradle</p>
</blockquote>
<ol>
<li>task create</li>
<li>task dependon</li>
<li>myTask.doFirst</li>
</ol>
<h2 id="依赖管理"><a href="#依赖管理" class="headerlink" title="依赖管理"></a>依赖管理</h2><h3 id="1-查看当前依赖关系"><a href="#1-查看当前依赖关系" class="headerlink" title="1. 查看当前依赖关系"></a>1. 查看当前依赖关系</h3><p>gradlew  :sample:dependencies</p>
<pre class="line-numbers language-xml"><code class="language-xml">+--- project :jobslibs
|    +--- com.android.support:appcompat-v7:27.1.1
|    |    +--- com.android.support:support-annotations:27.1.1
|    |    +--- com.android.support:support-core-utils:27.1.1
|    |    |    +--- com.android.support:support-annotations:27.1.1
|    |    |    \--- com.android.support:support-compat:27.1.1
|    |    |         +--- com.android.support:support-annotations:27.1.1
|    |    |         \--- android.arch.lifecycle:runtime:1.1.0
|    |    |              +--- android.arch.lifecycle:common:1.1.0
|    |    |              \--- android.arch.core:common:1.1.0
|    |    +--- com.android.support:support-fragment:27.1.1
|    |    |    +--- com.android.support:support-compat:27.1.1 (*)
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="2-排除传递依赖"><a href="#2-排除传递依赖" class="headerlink" title="2. 排除传递依赖"></a>2. 排除传递依赖</h3><p>参考：<a href="http://www.paincker.com/gradle-dependencies" target="_blank" rel="noopener">Gradle依赖项学习总结</a></p>
<p>指定某个模块</p>
<pre class="line-numbers language-groovy"><code class="language-groovy">dependencies <span class="token punctuation">{</span>
    <span class="token function">compile</span> <span class="token punctuation">(</span><span class="token string">'org.codehaus.cargo:cargo-ant:1.3.1'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        exclude group<span class="token punctuation">:</span> <span class="token string">'xml-apis'</span><span class="token punctuation">,</span> module<span class="token punctuation">:</span> <span class="token string">'xml-apis'</span>
    <span class="token punctuation">}</span>
    compile  <span class="token string">'xml-apis:xml-apis:2.0.2'</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>中断引用库的依赖，不引用引用的引用</p>
<pre class="line-numbers language-groovy"><code class="language-groovy">dependencies <span class="token punctuation">{</span>
    <span class="token function">compile</span> <span class="token punctuation">(</span><span class="token string">'org.codehaus.cargo:cargo-ant:1.3.1'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        transitive<span class="token operator">=</span><span class="token boolean">false</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>版本冲突 Force强制使用某个模块</p>
<pre class="line-numbers language-groovy"><code class="language-groovy">configurations<span class="token operator">.</span>all <span class="token punctuation">{</span>
   resolutionStrategy <span class="token punctuation">{</span>
       force <span class="token string">'org.hamcrest:hamcrest-core:1.3'</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
dependencies <span class="token punctuation">{</span>
   <span class="token function">androidTestCompile</span><span class="token punctuation">(</span><span class="token string">'com.android.support.test:runner:0.2'</span><span class="token punctuation">)</span>
   <span class="token function">androidTestCompile</span><span class="token punctuation">(</span><span class="token string">'com.android.support.test:rules:0.2'</span><span class="token punctuation">)</span>
   <span class="token function">androidTestCompile</span><span class="token punctuation">(</span><span class="token string">'com.android.support.test.espresso:espresso-core:2.1'</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-gradle"><code class="language-gradle">Android dependency 'androidx.exifinterface:exifinterface' has different version for the compile (1.0.0-rc01) and runtime (1.1.0-beta01) classpath. You should manually set the same version via DependencyResolution<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>解决</p>
<pre class="line-numbers language-groovy"><code class="language-groovy">allprojects <span class="token punctuation">{</span>
    repositories <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
    subprojects<span class="token punctuation">{</span>
        project<span class="token operator">.</span>configurations<span class="token operator">.</span>all<span class="token punctuation">{</span>
            resolutionStrategy<span class="token operator">.</span>eachDependency <span class="token punctuation">{</span> details <span class="token operator">-></span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>details<span class="token operator">.</span>requested<span class="token operator">.</span>group <span class="token operator">==</span> <span class="token string">'androidx.exifinterface'</span>
                    <span class="token operator">&amp;&amp;</span> details<span class="token operator">.</span>requested<span class="token operator">.</span>name<span class="token operator">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">'exifinterface'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    details<span class="token operator">.</span>useVersion <span class="token string">"1.0.0-rc01"</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="配置相关"><a href="#配置相关" class="headerlink" title="配置相关"></a>配置相关</h3><p>强制刷新依赖</p>
<pre class="line-numbers language-shell"><code class="language-shell">gradlew --refresh-dependencies assemble<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><h3 id="查看属性-ext"><a href="#查看属性-ext" class="headerlink" title="查看属性(ext)"></a>查看属性(ext)</h3><p>设置属性 <code>gradle.properties</code></p>
<pre class="line-numbers language-gradle"><code class="language-gradle">description = "A trivial Gradle build"
version = "1.0"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>查看</p>
<pre><code>./gradlew properties</code></pre><h3 id="任务调试"><a href="#任务调试" class="headerlink" title="任务调试"></a>任务调试</h3><pre class="line-numbers language-shell"><code class="language-shell">./gradlew task_cmd --scan<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img src="http://cdn.linz.tech/basic-demo-build-scan.png" alt=""></p>
<p>打印堆栈信息</p>
<pre class="line-numbers language-shell"><code class="language-shell"># --stacktrace
./gradlew task_cmd -s
# --full-stacktrace
./gradlew task_cmd -S<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>自定义日志级别输出</p>
<p><img src="http://cdn.linz.tech/logger_level-2019-6-13.webp" alt=""></p>
<pre class="line-numbers language-shell"><code class="language-shell"># out quiet > level log 
gradle -q task_cmd
# out info > level log 
gradle -i task_cmd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>使用gradle内置 logger 日志</p>
<pre class="line-numbers language-shell"><code class="language-shell">task logTask {
  doLast {
    println 'Hello world!'
    logger.quiet('quiet log ...')
    logger.error('error log ...')
    logger.lifecycle('lifecycle log info ...')
    logger.info('info log...')
    logger.debug('debug ... ')
  }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>获取Task命令的命令选项，例如：</p>
<p><code>gradlew help --task init</code></p>
<p>输出如下：</p>
<pre class="line-numbers language-shell"><code class="language-shell">> Task :help 
Detailed task information for init

Path
     :init

Type
     InitBuild (org.gradle.buildinit.tasks.InitBuild)

Options
     --dsl     Set alternative build script DSL to be used.
               Available values are:
                    groovy
                    kotlin

     --test-framework     Set alternative test framework to be used.
                          Available values are:
                               spock
                               testng

     --type     Set type of build to create.
                Available values are:
                     basic
                     groovy-application
                     groovy-library
                     java-application
                     java-library
                     pom
                     scala-library

Description
     Initializes a new Gradle build.

Group
     Build Setup<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><h3 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h3><ul>
<li><a href="https://www.jianshu.com/nb/10954931" target="_blank" rel="noopener">构建工具-Gradle</a></li>
<li><a href="https://www.jianshu.com/p/9df3c3b6067a" target="_blank" rel="noopener">Gradle 完整指南（Android）</a> android Gradle 基础的使用看</li>
<li><a href="https://www.jianshu.com/p/b7fc7a6abffb" target="_blank" rel="noopener">Gradle实战及学习建议</a> Gradle for android 的一些学习资源的罗列</li>
<li><a href="https://docs.gradle.org/current/userguide/custom_plugins.html" target="_blank" rel="noopener">Writing Custom Plugins</a> gradle官方文档，自定义插件拿到<a href="https://docs.gradle.org/current/javadoc/org/gradle/api/Project.html" target="_blank" rel="noopener">Project</a>类，就可以拿到几乎所有工程配置的属性和方法，然后发挥想象控制你的工程。</li>
</ul>
<h3 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h3><ul>
<li><a href="https://docs.gradle.org/current/userguide/dependency_management.html" target="_blank" rel="noopener">Chapter 23. Dependency Management</a> 【待研究】</li>
<li><a href="https://docs.gradle.org/current/userguide/java_plugin.html" target="_blank" rel="noopener">Chapter 45. The Java Plugin</a></li>
<li><a href="https://docs.gradle.org/current/dsl/org.gradle.api.artifacts.dsl.DependencyHandler.html" target="_blank" rel="noopener">DependencyHandler</a></li>
<li><a href="http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Build-Types" target="_blank" rel="noopener">Gradle Plugin User Guide</a> Android Studio 官网提供的Gradle实用教程</li>
<li><a href="http://google.github.io/android-gradle-dsl/current/" target="_blank" rel="noopener">Android Plugin DSL Reference</a>  build.gradle  android{….} API</li>
</ul>
<h3 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h3><p>*<em>Android Studio Project Site *</em></p>
<ul>
<li><a href="http://tools.android.com/tech-docs/new-build-system/user-guide" target="_blank" rel="noopener">Gradle Plugin User Guide</a></li>
<li><a href="http://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.BuildType.html" target="_blank" rel="noopener">Android BuildType的可配置属性</a></li>
</ul>
<h1 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h1><ul>
<li><strong><a href="https://github.com/JakeWharton/hugo" target="_blank" rel="noopener">hugo</a></strong>  JakeWharton 不必介绍了。项目中使用Gradle plugin 和自定义Task 顺便学习一些Process Annotation.</li>
<li><a href="https://plugins.gradle.org/" target="_blank" rel="noopener">https://plugins.gradle.org/</a> plugins gradle plugin确定</li>
</ul>
<h2 id="开源插件"><a href="#开源插件" class="headerlink" title="开源插件"></a>开源插件</h2><hr>
<ul>
<li><a href="https://github.com/vanniktech/gradle-android-junit-jacoco-plugin" target="_blank" rel="noopener">gradle-android-junit-jacoco-plugin</a><br>可以生成代码单元测试覆盖率报告的 Gradle 插件。</li>
<li><a href="https://github.com/vanniktech/gradle-android-javadoc-plugin" target="_blank" rel="noopener">gradle-android-javadoc-plugin</a><br>可以生成 java doc 的 Gradle 插件。</li>
<li><a href="https://github.com/vanniktech/gradle-android-apk-size-plugin" target="_blank" rel="noopener">gradle-android-apk-size-plugin</a><br>可以将 Apk 大小记录到 CSV 文件的 Gradle 插件。</li>
<li><a href="http://github.com/adwiv/android-fat-aar" target="_blank" rel="noopener">android-fat-aar </a> Gradle script that allows you to merge and embed dependencies in generted aar file.</li>
<li><strong><a href="https://github.com/JcMinarro/ProperDroid" target="_blank" rel="noopener">ProperDroid</a></strong>  simplifies the way that config different variant on your project.</li>
<li><strong><a href="https://github.com/KeepSafe/dexcount-gradle-plugin" target="_blank" rel="noopener">dexcount-gradle-plugin</a></strong>  A Gradle plugin to report the number of method references in your APK on every build.</li>
</ul>
<h1 id="Android-studio-使用"><a href="#Android-studio-使用" class="headerlink" title="Android studio 使用"></a>Android studio 使用</h1><h2 id="gradle-properties"><a href="#gradle-properties" class="headerlink" title="gradle.properties"></a>gradle.properties</h2><ol>
<li><p><strong>build.gradle使用gradle.properties</strong></p>
<p>gradle.properties </p>
<pre class="line-numbers language-shell"><code class="language-shell">VERSION_CODE=111
VERSION_NAME=2.8.5
STORE_PASSWORD=123456<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>build.gradle <font color="red">读取出来默认为String类型</font></p>
<pre class="line-numbers language-groovy"><code class="language-groovy">versionCode Integer<span class="token operator">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>VERSION_CODE<span class="token punctuation">)</span>
versionName VERSION_NAME
<span class="token comment" spellcheck="true">//或</span>
versionCode Integer<span class="token operator">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>project<span class="token operator">.</span>VERSION_CODE<span class="token punctuation">)</span>
versionName project<span class="token operator">.</span>VERSION_NAME<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h1 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h1><ul>
<li><p><a href="http://blog.csdn.net/qinxiandiqi/article/details/44458707" target="_blank" rel="noopener">  建立企业内部maven服务器并使用Android Studio发布公共项目</a>。</p>
</li>
<li><p><a href="https://blog.csdn.net/csdn_mm/article/details/78364444" target="_blank" rel="noopener">Android 将Android项目打包成aar文件并在其他项目中引用,打包成jar包</a></p>
</li>
</ul>
<h1 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h1><hr>
<h2 id="依赖更新"><a href="#依赖更新" class="headerlink" title="依赖更新"></a><strong>依赖更新</strong></h2><p>项目依赖的远程包如果有更新，会有提醒或者自动更新吗？ 不会的，需要你手动设置changing标记为true，这样gradle会每24小时检查更新，通过更改resolutionStrategy可以修改检查周期。</p>
<pre class="line-numbers language-gradle"><code class="language-gradle">configurations.all {
// check for updates every build
resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}
dependencies {
compile group: "group", name: "projectA", version: "1.1-SNAPSHOT", changing: true
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>之前上传aar同一版本到maven仓库，但依赖却没有更新，该怎么办呢?可以直接删除本地缓存，缓存在~/.gradle/caches目录下，删除缓存后，下次运行就会自动重新下载远程依赖了。</p>
<h2 id="Gradle下载慢5个解决方案"><a href="#Gradle下载慢5个解决方案" class="headerlink" title="Gradle下载慢5个解决方案"></a>Gradle下载慢5个解决方案</h2><blockquote>
<p>原因: 由于 services.gradle.org 国内下载速度很慢(一般为45kb/s), 而每个gradle-xx.xx.-all.zip 版本至少60MB, 也就正常是需要40分钟左右,花都谢了</p>
</blockquote>
<pre class="line-numbers language-shell"><code class="language-shell">#Mon Oct 22 23:20:47 CST 2018
distributionBase=GRADLE_USER_HOME
distributionPath=wrapper/dists
zipStoreBase=GRADLE_USER_HOME
zipStorePath=wrapper/dists
#把*4.6-all.zip 改为4.6-bin.zip 需要下载的更小
distributionUrl=https\://services.gradle.org/distributions/gradle-4.6-all.zip
# 解决Gradle下载慢的问题
#方案一：使用本地缓存，修改.. distributions/gradle-4.6-all.zip 为本地已经有的版本

#方案二 1.把下载好的 gradle-x.x.x-all.zip 如：gradle-4.6-all.zip
# 1.1直接复制到 gradle-wrapper.properties 同在目录
# 1.2 如下：
#distributionUrl=gradle-4.6-all.zip

#方案三：引用本地文件地址
#1. Window
#distributionUrl=file:///E://software//2.coder//env//gradle-4.6-all.zip
#2. Unix
#distributionUrl=file\:/tmp/gradle-2.2.1-all.zip

#方案四：手动（国内或者浏览器）下载一般比较快，解压到gradle缓存目录
# 参考：https://www.cnblogs.com/rainboy2010/p/7062279.html
# 1. 缓存目录
# 1.1 window默认 : C:\Users\xxx(用户名)\.gradle\wrapper\dists\gradle-3.3-all\55gk2rcmfc6p2dg9u9ohc3hw9
# 1.2 unix默认： ~/.gradle/...
# 2. 获取base36值，参考FileTest#getDistMD5方法
#messageDigest = MessageDigest.getInstance("MD5");
#messageDigest.update(distributionUrl.getBytes());
#String str = new BigInteger(1, messageDigest.digest()).toString(36);
# 3. 在dist\gradle-3.3-all\ 下
# 3.1 新建文件，名为获取base36值
# 3.2 拷贝下载好的gradle-x.x.x-all.zip 到新建的文件，并解压

#方案五： 直接更改 distributionUrl的下载路径为国内服务器，例如：http://mirrors.flysnow.org/
#如：distributionUrl=http\://mirrors.flysnow.org/gradle/gradle-4.1-bin.zip
#注意 1. 镜像网站有指定版本；2. 不要设置代理
#如果你在 gradle.properties 配置了代理，请添加一个不走代理的配置，否则 gralde 无法安装
#systemProp.http.proxyHost=mirrors.neusoft.edu.cn
#systemProp.http.proxyPort=80
## 添加不走代理的 host，会影响 package 的安装
#systemProp.http.nonProxyHosts=172.1.1.227|localhost|mirrors.flysnow.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="依赖下载慢，使用阿里云国内镜像"><a href="#依赖下载慢，使用阿里云国内镜像" class="headerlink" title="依赖下载慢，使用阿里云国内镜像"></a>依赖下载慢，使用阿里云国内镜像</h2><p>单个项目生效</p>
<pre class="line-numbers language-groovy"><code class="language-groovy">buildscript <span class="token punctuation">{</span>
    repositories <span class="token punctuation">{</span>
        maven <span class="token punctuation">{</span> url <span class="token string">'http://maven.aliyun.com/nexus/content/groups/public/'</span> <span class="token punctuation">}</span>
        maven<span class="token punctuation">{</span> url <span class="token string">'http://maven.aliyun.com/nexus/content/repositories/jcenter'</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    dependencies <span class="token punctuation">{</span>
        classpath <span class="token string">'com.android.tools.build:gradle:2.2.3'</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
allprojects <span class="token punctuation">{</span>
    repositories <span class="token punctuation">{</span>
        maven <span class="token punctuation">{</span> url <span class="token string">'http://maven.aliyun.com/nexus/content/groups/public/'</span> <span class="token punctuation">}</span>
        maven<span class="token punctuation">{</span> url <span class="token string">'http://maven.aliyun.com/nexus/content/repositories/jcenter'</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>对所有项目生效，在USER_HOME/.gradle/下创建init.gradle文件</p>
<pre class="line-numbers language-groovy"><code class="language-groovy">allprojects<span class="token punctuation">{</span>
    repositories <span class="token punctuation">{</span>
        <span class="token keyword">def</span> ALIYUN_REPOSITORY_URL <span class="token operator">=</span> <span class="token string">'http://maven.aliyun.com/nexus/content/groups/public'</span>
        <span class="token keyword">def</span> ALIYUN_JCENTER_URL <span class="token operator">=</span> <span class="token string">'http://maven.aliyun.com/nexus/content/repositories/jcenter'</span>
        all <span class="token punctuation">{</span> ArtifactRepository repo <span class="token operator">-></span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>repo <span class="token keyword">instanceof</span> <span class="token class-name">MavenArtifactRepository</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">def</span> url <span class="token operator">=</span> repo<span class="token operator">.</span>url<span class="token operator">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token operator">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'https://repo1.maven.org/maven2'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    project<span class="token operator">.</span>logger<span class="token operator">.</span>lifecycle <span class="token string">"Repository ${repo.url} replaced by $ALIYUN_REPOSITORY_URL."</span>
                    remove repo
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>url<span class="token operator">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'https://jcenter.bintray.com/'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    project<span class="token operator">.</span>logger<span class="token operator">.</span>lifecycle <span class="token string">"Repository ${repo.url} replaced by $ALIYUN_JCENTER_URL."</span>
                    remove repo
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        maven <span class="token punctuation">{</span>
            url ALIYUN_REPOSITORY_URL
            url ALIYUN_JCENTER_URL
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="gradle-lt-gt-maven"><a href="#gradle-lt-gt-maven" class="headerlink" title="gradle <=> maven"></a>gradle &lt;=&gt; maven</h2><h3 id="1-gradle-gt-maven"><a href="#1-gradle-gt-maven" class="headerlink" title="1. gradle -> maven"></a>1. gradle -&gt; maven</h3><p>build.gradle  <project></project></p>
<pre class="line-numbers language-gradle"><code class="language-gradle">apply plugin: 'java'
apply plugin: 'maven'

group = 'com.101tec'
version = '0.7-dev'
sourceCompatibility = 1.6

task writeNewPom << {
    pom {
        project {
            inceptionYear '2008'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("$buildDir/pom.xml")
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="2-maven-gt-gradle"><a href="#2-maven-gt-gradle" class="headerlink" title="2. maven -> gradle"></a>2. maven -&gt; gradle</h3><pre class="line-numbers language-shell"><code class="language-shell">gradle init --type pom<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 架构相关笔记</title>
    <url>/2016/12/27/2016-12-27-Archtecture-for-Android/</url>
    <content><![CDATA[<h3 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h3><hr>
<h4 id="Google-官方"><a href="#Google-官方" class="headerlink" title="Google 官方"></a>Google 官方</h4><ul>
<li><strong><a href="https://github.com/googlesamples/android-architecture-components" target="_blank" rel="noopener">android-architecture-components</a></strong></li>
<li><strong><a href="https://github.com/google/iosched" target="_blank" rel="noopener">Google I/O Android App</a></strong> The Google I/O Android App</li>
<li><a href="http://developer.android.com/tools/data-binding/guide.html" target="_blank" rel="noopener">Data Binding Guide</a></li>
<li><strong><a href="https://github.com/googlesamples/android-architecture" target="_blank" rel="noopener">Android Architecture Blueprints</a></strong> 【重点】</li>
</ul>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul>
<li><strong><a href="https://github.com/ribot/android-boilerplate" target="_blank" rel="noopener">Android Boilerplate</a></strong> 一些常用开源框架的集合 【重点】</li>
<li><strong><a href="https://github.com/ribot/android-guidelines" target="_blank" rel="noopener">Android Guidelines</a></strong>  Architecture and code guidelines 2000+【重点】</li>
</ul>
<h3 id="常用的架构及教程"><a href="#常用的架构及教程" class="headerlink" title="常用的架构及教程"></a>常用的架构及教程</h3><ul>
<li><a href="http://www.jianshu.com/p/01d3c014b0b1" target="_blank" rel="noopener">Google官方MVP+Dagger2架构详解 </a></li>
<li><a href="https://github.com/android10/Android-CleanArchitecture" target="_blank" rel="noopener">Android-CleanArchitecture</a><br>Relative  blog <a href="http://fernandocejas.com/2014/09/03/architecting-android-the-clean-way/" target="_blank" rel="noopener">Architecting-android-the-clean-way</a></li>
<li><a href="https://github.com/pedrovgs/EffectiveAndroidUI/" target="_blank" rel="noopener">EffectiveAndroidUI</a></li>
</ul>
<h4 id="Retrofit2"><a href="#Retrofit2" class="headerlink" title="Retrofit2"></a><a href="http://square.github.io/retrofit/" target="_blank" rel="noopener"><strong>Retrofit2</strong></a></h4><ul>
<li><a href="https://futurestud.io/tutorials/tag/retrofit" target="_blank" rel="noopener">Retrofit2 使用注意点总结</a></li>
<li>Tutorial <a href="https://futurestud.io/tutorials/retrofit-getting-started-and-android-client" target="_blank" rel="noopener">Getting Started and Creating an Android Client</a></li>
<li><a href="http://blog.csdn.net/tencent_bugly/article/details/51580627" target="_blank" rel="noopener">深入浅出 Retrofit，这么牛逼的框架你们还不来看看？</a></li>
</ul>
<h4 id="Dagger2"><a href="#Dagger2" class="headerlink" title="Dagger2"></a><strong>Dagger2</strong></h4><blockquote>
<p><a href="https://google.github.io/dagger/" target="_blank" rel="noopener">https://google.github.io/dagger/</a></p>
</blockquote>
<ul>
<li><a href="https://blog.egorand.me/providing-test-doubles-with-dagger-1-and-dagger-2/" target="_blank" rel="noopener">Providing test doubles with Dagger 1 and Dagger 2</a></li>
<li><strong><a href="https://github.com/mgrzechocinski/dagger2-example" target="_blank" rel="noopener">Dagger2 Example</a></strong></li>
<li><a href="https://github.com/luxiaoming/dagger2Demo" target="_blank" rel="noopener">简明清晰的Dagger2教程</a></li>
<li><a href="https://github.com/kaku2015/ColorfulNews" target="_blank" rel="noopener"><strong>ColorfulNews</strong></a> Dagger2 项目</li>
</ul>
<p>Dagger2 Android</p>
<ul>
<li><a href="https://blog.csdn.net/mq2553299/article/details/77485800" target="_blank" rel="noopener">告别Dagger2模板代码：Dagger Android使用详解</a></li>
<li><a href="https://google.github.io/dagger/android.html" target="_blank" rel="noopener">官方网址</a></li>
<li><a href="https://www.jianshu.com/p/2cd491f0da01" target="_blank" rel="noopener">Android - Dagger2使用详解</a></li>
<li><a href="https://github.com/qingmei2/Sample_dagger2" target="_blank" rel="noopener">Sample_dagger2</a></li>
</ul>
<h4 id="图片加载"><a href="#图片加载" class="headerlink" title="图片加载"></a>图片加载</h4><p> <a href="https://github.com/bumptech/glide" target="_blank" rel="noopener">** Glide **</a> 谷歌官方推荐使用</p>
<ul>
<li><a href="https://futurestud.io/blog/glide-getting-started" target="_blank" rel="noopener">Glide 使用的详解教程 英文版</a></li>
<li><a href="http://mrfu.me/2016/02/27/Glide_Getting_Started/" target="_blank" rel="noopener">Glide 系列预览中文版</a></li>
</ul>
<p><a href="https://github.com/square/picasso" target="_blank" rel="noopener">Picasso</a> square 开源 12000+ star</p>
<ul>
<li><a href="http://blog.csdn.net/chdjj/article/details/49964901" target="_blank" rel="noopener">Picasso学习笔记</a></li>
<li><a href="http://github.com/desmond1121/Fresco-Source-Analysis" target="_blank" rel="noopener">Fresco-Source-Analysis</a>  </li>
</ul>
<h4 id="Flux"><a href="#Flux" class="headerlink" title="Flux"></a>Flux</h4><p>Facebook 华人工程师提出的一种软件架构</p>
<ul>
<li><a href="http://lgvalle.xyz/2015/08/04/flux-architecture/" target="_blank" rel="noopener">Tutorial：Flux Architecture on Android</a> </li>
<li><a href="http://github.com/lgvalle/android-flux-todo-app" target="_blank" rel="noopener">Flux Architecture on Android</a>  使用Otto在Android上简单是实现Demo</li>
<li><a href="http://facebook.github.io/flux/docs/overview.html" target="_blank" rel="noopener">Facebook官网对flux的介绍</a>  【需要翻墙】<br><img src="https://raw.githubusercontent.com/lgvalle/lgvalle.github.io/master/public/images/flux-graph-simple.png" alt="flux-graph-simple"><br><img src="https://raw.githubusercontent.com/lgvalle/lgvalle.github.io/master/public/images/flux-store.png" alt="flux-graph-store"><br><img src="https://raw.githubusercontent.com/lgvalle/lgvalle.github.io/master/public/images/flux-graph-complete.png" alt="flux-graph-complete"></li>
</ul>
<h4 id="MVP"><a href="#MVP" class="headerlink" title="MVP"></a><strong>MVP</strong></h4><ul>
<li><a href="http://zhengxiaopeng.com/2015/02/06/Android%E4%B8%AD%E7%9A%84MVP/" target="_blank" rel="noopener">MVP  简单的介绍, 及下面介绍推荐相关MVP教程</a></li>
<li><a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93presenter" target="_blank" rel="noopener">MVP Wiki 【英文】</a><br><img src="http://upload-images.jianshu.io/upload_images/1321512-21672a6ecf8e2193.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li><a href="http://www.jianshu.com/p/9d40b298eca9" target="_blank" rel="noopener">Android中的MVP模式，带实例</a></li>
<li><strong><a href="https://github.com/antoniolg/androidmvp" target="_blank" rel="noopener">MVP Android Example</a></strong> github 3700+ star</li>
<li><a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp/" target="_blank" rel="noopener">Google Sample: Android Architecture Blueprints 之 MVP</a></li>
</ul>
<h4 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a><strong>MVVM</strong></h4><ul>
<li><a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel" target="_blank" rel="noopener">MVVM wiki</a>  官方学习资料<a href="http://developer.android.com/tools/data-binding/guide.html" target="_blank" rel="noopener">Data Binding Guide</a></li>
<li><strong><a href="https://github.com/Kelin-Hong/MVVMLight" target="_blank" rel="noopener">MVVMLight</a></strong> 对DataBind库进行优化，使MVVM用起来更加的简洁。 【推荐】</li>
<li><a href="https://medium.com/ribot-labs/approaching-android-with-mvvm-8ceec02d5442#.taa4hehhd" target="_blank" rel="noopener">Approaching Android with MVVM</a> 【英文】</li>
</ul>
<h3 id="开源工具库"><a href="#开源工具库" class="headerlink" title="开源工具库"></a>开源工具库</h3><ul>
<li><strong><a href="https://github.com/instacart/truetime-android" target="_blank" rel="noopener">truetime-android</a></strong> 一个可以在不同App,不同设备得到唯一的时间掺照物的库，IOS也有相同的库；</li>
<li><strong><a href="https://github.com/square/mortar" target="_blank" rel="noopener">Mortar</a></strong> 【待研究】</li>
<li><strong><a href="https://github.com/lyft/scoop" target="_blank" rel="noopener">Scoop</a></strong> 【待研究】</li>
</ul>
<h4 id="任务处理"><a href="#任务处理" class="headerlink" title="任务处理"></a>任务处理</h4><ul>
<li><a href="https://github.com/evernote/android-job" target="_blank" rel="noopener">Android-Job</a>  Android library to handle jobs in the background.</li>
</ul>
<h4 id="页面关系的处理"><a href="#页面关系的处理" class="headerlink" title="页面关系的处理"></a>页面关系的处理</h4><ul>
<li><a href="https://github.com/alibaba" target="_blank" rel="noopener">alibaba</a>/<strong><a href="https://github.com/alibaba/ARouter" target="_blank" rel="noopener">ARouter</a></strong><blockquote>
<p>典型应用场景 :<br>从外部URL映射到内部页面，以及参数传递与解析<br>跨模块页面跳转，模块间解耦<br>拦截跳转过程，处理登陆、埋点等逻辑<br>跨模块API调用，模块间解耦(注册ARouter服务的形式，通过接口互相调用)</p>
<ul>
<li><a href="https://www.imooc.com/article/21861" target="_blank" rel="noopener">阿里ARouter路由实现模块化开发流程</a></li>
</ul>
</blockquote>
</li>
<li><strong><a href="https://github.com/terrakok/Cicerone" target="_blank" rel="noopener">Cicerone</a></strong> 一个Activity/fragment/ViewGroup的路由库</li>
</ul>
<h3 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h3><h4 id="问答"><a href="#问答" class="headerlink" title="问答"></a>问答</h4><ul>
<li><a href="http://www.zhihu.com/question/21406685" target="_blank" rel="noopener">Android 开发有什么好的架构么?</a>  【经典】</li>
</ul>
<h4 id="博客"><a href="#博客" class="headerlink" title="博客"></a><strong>博客</strong></h4><p><strong>架构工具使用</strong></p>
<ul>
<li><a href="http://www.jianshu.com/p/1f21e1d375aa" target="_blank" rel="noopener">不容错过，最全的安卓架构合集【从零开始搭建android框架系列（2）】</a> 对应的Github地址 <a href="https://github.com/CameloeAnthony/AndroidArchitectureCollection" target="_blank" rel="noopener">AndroidArchitectureCollection</a></li>
<li><a href="http://blog.csdn.net/wzgiceman/article/details/52908989" target="_blank" rel="noopener">RxJava+Retrofit+OkHttp 懒人方式使用一</a></li>
<li><a href="http://www.jianshu.com/p/01d3c014b0b1" target="_blank" rel="noopener">Google官方MVP+Dagger2架构详解 </a></li>
</ul>
<p><strong>实战项目架构经验</strong></p>
<ul>
<li><a href="https://realm.io/news/joaquim-verges-making-falcon-pro-3/" target="_blank" rel="noopener">The Making of Falcon Pro 3</a> 三周开发，发布20天没有推广，安装量6000的经验介绍 【英文】</li>
<li><a href="http://www.infoq.com/cn/presentations/from-360-development-see-big-mobile-application-development" target="_blank" rel="noopener"><em>从360手机卫士的开发历程看如何实施大型移动应用开发</em></a> 从整体上讲述软件开发流程及管理，清晰而且基本每个例子都很经典。看了第二次还是有很多收货。【重点】</li>
<li><a href="https://sanwen8.cn/p/129VrRf.html" target="_blank" rel="noopener">英语流利说 Android 架构演进</a>   逻辑条理清晰。</li>
<li><a href="https://medium.com/ribot-labs/android-application-architecture-8b6e34acda65#.j65qk0ltv" target="_blank" rel="noopener">Android Application Architecture</a>    <a href="http://www.jianshu.com/p/8ca27934c6e6" target="_blank" rel="noopener">译文</a><br><img src="http://upload-images.jianshu.io/upload_images/1321512-a19e2efd5d564dab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li><a href="http://fernandocejas.com/2015/07/18/architecting-android-the-evolution/" target="_blank" rel="noopener">Architecting Android…The evolution</a> 很经典的安卓架构文章，惊叹其架构层级之清晰，解耦之精妙，但是很难吃透不适合入门，会是整个软件架构很复杂 【英文】</li>
<li><a href="http://blog.zhaiyifan.cn/2016/03/14/android-new-project-from-0-p1/" target="_blank" rel="noopener">从零开始的Android新项目1 - 架构搭建篇</a> 简洁的概括了Android依赖库分层<br><img src="http://upload-images.jianshu.io/upload_images/1321512-b2c15245b4f51564.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
<h3 id="开源项目"><a href="#开源项目" class="headerlink" title="开源项目"></a>开源项目</h3><h4 id="线上商用项目-【重点研读】"><a href="#线上商用项目-【重点研读】" class="headerlink" title="线上商用项目 【重点研读】"></a><strong>线上商用项目</strong> 【重点研读】</h4><ul>
<li><strong><a href="https://github.com/kickstarter/android-oss" target="_blank" rel="noopener">Kickstarter for Android</a></strong> 一个用视频推销产品的电商APP，同时开源IOS，github 3300+ star<br>官网：<a href="https://www.kickstarter.com/mobile" target="_blank" rel="noopener">https://www.kickstarter.com/mobile</a></li>
<li><a href="https://github.com/DrKLO/Telegram" target="_blank" rel="noopener">Telegram</a> 开源的Android聊天应用,有IOS,WP开源代码多平台 </li>
</ul>
<p><strong>Star</strong> 7000+</p>
<ul>
<li><a href="https://github.com/nickbutcher/plaid" target="_blank" rel="noopener">plaid</a> 12279 start<br><img src="https://raw.githubusercontent.com/nickbutcher/plaid/master/screenshots/plaid_demo.gif" alt=""></li>
</ul>
<h4 id="加星项目"><a href="#加星项目" class="headerlink" title="加星项目"></a><strong>加星项目</strong></h4><ul>
<li><strong><a href="https://github.com/naman14/Timber" target="_blank" rel="noopener">Timber</a></strong> Material Design Music Player github star 2200+【整体框架过了一遍，很多细节需要深入看】<br><img src="https://raw.githubusercontent.com/naman14/Timber/master/graphics/Screenshot_2015-08-05-14-23-03.png" alt=""></li>
<li><strong><a href="https://github.com/lguipeng/Notes" target="_blank" rel="noopener">Notes</a></strong>  Material Design Notes App<br><img src="https://github.com/lguipeng/Notes/raw/master/screenshot/screenshot_1.png" alt=""></li>
<li><a href="https://github.com/wordpress-mobile/WordPress-Android" target="_blank" rel="noopener">WordPress-Android</a></li>
</ul>
<h4 id="Google-开源"><a href="#Google-开源" class="headerlink" title="Google 开源"></a>Google 开源</h4><ul>
<li><a href="https://github.com/googlesamples/android-topeka" target="_blank" rel="noopener">Topeka for Android</a> Material Design 的演示 APP 源代码<br><img src="https://github.com/googlesamples/android-topeka/raw/master/screenshots/category_history.png" alt=""></li>
<li><a href="https://github.com/google/santa-tracker-android" target="_blank" rel="noopener">Google Santa Tracker for Android</a><br><img src="https://github.com/google/santa-tracker-android/raw/master/res/village.png" alt=""><blockquote>
<p>Features:</p>
</blockquote>
<ol>
<li>A beautiful materially designed village</li>
<li>6 exciting games</li>
<li>2 interactive Android Wear watchfaces (with sound!)</li>
<li>Videos, animations and more.</li>
</ol>
</li>
</ul>
<h4 id="有用的功能性项目"><a href="#有用的功能性项目" class="headerlink" title="有用的功能性项目"></a><strong>有用的功能性项目</strong></h4><ul>
<li><strong><a href="https://github.com/dan-zx/rox-android" target="_blank" rel="noopener">Rox-Android</a></strong><br>一个基于Foursquare，根据位置信息及个人和朋友的喜好，推荐可能感兴趣的地方并提供导航<br><img src="https://raw.githubusercontent.com/dan-zx/rox-android/master/etc/art/promo.png" alt=""></li>
<li><strong><a href="https://github.com/Skykai521/StickerCamera" target="_blank" rel="noopener">tickerCamera</a></strong> 这是一款集成了相机,图片裁剪,给图片贴贴图打标签的APP。<br><img src="https://github.com/Skykai521/StickerCamera/raw/master/screenshot/Screenshot_2015-07-19-11-23-00.png" alt=""></li>
<li><strong><a href="https://github.com/hitherejoe/Tabby" target="_blank" rel="noopener">Tabby</a></strong> 手机App跳转到Chrome，设置样式及对应的菜单选项<br><img src="https://github.com/hitherejoe/Tabby/raw/master/images/device.gif" alt=""></li>
</ul>
<h4 id="用户引导帮助开源库"><a href="#用户引导帮助开源库" class="headerlink" title="用户引导帮助开源库"></a>用户引导帮助开源库</h4><ul>
<li><strong><a href="https://github.com/hongyangAndroid/Highlight" target="_blank" rel="noopener">Highlight</a></strong><br><img src="https://github.com/hongyangAndroid/Highlight/raw/master/high_light_demo.gif" alt=""></li>
<li><strong><a href="https://github.com/codemybrainsout/ahoy-onboarding" target="_blank" rel="noopener">Ahoy-onboarding</a></strong></li>
</ul>
<h4 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a><strong>其他</strong></h4><p><strong><a href="https://github.com/DreaminginCodeZH/Douya" target="_blank" rel="noopener">Douya</a></strong><br>开源的 Material Design 豆瓣客户端（A Material Design app for douban.com）<br><img src="https://github.com/DreaminginCodeZH/Douya/raw/master/screenshot/01-immersive.jpg" alt=""></p>
<ul>
<li><strong><a href="https://github.com/harjot-oberai/MusicStreamer" target="_blank" rel="noopener">MusicStreamer</a></strong><br><img src="https://github.com/harjot-oberai/MusicStreamer/raw/master/screenshots/splash.png" alt=""></li>
<li><strong><a href="https://github.com/oxoooo/mr-mantou-android" target="_blank" rel="noopener">mr-mantou-android</a></strong> 简单的架构及集合了国内一些第三方服务</li>
</ul>
<h3 id="扩展学习"><a href="#扩展学习" class="headerlink" title="扩展学习"></a>扩展学习</h3><hr>
<p>[Google首席软件工程师Joshua Bloch谈如何设计一款优秀的API【附PPT】](<a href="http://www.csdn.net/article/2014-02--" target="_blank" rel="noopener">http://www.csdn.net/article/2014-02--</a> 18/2818441-How-to-design-a-good-API#rd)</p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>总结</tag>
        <tag>架构</tag>
      </tags>
  </entry>
  <entry>
    <title>推送实践</title>
    <url>/2016/12/23/2016-12-23-jpush-note/</url>
    <content><![CDATA[<h2 id="极光推送介绍"><a href="#极光推送介绍" class="headerlink" title="极光推送介绍"></a>极光推送介绍</h2><h2 id="极光推送自动集成"><a href="#极光推送自动集成" class="headerlink" title="极光推送自动集成"></a>极光推送自动集成</h2><h3 id="官方-Android-SDK-集成指南"><a href="#官方-Android-SDK-集成指南" class="headerlink" title="官方 Android SDK 集成指南"></a><a href="https://docs.jiguang.cn/jpush/client/Android/android_guide/" target="_blank" rel="noopener">官方 Android SDK 集成指南</a></h3><h3 id="集成实践详细步骤"><a href="#集成实践详细步骤" class="headerlink" title="集成实践详细步骤"></a>集成实践详细步骤</h3><h4 id="注册极光账号-并配置Android-程序包名"><a href="#注册极光账号-并配置Android-程序包名" class="headerlink" title="注册极光账号 并配置Android 程序包名"></a><a href="https://www.jiguang.cn/" target="_blank" rel="noopener">注册极光账号</a> 并配置Android 程序包名</h4><h4 id="配置了jcenter支持"><a href="#配置了jcenter支持" class="headerlink" title="配置了jcenter支持"></a>配置了jcenter支持</h4><pre class="line-numbers language-java"><code class="language-java">buildscript <span class="token punctuation">{</span>
    repositories <span class="token punctuation">{</span>
        <span class="token function">jcenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

allprojects <span class="token punctuation">{</span>
    repositories <span class="token punctuation">{</span>
        <span class="token function">jcenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="集成依赖"><a href="#集成依赖" class="headerlink" title="集成依赖"></a>集成依赖</h4><pre><code>android {
    defaultConfig {
        applicationId "com.xxx.xxx" //JPush上注册的包名.
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'armeabi-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
        manifestPlaceholders = [
            JPUSH_PKGNAME : applicationId,
            JPUSH_APPKEY : "你的appkey", //JPush上注册的包名对应的appkey.
            JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }
}
dependencies {
    compile 'cn.jiguang.sdk:jpush:3.0.0'  // 此处以JPush 3.0.0 版本为例。
    compile 'cn.jiguang.sdk:jcore:1.0.0'  // 此处以JCore 1.0.0 版本为例。
}</code></pre><h4 id="Manifest自定义广播设置"><a href="#Manifest自定义广播设置" class="headerlink" title="Manifest自定义广播设置"></a>Manifest自定义广播设置</h4><pre class="line-numbers language-xml"><code class="language-xml">        <span class="token comment" spellcheck="true">&lt;!-- ************************************* --></span>
        <span class="token comment" spellcheck="true">&lt;!--      The begin setting of JPush       --></span>
        <span class="token comment" spellcheck="true">&lt;!-- ************************************* --></span>
        <span class="token comment" spellcheck="true">&lt;!-- User defined. 用户自定义的广播接收器--></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>receiver</span>
            <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>.broadcast.JPushReceive<span class="token punctuation">"</span></span>
            <span class="token attr-name"><span class="token namespace">android:</span>enabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>intent-filter</span><span class="token punctuation">></span></span>
                <span class="token comment" spellcheck="true">&lt;!--Required 用户注册SDK的intent--></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cn.jpush.android.intent.REGISTRATION<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
                <span class="token comment" spellcheck="true">&lt;!--Required 用户接收SDK消息的intent--></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cn.jpush.android.intent.MESSAGE_RECEIVED<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
                <span class="token comment" spellcheck="true">&lt;!--Required 用户接收SDK通知栏信息的intent--></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cn.jpush.android.intent.NOTIFICATION_RECEIVED<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
                <span class="token comment" spellcheck="true">&lt;!--Required 用户打开自定义通知栏的intent--></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cn.jpush.android.intent.NOTIFICATION_OPENED<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
                <span class="token comment" spellcheck="true">&lt;!-- 接收网络变化 连接/断开 since 1.6.3 --></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>action</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cn.jpush.android.intent.CONNECTION<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>category</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${JPUSH_PKGNAME}<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>intent-filter</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>receiver</span><span class="token punctuation">></span></span>
        <span class="token comment" spellcheck="true">&lt;!-- ************************************* --></span>
        <span class="token comment" spellcheck="true">&lt;!--      The end setting of JPush         --></span>
        <span class="token comment" spellcheck="true">&lt;!-- ************************************* --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="自定义广播接收器"><a href="#自定义广播接收器" class="headerlink" title="自定义广播接收器"></a>自定义广播接收器</h4><p>官方Demo代码 <a href="https://gist.github.com/Orange168/f40de8f1796cfcd1b81cc7908226b7b7" target="_blank" rel="noopener">JPushReceive.java </a></p>
<h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExampleApplication</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
<span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        JPushInterface<span class="token punctuation">.</span><span class="token function">setDebugMode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        JPushInterface<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="测试API集成是否成功"><a href="#测试API集成是否成功" class="headerlink" title="测试API集成是否成功"></a>测试API集成是否成功</h4><ul>
<li>启动应用程序，出现如下日志，说明SDK运行正常<pre class="line-numbers language-java"><code class="language-java"><span class="token punctuation">[</span>JPushInterface<span class="token punctuation">]</span> action<span class="token operator">:</span>init <span class="token operator">-</span> sdkVersion<span class="token operator">:</span><span class="token number">3.0</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">,</span> buildId<span class="token operator">:</span><span class="token number">319</span>
pushcore I<span class="token operator">/</span>JIGUANG<span class="token operator">-</span>JCore<span class="token operator">:</span> <span class="token punctuation">[</span>ConnectingHelper<span class="token punctuation">]</span> Login succeed <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li>运行App，到控制台发送测试推送<br><img src="http://ohlb58e07.bkt.clouddn.com/JPush_tutorial_img.png" alt=""></li>
<li>【重点-填坑】如果没有收到推送重启手机， 日志会打印某些jni调用的代码未找到；</li>
<li>经验集成SDK，配置完成后需等待一段时间，功能才会见效；</li>
</ul>
<h2 id="进价"><a href="#进价" class="headerlink" title="进价"></a>进价</h2><h3 id="别名与标签"><a href="#别名与标签" class="headerlink" title="别名与标签"></a>别名与标签</h3><p>把绑定关系保存到 JPush 服务器端</p>
<ul>
<li>使用案例： 动态标签  根据角色和地域等相关的信息动态设置标签和别名，从而区分收到推送的客户；<br>相关方法<pre><code>JPushInterface.setAlias(Context context,String alias, TagAliasCallback CallBack);
JPushInterface.setTags(Context ctx,Set&lt;String&gt; tags, TagAliasCallback CallBack);
JPushInterface.setAliasAndTags(getApplicationContext(), null, (Set&lt;String&gt;) msg.obj, mTagsCallback);</code></pre><blockquote>
<p><strong>温馨提示</strong> 设置标签别名请注意处理call back结果。只有call back 返回值为 0 才设置成功，<br>才可以向目标推送。否则服务器 API 会返回1011错误。</p>
</blockquote>
</li>
</ul>
<h3 id="RegistrationID"><a href="#RegistrationID" class="headerlink" title="RegistrationID"></a>RegistrationID</h3><p>把绑定关系保存到开发者应用服务器中</p>
<h3 id="客户端设置通知栏样式"><a href="#客户端设置通知栏样式" class="headerlink" title="客户端设置通知栏样式"></a><a href="https://docs.jiguang.cn/jpush/client/Android/android_senior/#_8" target="_blank" rel="noopener">客户端设置通知栏样式</a></h3><blockquote>
<p>铃声、震动<br>显示图标<br>替换默认的通知栏样式。</p>
</blockquote>
<h3 id="自定义通知栏样式"><a href="#自定义通知栏样式" class="headerlink" title="自定义通知栏样式"></a>自定义通知栏样式</h3><pre><code>    /**
     * 设置通知提示方式 - 基础属性
     */
    private void setStyleBasic() {
        BasicPushNotificationBuilder builder = new BasicPushNotificationBuilder(PushSetActivity.this);
        builder.statusBarDrawable = R.drawable.ic_launcher;
        builder.notificationFlags = Notification.FLAG_AUTO_CANCEL;  //设置为点击后自动消失
        builder.notificationDefaults = Notification.DEFAULT_SOUND;  //设置为铃声（ Notification.DEFAULT_SOUND）或者震动（ Notification.DEFAULT_VIBRATE）
        JPushInterface.setPushNotificationBuilder(1, builder);
        Toast.makeText(PushSetActivity.this, "Basic Builder - 1", Toast.LENGTH_SHORT).show();
    }


    /**
     * 设置通知栏样式 - 定义通知栏Layout
     */
    private void setStyleCustom() {
        CustomPushNotificationBuilder builder = new CustomPushNotificationBuilder(PushSetActivity.this, R.layout.customer_notitfication_layout, R.id.icon, R.id.title, R.id.text);
        builder.layoutIconDrawable = R.drawable.ic_launcher;
        builder.developerArg0 = "developerArg2";
        JPushInterface.setPushNotificationBuilder(2, builder);
        Toast.makeText(PushSetActivity.this, "Custom Builder - 2", Toast.LENGTH_SHORT).show();
    }


    private void setAddActionsStyle() {
        MultiActionsNotificationBuilder builder = new MultiActionsNotificationBuilder(PushSetActivity.this);
        builder.addJPushAction(R.drawable.jpush_ic_richpush_actionbar_back, "first", "my_extra1");
        builder.addJPushAction(R.drawable.jpush_ic_richpush_actionbar_back, "second", "my_extra2");
        builder.addJPushAction(R.drawable.jpush_ic_richpush_actionbar_back, "third", "my_extra3");
        JPushInterface.setPushNotificationBuilder(10, builder);

        Toast.makeText(PushSetActivity.this, "AddActions Builder - 10", Toast.LENGTH_SHORT).show();
    }</code></pre><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><h3 id="gradle-properties-增加-android-useDeprecatedNdk-true-使用旧版本的ndk集成方式-不添加会报错"><a href="#gradle-properties-增加-android-useDeprecatedNdk-true-使用旧版本的ndk集成方式-不添加会报错" class="headerlink" title="gradle.properties 增加 android.useDeprecatedNdk=true 使用旧版本的ndk集成方式,不添加会报错:"></a>gradle.properties 增加 <code>android.useDeprecatedNdk=true</code> 使用旧版本的ndk集成方式,不添加会报错:</h3><blockquote>
<p>NDK integration is deprecated in the current plugin. Consider trying the new experimental plugin.</p>
</blockquote>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>实践</tag>
      </tags>
  </entry>
  <entry>
    <title>Android测试资源集合,测试工具,测试开源项目</title>
    <url>/2016/12/03/2016-12-03-android-test/</url>
    <content><![CDATA[<h3 id="测试第三方服务"><a href="#测试第三方服务" class="headerlink" title="测试第三方服务"></a>测试第三方服务</h3><hr>
<p><strong>国内</strong></p>
<ul>
<li><a href="https://bugly.qq.com/v2/" target="_blank" rel="noopener">https://bugly.qq.com/v2/</a> 腾讯的bugly 免费, 而且相当好用</li>
<li><a href="http://utest.qq.com/" target="_blank" rel="noopener">腾讯优测云</a> 提供真机测试和漏洞分析</li>
<li><a href="http://www.testin.cn/" target="_blank" rel="noopener">Testin</a></li>
<li><a href="http://mtc.baidu.com/?_if=12065-bt_16-Brand_16-Brand" target="_blank" rel="noopener">MTC</a></li>
<li><a href="http://www.yiceyun.com/" target="_blank" rel="noopener">易测云</a></li>
</ul>
<p><strong>国外</strong></p>
<ul>
<li><a href="http://www.test-cloud.com/" target="_blank" rel="noopener">TestCloud</a></li>
<li><a href="http://testdroid.com/" target="_blank" rel="noopener">Testdroid</a></li>
<li><a href="https://nimbledroid.com/" target="_blank" rel="noopener">Nimbledroid</a>   Automated performance analysis website</li>
<li><a href="http://en.testbird.com/" target="_blank" rel="noopener">Test bird</a>  APP和手游测试</li>
<li><a href="https://portal.kobiton.com" target="_blank" rel="noopener">kobiton</a> 免费的在线真机测试</li>
</ul>
<p><strong>第三方性能采集SDK</strong></p>
<ul>
<li><a href="http://www.oneapm.com/brand/apm.html?utm_source=BaiduPaid&amp;utm_medium=cpc&amp;utm_term=oneapm%E4%BC%81%E4%B8%9A%E5%90%8D%E7%89%87%E6%A0%87%E9%A2%98&amp;utm_content=mingpian&amp;utm_campaign=BaiduPromotion&amp;from=urysaeuvwrsphdiqyb" target="_blank" rel="noopener">OneAPM</a></li>
<li><a href="http://www.tingyun.com/sem1.html" target="_blank" rel="noopener">听云</a></li>
</ul>
<p><strong>自动化测试</strong></p>
<ul>
<li><strong><a href="https://circleci.com/" target="_blank" rel="noopener">CircleCI</a></strong>  一个基于Github的自动化测试，单元测试工具，提供一个免费的私有仓库。</li>
</ul>
<h3 id="Google官方学习资料"><a href="#Google官方学习资料" class="headerlink" title="Google官方学习资料"></a>Google官方学习资料</h3><hr>
<ul>
<li><a href="http://developer.android.com/training/testing.html" target="_blank" rel="noopener">Best Practices for Testing</a>  【最新/重点】</li>
<li><strong><a href="https://google.github.io/android-testing-support-library/" target="_blank" rel="noopener">Android Testing Support library</a></strong> (ATSL)  【重点】<br>相关视频： <a href="https://www.youtube.com/watch?v=vdasFFfXKOY" target="_blank" rel="noopener">Android Testing (Android Dev Summit 2015)</a> youtube 2015年视频</li>
<li>Developer API  <a href="http://developer.android.com/tools/testing/testing_android.html" target="_blank" rel="noopener">Testing Concepts</a></li>
</ul>
<h3 id="优秀博客"><a href="#优秀博客" class="headerlink" title="优秀博客"></a><strong>优秀博客</strong></h3><hr>
<h4 id="Java-测试"><a href="#Java-测试" class="headerlink" title="Java 测试"></a>Java 测试</h4><ul>
<li><a href="http://android-developers.blogspot.com/2015/12/leveraging-product-flavors-in-android.html" target="_blank" rel="noopener">Leveraging product flavors in Android Studio for hermetic testing</a>  与之对应的 <a href="https://www.code-labs.io/codelabs/android-testing/index.html#0" target="_blank" rel="noopener">codelab</a>学习地址<br>笔记：<br><img src="http://upload-images.jianshu.io/upload_images/1321512-4c6b0b4c090c171b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><ul>
<li><a href="http://googletesting.blogspot.co.uk/2015/04/just-say-no-to-more-end-to-end-tests.html" target="_blank" rel="noopener">Just Say No to More End-to-End Tests</a></li>
<li><a href="https://google.github.io/android-testing-support-library/docs/rules/index.html" target="_blank" rel="noopener">two JUnit Rules</a> @rule will be launched before @Before. The ActivityTestRule  is a rule that provides functional testing of a single Activity.</li>
</ul>
</li>
<li><a href="http://blog.wittchen.biz.pl/test-coverage-report-for-android-application/" target="_blank" rel="noopener">Test coverage report for Android application</a>  使用jacoco-android plugin in a build.gradle<br>进行测试覆盖率报告<br><img src="http://upload-images.jianshu.io/upload_images/1321512-8ab2613a35397236.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="sample"></li>
<li><a href="http://chriszou.com/2016/04/25/android-unit-testing-wechat-group-share.html#rd" target="_blank" rel="noopener">Android单元测试在蘑菇街支付金融部门的实践</a> 很详细介绍了单元测试在实践操作中的使用</li>
</ul>
<h4 id="RxJava-Test"><a href="#RxJava-Test" class="headerlink" title="RxJava Test"></a>RxJava Test</h4><ul>
<li><a href="http://fedepaol.github.io/blog/2015/09/13/testing-rxjava-observables-subscriptions/" target="_blank" rel="noopener">Unit Testing RxJava Observables and Subscriptions</a></li>
<li><a href="https://medium.com/ribot-labs/unit-testing-rxjava-6e9540d4a329" target="_blank" rel="noopener">Unit Testing RxJava Observables</a></li>
<li><a href="http://alexismas.com/blog/2015/05/20/unit-testing-rxjava/" target="_blank" rel="noopener">Unit Testing with RxJava</a></li>
</ul>
<h4 id="UI测试"><a href="#UI测试" class="headerlink" title="UI测试"></a>UI测试</h4><ul>
<li><a href="http://mp.weixin.qq.com/s/gSgpaN1j1drCfs1tKCZ-xQ" target="_blank" rel="noopener">小心！做UI自动化一定要跨过这些坑</a> 【待看】</li>
</ul>
<h3 id="测试框架"><a href="#测试框架" class="headerlink" title="测试框架"></a>测试框架</h3><hr>
<h4 id="Unit-Testing"><a href="#Unit-Testing" class="headerlink" title="Unit Testing"></a><strong>Unit Testing</strong></h4><ul>
<li><strong><a href="https://github.com/junit-team/junit4" target="_blank" rel="noopener">Junit4 Github</a></strong> A programmer-oriented testing framework for Java.<br><a href="http://junit.org/junit4/" target="_blank" rel="noopener">http://junit.org/junit4/</a></li>
<li><strong><a href="https://github.com/mockito/mockito" target="_blank" rel="noopener">Mockito</a></strong>    Tasty mocking framework for unit tests in Java</li>
<li><a href="http://jmockit.org/" target="_blank" rel="noopener">JMockit</a> An automated testing toolkit for Java<br>对比： mockito不能mock static method和final class、final method，JMockit可以；<br><a href="http://stackoverflow.com/questions/4105592/comparison-between-mockito-vs-jmockit-why-is-mockito-voted-better-than-jmockit" target="_blank" rel="noopener">对比Mockito和JMockit的文章</a></li>
<li><a href="https://github.com/jayway/powermock" target="_blank" rel="noopener">PowerMock</a> 一个可以Mock静态类的开源库</li>
</ul>
<blockquote>
<p>Tools for UI Testing: <a href="http://robotium.com/" target="_blank" rel="noopener">Robotium</a>, <a href="http://appium.io/" target="_blank" rel="noopener">Appium</a>, <a href="http://calaba.sh/" target="_blank" rel="noopener">Calabash</a>, <a href="http://robolectric.org/" target="_blank" rel="noopener">Robolectric</a>.  </p>
</blockquote>
<h4 id="UI-Testing"><a href="#UI-Testing" class="headerlink" title="UI Testing"></a>UI Testing</h4><ul>
<li><a href="https://google.github.io/android-testing-support-library/docs/espresso/" target="_blank" rel="noopener">Espresso</a> Android 官方推荐使用的UI测试库</li>
<li><a href="https://developer.android.com/training/testing/ui-testing/uiautomator-testing.html" target="_blank" rel="noopener">UIAutomator</a> 可以夸应用进行测试</li>
<li><a href="http://robolectric.org/" target="_blank" rel="noopener">Robolectric</a> is a unit test framework that de-fangs the Android SDK jar so you can test-drive the development of your Android app. Tests run inside the JVM on your workstation in seconds</li>
</ul>
<h4 id="More"><a href="#More" class="headerlink" title="More"></a>More</h4><ul>
<li><strong><a href="https://github.com/robospock/RoboSpock" target="_blank" rel="noopener">RoboSpock Github </a></strong> A testing framework which brings powers of Spock and Groovy to Android app testing <a href="http://robospock.org/" target="_blank" rel="noopener">http://robospock.org</a></li>
<li><a href="https://github.com/hamcrest" target="_blank" rel="noopener">Hamcrest matchers</a><br>What is Hamcrest?<br>Hamcrest is a library of matchers, which can be combined in to create flexible expressions of intent in tests. They’ve also been used for other purposes.</li>
<li><a href="http://calaba.sh/" target="_blank" rel="noopener">Calabash</a> 特点:<ul>
<li>支持多种平台，代码复用性强:代码同时支持Android 和iOS, Web也有一定的支持;</li>
<li>语法更接近自然语音,易懂也易维护;<br><img src="http://ohlb58e07.bkt.clouddn.com/Calabash_code_demo.png" alt=""></li>
<li>纯黑盒测试。</li>
</ul>
</li>
</ul>
<h3 id="开源库"><a href="#开源库" class="headerlink" title="开源库"></a>开源库</h3><hr>
<p><strong>Collection</strong></p>
<ul>
<li><a href="http://github.com/hotchemi/awesome-android-testing" target="_blank" rel="noopener">awesome-android-testing</a> collection of android  test info 【重点】</li>
</ul>
<p><strong>Sample</strong></p>
<ul>
<li><strong><a href="https://github.com/jaredsburrows/android-gradle-java-template" target="_blank" rel="noopener">android-gradle-java-template</a></strong> Gradle + Android Studio + Robolectric + Espresso + Mockito + EasyMock/PowerMock + JaCoCo Demo</li>
<li><strong><a href="https://github.com/txusballesteros/Android-Clean-Testing" target="_blank" rel="noopener">Android-Clean-Testing</a></strong> Android Testing Sample Project</li>
<li><strong><a href="https://github.com/piotrek1543/robotium-showcase" target="_blank" rel="noopener">robotium-showcase</a></strong>  This example shows how to use Robotium with ActvitityTestRule and <a href="https://github.com/Test" target="_blank" rel="noopener">@Test</a> annotation, it means in Google’s Espresso way.</li>
</ul>
<p><strong>Google Sample</strong></p>
<ol>
<li><a href="http://https//github.com/googlesamples/android-testing-templates" target="_blank" rel="noopener">android-testing-templates</a></li>
<li><a href="http://https//github.com/googlesamples/android-testing" target="_blank" rel="noopener">android-testing</a>  A collection of samples demonstrating different frameworks and techniques for automated testing</li>
</ol>
<h3 id="Tools-测试工具"><a href="#Tools-测试工具" class="headerlink" title="Tools 测试工具"></a>Tools 测试工具</h3><h4 id="Spector-Android-IOS-调试工具-漂亮的UI"><a href="#Spector-Android-IOS-调试工具-漂亮的UI" class="headerlink" title="Spector Android/IOS 调试工具 漂亮的UI"></a><a href="https://app.appspector.com" target="_blank" rel="noopener">Spector Android/IOS 调试工具 漂亮的UI</a></h4><h4 id="square-spoon"><a href="#square-spoon" class="headerlink" title="square/spoon"></a><a href="https://github.com/square" target="_blank" rel="noopener">square</a>/<strong><a href="https://github.com/square/spoon" target="_blank" rel="noopener">spoon</a></strong></h4><p>在adb devices 检测到的设备跑测试程序，并提供截屏，文件，数据库操作：<br><img src="http://upload-images.jianshu.io/upload_images/1321512-694d36e6a73eb429.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Screenshots"><br><img src="http://upload-images.jianshu.io/upload_images/1321512-bc9d6b02dc8e52a4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Files"><br><strong>最最重要的是生成简单明了的测试报告：</strong><br><img src="http://upload-images.jianshu.io/upload_images/1321512-0ffccba21e710b11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=" displaying the results in a meaningful way"></p>
<h4 id="Android-Studio-2-2-Preview-new-feature"><a href="#Android-Studio-2-2-Preview-new-feature" class="headerlink" title="Android Studio 2.2 Preview new feature:"></a>Android Studio 2.2 Preview new feature:</h4><ul>
<li><strong>Espresso Test Recorder</strong> 菜单/run/Recorder Expresso Test 选项可以记录你的操作并转化为Espresso 的测试代码<br><img src="http://upload-images.jianshu.io/upload_images/1321512-36bbbc4ff14afbf2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
<li><strong>APK Analyzer</strong> 菜单/build/Analyzer APK 提供APK大小分析工具，清楚的知道代码体积变换的趋势。<br><img src="http://upload-images.jianshu.io/upload_images/1321512-17b49035bfef0d95.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=".png"></li>
</ul>
<h4 id="screengrab-当UI-Tests-时自动化截屏"><a href="#screengrab-当UI-Tests-时自动化截屏" class="headerlink" title="screengrab 当UI Tests 时自动化截屏"></a><strong><a href="https://github.com/fastlane/screengrab" target="_blank" rel="noopener">screengrab</a></strong> 当UI Tests 时自动化截屏</h4><h4 id="STF-远程控制，一台电脑控制测试多个测试设"><a href="#STF-远程控制，一台电脑控制测试多个测试设" class="headerlink" title="STF   远程控制，一台电脑控制测试多个测试设"></a><a href="http://github.com/openstf/stf" target="_blank" rel="noopener">STF</a>   远程控制，一台电脑控制测试多个测试设</h4><p><a href="https://openstf.github.io/" target="_blank" rel="noopener">openstf.github.io</a> Control and manage Android devices from your browser <img src="https://github.com/openstf/stf/raw/master/doc/7s_usage.gif?raw=true" alt=""></p>
<h4 id="Vysor-用Chrome浏览器控制你的Android手机"><a href="#Vysor-用Chrome浏览器控制你的Android手机" class="headerlink" title="Vysor 用Chrome浏览器控制你的Android手机"></a>Vysor 用Chrome浏览器控制你的Android手机</h4><ul>
<li><a href="http://jijiaxin89.com/2015/08/29/Mirror-android-phone-s-screen-and-gain-full-control-on-computer-with-Vysor/" target="_blank" rel="noopener">Vysor让你在电脑上完全控制android手机屏幕镜像</a></li>
<li><a href="http://jijiaxin89.com/2015/08/31/Vysor-superior/#more" target="_blank" rel="noopener">Vysor 情怀玩法 （番外篇）</a></li>
</ul>
<h3 id="开发时的调试工具"><a href="#开发时的调试工具" class="headerlink" title="开发时的调试工具"></a>开发时的调试工具</h3><h4 id="stetho"><a href="#stetho" class="headerlink" title="stetho"></a><strong><a href="https://github.com/facebook/stetho" target="_blank" rel="noopener">stetho</a></strong></h4><p>Facebook开源，很强大的Android网络和数据库调试工具,能像调试WebApp一样调试Android原生应用。<a href="http://www.jianshu.com/p/03da9f91f41f" target="_blank" rel="noopener">借助Stetho在Chrome上调试Android网络&amp;数据库</a><br>常用配置:</p>
<ul>
<li>初始化<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApplication</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Stetho<span class="token punctuation">.</span><span class="token function">initializeWithDefaults</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>Chrome浏览器打开<code>chrome://inspect/#devices</code></li>
</ul>
<p><strong>进阶</strong>增加网络拦截</p>
<ul>
<li><strong>Dependency</strong> 增加依赖环境<pre class="line-numbers language-gradle"><code class="language-gradle">compile 'com.facebook.stetho:stetho:1.3.1'
compile 'com.facebook.stetho:stetho-okhttp3:1.3.1'
compile 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
compile 'com.squareup.okhttp3:okhttp:3.2.0'
compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>向OkHttpClient增加网络拦截<pre class="line-numbers language-java"><code class="language-java">OkHttpClient client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OkHttpClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">addNetworkInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StethoInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h4 id="databases-相关"><a href="#databases-相关" class="headerlink" title="databases 相关"></a>databases 相关</h4><ul>
<li><a href="https://github.com/amitshekhariitbhu/Android-Debug-Database" target="_blank" rel="noopener"><strong>Android-Debug-Database</strong> 比较漂亮的UI调试数据库</a></li>
</ul>
<h4 id="augmented-traffic-control"><a href="#augmented-traffic-control" class="headerlink" title="augmented-traffic-control"></a><strong><a href="https://github.com/facebook/augmented-traffic-control" target="_blank" rel="noopener">augmented-traffic-control</a></strong></h4><p>Fackbook开源项目模拟移动网络，对App的调试及网络优化有很大的帮助，主要参数有：</p>
<pre><code>网络带宽（bandwidth）
延迟（latency）
丢包率（packet loss）
错包率（corrupted packets）
乱序率（packets ordering）</code></pre><h4 id="GT（随身调）-腾讯开源的测试套件"><a href="#GT（随身调）-腾讯开源的测试套件" class="headerlink" title="GT（随身调） 腾讯开源的测试套件"></a>GT（随身调） 腾讯开源的测试套件</h4><p>能Android设备上安装,进行<code>移动</code>调试,确保测试数据的真实有效性<br>开源地址: <a href="https://github.com/TencentOpen/GT" target="_blank" rel="noopener">https://github.com/TencentOpen/GT</a><br><a href="http://gt.qq.com/index.html" target="_blank" rel="noopener">官网地址</a></p>
<blockquote>
<p>使用GT APP进行快速的性能测试(CPU、内存、流量、电量、帧率/流畅度等等)、开发日志的查看、Crash日志查看、网络数据包的抓取、APP内部参数的调试、真机代码耗时统计等。</p>
</blockquote>
<pre class="line-numbers language-java"><code class="language-java">一<span class="token punctuation">.</span> 基本功能测试
<span class="token number">1</span><span class="token punctuation">.</span> CPU占有率<span class="token punctuation">;</span>
<span class="token number">2</span> jiffes（CPU时间片）<span class="token punctuation">;</span>
<span class="token number">3</span><span class="token punctuation">.</span> 内存PSS值稳定在36M<span class="token punctuation">;</span>
<span class="token number">4</span><span class="token punctuation">.</span> 网络上行流量和下行流量<span class="token punctuation">;</span>
<span class="token number">5</span><span class="token punctuation">.</span> <span class="token string">"数据存档"</span>
二<span class="token punctuation">.</span> 电量测试
再启动电流监控观察，<span class="token number">1</span>分钟后平均电流是220mA
三<span class="token punctuation">.</span> crash
<span class="token operator">-</span> 保存了抓包文件后<span class="token punctuation">;</span>
<span class="token operator">-</span> Logcat查看界面，立即把手机缓存的Logcat日志保存下来<span class="token punctuation">;</span>
四<span class="token punctuation">.</span> Net
<span class="token operator">-</span> 系统提供的流量查看也包括局域网socket的流量<span class="token punctuation">,</span>而且不能分时段统计<span class="token punctuation">;</span>
<span class="token operator">-</span> tcpdump抓包<span class="token punctuation">(</span>需要手机root<span class="token punctuation">)</span> <span class="token operator">+</span> Wiresharek 抓包分析<span class="token punctuation">;</span>
疑问点<span class="token operator">:</span>
<span class="token number">1</span><span class="token punctuation">.</span> 激活FPS（帧率）的监测<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="应用开发助手"><a href="#应用开发助手" class="headerlink" title="应用开发助手"></a>应用开发助手</h4><p> Google Play、应用宝搜索“开发助手”下载， 或<a href="http://trinea.cn/app/dev-tools.apk" target="_blank" rel="noopener">Download</a></p>
<pre><code>屏幕分辨率、CPU 核数、IP 及 Mac 地址、so 类型、系统版本。
频繁切换“严格模式”；
多次启停“显示布局边界”；
测试被系统回收来回切换“不保留活动”；</code></pre><h4 id="Android-Debug-Drawer-查看设备信息"><a href="#Android-Debug-Drawer-查看设备信息" class="headerlink" title="Android Debug Drawer 查看设备信息"></a>Android Debug Drawer 查看设备信息</h4><p><img src="https://github.com/palaima/DebugDrawer/raw/master/images/all.png" alt=""></p>
<h4 id="安卓日志工具"><a href="#安卓日志工具" class="headerlink" title="安卓日志工具"></a>安卓日志工具</h4><ul>
<li><p>XLog <a href="https://github.com/elvishew/xLog" target="_blank" rel="noopener">github</a><br><a href="http://mp.weixin.qq.com/s?__biz=MzA3NTYzODYzMg==&amp;mid=2653578220&amp;idx=3&amp;sn=5691bdd82ae0715ab12fd6b849f74aee&amp;chksm=84b3b1ebb3c438fddf86bf74e232fa14222932ebd6d6439bed04ad17d5e64e9270d4ab460f64&amp;mpshare=1&amp;scene=1&amp;srcid=1110XcvPqVz21oivUSueMAeB#rd" target="_blank" rel="noopener">微信mars 的高性能日志模块 xlog</a></p>
</li>
<li><p><a href="http://github.com/JakeWharton/pidcat/" target="_blank" rel="noopener">Pidcat</a><br><img src="https://github.com/JakeWharton/pidcat/raw/master/screen.png" alt=""></p>
</li>
<li><p><a href="http://github.com/JakeWharton/timber" target="_blank" rel="noopener">Timber</a> jakewharton 出品</p>
<pre class="line-numbers language-java"><code class="language-java">compile <span class="token string">'com.jakewharton.timber:timber:4.5.1'</span>
<span class="token comment" spellcheck="true">// 初始化</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>BuildConfig<span class="token punctuation">.</span>DEBUG<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Timber<span class="token punctuation">.</span><span class="token function">plant</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Timber<span class="token punctuation">.</span>DebugTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    Timber<span class="token punctuation">.</span><span class="token function">plant</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CrashReportingTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">//发布后程序（Release.apk），崩溃日志上报</span>
<span class="token comment" spellcheck="true">/** A tree which logs important information for crash reporting. */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">CrashReportingTree</span> <span class="token keyword">extends</span> <span class="token class-name">Timber<span class="token punctuation">.</span>Tree</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span> <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">int</span> priority<span class="token punctuation">,</span> String tag<span class="token punctuation">,</span> String message<span class="token punctuation">,</span> Throwable t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>priority <span class="token operator">==</span> Log<span class="token punctuation">.</span>ERROR<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            String msg <span class="token operator">=</span> message <span class="token operator">+</span> <span class="token punctuation">(</span>t <span class="token operator">==</span> null <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            MobclickAgent<span class="token punctuation">.</span><span class="token function">reportError</span><span class="token punctuation">(</span>mContext<span class="token punctuation">,</span>
                    String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"TAG=%s, msg=%s, Throwable=%s"</span><span class="token punctuation">,</span>
                            tag<span class="token punctuation">,</span> message<span class="token punctuation">,</span> t <span class="token operator">==</span> null <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//友盟错误上传</span>
<span class="token comment" spellcheck="true">//                Crashlytics.log(priority, tag, msg);// Fabric 错误上传</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p><a href="https://github.com/JakeWharton/hugo" target="_blank" rel="noopener">Hugo</a> 用注解的方式日志打印方法传入的参数 Annotation-triggered method call logging for your debug builds.</p>
</li>
<li><p><a href="https://github.com/NikitaKozlov/Pury" target="_blank" rel="noopener">Pury</a>   like Hugo But Android library for measuring time between multiple independent<br>events.</p>
</li>
<li><p><a href="http://github.com/fengjundev/DoubanMovie-React-Native" target="_blank" rel="noopener">KLog</a> 这是一个Android专用的LogCat工具，主要功能为打印行号、函数调用、Json解析、XML解析、点击跳转、Log信息保存等功能<br><img src="https://github.com/ZhaoKaiQiang/KLog/raw/master/image/demo.gif" alt=""></p>
</li>
</ul>
<h4 id="ViewInspector-查看View绘制层级，参数等"><a href="#ViewInspector-查看View绘制层级，参数等" class="headerlink" title="ViewInspector 查看View绘制层级，参数等"></a><a href="http://github.com/xfumihiro/ViewInspector" target="_blank" rel="noopener">ViewInspector</a> 查看View绘制层级，参数等</h4><p>View Inspection Toolbar for Android Development<br><img src="https://github.com/xfumihiro/ViewInspector/raw/master/images/sample.gif" alt=""></p>
<h4 id="Purchase-UI-Tool-付费工具"><a href="#Purchase-UI-Tool-付费工具" class="headerlink" title="Purchase UI Tool (付费工具)"></a>Purchase UI Tool (付费工具)</h4><ul>
<li><a href="http://robotium.com/" target="_blank" rel="noopener">Robotium Recorder</a></li>
</ul>
<h3 id="优化和分析工具"><a href="#优化和分析工具" class="headerlink" title="优化和分析工具"></a>优化和分析工具</h3><h4 id="Quality-Tools-for-Android"><a href="#Quality-Tools-for-Android" class="headerlink" title="Quality-Tools-for-Android"></a><strong><a href="https://github.com/stephanenicolas/Quality-Tools-for-Android" target="_blank" rel="noopener">Quality-Tools-for-Android</a></strong></h4><h4 id="vb-android-app-quality"><a href="#vb-android-app-quality" class="headerlink" title="vb-android-app-quality"></a><strong><a href="https://github.com/vincentbrison/vb-android-app-quality" target="_blank" rel="noopener">vb-android-app-quality</a></strong></h4><h4 id="AndroidCodeQuality"><a href="#AndroidCodeQuality" class="headerlink" title="AndroidCodeQuality"></a><strong><a href="https://github.com/MasonLiuChn/AndroidCodeQuality" target="_blank" rel="noopener">AndroidCodeQuality</a></strong></h4><p>每次打包时都进行一次  checkstyle,pmd,findbugs验证</p>
<h4 id="AndroidDevMetrics"><a href="#AndroidDevMetrics" class="headerlink" title="AndroidDevMetrics"></a><strong><a href="https://github.com/frogermcs/AndroidDevMetrics" target="_blank" rel="noopener">AndroidDevMetrics</a></strong></h4><p>Performance metrics library for Android development<br><img src="https://raw.githubusercontent.com/frogermcs/androiddevmetrics/master/art/activities_metrics.png" alt=""></p>
<h4 id="AndroidPerformanceMonitor"><a href="#AndroidPerformanceMonitor" class="headerlink" title="AndroidPerformanceMonitor"></a><strong><a href="https://github.com/markzhai/AndroidPerformanceMonitor" target="_blank" rel="noopener">AndroidPerformanceMonitor</a></strong></h4><p>一个对ANR（UI线程block）的监控工具</p>
<blockquote>
<p>A transparent ui-block detection library for Android. (known as BlockCanary)<br><img src="https://github.com/markzhai/AndroidPerformanceMonitor/raw/master/art/shot1.png" alt=""></p>
</blockquote>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>总结</tag>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title>React Native for Android</title>
    <url>/2016/11/20/2016-11-20-React-Native-for-Android/</url>
    <content><![CDATA[<h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><hr>
<ul>
<li>React Native for Android 入门老虎<br>problem solution:  <ol>
<li>when  “brew install watchman”  ==&gt;&gt; configure: error: You need a C++ compiler for C++ support ==&gt; sudo apt-get install build-essential2.  brew install flow ==&gt;&gt; bnpm install flow-bin –global</li>
</ol>
</li>
<li><a href="http://www.tuicool.com/articles/uQFbEv" target="_blank" rel="noopener">Android开发技术周报特刊之React Native</a> 【经典教程】</li>
<li>Facebook.org   <a href="http://facebook.github.io/react-native/" target="_blank" rel="noopener">react </a>  <a href="http://facebook.github.io/react-native/" target="_blank" rel="noopener"> react-native </a></li>
<li><a href="http://www.sqshi.com/a/271922.html" target="_blank" rel="noopener">React-Native 的优化进阶之旅</a></li>
</ul>
<h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h3><hr>
<ul>
<li><a href="http://f8-app.liaohuqiu.net/" target="_blank" rel="noopener">构建 F8 App / React Native 开发指南</a></li>
<li><a href="https://www.qcloud.com/community/article/144" target="_blank" rel="noopener">【ReactNative For Android】框架启动核心路径剖析</a>   印象笔记有备份</li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzA4MzEwOTkyMQ==&amp;mid=2667376478&amp;idx=2&amp;sn=4968c4bdde9956ba8379eddca58c934f&amp;chksm=84f33e10b384b7068ee8a108beea250a7b6eee60443f95819248d0cf1260c972df82bc124a4d&amp;mpshare=1&amp;scene=1&amp;srcid=1110Fjp1pBoJHhvyKP8rN68S#rd" target="_blank" rel="noopener">携程 React Native 实践与性能优化</a></li>
</ul>
<h3 id="相关开源项目"><a href="#相关开源项目" class="headerlink" title="相关开源项目"></a>相关开源项目</h3><hr>
<ul>
<li><a href="http://github.com/fengjundev/DoubanMovie-React-Native" target="_blank" rel="noopener">DoubanMovie-React-Native</a></li>
<li><strong><a href="https://github.com/facebookincubator/create-react-app" target="_blank" rel="noopener">create-react-app</a></strong>  Create React apps with no build configuration.</li>
</ul>
<h3 id="Learning-material"><a href="#Learning-material" class="headerlink" title="Learning material"></a>Learning material</h3><hr>
<ul>
<li><a href="http://github.com/ele828/react-native-guide" target="_blank" rel="noopener">react-native-guide</a>  React-Native指南汇集了react-native学习资源与各类开源app</li>
<li><a href="http://microsoft.github.io/code-push/" target="_blank" rel="noopener">CodePush</a>  大微软推出的一套可以为用 React Native  和 Cordova 开发的 App 提供代码热更新的方案。</li>
<li><a href="http://list.youku.com/albumlist/show?id=27615900&amp;ascending=1&amp;page=1" target="_blank" rel="noopener">React Native Training (中文)</a> 视频</li>
</ul>
<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><hr>
<ul>
<li>InfoQ: <a href="http://www.infoq.com/cn/presentations/explore-react-ecosystem" target="_blank" rel="noopener">探索 React 生态圈</a></li>
</ul>
<h4 id="Atom官网"><a href="#Atom官网" class="headerlink" title="Atom官网"></a><a href="http://atom.io" target="_blank" rel="noopener">Atom官网</a></h4><p><a href="http://www.linuxidc.com/Linux/2014-05/101501.htm" target="_blank" rel="noopener"><em>安装</em></a></p>
<pre class="line-numbers language-shell"><code class="language-shell">sudo add-apt-repository ppa:webupd8team/atom
sudo apt-get update
sudo apt-get install atom
/opt/atom/atom<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>Proxy setting  from <a href="https://github.com/atom/apm" target="_blank" rel="noopener">apm github</a></p>
<pre class="line-numbers language-shell"><code class="language-shell">Using a proxy?
If you are using a HTTP(S) proxy you can configure apm
 to use it by running:
apm config set https-proxy https://127.0.0.1:1080
You can run 
apm config get https-proxy
 to verify it has been set correctly.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><em>plugin</em><br>cp the plugin.zip to ~/.atom/packages or <code>$ apm install</code></p>
<ul>
<li><strong><a href="https://github.com/thomaslindstrom/color-picker" target="_blank" rel="noopener">color-picker</a></strong></li>
<li><strong><a href="https://github.com/emmetio/emmet-atom" target="_blank" rel="noopener">emmet-atom</a></strong></li>
<li><a href="https://atom.io/packages/browser-plus" target="_blank" rel="noopener">browser-plus</a></li>
<li><a href="https://atom.io/packages/highlight-selected" target="_blank" rel="noopener">highlight-selected</a></li>
<li><strong><a href="https://github.com/danielgtaylor/atom-api-blueprint-preview" target="_blank" rel="noopener">atom-api-blueprint-preview</a></strong> Read.md preview<br>jshint：检查 JavaScript 的语法，支持 JSX （需要在插件设置中开启 Support Linting JSX）；<br>emmet：用 emmet （Zen Coding）方式快速编写页面；<br>save-session：让 Atom 记住上一次打开的会话；<br>browser-plus：在 Atom 中内嵌一个浏览器窗口，方便页面调试（其实 Atom 本身就是一个浏览器）；<br>minimap：如果你对 Sublime Text 的 minimap 念念不忘；<br>atomic-emacs：Emacs 键盘布局，适合 Emacs 用户使用；<br>vim-mode：Vim 键盘布局，适合 Vim 用户使用。</li>
</ul>
<p>待处理</p>
<ul>
<li><strong><a href="https://github.com/atom/atom-space-pen-views" target="_blank" rel="noopener">atom-space-pen-views</a></strong></li>
<li><strong><a href="https://github.com/webBoxio/atom-html-preview" target="_blank" rel="noopener">atom-html-preview</a></strong></li>
</ul>
<p><em>教程</em><br><a href="http://wiki.jikexueyuan.com/project/atom/" target="_blank" rel="noopener">Atom 使用教程</a></p>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 数据处理资源总汇</title>
    <url>/2016/09/08/2016-09-08-Android-database-note/</url>
    <content><![CDATA[<h2 id="数据格式"><a href="#数据格式" class="headerlink" title="数据格式"></a>数据格式</h2><ul>
<li><strong><a href="https://github.com/google/gson" target="_blank" rel="noopener">gson</a></strong><ul>
<li><a href="http://websystique.com/java/json/gson-json-annotations-example/" target="_blank" rel="noopener">Gson Json Annotations Example</a></li>
</ul>
</li>
<li><strong><a href="https://github.com/vimeo/stag-java" target="_blank" rel="noopener">stag-java</a></strong> Speedy Type Adapter Generation</li>
<li><strong><a href="https://github.com/alibaba/fastjson" target="_blank" rel="noopener">fastjson</a></strong></li>
</ul>
<h2 id="序列化-Parcelable"><a href="#序列化-Parcelable" class="headerlink" title="序列化 Parcelable"></a>序列化 Parcelable</h2><hr>
<h3 id="Parcelable-AutoValue"><a href="#Parcelable-AutoValue" class="headerlink" title="Parcelable AutoValue"></a>Parcelable AutoValue</h3><p><a href="http://tedyin.me/2016/04/11/auto-value/?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="noopener">使用 Google AutoValue 自动生成代码</a></p>
<p><strong>Dependencies</strong></p>
<pre><code>dependencies {
  provided 'com.google.auto.value:auto-value:1.2'
  apt 'com.google.auto.value:auto-value:1.2'
  apt 'com.ryanharter.auto.value:auto-value-parcel:0.2.1'
}</code></pre><p><strong>Sample</strong></p>
<pre><code>@AutoValue
public abstract class Story implements Parcelable{
  public abstract int id();
  public abstract String title();
  public static Story create(int id, String title){
    new AutoValue_Story(id,title);
  }
}</code></pre><h3 id="Android-状态保存"><a href="#Android-状态保存" class="headerlink" title="Android 状态保存"></a>Android 状态保存</h3><ul>
<li><p><a href="https://github.com/evernote/android-state" target="_blank" rel="noopener">android-state</a></p>
<pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">Activity</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@State</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> mValue<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        StateSaver<span class="token punctuation">.</span><span class="token function">restoreInstanceState</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onSaveInstanceState</span><span class="token punctuation">(</span>Bundle outState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onSaveInstanceState</span><span class="token punctuation">(</span>outState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        StateSaver<span class="token punctuation">.</span><span class="token function">saveInstanceState</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> outState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ul>
<h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><hr>
<p><em>Sqlite 批量处理</em></p>
<ul>
<li><a href="http://blog.sina.com.cn/s/blog_48d4cf2d0102v5ip.html" target="_blank" rel="noopener">SQLite批量插入和其他一些使用心得</a> </li>
<li><a href="http://www.tuicool.com/articles/2AfaEbE" target="_blank" rel="noopener">android SQLite 批量插入数据慢的解决方案</a></li>
</ul>
<p><em>Tutorial</em></p>
<ul>
<li><a href="http://www.runoob.com/sqlite/sqlite-tutorial.html" target="_blank" rel="noopener">sqlite-tutorial</a></li>
<li><a href="http://zhangfan822.iteye.com/blog/1883118" target="_blank" rel="noopener">Android 保存图片到SQLite,读出SQLite中的图片</a></li>
<li><a href="https://www.sqlite.org/lang_createtrigger.html" target="_blank" rel="noopener">sqlite 官方教程 CREATE TRIGGER</a></li>
<li><a href="http://www.runoob.com/sqlite/sqlite-index.html" target="_blank" rel="noopener">Sqlite learnning Course</a></li>
<li><a href="http://www.runoob.com/sql/sql-union.html" target="_blank" rel="noopener">SQL语句 Inner join/ union 的学习</a><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token number">f</span><span class="token punctuation">.</span>name <span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">as</span> sum<span class="token punctuation">,</span> <span class="token number">d</span><span class="token punctuation">.</span><span class="token keyword">value</span> <span class="token keyword">as</span> url <span class="token keyword">from</span> Favorite <span class="token number">f</span> <span class="token keyword">inner</span> <span class="token keyword">join</span> <span class="token keyword">data</span> <span class="token number">d</span>  <span class="token keyword">on</span> <span class="token number">d</span><span class="token punctuation">.</span><span class="token keyword">key</span><span class="token operator">=</span><span class="token operator">=</span><span class="token number">f</span><span class="token punctuation">.</span>name  <span class="token keyword">group</span> <span class="token keyword">by</span> <span class="token number">f</span><span class="token punctuation">.</span>name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
</ul>
<p><em>笔记好滴博文</em></p>
<ul>
<li><a href="http://blog.csdn.net/iefreer/article/details/39188231" target="_blank" rel="noopener">5个Android ORM框架</a>  Android 主流ORM（对象关系数据映射）简介</li>
</ul>
<p><em>常用的SQL语句</em></p>
<pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> t_student
<span class="token keyword">CREATE</span> TALBE <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> t_student <span class="token punctuation">(</span>id iteger <span class="token keyword">primary</span> <span class="token keyword">key</span> autoincrement<span class="token punctuation">,</span> name <span class="token keyword">text</span><span class="token punctuation">,</span> age <span class="token keyword">integer</span><span class="token punctuation">,</span> score <span class="token keyword">real</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> t_student <span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token string">'jack'</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span>
<span class="token keyword">update</span> t_student <span class="token keyword">set</span> name<span class="token operator">=</span><span class="token string">'jack'</span> <span class="token punctuation">,</span>id <span class="token operator">=</span><span class="token number">1</span> 
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> t_student <span class="token keyword">where</span> score <span class="token operator">>=</span> <span class="token number">60</span> <span class="token keyword">order</span> <span class="token keyword">by</span> score <span class="token keyword">asc</span><span class="token punctuation">,</span> age <span class="token keyword">asc</span><span class="token punctuation">;</span>
<span class="token keyword">limit</span> 分页查询
<span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span>
<span class="token keyword">limit</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span>
约束
<span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token keyword">unique</span><span class="token punctuation">,</span> <span class="token keyword">default</span>
外键—— 
<span class="token keyword">create</span> <span class="token keyword">table</span> t_student <span class="token punctuation">(</span>id <span class="token keyword">integer</span> <span class="token keyword">primary</span> <span class="token keyword">key</span> autoincrement<span class="token punctuation">,</span>name <span class="token keyword">text</span><span class="token punctuation">,</span> class_id <span class="token keyword">integer</span><span class="token punctuation">,</span>
<span class="token keyword">constraint</span> fk_t_student_class_id_t_class_id <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>class_id<span class="token punctuation">)</span> <span class="token keyword">references</span> t_class<span class="token punctuation">(</span>id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="Awesome-Repositories"><a href="#Awesome-Repositories" class="headerlink" title="Awesome Repositories"></a>Awesome Repositories</h2><table>
<thead>
<tr>
<th>Repository</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://github.com/pardom-zz/ActiveAndroid" target="_blank" rel="noopener">ActiveAndroid</a></td>
<td>Active record style SQLite persistence for Android.</td>
</tr>
<tr>
<td><a href="https://github.com/jgilfelt/android-sqlite-asset-helper" target="_blank" rel="noopener">Android-sqlite-asset-helper</a></td>
<td>An Android helper class to manage database creation and version management using an application’s raw asset files.</td>
</tr>
<tr>
<td><a href="https://github.com/litesuits/android-lite-orm" target="_blank" rel="noopener">Android-lite-orm</a></td>
<td>A fast, small, powerful ORM framework for Android.</td>
</tr>
<tr>
<td><a href="https://github.com/sqlcipher/android-database-sqlcipher" target="_blank" rel="noopener">Android-database-sqlcipher</a></td>
<td>Android SQLite API based on SQLCipher.</td>
</tr>
<tr>
<td><a href="https://github.com/sromku/android-storage" target="_blank" rel="noopener">Android Storage</a></td>
<td>Create, read, delete, append, encrypt files and more, on internal or external disk spaces with a really simple API.</td>
</tr>
<tr>
<td><a href="https://github.com/facebook/conceal" target="_blank" rel="noopener">Conceal</a></td>
<td>Conceal provides easy Android APIs for performing fast encryption and authentication of data.</td>
</tr>
<tr>
<td><a href="https://github.com/couchbase/couchbase-lite-android" target="_blank" rel="noopener">Couchbase-lite-android</a></td>
<td>Lightweight, embedded, syncable NoSQL database engine for Android.</td>
</tr>
<tr>
<td><a href="https://github.com/ConserveORM/main" target="_blank" rel="noopener">ConserveORM</a></td>
<td>A library for storing your Java/Scala/Kotlin objects in a database.</td>
</tr>
<tr>
<td><a href="https://github.com/Raizlabs/DBFlow" target="_blank" rel="noopener">DBFlow</a></td>
<td>A blazing fast, powerful, and very simple ORM android database library that writes database code for you.</td>
</tr>
<tr>
<td><a href="https://github.com/PDDStudio/EncryptedPreferences" target="_blank" rel="noopener">EncryptedPreferences</a></td>
<td>AES-256 encrypted SharedPreferences for Android.</td>
</tr>
<tr>
<td><a href="https://github.com/greenrobot/greenDAO" target="_blank" rel="noopener">GreenDao</a></td>
<td>greenDAO is a light &amp; fast ORM solution for Android that maps objects to SQLite databases.</td>
</tr>
<tr>
<td><a href="https://github.com/orhanobut/hawk" target="_blank" rel="noopener">Hawk</a></td>
<td>Secure, simple key-value storage for Android.</td>
</tr>
<tr>
<td><a href="https://github.com/chibatching/Kotpref" target="_blank" rel="noopener">Kotpref</a></td>
<td>Android SharedPreferences delegation library for Kotlin.</td>
</tr>
<tr>
<td><a href="https://github.com/LitePalFramework/LitePal" target="_blank" rel="noopener">LitePal</a></td>
<td>An Android library that makes developers use SQLite database extremely easy.</td>
</tr>
<tr>
<td><a href="https://github.com/objectbox/objectbox-java" target="_blank" rel="noopener">ObjectBox</a></td>
<td>ObjectBox is a superfast mobile database for objects.</td>
</tr>
<tr>
<td><a href="https://github.com/j256/ormlite-android" target="_blank" rel="noopener">Ormlite-android</a></td>
<td>ORMLite Android functionality used in conjunction with ormlite-core.</td>
</tr>
<tr>
<td><a href="https://github.com/pilgr/Paper" target="_blank" rel="noopener">Paper</a></td>
<td>Paper is a fast NoSQL-like storage for Java/Kotlin objects on Android with automatic schema migration support.</td>
</tr>
<tr>
<td><a href="https://github.com/skydoves/PreferenceRoom" target="_blank" rel="noopener">PreferenceRoom</a></td>
<td>Manage your android project’s SharedPreferences more efficiently.</td>
</tr>
<tr>
<td><a href="https://github.com/franmontiel/PersistentCookieJar" target="_blank" rel="noopener">PersistentCookieJar</a></td>
<td>A persistent CookieJar implementation for OkHttp 3 based on SharedPreferences.</td>
</tr>
<tr>
<td><a href="https://github.com/realm/realm-java" target="_blank" rel="noopener">Realm</a></td>
<td>Realm is a mobile database: a replacement for SQLite &amp; ORMs.</td>
</tr>
<tr>
<td><a href="https://developer.android.com/topic/libraries/architecture/room" target="_blank" rel="noopener">Room Persistence</a></td>
<td>The Room persistence library provides an abstraction layer over SQLite to allow for more robust database access while harnessing the full power of SQLite.</td>
</tr>
<tr>
<td><a href="https://github.com/requery/requery" target="_blank" rel="noopener">Requery</a></td>
<td>Modern SQL based query &amp; persistence for Java / Kotlin / Android.</td>
</tr>
<tr>
<td><a href="https://github.com/f2prateek/rx-preferences" target="_blank" rel="noopener">Rx-preferences</a></td>
<td>Reactive SharedPreferences for Android.</td>
</tr>
<tr>
<td><a href="https://github.com/afollestad/rxkprefs" target="_blank" rel="noopener">Rxkprefs</a></td>
<td>A small, Rx-powered shared preferences library for Kotlin.</td>
</tr>
<tr>
<td><a href="https://github.com/NYTimes/Store" target="_blank" rel="noopener">Store</a></td>
<td>Android Library for Async Data Loading and Caching.</td>
</tr>
<tr>
<td><a href="https://github.com/pushtorefresh/storio" target="_blank" rel="noopener">Storio</a></td>
<td>Reactive API for SQLiteDatabase and ContentResolver.</td>
</tr>
<tr>
<td><a href="https://github.com/chennaione/sugar" target="_blank" rel="noopener">Sugar</a></td>
<td>Insanely easy way to work with Android Database.</td>
</tr>
<tr>
<td><a href="https://github.com/yahoo/squidb" target="_blank" rel="noopener">Squidb</a></td>
<td>SquiDB is a SQLite database library for Android and iOS.</td>
</tr>
<tr>
<td><a href="https://github.com/requery/sqlite-android" target="_blank" rel="noopener">Sqlite-android</a></td>
<td>Android SQLite support library.</td>
</tr>
<tr>
<td><a href="https://github.com/iamMehedi/Secured-Preference-Store" target="_blank" rel="noopener">Secured-Preference-Store</a></td>
<td>A cryptography library and a SharedPreferences wrapper for Android that encrypts the content with 256 bit AES encryption. The Encryption key is securely stored in device’s KeyStore.</td>
</tr>
<tr>
<td><a href="https://github.com/grandcentrix/tray" target="_blank" rel="noopener">Tray</a></td>
<td>A SharedPreferences replacement for Android with multiprocess support.</td>
</tr>
<tr>
<td>## <strong>No Sql</strong></td>
<td></td>
</tr>
<tr>
<td>—</td>
<td></td>
</tr>
<tr>
<td>- **<a href="http://github.com/cesarferreira/RxPaper#handle-data-structure-changes" target="_blank" rel="noopener">RxPaper</a>   Like  below Paper **</td>
<td></td>
</tr>
<tr>
<td>- <a href="http://github.com/f2prateek/rx-preferences" target="_blank" rel="noopener">Rx-preferences</a>   <strong>Reactive SharedPreferences for Android <a href="http://f2prateek.com/2015/10/05/rx-preferences/" target="_blank" rel="noopener">http://f2prateek.com/2015/10/05/rx-preferences/</a></strong></td>
<td></td>
</tr>
<tr>
<td>- **<a href="http://github.com/google/leveldb" target="_blank" rel="noopener">Leveldb</a>  **<a href="http://github.com/google/leveldb" target="_blank" rel="noopener"></a>is a fast key-value storage library written at Google that provides an ordered mapping from string keys to string values.</td>
<td></td>
</tr>
<tr>
<td>- <a href="http://github.com/pilgr/Paper#benchmark-results" target="_blank" rel="noopener">Paper</a>   save/restore Java objects by using efficient Kryo serialization and handling data structure changes automatically.</td>
<td></td>
</tr>
<tr>
<td>- <a href="https://github.com/FabianTerhorst/Iron" target="_blank" rel="noopener">Iron</a>  Fast and easy to use NoSQL data storage</td>
<td></td>
</tr>
</tbody></table>
<h2 id="轻量"><a href="#轻量" class="headerlink" title="轻量"></a>轻量</h2><blockquote>
<p>轻量对原生方法的封装（Origin API Extension）</p>
</blockquote>
<hr>
<ul>
<li><a href="http://github.com/soarcn/Favor" target="_blank" rel="noopener">Favor </a> A easy way to use android sharepreference</li>
<li>SQLite ORM</li>
<li><a href="http://https//github.com/LitePalFramework/LitePal" target="_blank" rel="noopener">LitePal</a>    <a href="http://blog.csdn.net/guolin_blog/article/details/38083103" target="_blank" rel="noopener">Android数据库高手秘籍</a> </li>
<li><a href="http://github.com/greenrobot/greenDAO" target="_blank" rel="noopener">greendao </a>  <strong>Home page, documentation, and support links: <a href="http://greenrobot.org/greendao/" target="_blank" rel="noopener">http://greenrobot.org/greendao/</a></strong>   Chinese <a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0727/3223.html" target="_blank" rel="noopener">tutorial</a>   </li>
<li><a href="https://github.com/requery/requery" target="_blank" rel="noopener">requery</a> 又一轻量ORM库</li>
<li><a href="http://stackoverflow.com/questions/6645665/what-is-a-good-tutorial-for-using-ormlite-with-sqlite-and-android" target="_blank" rel="noopener">What is a good tutorial for using ORMLite with SQLite and Android</a></li>
</ul>
<h3 id="Improve-SQLiteOpenHelper-and-ContentResolver"><a href="#Improve-SQLiteOpenHelper-and-ContentResolver" class="headerlink" title="Improve SQLiteOpenHelper and ContentResolver"></a>Improve SQLiteOpenHelper and ContentResolver</h3><p><a href="https://github.com/square" target="_blank" rel="noopener">Square</a> 出品</p>
<ul>
<li><a href="http://github.com/square/sqlbrite" target="_blank" rel="noopener">Sqlbrite</a>  A lightweight wrapper around SQLiteOpenHelper which introduces reactive stream semantics to SQL operations.**<a href="http://square.github.io/sqlbrite/" target="_blank" rel="noopener">http://square.github.io/sqlbrite/</a><br>** </li>
<li><strong><a href="https://github.com/square/sqldelight" target="_blank" rel="noopener">sqldelight</a></strong> Generates Java models from CREATE TABLE statements.（从sql语句生成Java模式 ）能把sql统一管理</li>
<li><strong><a href="https://github.com/geralt-encore/Delightful-SQLBrite" target="_blank" rel="noopener">Delightful-SQLBrite</a></strong> sqldelight 和 SQLBrite 例子</li>
</ul>
<p>Qit</p>
<ul>
<li><a href="http://github.com/pushtorefresh/storio" target="_blank" rel="noopener">Storio</a>  Beautiful API for SQLiteDatabase and ContentResolver </li>
<li>Android Instance<a href="http://github.com/frankiesardo/icepick" target="_blank" rel="noopener">Icepick</a>  Android Instance State made easy It works for Activities, Fragments or any object that needs to serialize its state on a Bundle</li>
</ul>
<h2 id="Tools-工具"><a href="#Tools-工具" class="headerlink" title="Tools(工具)"></a>Tools(工具)</h2><ul>
<li><strong><a href="https://github.com/infinum/android_dbinspector" target="_blank" rel="noopener">android_dbinspector</a></strong><br><img src="https://camo.githubusercontent.com/5a2f9fe0725a29ff92f941daa814a65f2bdc193c/68747470733a2f2f7261772e6769746875622e636f6d2f696e66696e756d2f616e64726f69645f6462696e73706563746f722f6d61737465722f73637265656e73686f74732e706e67" alt=""></li>
</ul>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><hr>
<ul>
<li>WeChat Sqliste  <a href="http://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&amp;mid=207548094&amp;idx=1&amp;sn=1a277620bc28349368b68ed98fbefebe" target="_blank" rel="noopener">微信ANDROID客户端-会话速度提升70%的背后</a></li>
<li><a href="http://code.google.com/p/protobuf/" target="_blank" rel="noopener">protocol buffer (protobuf)</a>  </li>
</ul>
<h2 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h2><p>Sqlite3</p>
<ul>
<li>sqlite3 not found<br>blog:<ul>
<li><a href="http://ramosli.iteye.com/blog/1966202" target="_blank" rel="noopener">sqlite3 not found的解决办法</a></li>
<li><a href="http://android.stackexchange.com/questions/60446/cant-remount-system-in-rw" target="_blank" rel="noopener">cant-remount-system-in-rw</a> Nexus5使用有效果的命令：<code>mount -o remount,rw /system chmod 4755 /system/xbin/sqlite3</code></li>
<li><code>sqlite3 robot.db</code> ==&gt; error: only position independent executables (PIE) are supported.</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 相关的新技术</title>
    <url>/2016/08/04/2016-08-04-New-trend-for-Android/</url>
    <content><![CDATA[<h2 id="Dynamic-Loading"><a href="#Dynamic-Loading" class="headerlink" title="Dynamic Loading"></a>Dynamic Loading</h2><hr>
<ul>
<li><p><a href="http://github.com/Qihoo360/DroidPlugin" target="_blank" rel="noopener"> 360 出品 DroidPlugin</a>  A plugin framework on android,Run any third-party apk without installation, modification or repackage</p>
</li>
<li><p><a href="http://bugly.qq.com/blog/?p=781#rd" target="_blank" rel="noopener">Like web app release version</a> ==&gt;<br><a href="https://github.com/jasonross/Nuwa" title="Nuwa" target="_blank" rel="noopener">open source Nuwa</a> 女娲（Nuwa），可以热修复Android应用，可以加快编译</p>
</li>
<li><p><a href="https://github.com/singwhatiwanna/dynamic-load-apk" target="_blank" rel="noopener">Dynamic-loading</a></p>
</li>
<li><p>Alibaba<br><a href="https://github.com/alibaba/dexposed" title="dexposed" target="_blank" rel="noopener">dexposed</a> AOP (Aspect-oriented Programming) framework for Android app development<br><a href="https://github.com/alibaba/AndFix" title="AndFix" target="_blank" rel="noopener">AndFix</a> C++</p>
<ol>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzA3Mjk1MjA4Nw==&amp;mid=400452659&amp;idx=1&amp;sn=841b49b875ec3b307f261ed52a7d9c4e&amp;scene=23&amp;srcid=1119JWRt0adNwGxTHiyok460#rd" title="Android App 线上热修复方案" target="_blank" rel="noopener">Android App 线上热修复方案</a></li>
<li><a href="http://www.jianshu.com/p/14edcb444c51" title="Android平台免Root无侵入AOP框架Dexposed使用详解" target="_blank" rel="noopener">Android平台免Root无侵入AOP框架Dexposed使用详解</a></li>
<li><a href="http://www.jianshu.com/p/0fa8073fd144" title="【翻译】Android中的AOP编程" target="_blank" rel="noopener">【翻译】Android中的AOP编程</a></li>
<li><a href="http://blog.csdn.net/qxs965266509/article/details/49821413" target="_blank" rel="noopener">Alibaba-Dexposed框架在线热补丁修复的使用 </a></li>
<li><a href="http://alibaba.github.io/weex/" target="_blank" rel="noopener">weex</a> 阿里开源,类似React Native基于JS开源夸平台开源库</li>
</ol>
</li>
<li><p>携程插件框架<br><a href="https://github.com/CtripMobile/DynamicAPK" target="_blank" rel="noopener">DynamicAPK</a> Solution to implement multi apk dynamic loading and hot fixing for Android App. (实现Android App多apk插件化和动态加载，支持资源分包和热修复)</p>
<ol>
<li><a href="http://blog.csdn.net/lzyzsd/article/details/49768283" target="_blank" rel="noopener">如何实现携程动态加载插件中对aapt的改造</a></li>
</ol>
</li>
<li><p><a href="https://github.com/wequick/Small" target="_blank" rel="noopener">Samll</a>  做最轻巧的跨平台插件化框架。支持平台：Android API 15(4.0.3)+ iOS 7.0+ 敬请期待。</p>
</li>
<li><p>Xposed</p>
<ol>
<li><a href="https://testerhome.com/topics/3819" target="_blank" rel="noopener">用黑客思维做测试——神器 Xposed 框架介绍</a> </li>
<li>官网教程: <a href="https://github.com/rovo89/XposedBridge/wiki/Development-tutorial" target="_blank" rel="noopener">Development-tutorial</a></li>
</ol>
</li>
<li><p><strong><a href="https://github.com/Tencent/tinker" target="_blank" rel="noopener">tinker github</a></strong> 微信热更新方案</p>
<ul>
<li><strong><a href="https://github.com/zzz40500/Tinker_imitator" target="_blank" rel="noopener">Tinker_imitator</a></strong> 微信热更新方案实践</li>
<li>博文介绍 <a href="http://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&amp;mid=2649286384&amp;idx=1&amp;sn=f1aff31d6a567674759be476bcd12549&amp;scene=1&amp;srcid=0924IYHV3flIxEoQSYdj7TGD#rd" target="_blank" rel="noopener">微信Tinker的一切都在这里，包括源码(一)</a></li>
<li><a href="https://github.com/baidao/tinker-manager" target="_blank" rel="noopener">tinker-manager</a> 微信tinker补丁管理，后端代码+客户端sdk</li>
</ul>
</li>
</ul>
<h2 id="博文讲解"><a href="#博文讲解" class="headerlink" title="博文讲解"></a>博文讲解</h2><p>Android插件化原理解析——Hook机制之Binder Hook</p>
<h2 id="Weex"><a href="#Weex" class="headerlink" title="Weex"></a>Weex</h2><p>阿里开源基于JS开源夸平台开源库,类似React Native但是更轻量，学习成本低。</p>
<ul>
<li><a href="https://weex-project.io/" target="_blank" rel="noopener">Weex 官网</a></li>
<li><a href="http://www.infoq.com/cn/articles/taobao-mobile-weex/" target="_blank" rel="noopener">阿里无线11.11 ： Weex——关于移动端动态性的思考、实现和未来</a></li>
</ul>
<h2 id="Kotlin"><a href="#Kotlin" class="headerlink" title="Kotlin"></a>Kotlin</h2><hr>
<ul>
<li><a href="http://androidweekly.cn/android-dev-special-weekly-kotlin-issue-0/" target="_blank" rel="noopener">Weekly Kotlin 资源合集</a></li>
<li><a href="https://kotlinlang.org/" title="org.website" target="_blank" rel="noopener">org.website</a></li>
<li><a href="https://kotlinlang.org/docs/tutorials/" title="Tutorial" target="_blank" rel="noopener">Tutorial</a><ul>
<li><a href="http://try.kotlinlang.org/#/Kotlin%20Koans/Introduction/Java%20to%20Kotlin%20conversion/Task.kt" target="_blank" rel="noopener">Online Compile Tutorial</a></li>
<li><a href="https://kotlinlang.org/docs/tutorials/command-line.html" target="_blank" rel="noopener">command-line</a></li>
</ul>
</li>
<li><a href="https://kotlinlang.org/docs/reference/" title="reference" target="_blank" rel="noopener">reference</a></li>
<li><a href="http://try.kotlinlang.org/#/Examples/Basic%20syntax%20walk-through/Null-checks/Null-checks.kt" title="Examples" target="_blank" rel="noopener">Examples</a></li>
</ul>
<blockquote>
<ol>
<li><a href="http://www.infoq.com/cn/news/2015/11/kotlin-10beta?t=1446734640014" title="Kotlin语言1.0Beta发布，JetBrain介绍其设计理念" target="_blank" rel="noopener">Kotlin语言1.0Beta发布，JetBrain介绍其设计理念</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzA3ODg4MDk0Ng==&amp;mid=401833091&amp;idx=1&amp;sn=9685218eeac4abfbafdfacd81950bfa1#rd" target="_blank" rel="noopener">Kotlin 1.0都出了还没看过肿么办？不怕！来看我整理的Kotlin学习资源</a></li>
</ol>
</blockquote>
<p>相关开源库：</p>
<ul>
<li><strong><a href="https://github.com/StephenVinouze/AdvancedRecyclerView" target="_blank" rel="noopener">AdvancedRecyclerView</a></strong></li>
</ul>
<h2 id="Flutter"><a href="#Flutter" class="headerlink" title="Flutter"></a>Flutter</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/ICejwmeR5cIaWB5ZnJ32bw?utm_source=androidweekly.io&amp;utm_medium=website" target="_blank" rel="noopener">Flutter「发布预览版 2」让 iOS 应用至臻完美</a></li>
<li><a href="http://www.elecfans.com/d/828310.html" target="_blank" rel="noopener">Flutter 1.0 正式版: Google 的便携 UI 工具包</a></li>
<li><a href="https://www.jiqizhixin.com/articles/2018-12-10?utm_source=androidweekly.io&amp;utm_medium=website" target="_blank" rel="noopener">Flutter跨平台Hybrid实践</a></li>
<li><a href="https://www.yuque.com/xytech/flutter/emdguh?utm_source=androidweekly.io&amp;utm_medium=website" target="_blank" rel="noopener">做了2个多月的设计和编码，我梳理了Flutter动态化的方案对比及最佳实现</a></li>
<li><a href="https://mp.weixin.qq.com/s/FD4s0RMRqAy5b_NsrK3Oog?utm_source=androidweekly.io&amp;utm_medium=website" target="_blank" rel="noopener">Flutter学习指南：封装 API 插件</a></li>
</ul>
<p>开源库</p>
<ul>
<li><a href="https://github.com/alibaba/flutter-go" target="_blank" rel="noopener"><strong>flutter-go</strong></a> flutter 开发者帮助 APP，包含 flutter 常用 140+ 组件的demo 演示与中文文档</li>
</ul>
<h2 id="ARCore-Google-的增强现实构建平台"><a href="#ARCore-Google-的增强现实构建平台" class="headerlink" title="ARCore Google 的增强现实构建平台"></a>ARCore Google 的增强现实构建平台</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/SXmF-CmFyr8HFdAjOWrDXQ?utm_source=androidweekly.io&amp;utm_medium=website" target="_blank" rel="noopener">从小白到上手 ARCore，这一篇技术贴请收好</a></li>
</ul>
<h2 id="RxAndroid"><a href="#RxAndroid" class="headerlink" title="RxAndroid"></a><a href="https://github.com/ReactiveX/RxAndroid" title="RxAndroid" target="_blank" rel="noopener">RxAndroid</a></h2><p><strong>Reading</strong></p>
<ul>
<li><a href="http://blog.danlew.net/2014/10/08/grokking-rxjava-part-4/" title="Grokking RxJava, Part 4: Reactive Android" target="_blank" rel="noopener">Grokking RxJava, Part 4: Reactive Android</a></li>
<li><a href="http://www.littlerobots.nl/blog/RxLint-a-lint-rule-for-RxJava/" target="_blank" rel="noopener">Rxlint </a> <code>compile 'nl.littlerobots.rxlint:rxlint:1.0</code></li>
</ul>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><hr>
<ul>
<li><strong><a href="https://github.com/facebook/redex" target="_blank" rel="noopener">redex</a></strong>  通过对字节码进行优化，以减小 Android Apk 大小，同时提高 App 启动速度。<br><a href="http://www.trinea.cn/android/facebook%E5%BC%80%E6%BA%90%E7%9A%84android%E4%BC%98%E5%8C%96%E5%B7%A5%E5%85%B7redex-%E5%87%8F%E5%B0%8F%E5%AE%89%E8%A3%85%E5%8C%85%E5%A4%A7%E5%B0%8F-%E5%90%8C%E6%97%B6%E6%8F%90%E9%AB%98%E8%BF%90/" target="_blank" rel="noopener">Facebook App 优化工具 ReDex 优化的 6 点及未优化的一大方面</a></li>
</ul>
<h2 id="统一开发"><a href="#统一开发" class="headerlink" title="统一开发"></a>统一开发</h2><ul>
<li><a href="https://software.intel.com/en-us/multi-os-engine" target="_blank" rel="noopener">Multi-OS Engine</a> Create Android* and iOS* apps using Java Coding 一个能用Android Studio统一开发 IOS Android Window 应用的引擎。</li>
</ul>
<h2 id="开源库"><a href="#开源库" class="headerlink" title="开源库"></a>开源库</h2><ul>
<li><strong><a href="https://github.com/rmtheis/android-ocr" target="_blank" rel="noopener">android-ocr</a></strong>   optical character recognition (OCR) 文字识别</li>
</ul>
<h2 id="谷歌新开源库"><a href="#谷歌新开源库" class="headerlink" title="谷歌新开源库"></a>谷歌新开源库</h2><h3 id="jetpack"><a href="#jetpack" class="headerlink" title="jetpack"></a>jetpack</h3><p><a href="https://developer.android.com/jetpack/" target="_blank" rel="noopener">https://developer.android.com/jetpack/</a></p>
<ul>
<li>AndroidX </li>
<li>LiveData + ViewModel + Room</li>
<li>ViewModel+LiveData+DataBinding</li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>新技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Material Design</title>
    <url>/2016/07/29/2016-07-29-Material-Design/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>一、设计阶段<br>Material Design 提供了跨设备和 Web 的一致性用户体验。它的四项原则：</p>
<ul>
<li>有型的外观(Tangible surface)：应用像现实中的实物一样。</li>
<li>仿印刷品的设计(Print-like design)：内容醒目、形象生动、意图明确。</li>
<li>有意义的运动效果(Meaningful motion)：吸引用户的兴趣，在应用状态切换时保持连续性。</li>
<li>自适应设计(Adaptive deisgn)：用户在手机、平板、Android TV、Android Wear、Android Auto 等不同设备上都能感到熟悉、一致，而不需要重新适应应用。</li>
</ul>
<h1 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h1><h2 id="官方API"><a href="#官方API" class="headerlink" title="官方API"></a>官方API</h2><ul>
<li><a href="https://developer.android.com/training/transitions/overview.html" target="_blank" rel="noopener">The Transitions Framework</a></li>
<li><a href="http://developer.android.com/tools/support-library/index.html" target="_blank" rel="noopener">Support Library</a></li>
</ul>
<h2 id="官方博客"><a href="#官方博客" class="headerlink" title="官方博客"></a>官方博客</h2><ul>
<li><a href="http://android-developers.blogspot.com/2015/05/android-design-support-library.html" target="_blank" rel="noopener">[1]Android Design Support Library</a></li>
<li><a href="http://android-developers.blogspot.com/2016/02/android-support-library-232.html" target="_blank" rel="noopener">Android Support Library 23.2</a></li>
</ul>
<h2 id="使用须知"><a href="#使用须知" class="headerlink" title="使用须知"></a>使用须知</h2><ul>
<li><a href="https://mp.weixin.qq.com/s/6xViWef8Po0N-x8BQiGw2Q?utm_source=androidweekly.io&amp;utm_medium=website" target="_blank" rel="noopener">剥茧抽丝做 UI 动效，其实很简单</a></li>
</ul>
<h1 id="开源库"><a href="#开源库" class="headerlink" title="开源库"></a>开源库</h1><ul>
<li><a href="https://github.com/material-components/material-components-android" target="_blank" rel="noopener">material-components-android</a> 【重点】</li>
<li><strong><a href="https://github.com/lightSky/Awesome-MaterialDesign" target="_blank" rel="noopener">Awesome-MaterialDesign</a></strong> 【重点】</li>
<li><a href="https://github.com/google/material-design-icons" target="_blank" rel="noopener">Material design icons by Google</a></li>
<li><a href="https://medium.com/google-developers/animation-jump-through-861f4f5b3de4#.92v66z9ip" target="_blank" rel="noopener">Animation: Jump-through</a>【待研究】【重点】<br><img src="https://cdn-images-1.medium.com/max/800/1*fFC0LdzpExlP3VG93coZDA.gif" alt="很喜欢"></li>
<li><a href="http://www.androiddesignpatterns.com/2016/11/introduction-to-icon-animation-techniques.html" target="_blank" rel="noopener">An Introduction to Icon Animation Techniques</a> 非常详尽的介绍并附有代码例子讲解 【重点】</li>
<li><a href="https://medium.com/@andkulikov/animate-all-the-things-transitions-in-android-914af5477d50#.spkrrmtoz" target="_blank" rel="noopener">Animate all the things. Transitions in Android</a><br>一个关于<a href="https://github.com/andkulikov/transitions-everywhere" target="_blank" rel="noopener"><strong>transitions-everywhere</strong></a> Motion Material 兼容库的介绍的博客</li>
<li><a href="https://stories.uplabs.com/music-player-3a85864d6df7#.nepyiqcve" target="_blank" rel="noopener">Music Player: From UI Proposal to Code</a> 一个介绍Material Transitions 的例子，但是没有兼容低版本<br><img src="http://upload-images.jianshu.io/upload_images/1321512-58619ce3666e1c30.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></li>
</ul>
<h2 id="App-Bar-layout"><a href="#App-Bar-layout" class="headerlink" title="App Bar layout"></a>App Bar layout</h2><ul>
<li><p><strong><a href="https://github.com/henrytao-me/smooth-app-bar-layout" target="_blank" rel="noopener">smooth-app-bar-layout</a></strong></p>
</li>
<li><p><strong><a href="https://github.com/niorgai/StatusBarCompat" target="_blank" rel="noopener">StatusBarCompat</a></strong> Api &gt;= 19</p>
</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-e6e4136518502264.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h1 id="Material-Design-新特性"><a href="#Material-Design-新特性" class="headerlink" title="Material Design 新特性"></a>Material Design 新特性</h1><ul>
<li><a href="http://inthecheesefactory.com/blog/android-design-support-library-codelab/en" target="_blank" rel="noopener">Codelab for Android Design Support Library used in I/O Rewind Bangkok session</a> 介绍Material Design 新特性很详细的文章 对应的代码<br><a href="http://https//github.com/nuuneoi/Lab-Android-DesignLibrary" target="_blank" rel="noopener">Github</a></li>
</ul>
<h2 id="Ripple-api-gt-21"><a href="#Ripple-api-gt-21" class="headerlink" title="Ripple api > = 21"></a>Ripple api &gt; = 21</h2><h3 id="实践应用"><a href="#实践应用" class="headerlink" title="实践应用"></a>实践应用</h3><p>自定义Ripple背景颜色</p>
<p>drawable-v21/selectable_item_background.xml</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layer-list</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>drawable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:color/white<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span> <span class="token attr-name"><span class="token namespace">android:</span>drawable</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>?attr/selectableItemBackground<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layer-list</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>自定义Ripple的颜色，在主题style中</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>AppTheme<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>android:Theme.Material.Light.DarkActionBar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">
    &lt;item name=<span class="token string">"android:colorControlHighlight"</span>>@color/your_custom_color&lt;/item>
  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="兼容库"><a href="#兼容库" class="headerlink" title="兼容库"></a>兼容库</h3><p><a href="https://github.com/traex/RippleEffect" target="_blank" rel="noopener">RippleEffect</a> api &gt; 9 缺点是引入比较麻烦，需要包一层Layout，布局起来不是很方便</p>
<h3 id="相关博文"><a href="#相关博文" class="headerlink" title="相关博文"></a>相关博文</h3><ul>
<li><p><a href="https://blog.csdn.net/AwayEagle/article/details/52583913" target="_blank" rel="noopener">Android Ripple的详解</a></p>
</li>
<li><p><a href="https://guides.codepath.com/android/ripple-animation#clickable-views" target="_blank" rel="noopener">Ripple Animation</a></p>
</li>
</ul>
<h2 id="SVG"><a href="#SVG" class="headerlink" title="SVG"></a>SVG</h2><ul>
<li><a href="https://www.androiddesignpatterns.com/2016/11/introduction-to-icon-animation-techniques.html" target="_blank" rel="noopener">An Introduction to Icon Animation Techniques</a> 【超级经典·必读】</li>
<li><a href="http://www.w3.org/TR/SVG11/paths.html#PathData" target="_blank" rel="noopener">SVG Path reference</a>.</li>
<li><a href="https://developer.android.com/training/material/animations.html#AnimVector" target="_blank" rel="noopener">Animating Vector Drawables</a>.</li>
<li><a href="https://lewismcgeary.github.io/posts/animated-vector-drawable-pathMorphing/" target="_blank" rel="noopener">PathMorphing with AnimatedVectorDrawables in Android</a></li>
<li>[ColoredVector-Android](Change colors of your vector drawables easily from your code)</li>
<li><a href="http://www.07net01.com/2016/01/1118674.html" target="_blank" rel="noopener">VectorDrawable 和 AnimatedVectorDrawable 的兼容性问题</a></li>
</ul>
<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul>
<li><a href="http://editor.method.ac/" target="_blank" rel="noopener">SVG的编辑器</a></li>
<li><a href="https://inkscape.org/" target="_blank" rel="noopener">Inkscape</a> 跨平台SVG编辑器</li>
</ul>
<p>转化</p>
<ul>
<li><a href="http://a-student.github.io/SvgToVectorDrawableConverter.Web/" target="_blank" rel="noopener">SvgToVectorDrawableConverter</a></li>
<li><a href="http://inloop.github.io/svg2android/" target="_blank" rel="noopener">svg2android</a></li>
</ul>
<h3 id="相关博文-1"><a href="#相关博文-1" class="headerlink" title="相关博文"></a>相关博文</h3><ul>
<li><a href="https://www.jianshu.com/p/e3614e7abc03" target="_blank" rel="noopener">Android Vector曲折的兼容之路</a></li>
</ul>
<h2 id="TV"><a href="#TV" class="headerlink" title="TV"></a>TV</h2><ul>
<li><a href="http://developer.android.com/tv/index.html" target="_blank" rel="noopener">Docs</a>  <a href="http://developer.android.com/tv/index.html" target="_blank" rel="noopener">http://developer.android.com/tv/index.html</a></li>
<li><strong><a href="https://github.com/googlesamples/androidtv-Leanback" target="_blank" rel="noopener">androidtv-Leanback</a></strong></li>
</ul>
<h2 id="Toolbar"><a href="#Toolbar" class="headerlink" title="Toolbar"></a>Toolbar</h2><p><a href="http://www.tuicool.com/articles/7BJBZb" target="_blank" rel="noopener">ToolBar详解</a><br><img src="http://upload-images.jianshu.io/upload_images/1321512-bddcf5a56fa4f69d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h2 id="TabLayout"><a href="#TabLayout" class="headerlink" title="TabLayout"></a>TabLayout</h2><p> <a href="http://blog.csdn.net/aigestudio/article/details/47155769" target="_blank" rel="noopener">TabLayout：另一种Tab的实现方式</a></p>
<ul>
<li>如下代码，Tab间隔转换会有更好的动画效果。<pre class="line-numbers language-java"><code class="language-java">Method animateToTab <span class="token operator">=</span> clz<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">"animateToTab"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
animateToTab<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
animateToTab<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>tabLayout<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li>与ViewPager结合标准代码<pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Override</span>
<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>ac_tab_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">// 获取ViewPager</span>
  ViewPager viewPager <span class="token operator">=</span> <span class="token punctuation">(</span>ViewPager<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>ac_tab_vp<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">// 构造一个TabPagerAdapter对象</span>
  TabPagerAdapter adapter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TabPagerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">// 获取ViewPager</span>
  TabLayout tabLayout <span class="token operator">=</span> <span class="token punctuation">(</span>TabLayout<span class="token punctuation">)</span> <span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>ac_tab_layout<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">// 设置TabLayout模式</span>
  tabLayout<span class="token punctuation">.</span><span class="token function">setTabMode</span><span class="token punctuation">(</span>TabLayout<span class="token punctuation">.</span>MODE_SCROLLABLE<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">// 设置ViewPager的适配器</span>
  viewPager<span class="token punctuation">.</span><span class="token function">setAdapter</span><span class="token punctuation">(</span>adapter<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">// 设置ViewPager</span>
  tabLayout<span class="token punctuation">.</span><span class="token function">setupWithViewPager</span><span class="token punctuation">(</span>viewPager<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><a href="https://www.jianshu.com/p/2b2bb6be83a8" target="_blank" rel="noopener">Design库-TabLayout属性详解</a></li>
</ul>
<h2 id="Bottom-Navigation"><a href="#Bottom-Navigation" class="headerlink" title="Bottom Navigation"></a>Bottom Navigation</h2><p>Dependence</p>
<pre class="line-numbers language-gradle"><code class="language-gradle">compile 'com.android.support:appcompat-v7:25.0.0'
compile 'com.android.support:design:25.0.0'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<ul>
<li><a href="https://blog.autsoft.hu/now-you-can-use-the-bottom-navigation-view-in-the-design-support-library/" target="_blank" rel="noopener">Tutorial：Now you can use the Bottom Navigation View in the Design Support Library</a></li>
</ul>
<h2 id="TextInputLayout"><a href="#TextInputLayout" class="headerlink" title="TextInputLayout"></a>TextInputLayout</h2><ul>
<li>codelabs <a href="https://codelabs.developers.google.com/codelabs/constraint-layout/index.html?index=..%2F..%2Findex#8" target="_blank" rel="noopener">constraint-layout</a> [good]</li>
<li><a href="https://code.tutsplus.com/tutorials/creating-a-login-screen-using-textinputlayout--cms-24168" target="_blank" rel="noopener">Creating a Login Screen Using TextInputLayout</a></li>
<li><strong><a href="https://github.com/rengwuxian/MaterialEditText" target="_blank" rel="noopener">MaterialEditText</a></strong> 抛物线【RxJava经典入门教程的博主】</li>
</ul>
<h2 id="AppBarLayout"><a href="#AppBarLayout" class="headerlink" title="AppBarLayout"></a>AppBarLayout</h2><ul>
<li><a href="https://www.jianshu.com/p/7caa5f4f49bd" target="_blank" rel="noopener">Android 详细分析AppBarLayout的五种ScrollFlags</a></li>
</ul>
<h2 id="ConstraintLayout"><a href="#ConstraintLayout" class="headerlink" title="ConstraintLayout"></a><strong>ConstraintLayout</strong></h2><ul>
<li><a href="https://developer.android.com/training/constraint-layout" target="_blank" rel="noopener">官网超详细的图文手册</a></li>
<li><a href="https://www.jianshu.com/p/a95daeaa02d7" target="_blank" rel="noopener">ConstraintLayout学起来！【郭霖博客】</a></li>
<li><a href="https://codelabs.developers.google.com/codelabs/constraint-layout/index.html#0" target="_blank" rel="noopener">Using ConstraintLayout to design your views</a></li>
<li><a href="https://developer.android.com/reference/android/support/constraint/ConstraintLayout.html" target="_blank" rel="noopener">ConstraintLayout API</a></li>
<li><a href="https://developer.android.com/training/constraint-layout/index.html" target="_blank" rel="noopener">Build a Responsive UI with ConstraintLayout</a></li>
<li><a href="https://blog.stylingandroid.com/constraintlayout-part-1/" target="_blank" rel="noopener">ConstraintLayout – Part 1</a></li>
<li>Script<blockquote>
<p> To convert an existing layout to a constraint layout<br>Design -&gt; component Tree -&gt; Convert layout to ConstraintLayout</p>
</blockquote>
</li>
</ul>
<h2 id="CardView"><a href="#CardView" class="headerlink" title="CardView"></a><em>CardView</em></h2><ul>
<li>android.support.v7.widget.CardView</li>
</ul>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><pre class="line-numbers language-gradle"><code class="language-gradle">implementation 'com.android.support:cardview-v7:27.1.1'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="属性详解"><a href="#属性详解" class="headerlink" title="属性详解"></a>属性详解</h3><table>
<thead>
<tr>
<th>属性</th>
<th>解析</th>
</tr>
</thead>
<tbody><tr>
<td>app:cardBackgroundColor</td>
<td>置背景颜色</td>
</tr>
<tr>
<td>app:cardCornerRadius</td>
<td>设置圆角大小</td>
</tr>
<tr>
<td>app:cardElevation</td>
<td>设置z轴阴影高度</td>
</tr>
<tr>
<td>app:cardMaxElevation</td>
<td>设置z轴最大高度值</td>
</tr>
<tr>
<td>app:contentPadding</td>
<td>内容与边距的间隔</td>
</tr>
<tr>
<td>app:contentPaddingLeft</td>
<td>内容与左边的间隔</td>
</tr>
<tr>
<td>app:contentPaddingTop</td>
<td>内容与顶部的间隔</td>
</tr>
<tr>
<td>app:contentPaddingRight</td>
<td>内容与右边的间隔</td>
</tr>
<tr>
<td>app:contentPaddingBottom</td>
<td>内容与底部的间隔</td>
</tr>
<tr>
<td>app:paddingStart</td>
<td>内容与边距的间隔起始</td>
</tr>
<tr>
<td>app:paddingEnd</td>
<td>内容与边距的间隔终止</td>
</tr>
<tr>
<td>app:cardUseCompatPadding</td>
<td>设置内边距，在API21及以上版本和之前的版本仍旧具有一样的计算方式</td>
</tr>
<tr>
<td>app:cardPreventConrerOverlap</td>
<td>在API20及以下版本中添加内边距，这个属性为了防止内容和边角的重叠</td>
</tr>
</tbody></table>
<p><font color="red">注意：</font>CardView中使用android:background设置背景颜色无效。</p>
<h3 id="使用技巧"><a href="#使用技巧" class="headerlink" title="使用技巧"></a>使用技巧</h3><p><strong>Ripple</strong> 效果</p>
<pre class="line-numbers language-xml"><code class="language-xml">android:foreground=”?android:attr/selectableItemBackground”<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="cardUseCompatPadding"><a href="#cardUseCompatPadding" class="headerlink" title="cardUseCompatPadding"></a>cardUseCompatPadding</h3><p><img src="https://simg.open-open.com/show/bad78408db2cd78e7ce36308e992ae42.png" alt=""></p>
<p><strong>pre-Lollipop平台中，不同cardPreventCornerOverlap值的效果对比图（左false，右true）</strong></p>
<p>设置在Lollipop及以上版本的系统中没有任何影响，除非cardUseCompatPadding的值为true。</p>
<h3 id="lift-on-touch-效果"><a href="#lift-on-touch-效果" class="headerlink" title="lift-on-touch 效果"></a><strong>lift-on-touch</strong> 效果</h3><p><img src="https://simg.open-open.com/show/48cf6ec1a740fe95695805f636d69a0a.gif" alt=""></p>
<p>drawable/lift_on_touch.xml</p>
<p><font color="red"> 注意：</font> 设置click效果才会出现</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span>
<span class="token comment" spellcheck="true">&lt;!-- animate the translationZ property of a view when pressed --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>selector</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span>
 <span class="token attr-name"><span class="token namespace">android:</span>state_enabled</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
 <span class="token attr-name"><span class="token namespace">android:</span>state_pressed</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>objectAnimator</span>
 <span class="token attr-name"><span class="token namespace">android:</span>duration</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:integer/config_shortAnimTime<span class="token punctuation">"</span></span>
 <span class="token attr-name"><span class="token namespace">android:</span>propertyName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translationZ<span class="token punctuation">"</span></span>
 <span class="token attr-name"><span class="token namespace">android:</span>valueTo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>6dp<span class="token punctuation">"</span></span>
 <span class="token attr-name"><span class="token namespace">android:</span>valueType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>floatType<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>item</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>set</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>objectAnimator</span>
 <span class="token attr-name"><span class="token namespace">android:</span>duration</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@android:integer/config_shortAnimTime<span class="token punctuation">"</span></span>
 <span class="token attr-name"><span class="token namespace">android:</span>propertyName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>translationZ<span class="token punctuation">"</span></span>
 <span class="token attr-name"><span class="token namespace">android:</span>valueTo</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>
 <span class="token attr-name"><span class="token namespace">android:</span>valueType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>floatType<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>set</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>item</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>selector</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>小结：</p>
<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>AppCardView<span class="token punctuation">"</span></span> <span class="token attr-name">parent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@style/CardView.Light<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">
 &lt;item name=<span class="token string">"cardPreventCornerOverlap"</span>>false&lt;/item>
 &lt;item name=<span class="token string">"cardUseCompatPadding"</span>>true&lt;/item>
 &lt;item name=<span class="token string">"android:foreground"</span>>?<span class="token property">android</span><span class="token punctuation">:</span>attr/selectableItemBackground&lt;/item>
 &lt;item name=<span class="token string">"android:stateListAnimator"</span> <span class="token property">tools</span><span class="token punctuation">:</span>targetApi=<span class="token string">"lollipop"</span>>@drawable/lift_up&lt;/item>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参考：<a href="https://www.open-open.com/lib/view/open1476847497671.html" target="_blank" rel="noopener">Android CardView的使用细节</a></p>
<h2 id="NestedScrollView"><a href="#NestedScrollView" class="headerlink" title="NestedScrollView"></a>NestedScrollView</h2><h2 id="BottomSheets"><a href="#BottomSheets" class="headerlink" title="BottomSheets"></a>BottomSheets</h2><ul>
<li><a href="https://www.jianshu.com/p/0a7383e0ad0f" target="_blank" rel="noopener">BottomSheet、BottomSheetDialog使用详解</a> 【基础】 </li>
<li><a href="https://www.dazhuanlan.com/2019/12/10/5dee9b9331e45/?__cf_chl_jschl_tk__=146ccb275528bf34b71cd72460657ebfcc60ebb2-1599547725-0-AVzuYBrTFAlWoKyLKFk_PTGNRS5JHds5wHgUnXKTxGXyE5vjqvHgNEQLKtydguf3PdiRh1GMmU3VOU4-LnRKMGscVDKFHmvI5Kr38BtShaC3T0QS4h7GiEcbq9GUYqQkHamnSUI3LF0cJzHO8Jnjy5D-m3M4gzq7c-mMEX-xWtkO4z9X_Fx5P6JU6aF7N1h104D2HabZlYGlL2z9UE35Fv3g7_Fv-aymFdLdQ8zUA9feq7HM-PC-5rcmXHG26N7TaOOSvNf-u8dSO5JRfSne9e0jh1m0hVnEBNbPxzNIf64vJluBg23b_qGMCfu8RK5eHg" target="_blank" rel="noopener">BottomSheet详解</a> 【style 修改布局】</li>
<li><a href="https://blog.csdn.net/yangaiyu/article/details/104491415/" target="_blank" rel="noopener">BottomSheet 常用设置</a></li>
</ul>
<ol>
<li><p>设置高度为屏幕3/2，去除状态栏</p>
<pre class="line-numbers language-java"><code class="language-java"> <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>Bundle savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> screenHeight <span class="token operator">=</span> <span class="token function">getScreenHeight</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>screenHeight <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            screenHeight <span class="token operator">=</span> <span class="token number">1920</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        Window window <span class="token operator">=</span> <span class="token function">getWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> window <span class="token operator">!=</span> null<span class="token punctuation">;</span>

        <span class="token comment" spellcheck="true">//设置成沉浸式</span>
<span class="token comment" spellcheck="true">//        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, dialogHeight);</span>

        <span class="token comment" spellcheck="true">//需要设置最大高度 给dialog设置一个固定的高度</span>
        <span class="token comment" spellcheck="true">//你想要减去的高度，dialog默认最大高度在状态栏下方</span>
<span class="token comment" spellcheck="true">//        float reduceHeight = getContext().getResources().getDimension(R.dimen.qb_px_120);</span>
        <span class="token keyword">int</span> reduceHeight <span class="token operator">=</span> ScreenUtils<span class="token punctuation">.</span><span class="token function">getStatusBarHeight</span><span class="token punctuation">(</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//        window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, (int) (dialogHeight - reduceHeight));</span>
        window<span class="token punctuation">.</span><span class="token function">setLayout</span><span class="token punctuation">(</span>ViewGroup<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>MATCH_PARENT<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>screenHeight<span class="token operator">/</span><span class="token number">3</span><span class="token operator">*</span><span class="token number">2</span> <span class="token operator">-</span> reduceHeight<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">//        最后一步是必须的，否则BottomSheetDialog会显示在屏幕中间，底部会出现空白区域</span>
        window<span class="token punctuation">.</span><span class="token function">setGravity</span><span class="token punctuation">(</span>Gravity<span class="token punctuation">.</span>BOTTOM<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/**
     * 获取屏幕的高度
     * @param context
     * @return
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">getScreenHeight</span><span class="token punctuation">(</span>Context context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        WindowManager wm <span class="token operator">=</span> <span class="token punctuation">(</span>WindowManager<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span>WINDOW_SERVICE<span class="token punctuation">)</span><span class="token punctuation">;</span>
        Point point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">assert</span> wm <span class="token operator">!=</span> null<span class="token punctuation">;</span>
        wm<span class="token punctuation">.</span><span class="token function">getDefaultDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span>point<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> point<span class="token punctuation">.</span>y<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>背景设置为透明,可以显示圆角</p>
<pre class="line-numbers language-java"><code class="language-java">  <span class="token comment" spellcheck="true">//设置圆角背景不生效 原因：由于它上面蒙了一层布局 design_bottom_sheet是系统的布局，直接找到它，然后给它设全透明就好了</span>
        FrameLayout bottomSheet <span class="token operator">=</span> <span class="token punctuation">(</span>FrameLayout<span class="token punctuation">)</span> <span class="token function">getDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>design_bottom_sheet<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bottomSheet<span class="token punctuation">.</span><span class="token function">setBackgroundColor</span><span class="token punctuation">(</span>mContext<span class="token punctuation">.</span><span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>color<span class="token punctuation">.</span>transparent<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//设置dialog的下拉拖拽与scrollView下拉冲突</span>
        bottomSheetBehavior <span class="token operator">=</span> BottomSheetBehavior<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>bottomSheet<span class="token punctuation">)</span><span class="token punctuation">;</span>
        bottomSheetBehavior<span class="token punctuation">.</span><span class="token function">setPeekHeight</span><span class="token punctuation">(</span>bottomDialogHeight<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//此处是dialog设置的最大高度</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
</ol>
<h1 id="图片文字资源"><a href="#图片文字资源" class="headerlink" title="图片文字资源"></a>图片文字资源</h1><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><ul>
<li><strong><a href="https://github.com/chrisbanes/cheesesquare" target="_blank" rel="noopener">Demos the new Android Design library</a></strong> github star 6300+</li>
<li><strong><a href="https://github.com/mikepenz/MaterialDrawer" target="_blank" rel="noopener">MaterialDrawer</a></strong> The flexible, easy to use, all in one drawer library for your Android project<br><img src="https://cdn.linz.tech/screenshots_combined.jpg" alt=""></li>
<li><strong><a href="https://github.com/XunMengWinter/CircularAnim" target="_blank" rel="noopener">CircularAnim</a></strong> Android水波动画帮助类，一行代码实现View显示/隐藏/startActivity特效。(对 ViewAnimationUtils.createCircularReveal() 方法的封装)<br><img src="https://cdn.linz.tech/CircularAnimDemo.gif" alt=""></li>
</ul>
<h2 id="字体和图片相关"><a href="#字体和图片相关" class="headerlink" title="字体和图片相关"></a>字体和图片相关</h2><ul>
<li><strong><a href="https://github.com/code-mc/material-icon-lib" target="_blank" rel="noopener">Material Icon Library</a></strong> Github 1800+ star<br><img src="https://cdn.linz.tech/1321512-material_icon_libs.gif" alt="material_icon_libs.gif"></li>
</ul>
<p><strong>主要特点：</strong></p>
<ol>
<li>包含1500+ 的矢量图标（大小: 200kb）；</li>
<li>支持API&gt;=4；</li>
<li>可以转化为Drawable，可以menu.xml 中使用， 可以在Toolbar menu中使用</li>
</ol>
<p>使用：1. 在<a href="https://materialdesignicons.com找矢量图；" target="_blank" rel="noopener">https://materialdesignicons.com找矢量图；</a> 2.集成库使用；</p>
<ul>
<li><strong><a href="https://github.com/mikepenz/Android-Iconics" target="_blank" rel="noopener">Android-Iconics</a></strong> 【推荐】<br><img src="https://cdn.linz.tech/screenshots1.jpg" alt=""></li>
</ul>
<p><strong>主要特点：</strong></p>
<ul>
<li>提供了三个矢量图库；</li>
<li>可以在原生控件上使用；</li>
<li>支持字体和矢量图片的自定义；</li>
</ul>
<h2 id="Material-Animation-动画"><a href="#Material-Animation-动画" class="headerlink" title="Material Animation 动画"></a>Material Animation 动画</h2><hr>
<ul>
<li><strong><a href="https://github.com/lgvalle/Material-Animations" target="_blank" rel="noopener">Material-Animations</a></strong></li>
<li><strong><a href="https://github.com/saulmm/Android-Material-Examples" target="_blank" rel="noopener">Android-Material-Examples</a></strong></li>
</ul>
<h2 id="New-Feature-新的特性"><a href="#New-Feature-新的特性" class="headerlink" title="New Feature  新的特性"></a>New Feature  新的特性</h2><hr>
<ul>
<li><strong><a href="https://github.com/fcannizzaro/material-tip" target="_blank" rel="noopener">material-tip</a></strong><br><img src="https://cdn.linz.tech/material_tip.gif" alt=""></li>
</ul>
<h2 id="Theme-主题"><a href="#Theme-主题" class="headerlink" title="Theme 主题"></a>Theme 主题</h2><ul>
<li><strong><a href="https://github.com/StevenByle/Android-Material-Themes-Demo" target="_blank" rel="noopener">Android-Material-Themes-Demo</a></strong></li>
</ul>
<h2 id="设置相关"><a href="#设置相关" class="headerlink" title="设置相关"></a>设置相关</h2><ul>
<li><strong><a href="https://github.com/daniel-stoneuk/material-about-library" target="_blank" rel="noopener">material-about-library</a></strong> <img src="https://cdn.linz.tech/material-about-library.png" alt=""></li>
</ul>
<h2 id="原生控件的包装"><a href="#原生控件的包装" class="headerlink" title="原生控件的包装"></a>原生控件的包装</h2><ul>
<li><strong><a href="https://github.com/Musenkishi/Atelier" target="_blank" rel="noopener">Atelier</a></strong> A fast and clean way of using Palette in lists</li>
<li><strong><a href="https://github.com/glomadrian/material-code-input" target="_blank" rel="noopener">material-code-input</a></strong><br><img src="https://cdn.linz.tech/material-code-input.gif" alt="codeInput1.gif"></li>
</ul>
<h1 id="兼容开源库"><a href="#兼容开源库" class="headerlink" title="兼容开源库"></a>兼容开源库</h1><ul>
<li><p><strong><a href="https://github.com/Yellow5A5/ActSwitchAnimTool" target="_blank" rel="noopener">ActSwitchAnimTool</a></strong> ActSwitchAnimTool make the Animation easy to implements, and it compat the version of Android 4.0 or above.<br><img src="https://github.com/Yellow5A5/ActSwitchAnimTool/raw/master/image/demo_show1.gif" alt=""></p>
</li>
<li><p><strong><a href="https://github.com/ozodrukh/RippleDrawable" target="_blank" rel="noopener">RippleDrawable</a></strong> support 14+</p>
</li>
<li><p><strong><a href="https://github.com/wangjiegulu/WaveCompat" target="_blank" rel="noopener">WaveCompat</a></strong><br><img src="http://upload-images.jianshu.io/upload_images/1321512-f6649aa0a09f8b3f.gif?imageMogr2/auto-orient/strip" alt="wave_compat_a.gif"></p>
</li>
<li><p><strong><a href="https://github.com/konifar/fab-transformation" target="_blank" rel="noopener">fab-transformation</a></strong><br><img src="http://upload-images.jianshu.io/upload_images/1321512-c3eebff44da714ea.gif?imageMogr2/auto-orient/strip" alt="transform_to_toolbar.gif"></p>
</li>
<li><p><strong><a href="https://github.com/arcadefire/nice-spinner" target="_blank" rel="noopener">nice-spinner</a></strong> support 14+<br><img src="http://upload-images.jianshu.io/upload_images/1321512-8efaa73f1003543b.gif?imageMogr2/auto-orient/strip" alt="nice-spinner.gif"></p>
</li>
<li><p><strong><a href="https://github.com/renaudcerrato/ToggleDrawable" target="_blank" rel="noopener">ToggleDrawable</a></strong><br><img src="http://upload-images.jianshu.io/upload_images/1321512-db769a9b6fa9face.gif?imageMogr2/auto-orient/strip" alt="toggle.gif"></p>
</li>
<li><p><strong><a href="https://github.com/ozodrukh/CircularReveal" target="_blank" rel="noopener">CircularReveal</a></strong> RevealEffect support 2.3<br><img src="http://upload-images.jianshu.io/upload_images/1321512-822426affad1682d.gif?imageMogr2/auto-orient/strip" alt="CircularReveal.gif"></p>
</li>
<li><p><strong><a href="https://github.com/andkulikov/Transitions-Everywhere" target="_blank" rel="noopener">Transitions-Everywhere</a></strong>  API compatible with Android 2.2+</p>
</li>
<li><p><strong><a href="https://github.com/javiersantos/MaterialStyledDialogs" target="_blank" rel="noopener">MaterialStyledDialogs</a></strong> API 11+ required.</p>
</li>
<li><p>vector-compat vector 兼容库<br>开源资源</p>
<h1 id="Material-Design-参考资料"><a href="#Material-Design-参考资料" class="headerlink" title="Material Design 参考资料"></a>Material Design 参考资料</h1></li>
<li><p>Android 开发设计 <a href="http://developer.android.com/design/" target="_blank" rel="noopener">http://developer.android.com/design/</a></p>
</li>
<li><p><a href="https://play.google.com/store/apps/collection/promotion_3001769_io_awards" target="_blank" rel="noopener">Material Design 示范应用</a> 和 <a href="http://chinagdg.org/2015/06/material-design-awards/" target="_blank" rel="noopener">获奖应用</a></p>
</li>
<li><p>Google Design 网站 <a href="https://design.google.com/" target="_blank" rel="noopener">https://design.google.com/</a></p>
</li>
<li><p>Material Design 设计规范 <a href="http://www.google.com/design/spec/material-design/introduction.html" target="_blank" rel="noopener">http://www.google.com/design/spec/material-design/introduction.html</a></p>
</li>
<li><p>Icons Tool <a href="https://design.google.com/icons/" target="_blank" rel="noopener">https://design.google.com/icons/</a></p>
</li>
<li><p>Devices Tool <a href="https://design.google.com/devices/" target="_blank" rel="noopener">https://design.google.com/devices/</a></p>
</li>
<li><p>Udacity 免费设计课程：<a href="https://www.udacity.com/course/material-design-for-android-developers--ud862" target="_blank" rel="noopener">Material Design for Android Developers</a></p>
</li>
</ul>
<h1 id="特别想实现的效果"><a href="#特别想实现的效果" class="headerlink" title="特别想实现的效果"></a>特别想实现的效果</h1><ul>
<li><img src="http://cdn.linz.tech/motion_awsome_animation" alt=""></li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Material</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>谷歌官网之硬件加速 【译】</title>
    <url>/2016/06/02/2016-06-02-Google-Api-hareware-acc/</url>
    <content><![CDATA[<h3 id="硬件加速"><a href="#硬件加速" class="headerlink" title="硬件加速"></a><a href="https://developer.android.com/guide/topics/graphics/hardware-accel.html#determining" target="_blank" rel="noopener">硬件加速</a></h3><hr>
<p>Android 3.0 (API level 11)开始，Android 2D渲染管道支持硬件加速。API level &gt;=14的Android系统默认开启硬件加速。由于硬件加速并不支持所有的2D绘制操作，所以开启硬件加速，可能会导致自定义view中部分元素看不到，程序抛出异常，或者错误的像素渲染等问题。</p>
<h4 id="开启-关闭硬件加速"><a href="#开启-关闭硬件加速" class="headerlink" title="开启/关闭硬件加速"></a>开启/关闭硬件加速</h4><ul>
<li>Application<br><code>&lt;application android:hardwareAccelerated="true" ...&gt;</code></li>
<li>Activity<pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span> <span class="token attr-name"><span class="token namespace">android:</span>hardwareAccelerated</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span> <span class="token attr-name">...</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activity</span> <span class="token attr-name"><span class="token namespace">android:</span>hardwareAccelerated</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li>Window 级别只能开启硬件加速<pre class="line-numbers language-java"><code class="language-java"><span class="token function">getWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFlags</span><span class="token punctuation">(</span>
WindowManager<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>FLAG_HARDWARE_ACCELERATED<span class="token punctuation">,</span>
WindowManager<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>FLAG_HARDWARE_ACCELERATED<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
</li>
<li>View 关闭硬件加速<br><code>myView.setLayerType(View.LAYER_TYPE_SOFTWARE, null);</code></li>
</ul>
<h4 id="View硬件加速的判断"><a href="#View硬件加速的判断" class="headerlink" title="View硬件加速的判断"></a>View硬件加速的判断</h4><p>两个方法：</p>
<ul>
<li><a href="https://developer.android.com/reference/android/view/View.html#isHardwareAccelerated()" target="_blank" rel="noopener">View.isHardwareAccelerated()</a></li>
<li><a href="https://developer.android.com/reference/android/graphics/Canvas.html#isHardwareAccelerated()" target="_blank" rel="noopener">Canvas.isHardwareAccelerated()</a></li>
</ul>
<p>你必须在你绘制代码（drawing code）内检测，使用前者而不是后者，因为有可能View虽然依附于一个硬件加速的窗口，但它依然可以在一个没有硬件加速的Canvas上绘制，列如：为了缓存的目的把view绘制到一个bitmap上。</p>
<h4 id="Android-软加速-硬加速-绘制模式"><a href="#Android-软加速-硬加速-绘制模式" class="headerlink" title="Android 软加速/硬加速 绘制模式"></a>Android 软加速/硬加速 绘制模式</h4><p><strong>基于软件的绘制模式</strong><br>绘制步骤：无效从下到上的View，然后重新绘制。<br>问题：</p>
<ol>
<li>没有改变的大量上层的View需要重新绘制。</li>
<li>Android重绘view的过程，有可能没有绘制发生改变的view，此时你只能依赖其他view包含恰好的重绘行为。</li>
</ol>
<p><strong>硬件加速的绘制模式</strong><br>绘制步骤：</p>
<ol>
<li>无效从下到上的View</li>
<li>记录和更新显示列表（display lists）</li>
<li>绘制显示列表</li>
</ol>
<p>优点： 使用display lists能有针对性的更新改变的View</p>
<h4 id="不支持的绘制操作"><a href="#不支持的绘制操作" class="headerlink" title="不支持的绘制操作"></a>不支持的绘制操作</h4><p><img src="http://upload-images.jianshu.io/upload_images/1321512-535a89ed1a720f03.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><em>Canvas Scaling</em></p>
<p><img src="http://upload-images.jianshu.io/upload_images/1321512-1590722e47fcd325.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<h4 id="View-Layers"><a href="#View-Layers" class="headerlink" title="View Layers"></a>View Layers</h4><p><em>Off-screen buffers</em></p>
<ul>
<li>a view’s drawing cache</li>
<li>[Canvas.saveLayer()](<a href="https://developer.android.com/reference/android/graphics/Canvas.html#saveLayer" target="_blank" rel="noopener">https://developer.android.com/reference/android/graphics/Canvas.html#saveLayer</a>(android.graphics.RectF, android.graphics.Paint))</li>
</ul>
<p>所有的Android版本都支持对Off-screen buffers进行渲染。</p>
<blockquote>
<p>你会获得更好的性能，当做复杂view的动画或者应用合成效果时。列如，当你实现淡出效果时，你可以使用Canvas.saveLayer()，暂存渲染的view到layer中，然后用透明度合成，使它返回屏幕达到淡出效果。</p>
</blockquote>
<p> [View.setLayerType()](<a href="https://developer.android.com/reference/android/view/View.html#setLayerType" target="_blank" rel="noopener">https://developer.android.com/reference/android/view/View.html#setLayerType</a>(int, android.graphics.Paint))</p>
<ul>
<li><a href="https://developer.android.com/reference/android/view/View.html#LAYER_TYPE_NONE" target="_blank" rel="noopener">LAYER_TYPE_NONE</a> 不使用 off-screen buffer 【默认】</li>
<li><a href="https://developer.android.com/reference/android/view/View.html#LAYER_TYPE_HARDWARE" target="_blank" rel="noopener">LAYER_TYPE_HARDWARE</a></li>
<li><a href="https://developer.android.com/reference/android/view/View.html#LAYER_TYPE_SOFTWARE" target="_blank" rel="noopener">LAYER_TYPE_SOFTWARE</a></li>
</ul>
<p>选择技巧</p>
<ul>
<li><strong>Performance</strong>: 使用硬件加速时，一旦一个view渲染进如layer中，只有调用<a href="https://developer.android.com/reference/android/view/View.html#invalidate()" target="_blank" rel="noopener">invalidate()</a>是绘制的代码才会被执行。一些动画，列如透明度动画，可以直接用于layer中，这使用GPU去执行是非常高效的。</li>
<li><strong>Compatibility</strong>: Use a software layer type to force a view to be rendered in software.</li>
</ul>
<h4 id="View-layers-and-animations"><a href="#View-layers-and-animations" class="headerlink" title="View layers and animations"></a>View layers and animations</h4><p>如果你在你的应用中跑的动画没有达到，你想要的流程结果，你可以考虑启动硬件加速。 以下的属性，使用合成来作用于layer，使用的是优化的invalidation及不需要重绘目标view，过程更高效。</p>
<ul>
<li>alpha: Changes the layer’s opacity</li>
<li>x, y, translationX, translationY: Changes the layer’s position</li>
<li>scaleX, scaleY: Changes the layer’s size</li>
<li>rotation, rotationX, rotationY: Changes the layer’s orientation in 3D space</li>
<li>pivotX, pivotY: Changes the layer’s transformations origin</li>
</ul>
<p>demo：</p>
<pre class="line-numbers language-java"><code class="language-java">View<span class="token punctuation">.</span><span class="token function">setLayerType</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>LAYER_TYPE_HARDWARE<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
ObjectAnimator animator <span class="token operator">=</span> ObjectAnimator<span class="token punctuation">.</span><span class="token function">ofFloat</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> <span class="token string">"rotationY"</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
animator<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AnimatorListenerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAnimationEnd</span><span class="token punctuation">(</span>Animator animation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
view<span class="token punctuation">.</span><span class="token function">setLayerType</span><span class="token punctuation">(</span>View<span class="token punctuation">.</span>LAYER_TYPE_NONE<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
animator<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h4 id="提示和技巧"><a href="#提示和技巧" class="headerlink" title="提示和技巧"></a>提示和技巧</h4><ul>
<li>减少view的数量</li>
<li>避免过度绘制<br>A good rule of thumb with current hardware is to not draw more than 2.5 times the number of pixels on screen per frame (transparent pixels in a bitmap count!).</li>
<li>不创建渲染类在绘制代码中：如在onDraw中 new Paint 或者 Path。</li>
<li>不频繁的改变形状<br>Complex shapes, paths, and circles for instance, are rendered using texture masks. Every time you create or modify a path, the hardware pipeline creates a new mask, which can be expensive.</li>
<li>不频繁的修改bitmap</li>
<li>谨慎使用<strong>alpha</strong>，当应用alpha属性到很大的views时，考虑使用 LAYER_TYPE_HARDWARE。<br>.</li>
</ul>
]]></content>
      <categories>
        <category>note</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>API理解</tag>
      </tags>
  </entry>
</search>
